### YamlMime:TSType
name: Excel.ConditionalFormat
uid: excel!Excel.ConditionalFormat:class
package: excel!
fullName: Excel.ConditionalFormat
summary: >-
  Объект, инкапсулирующий диапазон, формат, правило и другие свойства условного форматирования. Чтобы узнать больше об объектной модели условного форматирования, прочтите [Применение условного форматирования к диапазонам Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)<!-- -->.


  \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: cellValue
  uid: excel!Excel.ConditionalFormat#cellValue:member
  package: excel!
  fullName: cellValue
  summary: >-
    Возвращает свойства условного форматирования значения ячейки, если текущим условным форматированием является тип CellValue. Например, чтобы отформатировать все ячейки от 5 до 10.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CellValueConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- name: cellValueOrNullObject
  uid: excel!Excel.ConditionalFormat#cellValueOrNullObject:member
  package: excel!
  fullName: cellValueOrNullObject
  summary: >-
    Возвращает свойства условного форматирования значения ячейки, если текущим условным форматированием является тип CellValue. Например, чтобы отформатировать все ячейки от 5 до 10.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CellValueConditionalFormat:class" />
- name: colorScale
  uid: excel!Excel.ConditionalFormat#colorScale:member
  package: excel!
  fullName: colorScale
  summary: >-
    Возвращает свойства условного форматирования цветовой шкалы, если текущим условным форматированием является тип цветовой шкалы.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.ColorScaleConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- name: colorScaleOrNullObject
  uid: excel!Excel.ConditionalFormat#colorScaleOrNullObject:member
  package: excel!
  fullName: colorScaleOrNullObject
  summary: >-
    Возвращает свойства условного форматирования цветовой шкалы, если текущим условным форматированием является тип цветовой шкалы.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.ColorScaleConditionalFormat:class" />
- name: context
  uid: excel!Excel.ConditionalFormat#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: custom
  uid: excel!Excel.ConditionalFormat#custom:member
  package: excel!
  fullName: custom
  summary: >-
    Возвращает свойства настраиваемого условного форматирования, если текущим условным форматированием является настраиваемый тип.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly custom: Excel.CustomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CustomConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- name: customOrNullObject
  uid: excel!Excel.ConditionalFormat#customOrNullObject:member
  package: excel!
  fullName: customOrNullObject
  summary: >-
    Возвращает свойства настраиваемого условного форматирования, если текущим условным форматированием является настраиваемый тип.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CustomConditionalFormat:class" />
- name: dataBar
  uid: excel!Excel.ConditionalFormat#dataBar:member
  package: excel!
  fullName: dataBar
  summary: >-
    Возвращает свойства гистограммы, если текущим условным форматированием является панель данных.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.DataBarConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- name: dataBarOrNullObject
  uid: excel!Excel.ConditionalFormat#dataBarOrNullObject:member
  package: excel!
  fullName: dataBarOrNullObject
  summary: >-
    Возвращает свойства гистограммы, если текущим условным форматированием является панель данных.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.DataBarConditionalFormat:class" />
- name: iconSet
  uid: excel!Excel.ConditionalFormat#iconSet:member
  package: excel!
  fullName: iconSet
  summary: >-
    Возвращает свойства условного форматирования набора значков, если текущим условным форматированием является тип набора значков.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.IconSetConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- name: iconSetOrNullObject
  uid: excel!Excel.ConditionalFormat#iconSetOrNullObject:member
  package: excel!
  fullName: iconSetOrNullObject
  summary: >-
    Возвращает свойства условного форматирования набора значков, если текущим условным форматированием является тип набора значков.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.IconSetConditionalFormat:class" />
- name: id
  uid: excel!Excel.ConditionalFormat#id:member
  package: excel!
  fullName: id
  summary: >-
    Приоритет условного форматирования в пределах текущего класса ConditionalFormatCollection.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: preset
  uid: excel!Excel.ConditionalFormat#preset:member
  package: excel!
  fullName: preset
  summary: >-
    Возвращает условное форматирование предварительно установленных условий. Дополнительные сведения см. в статье Excel. Пресеткритериакондитионалформат.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.PresetCriteriaConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n});\n```"
- name: presetOrNullObject
  uid: excel!Excel.ConditionalFormat#presetOrNullObject:member
  package: excel!
  fullName: presetOrNullObject
  summary: >-
    Возвращает условное форматирование предварительно установленных условий. Дополнительные сведения см. в статье Excel. Пресеткритериакондитионалформат.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.PresetCriteriaConditionalFormat:class" />
- name: priority
  uid: excel!Excel.ConditionalFormat#priority:member
  package: excel!
  fullName: priority
  summary: >-
    Приоритет (или индекс) в коллекции условных форматов, в которой в настоящее время существует данное условное форматирование. При этом также изменяются приоритеты других условных форматов для обеспечения непрерывного порядка приоритетов. Используйте отрицательный приоритет, чтобы начать с обратного. Приоритеты, превышающие пределы, будут получены и установлены в максимальном (или минимальном, при отрицательном) приоритете. Обратите внимание, что при изменении приоритета необходимо повторно получить новую копию объекта в новом расположении приоритета, если вы хотите внести в него другие изменения.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'priority: number;'
    return:
      type: number
- name: stopIfTrue
  uid: excel!Excel.ConditionalFormat#stopIfTrue:member
  package: excel!
  fullName: stopIfTrue
  summary: >-
    Если выполняются условия этого условного форматирования, форматы с более низким приоритетом не будут применяться в этой ячейке. NULL в данных, наборах значков и колорскалес, так как для них отсутствует концепция StopIfTrue


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type: boolean
- name: textComparison
  uid: excel!Excel.ConditionalFormat#textComparison:member
  package: excel!
  fullName: textComparison
  summary: >-
    Возвращает определенные свойства условного форматирования текста, если текущим условным форматированием является текстовый тип. Например, чтобы форматировать ячейки, которые соответствуют слову "Text".


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textComparison: Excel.TextConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TextConditionalFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- name: textComparisonOrNullObject
  uid: excel!Excel.ConditionalFormat#textComparisonOrNullObject:member
  package: excel!
  fullName: textComparisonOrNullObject
  summary: >-
    Возвращает определенные свойства условного форматирования текста, если текущим условным форматированием является текстовый тип. Например, чтобы форматировать ячейки, которые соответствуют слову "Text".


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TextConditionalFormat:class" />
- name: topBottom
  uid: excel!Excel.ConditionalFormat#topBottom:member
  package: excel!
  fullName: topBottom
  summary: >-
    Возвращает верхнее и нижнее свойства условного форматирования, если текущее условное форматирование имеет тип TopBottom. Например, чтобы отформатировать первые 10% или 10 последних элементов.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TopBottomConditionalFormat:class" />
- name: topBottomOrNullObject
  uid: excel!Excel.ConditionalFormat#topBottomOrNullObject:member
  package: excel!
  fullName: topBottomOrNullObject
  summary: >-
    Возвращает верхнее и нижнее свойства условного форматирования, если текущее условное форматирование имеет тип TopBottom. Например, чтобы отформатировать первые 10% или 10 последних элементов.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TopBottomConditionalFormat:class" />
- name: type
  uid: excel!Excel.ConditionalFormat#type:member
  package: excel!
  fullName: type
  summary: >-
    Тип условного форматирования. В каждый момент времени можно задать только один из них.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatType:enum" /> | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
methods:
- name: delete()
  uid: excel!Excel.ConditionalFormat#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Удаляет это условное форматирование.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: getRange()
  uid: excel!Excel.ConditionalFormat#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: >-
    Возврат диапазона, к которому применено условное форматирование. Выдает ошибку, если условное форматирование применяется к нескольким диапазонам.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
- name: getRangeOrNullObject()
  uid: excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)
  package: excel!
  fullName: getRangeOrNullObject()
  summary: >-
    Возвращает диапазон, к которому применяется формат кондитонал, или пустой объект, если условное форматирование применяется к нескольким диапазонам.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: getRanges()
  uid: excel!Excel.ConditionalFormat#getRanges:member(1)
  package: excel!
  fullName: getRanges()
  summary: >-
    Возвращает объект RangeAreas, состоящий из одного или нескольких прямоугольных диапазонов, к которым применено условное форматирование.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRanges(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.ConditionalFormat#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружается свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.ConditionalFormat:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ConditionalFormat#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.ConditionalFormat:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.ConditionalFormat#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.ConditionalFormat;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.ConditionalFormat:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.ConditionalFormat#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Excel.ConditionalFormat): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.ConditionalFormat#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.ConditionalFormat): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.ConditionalFormat:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.ConditionalFormat#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ConditionalFormat — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.ConditionalFormatData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 6f659c405de8ceaf8acadaa9eb73408e93cabc49
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49341487"
