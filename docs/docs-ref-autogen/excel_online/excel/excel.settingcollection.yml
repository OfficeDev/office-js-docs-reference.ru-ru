### YamlMime:TSType
name: Excel.SettingCollection
uid: excel!Excel.SettingCollection:class
package: excel!
fullName: Excel.SettingCollection
summary: >-
  Представляет коллекцию параметров пар с ключевым значением, которые являются частью книги. Область ограничена комбинацией файла и надстройки (области задач или контента).


  \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.SettingCollection#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: items
  uid: excel!Excel.SettingCollection#items:member
  package: excel!
  fullName: items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.Setting[];'
    return:
      type: <xref uid="excel!Excel.Setting:class" />[]
methods:
- name: add(key, value)
  uid: excel!Excel.SettingCollection#add:member(1)
  package: excel!
  fullName: add(key, value)
  summary: >-
    Задает или добавляет указанный параметр в книгу.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
    parameters:
    - id: key
      description: Ключ нового параметра.
      type: string
    - id: value
      description: Значение для нового параметра.
      type: string | number | boolean | Date | Array&lt;any&gt; | any
    return:
      type: <xref uid="excel!Excel.Setting:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-workbook-and-worksheet-collection.yaml\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
- name: getCount()
  uid: excel!Excel.SettingCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Получает количество параметров в коллекции.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.SettingCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: >-
    Получает запись параметра с помощью ключа.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Excel.Setting;'
    parameters:
    - id: key
      description: Ключ параметра.
      type: string
    return:
      type: <xref uid="excel!Excel.Setting:class" />
      description: ''
- name: getItemOrNullObject(key)
  uid: excel!Excel.SettingCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(key)
  summary: >-
    Получает запись параметра с помощью ключа. Если параметра не существует, эта функция возвращает объект с его `isNullObject` свойством `true`<!-- -->. Дополнительные сведения см. [в методе и свойствах *OrNullObject](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Setting;'
    parameters:
    - id: key
      description: Ключ параметра.
      type: string
    return:
      type: <xref uid="excel!Excel.Setting:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/create-get-change-delete-settings.yaml\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
- name: load(options)
  uid: excel!Excel.SettingCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых необходимо загрузить свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.SettingCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.SettingCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.SettingCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SettingCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` является запятой, которая указывает свойства для загрузки, и является строкой, запятой, которая указывает свойства навигации для `propertyNamesAndPaths.expand` загрузки.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.SettingCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект является объектом API, метод возвращает обычный `Excel.SettingCollection` `toJSON` объект JavaScript (введите как `Excel.Interfaces.SettingCollectionData`<!-- -->), содержащий массив "items" с мелкими копиями любых загруженных свойств из элементов коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.SettingCollectionData:interface" />
      description: ''
events:
- name: onSettingsChanged
  uid: excel!Excel.SettingCollection#onSettingsChanged:member
  package: excel!
  fullName: onSettingsChanged
  summary: >-
    Возникает при смене параметров документа.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.SettingsChangedEventArgs:interface" />&gt;
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-workbook-and-worksheet-collection.yaml\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 3873e48537269b3efb3e5ea8b4ac5207ce553828
  ms.sourcegitcommit: 3b6cd632df196ae7bf2a1d192e2b60edc82b9e9c
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/14/2021
  ms.locfileid: "51754335"
