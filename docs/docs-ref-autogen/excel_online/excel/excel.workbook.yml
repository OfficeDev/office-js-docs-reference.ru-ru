### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:class
package: excel!
fullName: Excel.Workbook
summary: >-
  Workbook — это объект верхнего уровня, содержащий связанные объекты книг, такие как листы, таблицы, диапазоны и т. д. Чтобы узнать больше об объектной модели книги, читайте [работу с книгами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.


  \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: >-
    Представляет экземпляр приложения Excel, который содержит эту книгу.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type: <xref uid="excel!Excel.Application:class" />
- name: autoSave
  uid: excel!Excel.Workbook#autoSave:member
  package: excel!
  fullName: autoSave
  summary: >-
    Указывает, находится ли книга в режиме автосохранения.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type: boolean
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: >-
    Представляет коллекцию привязок, включенных в книгу.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
- name: calculationEngineVersion
  uid: excel!Excel.Workbook#calculationEngineVersion:member
  package: excel!
  fullName: calculationEngineVersion
  summary: >-
    Возвращает номер версии модуля вычислений Excel.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type: number
- name: chartDataPointTrack
  uid: excel!Excel.Workbook#chartDataPointTrack:member
  package: excel!
  fullName: chartDataPointTrack
  summary: >-
    Значение true, если все диаграммы в книге отслеживают точки фактических данных, с которыми они связаны. False, если диаграммы отслеживают индекс точек данных.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type: boolean
- name: comments
  uid: excel!Excel.Workbook#comments:member
  package: excel!
  fullName: comments
  summary: >-
    Представляет коллекцию примечаний, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Excel.CommentCollection;'
    return:
      type: <xref uid="excel!Excel.CommentCollection:class" />
- name: context
  uid: excel!Excel.Workbook#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: customXmlParts
  uid: excel!Excel.Workbook#customXmlParts:member
  package: excel!
  fullName: customXmlParts
  summary: >-
    Представляет коллекцию настраиваемых XML-частей, которые содержит эта книга.


    \[[Набор API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPartCollection:class" />
- name: dataConnections
  uid: excel!Excel.Workbook#dataConnections:member
  package: excel!
  fullName: dataConnections
  summary: >-
    Представляет все подключения к данным в книге.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type: <xref uid="excel!Excel.DataConnectionCollection:class" />
- name: functions
  uid: excel!Excel.Workbook#functions:member
  package: excel!
  fullName: functions
  summary: >-
    Представляет коллекцию функций листа, которые можно использовать для вычислений.


    \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type: <xref uid="excel!Excel.Functions:class" />
- name: isDirty
  uid: excel!Excel.Workbook#isDirty:member
  package: excel!
  fullName: isDirty
  summary: >-
    Указывает, были ли внесены изменения с момента последнего сохранения книги. Для этого свойства можно задать значение true, если нужно закрыть измененную книгу без сохранения или выдачи запроса на сохранение.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isDirty: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Workbook#name:member
  package: excel!
  fullName: name
  summary: >-
    Получает имя книги.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: >-
    Представляет коллекцию именованных элементов в книге (именованные диапазоны и константы).


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:class" />
- name: onAutoSaveSettingChanged
  uid: excel!Excel.Workbook#onAutoSaveSettingChanged:member
  package: excel!
  fullName: onAutoSaveSettingChanged
  summary: >-
    Возникает при изменении параметра автосохранения для книги.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.WorkbookAutoSaveSettingChangedEventArgs:interface" />&gt;
- name: onSelectionChanged
  uid: excel!Excel.Workbook#onSelectionChanged:member
  package: excel!
  fullName: onSelectionChanged
  summary: >-
    Происходит при изменении выбора в документе.


    \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.SelectionChangedEventArgs:interface" />&gt;
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: >-
    Представляет коллекцию сводных таблиц, сопоставленных с книгой.


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-get-pivottables.yaml\nawait Excel.run(async (context) => {\n  // Get the names of all the PivotTables in the workbook.\n  const pivotTables = context.workbook.pivotTables;\n  pivotTables.load(\"name\");\n  await context.sync();\n\n  // Display the names in the console.\n  console.log(\"PivotTables in the workbook:\")\n  pivotTables.items.forEach((pivotTable) => {\n    console.log(`\\t${pivotTable.name}`);\n  });\n});\n```"
- name: pivotTableStyles
  uid: excel!Excel.Workbook#pivotTableStyles:member
  package: excel!
  fullName: pivotTableStyles
  summary: >-
    Представляет коллекцию объектов PivotTableStyles, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTableStyles: Excel.PivotTableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableStyleCollection:class" />
- name: previouslySaved
  uid: excel!Excel.Workbook#previouslySaved:member
  package: excel!
  fullName: previouslySaved
  summary: >-
    Указывает, была ли книга ранее сохранена локально или в сети.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type: boolean
- name: properties
  uid: excel!Excel.Workbook#properties:member
  package: excel!
  fullName: properties
  summary: >-
    Получает свойства книги.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type: <xref uid="excel!Excel.DocumentProperties:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/26-document/properties.yaml\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- name: protection
  uid: excel!Excel.Workbook#protection:member
  package: excel!
  fullName: protection
  summary: >-
    Возвращает объект защиты для книги.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type: <xref uid="excel!Excel.WorkbookProtection:class" />
- name: readOnly
  uid: excel!Excel.Workbook#readOnly:member
  package: excel!
  fullName: readOnly
  summary: >-
    Значение true, если книга открыта в режиме только для чтения.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type: boolean
- name: settings
  uid: excel!Excel.Workbook#settings:member
  package: excel!
  fullName: settings
  summary: >-
    Представляет коллекцию параметров, сопоставленных с книгой.


    \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
- name: slicers
  uid: excel!Excel.Workbook#slicers:member
  package: excel!
  fullName: slicers
  summary: >-
    Представляет коллекцию срезов, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicers: Excel.SlicerCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerCollection:class" />
- name: slicerStyles
  uid: excel!Excel.Workbook#slicerStyles:member
  package: excel!
  fullName: slicerStyles
  summary: >-
    Представляет коллекцию объектов SlicerStyles, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerStyles: Excel.SlicerStyleCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:class" />
- name: styles
  uid: excel!Excel.Workbook#styles:member
  package: excel!
  fullName: styles
  summary: >-
    Представляет коллекцию стилей, связанных с книгой.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type: <xref uid="excel!Excel.StyleCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: >-
    Представляет коллекцию таблиц, сопоставленных с книгой.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:class" />
- name: tableStyles
  uid: excel!Excel.Workbook#tableStyles:member
  package: excel!
  fullName: tableStyles
  summary: >-
    Представляет коллекцию объектов TableStyles, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableStyles: Excel.TableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TableStyleCollection:class" />
- name: timelineStyles
  uid: excel!Excel.Workbook#timelineStyles:member
  package: excel!
  fullName: timelineStyles
  summary: >-
    Представляет коллекцию объектов TimelineStyles, связанных с книгой.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly timelineStyles: Excel.TimelineStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TimelineStyleCollection:class" />
- name: usePrecisionAsDisplayed
  uid: excel!Excel.Workbook#usePrecisionAsDisplayed:member
  package: excel!
  fullName: usePrecisionAsDisplayed
  summary: >-
    Значение true, если вычисления в книге выполняются только с той точностью чисел, с которой они отображаются. При переключении этого свойства с false на true данные будут безвозвратно потеряны.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type: boolean
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: >-
    Представляет коллекцию листов, сопоставленных с книгой.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:class" />
methods:
- name: close(closeBehavior)
  uid: excel!Excel.Workbook#close:member(1)
  package: excel!
  fullName: close(closeBehavior)
  summary: >-
    Закрывает текущую книгу.


    \[[Набор API: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
    parameters:
    - id: closeBehavior
      description: поведение при закрытии книги.
      type: <xref uid="excel!Excel.CloseBehavior:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-save-and-close.yaml\nawait Excel.run(async (context) => {\n    context.workbook.close(Excel.CloseBehavior.save);\n});\n```"
- name: close(closeBehaviorString)
  uid: excel!Excel.Workbook#close:member(2)
  package: excel!
  fullName: close(closeBehaviorString)
  summary: >-
    Закрывает текущую книгу.


    \[[Набор API: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
    parameters:
    - id: closeBehaviorString
      description: поведение при закрытии книги.
      type: "\"Save\" | \"SkipSave\""
    return:
      type: void
      description: ''
- name: getActiveCell()
  uid: excel!Excel.Workbook#getActiveCell:member(1)
  package: excel!
  fullName: getActiveCell()
  summary: >-
    Получает текущую активную ячейку из книги.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-get-active-cell.yaml\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- name: getActiveChart()
  uid: excel!Excel.Workbook#getActiveChart:member(1)
  package: excel!
  fullName: getActiveChart()
  summary: >-
    Получает текущую активную диаграмму в книге. Если нет активной диаграммы, `ItemNotFound` возникает исключение.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChart(): Excel.Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: getActiveChartOrNullObject()
  uid: excel!Excel.Workbook#getActiveChartOrNullObject:member(1)
  package: excel!
  fullName: getActiveChartOrNullObject()
  summary: >-
    Получает текущую активную диаграмму в книге. Если нет активной диаграммы, возвращается нулевой объект.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChartOrNullObject(): Excel.Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: getActiveSlicer()
  uid: excel!Excel.Workbook#getActiveSlicer:member(1)
  package: excel!
  fullName: getActiveSlicer()
  summary: >-
    Получает текущий активный срез в книге. Если активного среза нет, `ItemNotFound` создается исключение.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicer(): Excel.Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: getActiveSlicerOrNullObject()
  uid: excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)
  package: excel!
  fullName: getActiveSlicerOrNullObject()
  summary: >-
    Получает текущий активный срез в книге. Если активный срез отсутствует, возвращается пустой объект.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: getIsActiveCollabSession()
  uid: excel!Excel.Workbook#getIsActiveCollabSession:member(1)
  package: excel!
  fullName: getIsActiveCollabSession()
  summary: >-
    Значение true, если книга редактируется несколькими пользователями (совместное редактирование). Обратите внимание, что между изменением состояния книги и изменением результатов метода может возникнуть задержка.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: ''
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: >-
    Получает текущий выделенный диапазон из книги. Если выбрано несколько диапазонов, этот метод выдаст ошибку.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getSelectedRanges()
  uid: excel!Excel.Workbook#getSelectedRanges:member(1)
  package: excel!
  fullName: getSelectedRanges()
  summary: >-
    Получает текущий выделенный диапазон (один или несколько) в книге. В отличие от getSelectedRange() этот метод возвращает объект RangeAreas, представляющий все выделенные диапазоны.


    \[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRanges(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/range-areas.yaml\nawait Excel.run(async (context) => {\n\n    const selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- name: load(options)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружается свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.WorkbookLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Workbook#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Workbook;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: save(saveBehavior)
  uid: excel!Excel.Workbook#save:member(1)
  package: excel!
  fullName: save(saveBehavior)
  summary: >-
    Сохраняет текущую книгу.


    \[[Набор API: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
    parameters:
    - id: saveBehavior
      description: поведение при сохранении книги.
      type: <xref uid="excel!Excel.SaveBehavior:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/workbook-save-and-close.yaml\nawait Excel.run(async (context) => {\n    context.workbook.save(Excel.SaveBehavior.save);\n});\n```"
- name: save(saveBehaviorString)
  uid: excel!Excel.Workbook#save:member(2)
  package: excel!
  fullName: save(saveBehaviorString)
  summary: >-
    Сохраняет текущую книгу.


    \[[Набор API: ExcelApi 1,11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
    parameters:
    - id: saveBehaviorString
      description: поведение при сохранении книги.
      type: "\"Save\" | \"Prompt\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Workbook#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Excel.Workbook): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.
      type: <xref uid="excel!Excel.Interfaces.WorkbookUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Workbook#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Workbook:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Workbook#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Workbook — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.WorkbookData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 1a6273d380093d7db484cd7fc0907572235c8f0e
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49136983"
