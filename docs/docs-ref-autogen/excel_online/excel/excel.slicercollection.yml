### YamlMime:TSType
name: Excel.SlicerCollection
uid: excel!Excel.SlicerCollection:class
package: excel!
fullName: Excel.SlicerCollection
summary: >-
  Представляет коллекцию всех объектов срезов в книге или листе.


  \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.SlicerCollection#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: items
  uid: excel!Excel.SlicerCollection#items:member
  package: excel!
  fullName: items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.Slicer[];'
    return:
      type: <xref uid="excel!Excel.Slicer:class" />[]
methods:
- name: add(slicerSource, sourceField, slicerDestination)
  uid: excel!Excel.SlicerCollection#add:member(1)
  package: excel!
  fullName: add(slicerSource, sourceField, slicerDestination)
  summary: >-
    Добавляет новый срез в книгу.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
    parameters:
    - id: slicerSource
      description: Источник данных, на котором будет основан новый срез. Это может быть объект PivotTable, объект Table или строка. Когда объект сводной таблицы передается, источником данных является источник объекта сводной таблицы. Когда передается объект Table, источником данных является объект Table. Когда строка передается, она интерпретируется как имя/идентификатор сводной таблицы или таблицы.
      type: string | <xref uid="excel!Excel.PivotTable:class" /> | <xref uid="excel!Excel.Table:class" />
    - id: sourceField
      description: Поле в источнике данных, по которому выполняется фильтрация. Это может быть объект PivotField, объект TableColumn, идентификатор PivotField или идентификатор и имя TableColumn.
      type: string | <xref uid="excel!Excel.PivotField:class" /> | number | <xref uid="excel!Excel.TableColumn:class" />
    - id: slicerDestination
      description: Необязательный атрибут. Лист, в котором будет создан новый срез. Это может быть объект листа или имя или идентификатор листа. Этот параметр можно опустить, если коллекция срезов извлекается из листа.
      type: string | <xref uid="excel!Excel.Worksheet:class" />
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: >-
        Новый срез.


        #### <a name="examples"></a>Примеры


        ```typescript

        // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml

        await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Pivot");
            const slicer = sheet.slicers.add(
                "Farm Sales", /* The slicer data source. For PivotTables, this can be the PivotTable object reference or name. */
                "Type" /* The field in the data source to filter by. For PivotTables, this can be a PivotField object reference or ID. */
            );
            slicer.name = "Fruit Slicer";
            await context.sync();
        });

        ```
- name: getCount()
  uid: excel!Excel.SlicerCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Возвращает количество срезов в коллекции.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.SlicerCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: >-
    Получает объект slicer по его имени или ИД.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Excel.Slicer;'
    parameters:
    - id: key
      description: Имя или идентификатор среза.
      type: string
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.caption = \"Fruit Types\";\n    slicer.left = 395;\n    slicer.top = 15;\n    slicer.height = 135;\n    slicer.width = 150;\n    await context.sync();\n});\n```"
- name: getItemAt(index)
  uid: excel!Excel.SlicerCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: >-
    Получает срез на основе его позиции в коллекции.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Excel.Slicer;'
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: getItemOrNullObject(key)
  uid: excel!Excel.SlicerCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(key)
  summary: >-
    Получает срез по его имени или ИД. Если срез не существует, возвращает пустой объект.


    \[[Набор API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Slicer;'
    parameters:
    - id: key
      description: Имя или идентификатор среза, который требуется получить.
      type: string
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.SlicerCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружается свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.SlicerCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.SlicerCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.SlicerCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.SlicerCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.SlicerCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.SlicerCollection:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.SlicerCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный `Excel.SlicerCollection` объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.SlicerCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.SlicerCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 9119eb38ebccc2d0304766eafabe4b9ecf6325ab
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49183449"
