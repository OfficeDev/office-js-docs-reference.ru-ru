### YamlMime:UniversalReference
ms.openlocfilehash: 1563a1cc818bc1c0a64ad08987c2779fa40fc1cf
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30108858"
items:
- uid: excel_release.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="ddb5a-101">Представляет защиту объекта листа.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="ddb5a-102">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ddb5a-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorksheetProtection.context
  - excel_release.Excel.WorksheetProtection.load
  - excel_release.Excel.WorksheetProtection.load_1
  - excel_release.Excel.WorksheetProtection.load_2
  - excel_release.Excel.WorksheetProtection.options
  - excel_release.Excel.WorksheetProtection.protect
  - excel_release.Excel.WorksheetProtection.protected
  - excel_release.Excel.WorksheetProtection.toJSON
  - excel_release.Excel.WorksheetProtection.unprotect
- uid: excel_release.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="ddb5a-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-103">The request context associated with the object.</span></span> <span data-ttu-id="ddb5a-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="ddb5a-105">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ddb5a-106">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="ddb5a-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ddb5a-107">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="ddb5a-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ddb5a-108">`load(option?: string | string[]): Excel.WorksheetProtection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ddb5a-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ddb5a-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="ddb5a-111">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="ddb5a-112">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ddb5a-113">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ddb5a-114">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
- uid: excel_release.Excel.WorksheetProtection.load_1
  summary: <span data-ttu-id="ddb5a-115">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ddb5a-116">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ddb5a-117">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorksheetProtection.load_2
  summary: <span data-ttu-id="ddb5a-118">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ddb5a-119">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="ddb5a-120">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="ddb5a-p106">Параметры защиты листа. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-p106">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="ddb5a-123">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ddb5a-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel_release.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="ddb5a-124">Защищает лист.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-124">Protects a worksheet.</span></span> <span data-ttu-id="ddb5a-125">Завершается с ошибкой, если лист уже защищен.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-125">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="ddb5a-126">\[[Набор API: ExcelApi 1,2 для параметров; 1,7 для пароля](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ddb5a-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect(options, password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ddb5a-127\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ddb5a-127\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="ddb5a-128">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-128">Optional.</span></span> <span data-ttu-id="ddb5a-129">Параметры защиты листа.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-129">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="ddb5a-130">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-130">Optional.</span></span> <span data-ttu-id="ddb5a-131">Пароль защиты листа.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-131">Sheet protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="ddb5a-132">Указывает, защищен ли лист.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="ddb5a-133">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-133">Read-only.</span></span>


    <span data-ttu-id="ddb5a-134">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ddb5a-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="ddb5a-135">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ddb5a-136">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. WorksheetProtection — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.WorksheetProtectionData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel_release.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="ddb5a-137">Снимает защиту с листа.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-137">Unprotects a worksheet.</span></span>


    <span data-ttu-id="ddb5a-138">\[[Набор API: ExcelApi 1,7 для пароля](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ddb5a-138">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ddb5a-139\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ddb5a-139\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="ddb5a-140">пароль защиты листа.</span><span class="sxs-lookup"><span data-stu-id="ddb5a-140">sheet protection password.</span></span>
      type:
      - string
