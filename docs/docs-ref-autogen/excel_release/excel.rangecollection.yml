### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeCollection
    summary: '<span data-ttu-id="1c146-101">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c146-101">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
    name: Excel.RangeCollection
    fullName: Excel.RangeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeCollection.context
      - excel_release.Excel.RangeCollection.getCount
      - excel_release.Excel.RangeCollection.getItemAt
      - excel_release.Excel.RangeCollection.items
      - excel_release.Excel.RangeCollection.load
      - excel_release.Excel.RangeCollection.load_1
      - excel_release.Excel.RangeCollection.load_2
      - excel_release.Excel.RangeCollection.toJSON
  - uid: excel_release.Excel.RangeCollection.context
    summary: '<span data-ttu-id="1c146-102">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="1c146-102">The request context associated with the object.</span></span> <span data-ttu-id="1c146-103">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="1c146-103">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeCollection.getCount
    summary: |-
      <span data-ttu-id="1c146-104">Возвращает количество диапазонов в объекте RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="1c146-104">Returns the number of ranges in the RangeCollection.</span></span>

      <span data-ttu-id="1c146-105">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c146-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.RangeCollection.getItemAt
    summary: |-
      <span data-ttu-id="1c146-106">Возвращает объект диапазона в зависимости от его позиции в объекте RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="1c146-106">Returns the range object based on its position in the RangeCollection.</span></span>

      <span data-ttu-id="1c146-107">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c146-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="1c146-108">Значение индекса извлекаемого объекта Range.</span><span class="sxs-lookup"><span data-stu-id="1c146-108">Index value of the range object to be retrieved.</span></span> <span data-ttu-id="1c146-109">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="1c146-109">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.RangeCollection.items
    summary: <span data-ttu-id="1c146-110">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="1c146-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Range[];'
      return:
        type:
          - 'Excel.Range[]'
  - uid: excel_release.Excel.RangeCollection.load
    summary: <span data-ttu-id="1c146-111">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="1c146-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c146-112">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="1c146-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="1c146-113">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="1c146-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1c146-114">`load(option?: string | string[]): Excel.RangeCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="1c146-114">`load(option?: string | string[]): Excel.RangeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1c146-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="1c146-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1c146-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="1c146-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection` - Only available on collection types.</span></span> <span data-ttu-id="1c146-117">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="1c146-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="1c146-118">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="1c146-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1c146-119">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="1c146-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1c146-120">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="1c146-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.RangeCollection.load_1
    summary: <span data-ttu-id="1c146-121">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="1c146-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c146-122">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="1c146-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="1c146-123">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="1c146-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.RangeCollection.toJSON
    summary: '<span data-ttu-id="1c146-124">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1c146-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1c146-125">.</span><span class="sxs-lookup"><span data-stu-id="1c146-125"></span></span> <span data-ttu-id="1c146-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1c146-126"></span></span><!-- --><span data-ttu-id="1c146-127">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.RangeCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.RangeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="1c146-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeCollectionData`</span></span><!-- --><span data-ttu-id="1c146-128">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="1c146-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeCollectionData
        description: ''