### YamlMime:UniversalReference
ms.openlocfilehash: 541fcb12e43c834e851af290685be9e015cb6e23
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106142"
items:
- uid: excel_release.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="b4c15-101">Представляет защиту объекта книги.</span><span class="sxs-lookup"><span data-stu-id="b4c15-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="b4c15-102">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b4c15-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookProtection.context
  - excel_release.Excel.WorkbookProtection.load
  - excel_release.Excel.WorkbookProtection.load_1
  - excel_release.Excel.WorkbookProtection.load_2
  - excel_release.Excel.WorkbookProtection.protect
  - excel_release.Excel.WorkbookProtection.protected
  - excel_release.Excel.WorkbookProtection.toJSON
  - excel_release.Excel.WorkbookProtection.unprotect
- uid: excel_release.Excel.WorkbookProtection.context
  summary: <span data-ttu-id="b4c15-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="b4c15-103">The request context associated with the object.</span></span> <span data-ttu-id="b4c15-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="b4c15-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="b4c15-105">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b4c15-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b4c15-106">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="b4c15-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b4c15-107">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="b4c15-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b4c15-108">`load(option?: string | string[]): Excel.WorkbookProtection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b4c15-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b4c15-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b4c15-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b4c15-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="b4c15-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="b4c15-111">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="b4c15-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="b4c15-112">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="b4c15-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b4c15-113">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="b4c15-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b4c15-114">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="b4c15-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
- uid: excel_release.Excel.WorkbookProtection.load_1
  summary: <span data-ttu-id="b4c15-115">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b4c15-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b4c15-116">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="b4c15-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b4c15-117">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b4c15-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookProtection.load_2
  summary: <span data-ttu-id="b4c15-118">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b4c15-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b4c15-119">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="b4c15-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b4c15-120">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b4c15-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="b4c15-121">Защищает книгу.</span><span class="sxs-lookup"><span data-stu-id="b4c15-121">Protects a workbook.</span></span> <span data-ttu-id="b4c15-122">Выдает ошибку, если книга защищена.</span><span class="sxs-lookup"><span data-stu-id="b4c15-122">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="b4c15-123">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b4c15-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: protect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b4c15-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4c15-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="b4c15-125">пароль для защиты книги.</span><span class="sxs-lookup"><span data-stu-id="b4c15-125">workbook protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="b4c15-126">Указывает, защищена ли книга.</span><span class="sxs-lookup"><span data-stu-id="b4c15-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="b4c15-127">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b4c15-127">Read-Only.</span></span>


    <span data-ttu-id="b4c15-128">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b4c15-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorkbookProtection.toJSON
  summary: <span data-ttu-id="b4c15-129">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="b4c15-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b4c15-130">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. воркбукпротектион — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.WorkbookProtectionData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="b4c15-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel_release.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="b4c15-131">Снимает защиту с книги.</span><span class="sxs-lookup"><span data-stu-id="b4c15-131">Unprotects a workbook.</span></span>


    <span data-ttu-id="b4c15-132">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b4c15-132">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b4c15-133\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b4c15-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="b4c15-134">пароль для защиты книги.</span><span class="sxs-lookup"><span data-stu-id="b4c15-134">workbook protection password.</span></span>
      type:
      - string
