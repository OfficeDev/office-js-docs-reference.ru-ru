### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.TableColumn
    summary: |-
      <span data-ttu-id="8c1da-101">Представляет столбец в таблице.</span><span class="sxs-lookup"><span data-stu-id="8c1da-101">Represents a column in a table.</span></span>

      <span data-ttu-id="8c1da-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.TableColumn.context
      - excel_release.Excel.TableColumn.delete
      - excel_release.Excel.TableColumn.filter
      - excel_release.Excel.TableColumn.getDataBodyRange
      - excel_release.Excel.TableColumn.getHeaderRowRange
      - excel_release.Excel.TableColumn.getRange
      - excel_release.Excel.TableColumn.getTotalRowRange
      - excel_release.Excel.TableColumn.id
      - excel_release.Excel.TableColumn.index
      - excel_release.Excel.TableColumn.load
      - excel_release.Excel.TableColumn.load_1
      - excel_release.Excel.TableColumn.load_2
      - excel_release.Excel.TableColumn.name
      - excel_release.Excel.TableColumn.set
      - excel_release.Excel.TableColumn.set_1
      - excel_release.Excel.TableColumn.toJSON
      - excel_release.Excel.TableColumn.values
  - uid: excel_release.Excel.TableColumn.context
    summary: '<span data-ttu-id="8c1da-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="8c1da-103">The request context associated with the object.</span></span> <span data-ttu-id="8c1da-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="8c1da-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.TableColumn.delete
    summary: |-
      <span data-ttu-id="8c1da-105">Удаляет столбец из таблицы.</span><span class="sxs-lookup"><span data-stu-id="8c1da-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="8c1da-106">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.filter
    summary: |-
      <span data-ttu-id="8c1da-108">Возвращает фильтр, применяемый к столбцу.</span><span class="sxs-lookup"><span data-stu-id="8c1da-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="8c1da-109">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8c1da-109">Read-only.</span></span>

      <span data-ttu-id="8c1da-110">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
  - uid: excel_release.Excel.TableColumn.getDataBodyRange
    summary: |-
      <span data-ttu-id="8c1da-111">Получает объект диапазона, связанный с текстом данных столбца.</span><span class="sxs-lookup"><span data-stu-id="8c1da-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="8c1da-112">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-113">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getHeaderRowRange
    summary: |-
      <span data-ttu-id="8c1da-114">Получает объект диапазона, связанный со строкой заголовков столбца.</span><span class="sxs-lookup"><span data-stu-id="8c1da-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="8c1da-115">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getRange
    summary: |-
      <span data-ttu-id="8c1da-117">Получает объект диапазона, связанный со всем столбцом.</span><span class="sxs-lookup"><span data-stu-id="8c1da-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="8c1da-118">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-119">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getTotalRowRange
    summary: |-
      <span data-ttu-id="8c1da-120">Получает объект диапазона, связанный со строкой итогов столбца.</span><span class="sxs-lookup"><span data-stu-id="8c1da-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="8c1da-121">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-122">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.id
    summary: |-
      <span data-ttu-id="8c1da-123">Возвращает уникальный ключ, идентифицирующий столбец в таблице.</span><span class="sxs-lookup"><span data-stu-id="8c1da-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="8c1da-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8c1da-124">Read-only.</span></span>

      <span data-ttu-id="8c1da-125">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableColumn.index
    summary: |-
      <span data-ttu-id="8c1da-126">Возвращает номер индекса столбца в коллекции столбцов таблицы.</span><span class="sxs-lookup"><span data-stu-id="8c1da-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="8c1da-127">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="8c1da-127">Zero-indexed.</span></span> <span data-ttu-id="8c1da-128">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8c1da-128">Read-only.</span></span>

      <span data-ttu-id="8c1da-129">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableColumn.load
    summary: <span data-ttu-id="8c1da-130">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8c1da-131">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="8c1da-131">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8c1da-132">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="8c1da-132">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8c1da-133">`load(option?: string | string[]): Excel.TableColumn`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8c1da-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8c1da-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8c1da-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8c1da-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="8c1da-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="8c1da-136">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="8c1da-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="8c1da-137">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="8c1da-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8c1da-138">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="8c1da-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8c1da-139">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="8c1da-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableColumnLoadOptions
  - uid: excel_release.Excel.TableColumn.load_1
    summary: <span data-ttu-id="8c1da-140">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8c1da-141">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8c1da-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8c1da-142">Примеры</span><span class="sxs-lookup"><span data-stu-id="8c1da-142">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8c1da-143">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8c1da-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.TableColumn.load_2
    summary: <span data-ttu-id="8c1da-144">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8c1da-145">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8c1da-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8c1da-146">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8c1da-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.TableColumn.name
    summary: |-
      <span data-ttu-id="8c1da-147">Представляет имя столбца таблицы.</span><span class="sxs-lookup"><span data-stu-id="8c1da-147">Represents the name of the table column.</span></span>

      <span data-ttu-id="8c1da-148">\[[Набор API: ExcelApi 1,1, чтобы получить имя; 1,4 для установки.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="8c1da-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="8c1da-149">\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-149"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.TableColumn.set
    summary: '<span data-ttu-id="8c1da-150">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8c1da-151">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="8c1da-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8c1da-152">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="8c1da-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="8c1da-153">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="8c1da-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.TableColumnUpdateData
        - id: options
          description: '<span data-ttu-id="8c1da-154">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8c1da-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.TableColumn.set_1
    summary: '<span data-ttu-id="8c1da-155">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableColumn
  - uid: excel_release.Excel.TableColumn.toJSON
    summary: '<span data-ttu-id="8c1da-156">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8c1da-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8c1da-157">.</span><span class="sxs-lookup"><span data-stu-id="8c1da-157"></span></span> <span data-ttu-id="8c1da-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8c1da-158"></span></span><!-- --><span data-ttu-id="8c1da-159">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. TableColumn — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="8c1da-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="8c1da-160">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="8c1da-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnData
        description: ''
  - uid: excel_release.Excel.TableColumn.values
    summary: |-
      <span data-ttu-id="8c1da-161">Представляет необработанные значения указанного диапазона.</span><span class="sxs-lookup"><span data-stu-id="8c1da-161">Represents the raw values of the specified range.</span></span> <span data-ttu-id="8c1da-162">Могут возвращаться строковые и числовые данные, а также логические значения.</span><span class="sxs-lookup"><span data-stu-id="8c1da-162">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="8c1da-163">Ячейки, содержащие ошибку, вернут строку ошибки.</span><span class="sxs-lookup"><span data-stu-id="8c1da-163">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="8c1da-164">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8c1da-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'