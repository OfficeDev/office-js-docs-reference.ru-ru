### YamlMime:UniversalReference
ms.openlocfilehash: fba1f8bad39a41fcef6c4852701605bb4c86e20e
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30116733"
items:
- uid: excel_release.Excel.TableColumnCollection
  summary: >-
    Представляет коллекцию всех столбцов, включенных в таблицу.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableColumnCollection
  fullName: Excel.TableColumnCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableColumnCollection.add
  - excel_release.Excel.TableColumnCollection.context
  - excel_release.Excel.TableColumnCollection.count
  - excel_release.Excel.TableColumnCollection.getCount
  - excel_release.Excel.TableColumnCollection.getItem
  - excel_release.Excel.TableColumnCollection.getItemAt
  - excel_release.Excel.TableColumnCollection.getItemOrNullObject
  - excel_release.Excel.TableColumnCollection.items
  - excel_release.Excel.TableColumnCollection.load
  - excel_release.Excel.TableColumnCollection.load_1
  - excel_release.Excel.TableColumnCollection.load_2
  - excel_release.Excel.TableColumnCollection.toJSON
- uid: excel_release.Excel.TableColumnCollection.add
  summary: >-
    Добавляет новый столбец в таблицу.


    \[[Набор API: для ExcelApi 1,1 требуется индекс меньше, чем общее количество столбцов; 1,4 разрешает необязательный индекс (null или-1) и добавляет столбец в параметр End; 1,4 разрешает параметр Name во время создания.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
  name: add(index, values, name)
  fullName: add(index, values, name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: Необязательный. Определяет относительную позицию нового столбца. Если задано значение null или -1, столбец добавляется в конце. Столбцы с более высокими значениями индекса смещаются в сторону. Используется нулевой индекс.
      type:
      - number
    - id: values
      description: Необязательный параметр. Двухмерный массив неформатированных значений столбца таблицы.
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
    - id: name
      description: Необязательный параметр. Задает имя нового столбца. Если значение пустое, используется имя по умолчанию.
      type:
      - string
- uid: excel_release.Excel.TableColumnCollection.context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableColumnCollection.count
  summary: >-
    Возвращает количество столбцов в таблице. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumnCollection.getCount
  summary: >-
    Получает количество столбцов в таблице.


    \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.TableColumnCollection.getItem
  summary: >-
    Возвращает объект столбца по имени или идентификатору.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: Имя или идентификатор столбца.
      type:
      - number | string
- uid: excel_release.Excel.TableColumnCollection.getItemAt
  summary: >-
    Возвращает столбец на основании его позиции в коллекции.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type:
      - number
- uid: excel_release.Excel.TableColumnCollection.getItemOrNullObject
  summary: >-
    Получает объект столбца по имени или идентификатору. Если столбец не существует, возвращает пустой объект.


    \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: key
      description: Имя или идентификатор столбца.
      type:
      - number | string
- uid: excel_release.Excel.TableColumnCollection.items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type:
      - Excel.TableColumn[]
- uid: excel_release.Excel.TableColumnCollection.load
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств необходимо вызвать метод Context. Sync ().
  remarks: >-
    В дополнение к этой подписи этот метод имеет следующие подписи:


    `load(option?: string | string[]): Excel.TableColumnCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.TableColumnCollection.load_1
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;\n    tablecolumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablecolumns Count: \" + tablecolumns.count);\n        for (var i = 0; i < tablecolumns.items.length; i++) {\n            console.log(tablecolumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type:
      - string | string[]
- uid: excel_release.Excel.TableColumnCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.TableColumnCollection.toJSON
  summary: ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API. (`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.TableColumnCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.TableColumnCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnCollectionData
      description: ''
