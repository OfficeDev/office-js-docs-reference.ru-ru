### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartFill
    summary: |-
      <span data-ttu-id="e4ecb-101">Представляет форматирование заливки для элемента диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-101">Represents the fill formatting for a chart element.</span></span>

      <span data-ttu-id="e4ecb-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4ecb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartFill
    fullName: Excel.ChartFill
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartFill.clear
      - excel_release.Excel.ChartFill.context
      - excel_release.Excel.ChartFill.load
      - excel_release.Excel.ChartFill.setSolidColor
      - excel_release.Excel.ChartFill.toJSON
  - uid: excel_release.Excel.ChartFill.clear
    summary: |-
      <span data-ttu-id="e4ecb-103">Очищает цвет заливки элемента диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-103">Clear the fill color of a chart element.</span></span>

      <span data-ttu-id="e4ecb-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4ecb-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4ecb-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4ecb-105">Examples</span></span>

          ```javascript
          // Clear the line format of the major Gridlines on value axis of the Chart named "Chart1"
          Excel.run(function (ctx) { 
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.clear();
              return ctx.sync().then(function() {
                      console.log("Chart Major Gridlines Format Cleared");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.ChartFill.context
    summary: '<span data-ttu-id="e4ecb-106">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-106">The request context associated with the object.</span></span> <span data-ttu-id="e4ecb-107">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-107">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartFill.load
    summary: <span data-ttu-id="e4ecb-108">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e4ecb-109">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e4ecb-109">You must call "context.sync()" before reading the properties.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;'
      return:
        type:
          - excel.Excel.ChartFill
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: excel_release.Excel.ChartFill.setSolidColor
    summary: |-
      <span data-ttu-id="e4ecb-110">Устанавливает форматирование заливки элемента диаграммы на единый цвет.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-110">Sets the fill formatting of a chart element to a uniform color.</span></span>

      <span data-ttu-id="e4ecb-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4ecb-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setSolidColor(color)
    fullName: setSolidColor(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSolidColor(color: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4ecb-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4ecb-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    

              chart.format.fill.setSolidColor("#FF0000");

              return ctx.sync().then(function() {
                      console.log("Chart1 Background Color Changed.");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;
              let point = pointsCollection.getItemAt(2);

              // Set color for chart point.
              point.format.fill.setSolidColor('red');

              await context.sync();        
          });
          ```
      parameters:
        - id: color
          description: '<span data-ttu-id="e4ecb-113">Код цвета HTML, представляющий цвет линии границы для формы \#RRGGBB (например, "FFA500") или в виде именованного цвета HTML (например, "Апельсин").</span><span class="sxs-lookup"><span data-stu-id="e4ecb-113">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>'
          type:
            - string
  - uid: excel_release.Excel.ChartFill.toJSON
    summary: '<span data-ttu-id="e4ecb-114">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e4ecb-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e4ecb-115">.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-115"></span></span> <span data-ttu-id="e4ecb-116">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e4ecb-116"></span></span><!-- --><span data-ttu-id="e4ecb-117">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ChartFill — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartFillData`</span><span class="sxs-lookup"><span data-stu-id="e4ecb-117">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartFillData`</span></span><!-- --><span data-ttu-id="e4ecb-118">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e4ecb-118">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''