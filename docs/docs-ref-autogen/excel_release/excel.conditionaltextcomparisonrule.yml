### YamlMime:UniversalReference
ms.openlocfilehash: deac0f2518f59467935fc2082cce0cf545d3ae94
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30107353"
items:
- uid: excel_release.Excel.ConditionalTextComparisonRule
  summary: >-
    Представляет правило условного форматирования значения ячейки


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ConditionalTextComparisonRule
  fullName: Excel.ConditionalTextComparisonRule
  langs:
  - typeScript
  type: interface
  package: excel_release
  children:
  - excel_release.Excel.ConditionalTextComparisonRule.operator
  - excel_release.Excel.ConditionalTextComparisonRule.text
- uid: excel_release.Excel.ConditionalTextComparisonRule.operator
  summary: >-
    Оператор условного форматирования текста.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: operator
  fullName: operator
  langs:
  - typeScript
  type: property
  syntax:
    content: 'operator: Excel.ConditionalTextOperator | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith";'
    return:
      type:
      - Excel.ConditionalTextOperator | "Invalid" | "Contains" | "NotContains" | "BeginsWith" | "EndsWith"
- uid: excel_release.Excel.ConditionalTextComparisonRule.text
  summary: >-
    Текстовое значение условного форматирования.


    \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
