### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartSeries
    summary: |-
      <span data-ttu-id="8599f-101">Представляет ряд в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8599f-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="8599f-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartSeries.axisGroup
      - excel_release.Excel.ChartSeries.chartType
      - excel_release.Excel.ChartSeries.context
      - excel_release.Excel.ChartSeries.dataLabels
      - excel_release.Excel.ChartSeries.delete
      - excel_release.Excel.ChartSeries.doughnutHoleSize
      - excel_release.Excel.ChartSeries.explosion
      - excel_release.Excel.ChartSeries.filtered
      - excel_release.Excel.ChartSeries.firstSliceAngle
      - excel_release.Excel.ChartSeries.format
      - excel_release.Excel.ChartSeries.gapWidth
      - excel_release.Excel.ChartSeries.hasDataLabels
      - excel_release.Excel.ChartSeries.invertIfNegative
      - excel_release.Excel.ChartSeries.load
      - excel_release.Excel.ChartSeries.load_1
      - excel_release.Excel.ChartSeries.load_2
      - excel_release.Excel.ChartSeries.markerBackgroundColor
      - excel_release.Excel.ChartSeries.markerForegroundColor
      - excel_release.Excel.ChartSeries.markerSize
      - excel_release.Excel.ChartSeries.markerStyle
      - excel_release.Excel.ChartSeries.name
      - excel_release.Excel.ChartSeries.overlap
      - excel_release.Excel.ChartSeries.plotOrder
      - excel_release.Excel.ChartSeries.points
      - excel_release.Excel.ChartSeries.secondPlotSize
      - excel_release.Excel.ChartSeries.set
      - excel_release.Excel.ChartSeries.set_1
      - excel_release.Excel.ChartSeries.setBubbleSizes
      - excel_release.Excel.ChartSeries.setValues
      - excel_release.Excel.ChartSeries.setXAxisValues
      - excel_release.Excel.ChartSeries.showShadow
      - excel_release.Excel.ChartSeries.smooth
      - excel_release.Excel.ChartSeries.splitType
      - excel_release.Excel.ChartSeries.toJSON
      - excel_release.Excel.ChartSeries.trendlines
      - excel_release.Excel.ChartSeries.varyByCategories
  - uid: excel_release.Excel.ChartSeries.axisGroup
    summary: |-
      <span data-ttu-id="8599f-103">Возвращает или задает группу для указанного ряда.</span><span class="sxs-lookup"><span data-stu-id="8599f-103">Returns or sets the group for the specified series.</span></span> <span data-ttu-id="8599f-104">Чтение и запись</span><span class="sxs-lookup"><span data-stu-id="8599f-104">Read/Write</span></span>

      <span data-ttu-id="8599f-105">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - Excel.ChartAxisGroup | "Primary" | "Secondary"
  - uid: excel_release.Excel.ChartSeries.chartType
    summary: |-
      <span data-ttu-id="8599f-106">Представляет тип диаграммы для ряда.</span><span class="sxs-lookup"><span data-stu-id="8599f-106">Represents the chart type of a series.</span></span> <span data-ttu-id="8599f-107">Дополнительные сведения см. в статье Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="8599f-107">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="8599f-108">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel_release.Excel.ChartSeries.context
    summary: '<span data-ttu-id="8599f-109">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="8599f-109">The request context associated with the object.</span></span> <span data-ttu-id="8599f-110">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="8599f-110">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartSeries.dataLabels
    summary: |-
      <span data-ttu-id="8599f-111">Представляет коллекцию всех dataLabels в ряду.</span><span class="sxs-lookup"><span data-stu-id="8599f-111">Represents a collection of all dataLabels in the series.</span></span>

      <span data-ttu-id="8599f-112">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
  - uid: excel_release.Excel.ChartSeries.delete
    summary: |-
      <span data-ttu-id="8599f-113">Удаляет ряд диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-113">Deletes the chart series.</span></span>

      <span data-ttu-id="8599f-114">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      <span data-ttu-id="8599f-116">Представляет размер отверстия ряда кольцевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-116">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="8599f-117">Допустимо только в doughnutExploded и кольцевых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="8599f-117">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="8599f-118">Создает исключение недопустимого аргумента на недопустимых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="8599f-118">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="8599f-119">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.explosion
    summary: |-
      <span data-ttu-id="8599f-120">Возвращает или задает значение развертывания для сектора круговой или кольцевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-120">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span></span> <span data-ttu-id="8599f-121">Возвращает нуль (0) при отсутствии развертывания (верхушка сектора — в центре круговой диаграммы).</span><span class="sxs-lookup"><span data-stu-id="8599f-121">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span></span> <span data-ttu-id="8599f-122">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-122">Read/Write.</span></span>

      <span data-ttu-id="8599f-123">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.filtered
    summary: |-
      <span data-ttu-id="8599f-124">Логическое значение, которое указывает, фильтруется ли ряд.</span><span class="sxs-lookup"><span data-stu-id="8599f-124">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="8599f-125">Неприменимо для поверхностных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8599f-125">Not applicable for surface charts.</span></span>

      <span data-ttu-id="8599f-126">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.firstSliceAngle
    summary: |-
      <span data-ttu-id="8599f-127">Возвращает или задает угол первого сектора круговой или кольцевой диаграммы, в градусах (по часовой стрелке из вертикального положения).</span><span class="sxs-lookup"><span data-stu-id="8599f-127">Returns or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).</span></span> <span data-ttu-id="8599f-128">Применяется только к круговым, объемным круговым и кольцевым диаграммам.</span><span class="sxs-lookup"><span data-stu-id="8599f-128">Applies only to pie, 3-D pie, and doughnut charts.</span></span> <span data-ttu-id="8599f-129">Может находиться в диапазоне от 0 до 360.</span><span class="sxs-lookup"><span data-stu-id="8599f-129">Can be a value from 0 through 360.</span></span> <span data-ttu-id="8599f-130">Чтение и запись</span><span class="sxs-lookup"><span data-stu-id="8599f-130">Read/Write</span></span>

      <span data-ttu-id="8599f-131">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.format
    summary: |-
      <span data-ttu-id="8599f-132">Представляет форматирование ряда диаграммы, включая формат заливки и линий.</span><span class="sxs-lookup"><span data-stu-id="8599f-132">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="8599f-133">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8599f-133">Read-only.</span></span>

      <span data-ttu-id="8599f-134">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel_release.Excel.ChartSeries.gapWidth
    summary: |-
      <span data-ttu-id="8599f-135">Представляет ширину разрывов рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-135">Represents the gap width of a chart series.</span></span> <span data-ttu-id="8599f-136">Допустимы только на линейчатых диаграммах и гистограммах, а также определенных классах линий и круговых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8599f-136">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="8599f-137">Создает исключение недопустимого аргумента на недопустимых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="8599f-137">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="8599f-138">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-138">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.hasDataLabels
    summary: |-
      <span data-ttu-id="8599f-139">Логическое значение, которое указывает, имеют ли ряды метки данных.</span><span class="sxs-lookup"><span data-stu-id="8599f-139">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="8599f-140">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-140">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.invertIfNegative
    summary: |-
      <span data-ttu-id="8599f-141">Значение true, если Microsoft Excel инвертирует шаблон в элементе, когда он соответствует отрицательному числу.</span><span class="sxs-lookup"><span data-stu-id="8599f-141">True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span></span> <span data-ttu-id="8599f-142">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-142">Read/Write.</span></span>

      <span data-ttu-id="8599f-143">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.load
    summary: <span data-ttu-id="8599f-144">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8599f-145">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="8599f-145">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8599f-146">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="8599f-146">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8599f-147">`load(option?: string | string[]): Excel.ChartSeries`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8599f-147">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8599f-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8599f-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8599f-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="8599f-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="8599f-150">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="8599f-150">It is similar to the preceding signature.</span></span> <span data-ttu-id="8599f-151">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="8599f-151">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8599f-152">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="8599f-152">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8599f-153">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="8599f-153">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel_release.Excel.ChartSeries.load_1
    summary: <span data-ttu-id="8599f-154">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8599f-155">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8599f-155">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-156">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-156">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8599f-157">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8599f-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ChartSeries.load_2
    summary: <span data-ttu-id="8599f-158">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8599f-159">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8599f-159">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8599f-160">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8599f-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      <span data-ttu-id="8599f-161">Представляет цвет фона маркеров для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-161">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="8599f-162">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-162">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-163">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-163">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerForegroundColor
    summary: |-
      <span data-ttu-id="8599f-164">Представляет цвет переднего плана для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-164">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="8599f-165">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-165">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-166">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerSize
    summary: |-
      <span data-ttu-id="8599f-167">Представляет размер маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-167">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="8599f-168">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-168">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-169">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-169">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerStyle
    summary: |-
      <span data-ttu-id="8599f-170">Представляет стиль маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-170">Represents marker style of a chart series.</span></span> <span data-ttu-id="8599f-171">Дополнительные сведения см. в статье Excel. Чартмаркерстиле.</span><span class="sxs-lookup"><span data-stu-id="8599f-171">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="8599f-172">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-173">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-173">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.name
    summary: |-
      <span data-ttu-id="8599f-174">Представляет имя ряда в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8599f-174">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="8599f-175">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-175">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.overlap
    summary: |-
      <span data-ttu-id="8599f-176">Указывает на расположение строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="8599f-176">Specifies how bars and columns are positioned.</span></span> <span data-ttu-id="8599f-177">Может принимать значение от – 100 до 100.</span><span class="sxs-lookup"><span data-stu-id="8599f-177">Can be a value between –100 and 100.</span></span> <span data-ttu-id="8599f-178">Применяется только к двумерным диаграммам и гистограммам.</span><span class="sxs-lookup"><span data-stu-id="8599f-178">Applies only to 2-D bar and 2-D column charts.</span></span> <span data-ttu-id="8599f-179">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-179">Read/Write.</span></span>

      <span data-ttu-id="8599f-180">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.plotOrder
    summary: |-
      <span data-ttu-id="8599f-181">Представляет порядок построения рядов диаграммы в группе диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-181">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="8599f-182">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-182">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.points
    summary: |-
      <span data-ttu-id="8599f-183">Представляет коллекцию всех точек в ряду.</span><span class="sxs-lookup"><span data-stu-id="8599f-183">Represents a collection of all points in the series.</span></span> <span data-ttu-id="8599f-184">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8599f-184">Read-only.</span></span>

      <span data-ttu-id="8599f-185">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel_release.Excel.ChartSeries.secondPlotSize
    summary: |-
      <span data-ttu-id="8599f-186">Возвращает или задает размер вторичного раздела круга круговой диаграммы либо линии круговой диаграммы в процентах от размера основной круговой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-186">Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie.</span></span> <span data-ttu-id="8599f-187">Может находиться в диапазоне от 5 до 200.</span><span class="sxs-lookup"><span data-stu-id="8599f-187">Can be a value from 5 to 200.</span></span> <span data-ttu-id="8599f-188">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-188">Read/Write.</span></span>

      <span data-ttu-id="8599f-189">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-189">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.set
    summary: '<span data-ttu-id="8599f-190">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-190">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8599f-191">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="8599f-191">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8599f-192">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="8599f-192">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="8599f-193">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="8599f-193">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: '<span data-ttu-id="8599f-194">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8599f-194">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ChartSeries.set_1
    summary: '<span data-ttu-id="8599f-195">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-195">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel_release.Excel.ChartSeries.setBubbleSizes
    summary: |-
      <span data-ttu-id="8599f-196">Задает размеры пузырьков для ряда диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-196">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="8599f-197">Применяется только для пузырьковых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8599f-197">Only works for bubble charts.</span></span>

      <span data-ttu-id="8599f-198">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-198">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="8599f-199">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="8599f-199">The Range object corresponding to the source data.</span></span>'
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setValues
    summary: |-
      <span data-ttu-id="8599f-200">Задает значения для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="8599f-200">Set values for a chart series.</span></span> <span data-ttu-id="8599f-201">Для точечной диаграммы это соответствует значениям оси Y.</span><span class="sxs-lookup"><span data-stu-id="8599f-201">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="8599f-202">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-202">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8599f-203">Примеры</span><span class="sxs-lookup"><span data-stu-id="8599f-203">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="8599f-204">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="8599f-204">The Range object corresponding to the source data.</span></span>'
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setXAxisValues
    summary: |-
      <span data-ttu-id="8599f-205">Задает значения оси X для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="8599f-205">Set values of X axis for a chart series.</span></span> <span data-ttu-id="8599f-206">Применяется только для точечных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8599f-206">Only works for scatter charts.</span></span>

      <span data-ttu-id="8599f-207">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-207">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="8599f-208">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="8599f-208">The Range object corresponding to the source data.</span></span>'
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.showShadow
    summary: |-
      <span data-ttu-id="8599f-209">Логическое значение, указывающее, есть ли у ряда теневая копия.</span><span class="sxs-lookup"><span data-stu-id="8599f-209">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="8599f-210">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.smooth
    summary: |-
      <span data-ttu-id="8599f-211">Логическое значение, которое указывает, является ли ряд плавным. </span><span class="sxs-lookup"><span data-stu-id="8599f-211">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="8599f-212">Применяется только к графикам и точечным диаграммам.</span><span class="sxs-lookup"><span data-stu-id="8599f-212">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="8599f-213">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-213">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.splitType
    summary: |-
      <span data-ttu-id="8599f-214">Возвращает или задает способ разделения двух разделов круга круговой диаграммы либо линии круговой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8599f-214">Returns or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.</span></span> <span data-ttu-id="8599f-215">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-215">Read/Write.</span></span>

      <span data-ttu-id="8599f-216">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-216">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
      return:
        type:
          - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
  - uid: excel_release.Excel.ChartSeries.toJSON
    summary: '<span data-ttu-id="8599f-217">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8599f-217">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8599f-218">.</span><span class="sxs-lookup"><span data-stu-id="8599f-218"></span></span> <span data-ttu-id="8599f-219">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8599f-219"></span></span><!-- --><span data-ttu-id="8599f-220">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ChartSeries — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="8599f-220">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="8599f-221">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="8599f-221">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel_release.Excel.ChartSeries.trendlines
    summary: |-
      <span data-ttu-id="8599f-222">Представляет коллекцию линий тренда в ряду.</span><span class="sxs-lookup"><span data-stu-id="8599f-222">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="8599f-223">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8599f-223">Read-only.</span></span>

      <span data-ttu-id="8599f-224">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-224">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
  - uid: excel_release.Excel.ChartSeries.varyByCategories
    summary: |-
      <span data-ttu-id="8599f-225">Значение true, если Microsoft Excel назначает разные цвета или шаблоны каждому маркеру данных.</span><span class="sxs-lookup"><span data-stu-id="8599f-225">True if Microsoft Excel assigns a different color or pattern to each data marker.</span></span> <span data-ttu-id="8599f-226">Диаграмма должна содержать только один ряд.</span><span class="sxs-lookup"><span data-stu-id="8599f-226">The chart must contain only one series.</span></span> <span data-ttu-id="8599f-227">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="8599f-227">Read/Write.</span></span>

      <span data-ttu-id="8599f-228">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8599f-228">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean