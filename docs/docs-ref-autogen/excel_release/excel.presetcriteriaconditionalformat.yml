### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat
    summary: |-
      <span data-ttu-id="20d86-101">Представляет стандартный условный формат условий, например выше среднего, ниже среднего, уникальных значений, содержит пустую, непустую, ошибку и ошибка.</span><span class="sxs-lookup"><span data-stu-id="20d86-101">Represents the the preset criteria conditional format such as above average, below average, unique values, contains blank, nonblank, error, and noerror.</span></span>

      <span data-ttu-id="20d86-102">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20d86-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PresetCriteriaConditionalFormat
    fullName: Excel.PresetCriteriaConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PresetCriteriaConditionalFormat.context
      - excel_release.Excel.PresetCriteriaConditionalFormat.format
      - excel_release.Excel.PresetCriteriaConditionalFormat.load
      - excel_release.Excel.PresetCriteriaConditionalFormat.load_1
      - excel_release.Excel.PresetCriteriaConditionalFormat.load_2
      - excel_release.Excel.PresetCriteriaConditionalFormat.rule
      - excel_release.Excel.PresetCriteriaConditionalFormat.set
      - excel_release.Excel.PresetCriteriaConditionalFormat.set_1
      - excel_release.Excel.PresetCriteriaConditionalFormat.toJSON
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.context
    summary: '<span data-ttu-id="20d86-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="20d86-103">The request context associated with the object.</span></span> <span data-ttu-id="20d86-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="20d86-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.format
    summary: |-
      <span data-ttu-id="20d86-105">Возвращает объект Format, который инкапсулирует шрифты условного форматирования, заливки, границы и другие свойства.</span><span class="sxs-lookup"><span data-stu-id="20d86-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span>

      <span data-ttu-id="20d86-106">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20d86-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.load
    summary: <span data-ttu-id="20d86-107">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="20d86-108">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="20d86-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="20d86-109">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="20d86-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="20d86-110">`load(option?: string | string[]): Excel.PresetCriteriaConditionalFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="20d86-110">`load(option?: string | string[]): Excel.PresetCriteriaConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="20d86-111">`load(option?: { select?: string; expand?: string; }): Excel.PresetCriteriaConditionalFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="20d86-111">`load(option?: { select?: string; expand?: string; }): Excel.PresetCriteriaConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="20d86-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PresetCriteriaConditionalFormat`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="20d86-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PresetCriteriaConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="20d86-113">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="20d86-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="20d86-114">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="20d86-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="20d86-115">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="20d86-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="20d86-116">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="20d86-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions): Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.load_1
    summary: <span data-ttu-id="20d86-117">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="20d86-118">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="20d86-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="20d86-119">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="20d86-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.load_2
    summary: <span data-ttu-id="20d86-120">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="20d86-121">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="20d86-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="20d86-122">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="20d86-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.rule
    summary: |-
      <span data-ttu-id="20d86-123">Правило условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="20d86-123">The rule of the conditional format.</span></span>

      <span data-ttu-id="20d86-124">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20d86-124">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalPresetCriteriaRule;'
      return:
        type:
          - excel.Excel.ConditionalPresetCriteriaRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20d86-125">Примеры</span><span class="sxs-lookup"><span data-stu-id="20d86-125">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.presetCriteria);
              conditionalFormat.preset.format.font.color = "white";
              conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };

              await context.sync();
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.set
    summary: '<span data-ttu-id="20d86-126">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-126">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="20d86-127">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="20d86-127">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="20d86-128">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="20d86-128">This method has the following additional signature:</span></span>

      `set(properties: Excel.PresetCriteriaConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PresetCriteriaConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="20d86-129">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="20d86-129">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PresetCriteriaConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="20d86-130">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20d86-130">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.set_1
    summary: '<span data-ttu-id="20d86-131">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-131">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PresetCriteriaConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PresetCriteriaConditionalFormat
  - uid: excel_release.Excel.PresetCriteriaConditionalFormat.toJSON
    summary: '<span data-ttu-id="20d86-132">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="20d86-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="20d86-133">.</span><span class="sxs-lookup"><span data-stu-id="20d86-133"></span></span> <span data-ttu-id="20d86-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="20d86-134"></span></span><!-- --><span data-ttu-id="20d86-135">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Пресеткритериакондитионалформат — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.PresetCriteriaConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="20d86-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PresetCriteriaConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PresetCriteriaConditionalFormatData`</span></span><!-- --><span data-ttu-id="20d86-136">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="20d86-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PresetCriteriaConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.PresetCriteriaConditionalFormatData
        description: ''