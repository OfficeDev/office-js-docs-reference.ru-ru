### YamlMime:UniversalReference
ms.openlocfilehash: e470adee49d76d433d82bd11de38179849b6ad57
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30111994"
items:
- uid: excel_release.Excel.PivotTableCollection
  summary: >-
    <span data-ttu-id="828e2-101">Представляет коллекцию всех объектов PivotTable, входящих в состав книги или листа.</span><span class="sxs-lookup"><span data-stu-id="828e2-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>


    <span data-ttu-id="828e2-102">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.PivotTableCollection.add
  - excel_release.Excel.PivotTableCollection.context
  - excel_release.Excel.PivotTableCollection.getCount
  - excel_release.Excel.PivotTableCollection.getItem
  - excel_release.Excel.PivotTableCollection.getItemOrNullObject
  - excel_release.Excel.PivotTableCollection.items
  - excel_release.Excel.PivotTableCollection.load
  - excel_release.Excel.PivotTableCollection.load_1
  - excel_release.Excel.PivotTableCollection.load_2
  - excel_release.Excel.PivotTableCollection.refreshAll
  - excel_release.Excel.PivotTableCollection.toJSON
- uid: excel_release.Excel.PivotTableCollection.add
  summary: >-
    <span data-ttu-id="828e2-103">Добавление сводной таблицы на основе указанных исходных данных и вставка ее в верхнюю левую ячейку конечного диапазона.</span><span class="sxs-lookup"><span data-stu-id="828e2-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>


    <span data-ttu-id="828e2-104">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        <span data-ttu-id="828e2-105">Возвращает недавно вставленную сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="828e2-105">Returns the newly inserted PivotTable.</span></span>

        #### <a name="examples"></a><span data-ttu-id="828e2-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="828e2-106">Examples</span></span>


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: <span data-ttu-id="828e2-107">Имя новой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="828e2-107">The name of the new PivotTable.</span></span>
      type:
      - string
    - id: source
      description: <span data-ttu-id="828e2-108">Исходные данные для новой сводной таблицы, может быть диапазоном (или строковым адресом, включая имя листа) или таблицей.</span><span class="sxs-lookup"><span data-stu-id="828e2-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>
      type:
      - Range | string | Table
    - id: destination
      description: <span data-ttu-id="828e2-109">Ячейка в левом верхнем углу диапазона назначения отчета сводной таблицы (диапазон на листе, на котором будет помещен итоговый отчет).</span><span class="sxs-lookup"><span data-stu-id="828e2-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
      type:
      - Range | string
- uid: excel_release.Excel.PivotTableCollection.context
  summary: <span data-ttu-id="828e2-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="828e2-110">The request context associated with the object.</span></span> <span data-ttu-id="828e2-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="828e2-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.PivotTableCollection.getCount
  summary: >-
    <span data-ttu-id="828e2-112">Получает количество сводных таблиц в коллекции.</span><span class="sxs-lookup"><span data-stu-id="828e2-112">Gets the number of pivot tables in the collection.</span></span>


    <span data-ttu-id="828e2-113">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.PivotTableCollection.getItem
  summary: >-
    <span data-ttu-id="828e2-114">Получает сводную таблицу по имени.</span><span class="sxs-lookup"><span data-stu-id="828e2-114">Gets a PivotTable by name.</span></span>


    <span data-ttu-id="828e2-115">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="828e2-116">Имя получаемой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="828e2-116">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="828e2-p102">Получает сводную таблицу по имени. Если сводная таблица не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="828e2-p102">Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.</span></span>


    <span data-ttu-id="828e2-119">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="828e2-120">Имя получаемой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="828e2-120">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.PivotTableCollection.items
  summary: <span data-ttu-id="828e2-121">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="828e2-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel_release.Excel.PivotTableCollection.load
  summary: <span data-ttu-id="828e2-122">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="828e2-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="828e2-123">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="828e2-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="828e2-124">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="828e2-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="828e2-125">`load(option?: string | string[]): Excel.PivotTableCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="828e2-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="828e2-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="828e2-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="828e2-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="828e2-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="828e2-128">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="828e2-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="828e2-129">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="828e2-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="828e2-130">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="828e2-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="828e2-131">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="828e2-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.PivotTableCollection.load_1
  summary: <span data-ttu-id="828e2-132">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="828e2-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="828e2-133">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="828e2-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="828e2-134">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="828e2-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.PivotTableCollection.refreshAll
  summary: >-
    <span data-ttu-id="828e2-135">Обновляет все сводные таблицы в коллекции.</span><span class="sxs-lookup"><span data-stu-id="828e2-135">Refreshes all the pivot tables in the collection.</span></span>


    <span data-ttu-id="828e2-136">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="828e2-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.PivotTableCollection.toJSON
  summary: <span data-ttu-id="828e2-137">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="828e2-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="828e2-138">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.PivotTableCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.PivotTableCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="828e2-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
