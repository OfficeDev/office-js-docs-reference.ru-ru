### YamlMime:UniversalReference
ms.openlocfilehash: b920bfbd010d29ef94a393a3e9140fb23c16f6b9
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30111910"
items:
- uid: excel_release.Excel.Chart
  summary: >-
    Представляет объект диаграммы в книге.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Chart
  fullName: Excel.Chart
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Chart.axes
  - excel_release.Excel.Chart.categoryLabelLevel
  - excel_release.Excel.Chart.chartType
  - excel_release.Excel.Chart.context
  - excel_release.Excel.Chart.dataLabels
  - excel_release.Excel.Chart.delete
  - excel_release.Excel.Chart.displayBlanksAs
  - excel_release.Excel.Chart.format
  - excel_release.Excel.Chart.getImage
  - excel_release.Excel.Chart.getImage_1
  - excel_release.Excel.Chart.height
  - excel_release.Excel.Chart.id
  - excel_release.Excel.Chart.left
  - excel_release.Excel.Chart.legend
  - excel_release.Excel.Chart.load
  - excel_release.Excel.Chart.load_1
  - excel_release.Excel.Chart.load_2
  - excel_release.Excel.Chart.name
  - excel_release.Excel.Chart.onActivated
  - excel_release.Excel.Chart.onDeactivated
  - excel_release.Excel.Chart.plotArea
  - excel_release.Excel.Chart.plotBy
  - excel_release.Excel.Chart.plotVisibleOnly
  - excel_release.Excel.Chart.series
  - excel_release.Excel.Chart.seriesNameLevel
  - excel_release.Excel.Chart.set
  - excel_release.Excel.Chart.set_1
  - excel_release.Excel.Chart.setData
  - excel_release.Excel.Chart.setData_1
  - excel_release.Excel.Chart.setPosition
  - excel_release.Excel.Chart.showAllFieldButtons
  - excel_release.Excel.Chart.showDataLabelsOverMaximum
  - excel_release.Excel.Chart.style
  - excel_release.Excel.Chart.title
  - excel_release.Excel.Chart.toJSON
  - excel_release.Excel.Chart.top
  - excel_release.Excel.Chart.width
  - excel_release.Excel.Chart.worksheet
- uid: excel_release.Excel.Chart.axes
  summary: >-
    Представляет оси диаграммы. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: axes
  fullName: axes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type:
      - excel.Excel.ChartAxes
- uid: excel_release.Excel.Chart.categoryLabelLevel
  summary: >-
    Возвращает или задает константу перечисления ChartCategoryLabelLevel, относящуюся к уровню, из которого получают метки категорий. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: categoryLabelLevel
  fullName: categoryLabelLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'categoryLabelLevel: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.chartType
  summary: >-
    Представляет тип диаграммы. Дополнительные сведения см. в статье Excel. ChartType.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: chartType
  fullName: chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel_release.Excel.Chart.context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Chart.dataLabels
  summary: >-
    Представляет метки данных на диаграмме. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataLabels
  fullName: dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel_release.Excel.Chart.delete
  summary: >-
    Удаляет объект диаграммы.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Chart.displayBlanksAs
  summary: >-
    Возвращает или задает способ отображения пустых ячеек на диаграмме. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: displayBlanksAs
  fullName: displayBlanksAs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
    return:
      type:
      - Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted"
- uid: excel_release.Excel.Chart.format
  summary: >-
    Инкапсулирует свойства формата для области диаграммы. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type:
      - excel.Excel.ChartAreaFormat
- uid: excel_release.Excel.Chart.getImage
  summary: >-
    Отрисовывает диаграмму в виде изображения с кодировкой base64, масштабируя ее в соответствии с указанным размером. Пропорции сохраняются в процессе изменения размера.


    \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getImage(width, height, fittingMode)
  fullName: getImage(width, height, fittingMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: width
      description: Необязательно Требуемая ширина полученного изображения.
      type:
      - number
    - id: height
      description: Необязательно Желаемая высота полученного изображения.
      type:
      - number
    - id: fittingMode
      description: Необязательно Метод, используемый для масштабирования диаграммы в соответствии с указанными размерами (если заданы и высота, и ширина).
      type:
      - excel.Excel.ImageFittingMode
- uid: excel_release.Excel.Chart.getImage_1
  summary: >-
    Отрисовывает диаграмму в виде изображения с кодировкой base64, масштабируя ее в соответствии с указанным размером. Пропорции сохраняются в процессе изменения размера.


    \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getImage(width, height, fittingModeString)
  fullName: getImage(width, height, fittingModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
    parameters:
    - id: width
      description: Необязательно Требуемая ширина полученного изображения.
      type:
      - number
    - id: height
      description: Необязательно Желаемая высота полученного изображения.
      type:
      - number
    - id: fittingModeString
      description: Необязательно Метод, используемый для масштабирования диаграммы в соответствии с указанными размерами (если заданы и высота, и ширина).
      type:
      - "\"Fit\" | \"FitAndCenter\" | \"Fill\""
- uid: excel_release.Excel.Chart.height
  summary: >-
    Обозначает высоту объекта диаграммы (в пунктах).


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: height
  fullName: height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.id
  summary: >-
    Уникальный идентификатор диаграммы. Только для чтения.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Chart.left
  summary: >-
    Расстояние в пунктах от левого края диаграммы до начала листа.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: left
  fullName: left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.legend
  summary: >-
    Представляет условные обозначения для диаграммы. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: legend
  fullName: legend
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type:
      - excel.Excel.ChartLegend
- uid: excel_release.Excel.Chart.load
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств необходимо вызвать метод Context. Sync ().
  remarks: >-
    В дополнение к этой подписи этот метод имеет следующие подписи:


    `load(option?: string | string[]): Excel.Chart`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Excel.Chart`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartLoadOptions
- uid: excel_release.Excel.Chart.load_1
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type:
      - string | string[]
- uid: excel_release.Excel.Chart.load_2
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Chart.name
  summary: >-
    Обозначает имя объекта диаграммы.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Chart.onActivated
  summary: >-
    Возникает при активации диаграммы.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onActivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The pie chart is the active chart. ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.Chart.onDeactivated
  summary: >-
    Возникает при отключении диаграммы.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onDeactivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The pie chart is NOT active.\");\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel_release.Excel.Chart.plotArea
  summary: >-
    Представляет plotArea для диаграммы.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: plotArea
  fullName: plotArea
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly plotArea: Excel.ChartPlotArea;'
    return:
      type:
      - excel.Excel.ChartPlotArea
- uid: excel_release.Excel.Chart.plotBy
  summary: >-
    Возвращает или задает способ использования столбцов или строк в качестве рядов данных на диаграмме. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: plotBy
  fullName: plotBy
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
    return:
      type:
      - Excel.ChartPlotBy | "Rows" | "Columns"
- uid: excel_release.Excel.Chart.plotVisibleOnly
  summary: >-
    True, если отображаются только видимые ячейки. False, если отображаются как видимые, так и скрытые ячейки. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: plotVisibleOnly
  fullName: plotVisibleOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotVisibleOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Chart.series
  summary: >-
    Представляет один ряд данных или коллекцию рядов данных в диаграмме. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: series
  fullName: series
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
- uid: excel_release.Excel.Chart.seriesNameLevel
  summary: >-
    Возвращает или задает константу перечисления ChartSeriesNameLevel, относящуюся к уровню, из которого получают имена рядов. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: seriesNameLevel
  fullName: seriesNameLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesNameLevel: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.set
  summary: Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Excel.Chart): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.
      type:
      - Interfaces.ChartUpdateData
    - id: options
      description: Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Chart.set_1
  summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Chart): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Chart
- uid: excel_release.Excel.Chart.setData
  summary: >-
    Сбрасывает исходные данные для диаграммы.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setData(sourceData, seriesBy)
  fullName: setData(sourceData, seriesBy)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: Объект Range, соответствующий источнику данных.
      type:
      - Range
    - id: seriesBy
      description: 'Указывает способ использования столбцов или строк в качестве рядов данных на диаграмме. Может иметь одно из следующих значений: Auto (по умолчанию), Rows и Columns. Дополнительные сведения см. в статье Excel. Чартсериесби.'
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel_release.Excel.Chart.setData_1
  summary: >-
    Сбрасывает исходные данные для диаграммы.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setData(sourceData, seriesByString)
  fullName: setData(sourceData, seriesByString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: sourceData
      description: Объект Range, соответствующий источнику данных.
      type:
      - Range
    - id: seriesByString
      description: 'Указывает способ использования столбцов или строк в качестве рядов данных на диаграмме. Может иметь одно из следующих значений: Auto (по умолчанию), Rows и Columns. Дополнительные сведения см. в статье Excel. Чартсериесби.'
      type:
      - "\"Auto\" | \"Columns\" | \"Rows\""
- uid: excel_release.Excel.Chart.setPosition
  summary: >-
    Располагает диаграмму относительно ячеек на листе.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setPosition(startCell, endCell)
  fullName: setPosition(startCell, endCell)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: startCell
      description: Начальная ячейка. Место, куда будет перемещена диаграмма. Начальная ячейка — это верхняя левая или верхняя правая ячейка (это зависит от того, использует ли пользователь параметры отображения справа налево).
      type:
      - Range | string
    - id: endCell
      description: Необязательно Конечная ячейка. Если этот параметр указан, ширина и высота диаграммы будут настроены на полную открывание этой ячейки или диапазона.
      type:
      - Range | string
- uid: excel_release.Excel.Chart.showAllFieldButtons
  summary: >-
    Указывает, следует ли отображать все кнопки полей в сводной диаграмме.


    \[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showAllFieldButtons
  fullName: showAllFieldButtons
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Chart.showDataLabelsOverMaximum
  summary: >-
    Представляет, нужно ли отображать метки данных, если значение больше максимального на оси значений. Если ось значений меньше, чем размер точек данных, то можно использовать это свойство, чтобы указать, показывать ли метки данных. Это свойство применяется только к плоским диаграммам.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showDataLabelsOverMaximum
  fullName: showDataLabelsOverMaximum
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showDataLabelsOverMaximum: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Chart.style
  summary: >-
    Возвращает или задает стиль для диаграммы. Для чтения и записи.


    \[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.title
  summary: >-
    Представляет заголовок указанной диаграммы, включая его текст, видимость, положение и форматирование. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: title
  fullName: title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type:
      - excel.Excel.ChartTitle
- uid: excel_release.Excel.Chart.toJSON
  summary: ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API. (`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Chart является объектом API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.ChartData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartData
      description: ''
- uid: excel_release.Excel.Chart.top
  summary: >-
    Представляет расстояние в пунктах от верхнего края объекта до верхнего края первой строки (на листе) или до верхнего края области диаграммы (на диаграмме).


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: top
  fullName: top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.width
  summary: >-
    Представляет ширину объекта диаграммы (в пунктах).


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: width
  fullName: width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Chart.worksheet
  summary: >-
    Лист, содержащий текущую диаграмму. Только для чтения.


    \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
