### YamlMime:UniversalReference
ms.openlocfilehash: 73c398785f077311f0c3210b677dd49a245eeebe
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112533"
items:
- uid: excel_release.Excel.DataBarConditionalFormat
  summary: >-
    <span data-ttu-id="a500d-101">Представляет тип гистограммы условного форматирования Excel.</span><span class="sxs-lookup"><span data-stu-id="a500d-101">Represents an Excel Conditional Data Bar Type.</span></span>


    <span data-ttu-id="a500d-102">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataBarConditionalFormat
  fullName: Excel.DataBarConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.DataBarConditionalFormat.axisColor
  - excel_release.Excel.DataBarConditionalFormat.axisFormat
  - excel_release.Excel.DataBarConditionalFormat.barDirection
  - excel_release.Excel.DataBarConditionalFormat.context
  - excel_release.Excel.DataBarConditionalFormat.load
  - excel_release.Excel.DataBarConditionalFormat.load_1
  - excel_release.Excel.DataBarConditionalFormat.load_2
  - excel_release.Excel.DataBarConditionalFormat.lowerBoundRule
  - excel_release.Excel.DataBarConditionalFormat.negativeFormat
  - excel_release.Excel.DataBarConditionalFormat.positiveFormat
  - excel_release.Excel.DataBarConditionalFormat.set
  - excel_release.Excel.DataBarConditionalFormat.set_1
  - excel_release.Excel.DataBarConditionalFormat.showDataBarOnly
  - excel_release.Excel.DataBarConditionalFormat.toJSON
  - excel_release.Excel.DataBarConditionalFormat.upperBoundRule
- uid: excel_release.Excel.DataBarConditionalFormat.axisColor
  summary: >-
    <span data-ttu-id="a500d-103">HTML-код цвета, представляющий цвет линии оси, из формы \#RRGGBB (например, "FFA500") или в виде именованного цвета HTML (например, "Апельсин").</span><span class="sxs-lookup"><span data-stu-id="a500d-103">HTML color code representing the color of the Axis line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span> <span data-ttu-id="a500d-104">"" (пустая строка), если ось отсутствует или не задана.</span><span class="sxs-lookup"><span data-stu-id="a500d-104">"" (empty string) if no axis is present or set.</span></span>


    <span data-ttu-id="a500d-105">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axisColor
  fullName: axisColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'axisColor: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.DataBarConditionalFormat.axisFormat
  summary: >-
    <span data-ttu-id="a500d-106">Представление определения оси для панели данных Excel.</span><span class="sxs-lookup"><span data-stu-id="a500d-106">Representation of how the axis is determined for an Excel data bar.</span></span>


    <span data-ttu-id="a500d-107">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axisFormat
  fullName: axisFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'axisFormat: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint";'
    return:
      type:
      - Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
- uid: excel_release.Excel.DataBarConditionalFormat.barDirection
  summary: >-
    <span data-ttu-id="a500d-108">Представляет направление, на котором должен основываться рисунок на панели данных.</span><span class="sxs-lookup"><span data-stu-id="a500d-108">Represents the direction that the data bar graphic should be based on.</span></span>


    <span data-ttu-id="a500d-109">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: barDirection
  fullName: barDirection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'barDirection: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft";'
    return:
      type:
      - Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a500d-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"a500d-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.DataBarConditionalFormat.context
  summary: <span data-ttu-id="a500d-111">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="a500d-111">The request context associated with the object.</span></span> <span data-ttu-id="a500d-112">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="a500d-112">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.DataBarConditionalFormat.load
  summary: <span data-ttu-id="a500d-113">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a500d-114">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="a500d-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a500d-115">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="a500d-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a500d-116">`load(option?: string | string[]): Excel.DataBarConditionalFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a500d-116">`load(option?: string | string[]): Excel.DataBarConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a500d-117">`load(option?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a500d-117">`load(option?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a500d-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataBarConditionalFormat`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="a500d-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataBarConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="a500d-119">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="a500d-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="a500d-120">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="a500d-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a500d-121">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="a500d-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a500d-122">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="a500d-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.DataBarConditionalFormatLoadOptions): Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatLoadOptions
- uid: excel_release.Excel.DataBarConditionalFormat.load_1
  summary: <span data-ttu-id="a500d-123">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a500d-124">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a500d-124">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a500d-125">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a500d-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.DataBarConditionalFormat.load_2
  summary: <span data-ttu-id="a500d-126">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a500d-127">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a500d-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="a500d-128">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a500d-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.DataBarConditionalFormat.lowerBoundRule
  summary: >-
    <span data-ttu-id="a500d-129">Правило для нижней границы гистограммы (и как ее вычислить).</span><span class="sxs-lookup"><span data-stu-id="a500d-129">The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.</span></span>


    <span data-ttu-id="a500d-130">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: lowerBoundRule
  fullName: lowerBoundRule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lowerBoundRule: Excel.ConditionalDataBarRule;'
    return:
      type:
      - excel.Excel.ConditionalDataBarRule
- uid: excel_release.Excel.DataBarConditionalFormat.negativeFormat
  summary: >-
    <span data-ttu-id="a500d-p107">Представление всех значений слева от оси в гистограмме Excel. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a500d-p107">Representation of all values to the left of the axis in an Excel data bar. Read-only.</span></span>


    <span data-ttu-id="a500d-133">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-133">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: negativeFormat
  fullName: negativeFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly negativeFormat: Excel.ConditionalDataBarNegativeFormat;'
    return:
      type:
      - excel.Excel.ConditionalDataBarNegativeFormat
- uid: excel_release.Excel.DataBarConditionalFormat.positiveFormat
  summary: >-
    <span data-ttu-id="a500d-p108">Представление всех значений справа от оси в гистограмме Excel. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a500d-p108">Representation of all values to the right of the axis in an Excel data bar. Read-only.</span></span>


    <span data-ttu-id="a500d-136">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: positiveFormat
  fullName: positiveFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly positiveFormat: Excel.ConditionalDataBarPositiveFormat;'
    return:
      type:
      - excel.Excel.ConditionalDataBarPositiveFormat
- uid: excel_release.Excel.DataBarConditionalFormat.set
  summary: <span data-ttu-id="a500d-137">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-137">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a500d-138">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="a500d-138">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="a500d-139">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="a500d-139">This method has the following additional signature:</span></span>


    `set(properties: Excel.DataBarConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DataBarConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="a500d-140">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="a500d-140">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DataBarConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="a500d-141">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a500d-141">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.DataBarConditionalFormat.set_1
  summary: <span data-ttu-id="a500d-142">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-142">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.DataBarConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.DataBarConditionalFormat
- uid: excel_release.Excel.DataBarConditionalFormat.showDataBarOnly
  summary: >-
    <span data-ttu-id="a500d-143">Значение true скрывает значения ячеек, где применяется гистограмма.</span><span class="sxs-lookup"><span data-stu-id="a500d-143">If true, hides the values from the cells where the data bar is applied.</span></span>


    <span data-ttu-id="a500d-144">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-144">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showDataBarOnly
  fullName: showDataBarOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showDataBarOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.DataBarConditionalFormat.toJSON
  summary: <span data-ttu-id="a500d-145">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="a500d-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a500d-146">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. датабаркондитионалформат — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.DataBarConditionalFormatData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="a500d-146">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataBarConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataBarConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataBarConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatData
      description: ''
- uid: excel_release.Excel.DataBarConditionalFormat.upperBoundRule
  summary: >-
    <span data-ttu-id="a500d-147">Правило для верхней границы гистограммы (и как ее вычислить).</span><span class="sxs-lookup"><span data-stu-id="a500d-147">The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.</span></span>


    <span data-ttu-id="a500d-148">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a500d-148">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: upperBoundRule
  fullName: upperBoundRule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'upperBoundRule: Excel.ConditionalDataBarRule;'
    return:
      type:
      - excel.Excel.ConditionalDataBarRule
