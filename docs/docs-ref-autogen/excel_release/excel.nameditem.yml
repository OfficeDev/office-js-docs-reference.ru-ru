### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.NamedItem
    summary: |-
      <span data-ttu-id="2ecbf-101">Представляет определенное имя для диапазона ячеек или значения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="2ecbf-102">Имена могут быть примитивными именами Objects (как показано в приведенном ниже типе), объектом Range или ссылкой на диапазон.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="2ecbf-103">Этот объект может использоваться для получения объекта диапазона, связанного с именами.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="2ecbf-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.NamedItem.arrayValues
      - excel_release.Excel.NamedItem.comment
      - excel_release.Excel.NamedItem.context
      - excel_release.Excel.NamedItem.delete
      - excel_release.Excel.NamedItem.formula
      - excel_release.Excel.NamedItem.getRange
      - excel_release.Excel.NamedItem.getRangeOrNullObject
      - excel_release.Excel.NamedItem.load
      - excel_release.Excel.NamedItem.load_1
      - excel_release.Excel.NamedItem.load_2
      - excel_release.Excel.NamedItem.name
      - excel_release.Excel.NamedItem.scope
      - excel_release.Excel.NamedItem.set
      - excel_release.Excel.NamedItem.set_1
      - excel_release.Excel.NamedItem.toJSON
      - excel_release.Excel.NamedItem.type
      - excel_release.Excel.NamedItem.value
      - excel_release.Excel.NamedItem.visible
      - excel_release.Excel.NamedItem.worksheet
      - excel_release.Excel.NamedItem.worksheetOrNullObject
  - uid: excel_release.Excel.NamedItem.arrayValues
    summary: |-
      <span data-ttu-id="2ecbf-105">Возвращает объект, содержащий значения и типы именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="2ecbf-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-106">Read-only.</span></span>

      <span data-ttu-id="2ecbf-107">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: arrayValues
    fullName: arrayValues
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
      return:
        type:
          - excel.Excel.NamedItemArrayValues
  - uid: excel_release.Excel.NamedItem.comment
    summary: |-
      <span data-ttu-id="2ecbf-108">Представляет примечание, связанное с этим именем.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-108">Represents the comment associated with this name.</span></span>

      <span data-ttu-id="2ecbf-109">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.context
    summary: '<span data-ttu-id="2ecbf-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-110">The request context associated with the object.</span></span> <span data-ttu-id="2ecbf-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.NamedItem.delete
    summary: |-
      <span data-ttu-id="2ecbf-112">Удаляет заданное имя.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-112">Deletes the given name.</span></span>

      <span data-ttu-id="2ecbf-113">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2ecbf-114">Примеры</span><span class="sxs-lookup"><span data-stu-id="2ecbf-114">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.NamedItem.formula
    summary: |-
      <span data-ttu-id="2ecbf-115">Получает или задает формулу именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="2ecbf-116">Формула всегда начинается со знака "=".</span><span class="sxs-lookup"><span data-stu-id="2ecbf-116">Formula always starts with a '=' sign.</span></span>

      <span data-ttu-id="2ecbf-117">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2ecbf-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="2ecbf-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Get the named item
              const myNamedItem = sheet.names.getItemOrNullObject("MyRange");
              myNamedItem.load("name, formula");
              await context.sync();

              if (myNamedItem.isNullObject) {
                  console.log(`There is no named item. Create it with "Add named item for a range" first.`);
              } else {                    
                  // Update named item to point to the second range
                  myNamedItem.formula = "=Sample!$B$10:$D$14";
                  sheet.getRange("B10:D14").select();
                  await context.sync();

                  console.log(`Just updated the named item "${myNamedItem.name}" -- it's now located here: ${myNamedItem.formula}`);
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRange
    summary: |-
      <span data-ttu-id="2ecbf-119">Возвращает объект Range, сопоставленный с именем.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-119">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="2ecbf-120">Выдает ошибку, если именованный элемент не является диапазоном.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-120">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="2ecbf-121">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2ecbf-122">Примеры</span><span class="sxs-lookup"><span data-stu-id="2ecbf-122">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="2ecbf-123">Возвращает объект диапазона, связанный с именем.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-123">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="2ecbf-124">Возвращает пустой объект, если именованный элемент не является диапазоном.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-124">Returns a null object if the named item's type is not a range.</span></span>

      <span data-ttu-id="2ecbf-125">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.NamedItem.load
    summary: <span data-ttu-id="2ecbf-126">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2ecbf-127">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="2ecbf-127">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="2ecbf-128">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="2ecbf-128">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2ecbf-129">`load(option?: string | string[]): Excel.NamedItem`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2ecbf-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2ecbf-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="2ecbf-132">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="2ecbf-133">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2ecbf-134">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2ecbf-135">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel_release.Excel.NamedItem.load_1
    summary: <span data-ttu-id="2ecbf-136">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2ecbf-137">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2ecbf-138">Примеры</span><span class="sxs-lookup"><span data-stu-id="2ecbf-138">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="2ecbf-139">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.NamedItem.load_2
    summary: <span data-ttu-id="2ecbf-140">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2ecbf-141">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2ecbf-142">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.NamedItem.name
    summary: |-
      <span data-ttu-id="2ecbf-143">Имя объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-143">The name of the object.</span></span> <span data-ttu-id="2ecbf-144">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-144">Read-only.</span></span>

      <span data-ttu-id="2ecbf-145">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.scope
    summary: |-
      <span data-ttu-id="2ecbf-146">Указывает, относится ли имя к книге или определенному листу.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="2ecbf-147">Возможные значения: лист, книга.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="2ecbf-148">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-148">Read-only.</span></span>

      <span data-ttu-id="2ecbf-149">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - Excel.NamedItemScope | "Worksheet" | "Workbook"
  - uid: excel_release.Excel.NamedItem.set
    summary: '<span data-ttu-id="2ecbf-150">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2ecbf-151">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="2ecbf-152">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="2ecbf-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="2ecbf-153">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: '<span data-ttu-id="2ecbf-154">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.NamedItem.set_1
    summary: '<span data-ttu-id="2ecbf-155">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel_release.Excel.NamedItem.toJSON
    summary: '<span data-ttu-id="2ecbf-156">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2ecbf-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2ecbf-157">.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-157"></span></span> <span data-ttu-id="2ecbf-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2ecbf-158"></span></span><!-- --><span data-ttu-id="2ecbf-159">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. NamedItem — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="2ecbf-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="2ecbf-160">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel_release.Excel.NamedItem.type
    summary: |-
      <span data-ttu-id="2ecbf-161">Указывает тип значения, возвращаемый формулой имени.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-161">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="2ecbf-162">Дополнительные сведения см. в статье Excel. Намедитемтипе.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-162">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="2ecbf-163">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-163">Read-only.</span></span>

      <span data-ttu-id="2ecbf-164">\[[Набор API: ExcelApi 1,1 для строки, целоГо числа, Double, Boolean, Range, Error; 1,7 для массива](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-164">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel_release.Excel.NamedItem.value
    summary: |-
      <span data-ttu-id="2ecbf-165">Представляет значение, вычисленное по формуле имени.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-165">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="2ecbf-166">Если задан именованный диапазон, возвращается адрес диапазона.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-166">For a named range, will return the range address.</span></span> <span data-ttu-id="2ecbf-167">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-167">Read-only.</span></span>

      <span data-ttu-id="2ecbf-168">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-168">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel_release.Excel.NamedItem.visible
    summary: |-
      <span data-ttu-id="2ecbf-169">Определяет, является ли объект видимым.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-169">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="2ecbf-170">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.NamedItem.worksheet
    summary: |-
      <span data-ttu-id="2ecbf-171">Возвращает лист, к которому относится именованный элемент.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="2ecbf-172">ВыДает ошибку, если элемент находится в области действия книги.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-172">Throws an error if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="2ecbf-173">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
  - uid: excel_release.Excel.NamedItem.worksheetOrNullObject
    summary: |-
      <span data-ttu-id="2ecbf-174">Возвращает лист, к которому относится именованный элемент.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-174">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="2ecbf-175">Возвращает пустой объект, если элемент относится к книге.</span><span class="sxs-lookup"><span data-stu-id="2ecbf-175">Returns a null object if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="2ecbf-176">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ecbf-176">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet