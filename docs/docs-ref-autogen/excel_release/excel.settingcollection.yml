### YamlMime:UniversalReference
ms.openlocfilehash: b3d75f557edf2d2ba179c2133fb5f35f473f9816
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114318"
items:
- uid: excel_release.Excel.SettingCollection
  summary: >-
    <span data-ttu-id="7e7d8-101">Представляет коллекцию объектов параметров, которые являются частью рабочей книги.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="7e7d8-102">Область ограничена для каждого файла и надстройки (область задач или контент).</span><span class="sxs-lookup"><span data-stu-id="7e7d8-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>


    <span data-ttu-id="7e7d8-103">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.SettingCollection
  fullName: Excel.SettingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.SettingCollection.add
  - excel_release.Excel.SettingCollection.context
  - excel_release.Excel.SettingCollection.getCount
  - excel_release.Excel.SettingCollection.getItem
  - excel_release.Excel.SettingCollection.getItemOrNullObject
  - excel_release.Excel.SettingCollection.items
  - excel_release.Excel.SettingCollection.load
  - excel_release.Excel.SettingCollection.load_1
  - excel_release.Excel.SettingCollection.load_2
  - excel_release.Excel.SettingCollection.onSettingsChanged
  - excel_release.Excel.SettingCollection.toJSON
- uid: excel_release.Excel.SettingCollection.add
  summary: >-
    <span data-ttu-id="7e7d8-104">Задает или добавляет указанный параметр в книгу.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-104">Sets or adds the specified setting to the workbook.</span></span>


    <span data-ttu-id="7e7d8-105">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(key, value)
  fullName: add(key, value)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e7d8-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e7d8-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="7e7d8-107">Ключ нового параметра.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-107">The Key of the new setting.</span></span>
      type:
      - string
    - id: value
      description: <span data-ttu-id="7e7d8-108">Значение нового параметра.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-108">The Value for the new setting.</span></span>
      type:
      - string | number | boolean | Date | Array<any> | any
- uid: excel_release.Excel.SettingCollection.context
  summary: <span data-ttu-id="7e7d8-109">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-109">The request context associated with the object.</span></span> <span data-ttu-id="7e7d8-110">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.SettingCollection.getCount
  summary: >-
    <span data-ttu-id="7e7d8-111">Получает количество параметров в коллекции.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-111">Gets the number of Settings in the collection.</span></span>


    <span data-ttu-id="7e7d8-112">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.SettingCollection.getItem
  summary: >-
    <span data-ttu-id="7e7d8-113">Получает запись Setting по ключу.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-113">Gets a Setting entry via the key.</span></span>


    <span data-ttu-id="7e7d8-114">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="7e7d8-115">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-115">Key of the setting.</span></span>
      type:
      - string
- uid: excel_release.Excel.SettingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="7e7d8-p103">Получает запись Setting по ключу. Если параметр не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-p103">Gets a Setting entry via the key. If the Setting does not exist, will return a null object.</span></span>


    <span data-ttu-id="7e7d8-118">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e7d8-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e7d8-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="7e7d8-120">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-120">The key of the setting.</span></span>
      type:
      - string
- uid: excel_release.Excel.SettingCollection.items
  summary: <span data-ttu-id="7e7d8-121">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Setting[];'
    return:
      type:
      - Excel.Setting[]
- uid: excel_release.Excel.SettingCollection.load
  summary: <span data-ttu-id="7e7d8-122">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7e7d8-123">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="7e7d8-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7e7d8-124">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="7e7d8-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7e7d8-125">`load(option?: string | string[]): Excel.SettingCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7e7d8-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7e7d8-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="7e7d8-128">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="7e7d8-129">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7e7d8-130">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7e7d8-131">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.SettingCollection.load_1
  summary: <span data-ttu-id="7e7d8-132">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7e7d8-133">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7e7d8-134">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.SettingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.SettingCollection.onSettingsChanged
  summary: >-
    <span data-ttu-id="7e7d8-135">Происходит при изменении объектов Setting в документе.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-135">Occurs when the Settings in the document are changed.</span></span>


    <span data-ttu-id="7e7d8-136">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e7d8-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSettingsChanged
  fullName: onSettingsChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e7d8-137\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e7d8-137\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
- uid: excel_release.Excel.SettingCollection.toJSON
  summary: <span data-ttu-id="7e7d8-138">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7e7d8-139">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SettingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.SettingCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="7e7d8-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingCollectionData
      description: ''
