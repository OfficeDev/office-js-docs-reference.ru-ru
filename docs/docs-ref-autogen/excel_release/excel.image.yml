### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Image
    summary: |-
      <span data-ttu-id="a5604-101">Представляет изображение на листе.</span><span class="sxs-lookup"><span data-stu-id="a5604-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="a5604-102">Чтобы получить соответствующий объект Shape, используйте Image. Shape.</span><span class="sxs-lookup"><span data-stu-id="a5604-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="a5604-103">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5604-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Image.context
      - excel_release.Excel.Image.format
      - excel_release.Excel.Image.id
      - excel_release.Excel.Image.load
      - excel_release.Excel.Image.load_1
      - excel_release.Excel.Image.load_2
      - excel_release.Excel.Image.shape
      - excel_release.Excel.Image.toJSON
  - uid: excel_release.Excel.Image.context
    summary: '<span data-ttu-id="a5604-104">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="a5604-104">The request context associated with the object.</span></span> <span data-ttu-id="a5604-105">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="a5604-105">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Image.format
    summary: |-
      <span data-ttu-id="a5604-106">Возвращает формат изображения.</span><span class="sxs-lookup"><span data-stu-id="a5604-106">Returns the format of the image.</span></span> <span data-ttu-id="a5604-107">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a5604-107">Read-only.</span></span>

      <span data-ttu-id="a5604-108">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5604-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a5604-109">Примеры</span><span class="sxs-lookup"><span data-stu-id="a5604-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Image.id
    summary: |-
      <span data-ttu-id="a5604-110">Представляет идентификатор фигуры для объекта image.</span><span class="sxs-lookup"><span data-stu-id="a5604-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="a5604-111">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a5604-111">Read-only.</span></span>

      <span data-ttu-id="a5604-112">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5604-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Image.load
    summary: <span data-ttu-id="a5604-113">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a5604-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5604-114">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="a5604-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a5604-115">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="a5604-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a5604-116">`load(option?: string | string[]): Excel.Image`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a5604-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a5604-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a5604-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a5604-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="a5604-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="a5604-119">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="a5604-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="a5604-120">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="a5604-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a5604-121">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="a5604-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a5604-122">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="a5604-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ImageLoadOptions
  - uid: excel_release.Excel.Image.load_1
    summary: <span data-ttu-id="a5604-123">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a5604-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5604-124">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a5604-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="a5604-125">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a5604-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Image.load_2
    summary: <span data-ttu-id="a5604-126">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a5604-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a5604-127">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a5604-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a5604-128">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a5604-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Image.shape
    summary: |-
      <span data-ttu-id="a5604-129">Возвращает объект Shape, связанный с изображением.</span><span class="sxs-lookup"><span data-stu-id="a5604-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="a5604-130">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a5604-130">Read-only.</span></span>

      <span data-ttu-id="a5604-131">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5604-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel_release.Excel.Image.toJSON
    summary: '<span data-ttu-id="a5604-132">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a5604-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a5604-133">.</span><span class="sxs-lookup"><span data-stu-id="a5604-133"></span></span> <span data-ttu-id="a5604-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a5604-134"></span></span><!-- --><span data-ttu-id="a5604-135">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Image является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="a5604-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="a5604-136">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="a5604-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - excel.Excel.Interfaces.ImageData
        description: ''