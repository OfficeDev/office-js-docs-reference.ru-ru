### YamlMime:UniversalReference
ms.openlocfilehash: be4f7e37d364ac1f5d502d88dd86bdc4bfdbe9f9
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115025"
items:
- uid: excel_release.Excel.BindingCollection
  summary: >-
    Представляет коллекцию всех объектов привязки, включенных в книгу.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.BindingCollection
  fullName: Excel.BindingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.BindingCollection.add
  - excel_release.Excel.BindingCollection.add_1
  - excel_release.Excel.BindingCollection.addFromNamedItem
  - excel_release.Excel.BindingCollection.addFromNamedItem_1
  - excel_release.Excel.BindingCollection.addFromSelection
  - excel_release.Excel.BindingCollection.addFromSelection_1
  - excel_release.Excel.BindingCollection.context
  - excel_release.Excel.BindingCollection.count
  - excel_release.Excel.BindingCollection.getCount
  - excel_release.Excel.BindingCollection.getItem
  - excel_release.Excel.BindingCollection.getItemAt
  - excel_release.Excel.BindingCollection.getItemOrNullObject
  - excel_release.Excel.BindingCollection.items
  - excel_release.Excel.BindingCollection.load
  - excel_release.Excel.BindingCollection.load_1
  - excel_release.Excel.BindingCollection.load_2
  - excel_release.Excel.BindingCollection.toJSON
- uid: excel_release.Excel.BindingCollection.add
  summary: >-
    Добавляет привязку к определенному объекту Range.


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: add(range, bindingType, id)
  fullName: add(range, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.
      type:
      - Range | string
    - id: bindingType
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - excel.Excel.BindingType
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.add_1
  summary: >-
    Добавляет привязку к определенному объекту Range.


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: add(range, bindingTypeString, id)
  fullName: add(range, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.
      type:
      - Range | string
    - id: bindingTypeString
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromNamedItem
  summary: >-
    Добавляет новую привязку с учетом именованного элемента в книге. Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: addFromNamedItem(name, bindingType, id)
  fullName: addFromNamedItem(name, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: Имя элемента, на основе которого создается привязка.
      type:
      - string
    - id: bindingType
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - excel.Excel.BindingType
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromNamedItem_1
  summary: >-
    Добавляет новую привязку с учетом именованного элемента в книге. Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: addFromNamedItem(name, bindingTypeString, id)
  fullName: addFromNamedItem(name, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: Имя элемента, на основе которого создается привязка.
      type:
      - string
    - id: bindingTypeString
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromSelection
  summary: >-
    Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента. Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: addFromSelection(bindingType, id)
  fullName: addFromSelection(bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingType
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - excel.Excel.BindingType
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromSelection_1
  summary: >-
    Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента. Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".


    \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: addFromSelection(bindingTypeString, id)
  fullName: addFromSelection(bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingTypeString
      description: Тип привязки. Обратитесь к разделу Excel. BindingType.
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.BindingCollection.count
  summary: >-
    Возвращает число привязок в коллекции. Только для чтения.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.BindingCollection.getCount
  summary: >-
    Получает количество привязок в коллекции.


    \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.BindingCollection.getItem
  summary: >-
    Возвращает объект привязки по идентификатору.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItem(id)
  fullName: getItem(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    // Create Table1\n    Excel.run(function (ctx) { \n        ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n        return ctx.sync().then(function() {\n                console.log(\"My Diet Data Inserted!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n    //Create a new table binding for Table1\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n        else {\n            // If succeeded, then add event handler to the table binding.\n            Office.select(\"bindings#myBinding\").addHandlerAsync(\n                Office.EventType.BindingDataChanged, onBindingDataChanged);\n        }\n    });\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\n    Excel.run(function (ctx) { \n        // highlight the table in orange to indicate data has been changed.\n        ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n        return ctx.sync().then(function() {\n                console.log(\"The value in this table got changed!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n}\n```"
    parameters:
    - id: id
      description: Идентификатор получаемого объекта привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.getItemAt
  summary: >-
    Возвращает объект привязки с учетом его положения в массиве элементов.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type:
      - number
- uid: excel_release.Excel.BindingCollection.getItemOrNullObject
  summary: >-
    Получает объект привязки по идентификатору. Если объект привязки не существует, возвращает пустой объект.


    \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemOrNullObject(id)
  fullName: getItemOrNullObject(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: id
      description: Идентификатор получаемого объекта привязки.
      type:
      - string
- uid: excel_release.Excel.BindingCollection.items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type:
      - Excel.Binding[]
- uid: excel_release.Excel.BindingCollection.load
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств необходимо вызвать метод Context. Sync ().
  remarks: >-
    В дополнение к этой подписи этот метод имеет следующие подписи:


    `load(option?: string | string[]): Excel.BindingCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.BindingCollection.load_1
  summary: Ставит в очередь команду, чтобы загрузить указанные свойства объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type:
      - string | string[]
- uid: excel_release.Excel.BindingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.BindingCollection.toJSON
  summary: ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API. (`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.BindingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.BindingCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingCollectionData
      description: ''
