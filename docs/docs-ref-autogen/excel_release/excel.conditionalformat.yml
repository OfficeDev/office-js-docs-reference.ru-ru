### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ConditionalFormat
    summary: |-
      <span data-ttu-id="52976-101">Объект, инкапсулирующий диапазон, формат, правило и другие свойства условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="52976-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span> <span data-ttu-id="52976-102">Чтобы узнать больше об объектной модели условного форматирования, прочтите [Применение условного форматирования к диапазонам Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)</span><span class="sxs-lookup"><span data-stu-id="52976-102">To learn more about the conditional formatting object model, read [Apply conditional formatting to Excel ranges](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)</span></span><!-- --><span data-ttu-id="52976-103">.</span><span class="sxs-lookup"><span data-stu-id="52976-103"></span></span>

      <span data-ttu-id="52976-104">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalFormat
    fullName: Excel.ConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ConditionalFormat.cellValue
      - excel_release.Excel.ConditionalFormat.cellValueOrNullObject
      - excel_release.Excel.ConditionalFormat.colorScale
      - excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
      - excel_release.Excel.ConditionalFormat.context
      - excel_release.Excel.ConditionalFormat.custom
      - excel_release.Excel.ConditionalFormat.customOrNullObject
      - excel_release.Excel.ConditionalFormat.dataBar
      - excel_release.Excel.ConditionalFormat.dataBarOrNullObject
      - excel_release.Excel.ConditionalFormat.delete
      - excel_release.Excel.ConditionalFormat.getRange
      - excel_release.Excel.ConditionalFormat.getRangeOrNullObject
      - excel_release.Excel.ConditionalFormat.getRanges
      - excel_release.Excel.ConditionalFormat.iconSet
      - excel_release.Excel.ConditionalFormat.iconSetOrNullObject
      - excel_release.Excel.ConditionalFormat.id
      - excel_release.Excel.ConditionalFormat.load
      - excel_release.Excel.ConditionalFormat.load_1
      - excel_release.Excel.ConditionalFormat.load_2
      - excel_release.Excel.ConditionalFormat.preset
      - excel_release.Excel.ConditionalFormat.presetOrNullObject
      - excel_release.Excel.ConditionalFormat.priority
      - excel_release.Excel.ConditionalFormat.set
      - excel_release.Excel.ConditionalFormat.set_1
      - excel_release.Excel.ConditionalFormat.stopIfTrue
      - excel_release.Excel.ConditionalFormat.textComparison
      - excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
      - excel_release.Excel.ConditionalFormat.toJSON
      - excel_release.Excel.ConditionalFormat.topBottom
      - excel_release.Excel.ConditionalFormat.topBottomOrNullObject
      - excel_release.Excel.ConditionalFormat.type
  - uid: excel_release.Excel.ConditionalFormat.cellValue
    summary: |-
      <span data-ttu-id="52976-105">Возвращает свойства условного форматирования значения ячейки, если текущим условным форматированием является тип CellValue.</span><span class="sxs-lookup"><span data-stu-id="52976-105">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="52976-106">Например, чтобы отформатировать все ячейки от 5 до 10.</span><span class="sxs-lookup"><span data-stu-id="52976-106">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="52976-107">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-107">Read-only.</span></span>

      <span data-ttu-id="52976-108">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-108">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValue
    fullName: cellValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
      return:
        type:
          - excel.Excel.CellValueConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-109">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.cellValueOrNullObject
    summary: |-
      <span data-ttu-id="52976-110">Возвращает свойства условного форматирования значения ячейки, если текущим условным форматированием является тип CellValue.</span><span class="sxs-lookup"><span data-stu-id="52976-110">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="52976-111">Например, чтобы отформатировать все ячейки от 5 до 10.</span><span class="sxs-lookup"><span data-stu-id="52976-111">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="52976-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-112">Read-only.</span></span>

      <span data-ttu-id="52976-113">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValueOrNullObject
    fullName: cellValueOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
      return:
        type:
          - excel.Excel.CellValueConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.colorScale
    summary: |-
      <span data-ttu-id="52976-114">Возвращает свойства условного форматирования цветовой шкалы, если текущим условным форматированием является тип цветовой шкалы.</span><span class="sxs-lookup"><span data-stu-id="52976-114">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="52976-115">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-115">Read-only.</span></span>

      <span data-ttu-id="52976-116">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-116">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScale
    fullName: colorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-117">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
    summary: |-
      <span data-ttu-id="52976-118">Возвращает свойства условного форматирования цветовой шкалы, если текущим условным форматированием является тип цветовой шкалы.</span><span class="sxs-lookup"><span data-stu-id="52976-118">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="52976-119">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-119">Read-only.</span></span>

      <span data-ttu-id="52976-120">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-120">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScaleOrNullObject
    fullName: colorScaleOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.context
    summary: '<span data-ttu-id="52976-121">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="52976-121">The request context associated with the object.</span></span> <span data-ttu-id="52976-122">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="52976-122">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ConditionalFormat.custom
    summary: |-
      <span data-ttu-id="52976-123">Возвращает свойства настраиваемого условного форматирования, если текущим условным форматированием является настраиваемый тип.</span><span class="sxs-lookup"><span data-stu-id="52976-123">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="52976-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-124">Read-only.</span></span>

      <span data-ttu-id="52976-125">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-125">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: custom
    fullName: custom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly custom: Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-126">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.customOrNullObject
    summary: |-
      <span data-ttu-id="52976-127">Возвращает свойства настраиваемого условного форматирования, если текущим условным форматированием является настраиваемый тип.</span><span class="sxs-lookup"><span data-stu-id="52976-127">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="52976-128">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-128">Read-only.</span></span>

      <span data-ttu-id="52976-129">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-129">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customOrNullObject
    fullName: customOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.dataBar
    summary: |-
      <span data-ttu-id="52976-130">Возвращает свойства гистограммы, если текущим условным форматированием является панель данных.</span><span class="sxs-lookup"><span data-stu-id="52976-130">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="52976-131">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-131">Read-only.</span></span>

      <span data-ttu-id="52976-132">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBar
    fullName: dataBar
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-133">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-133">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.dataBarOrNullObject
    summary: |-
      <span data-ttu-id="52976-134">Возвращает свойства гистограммы, если текущим условным форматированием является панель данных.</span><span class="sxs-lookup"><span data-stu-id="52976-134">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="52976-135">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-135">Read-only.</span></span>

      <span data-ttu-id="52976-136">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBarOrNullObject
    fullName: dataBarOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.delete
    summary: |-
      <span data-ttu-id="52976-137">Удаляет это условное форматирование.</span><span class="sxs-lookup"><span data-stu-id="52976-137">Deletes this conditional format.</span></span>

      <span data-ttu-id="52976-138">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-138">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.ConditionalFormat.getRange
    summary: |-
      <span data-ttu-id="52976-139">Возврат диапазона, к которому применено условное форматирование.</span><span class="sxs-lookup"><span data-stu-id="52976-139">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="52976-140">Выдает ошибку, если условное форматирование применяется к нескольким диапазонам.</span><span class="sxs-lookup"><span data-stu-id="52976-140">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="52976-141">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-141">Read-only.</span></span>

      <span data-ttu-id="52976-142">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-143">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-143">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="52976-144">Возвращает диапазон, к которому применяется формат кондитонал, или пустой объект, если условное форматирование применяется к нескольким диапазонам.</span><span class="sxs-lookup"><span data-stu-id="52976-144">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="52976-145">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-145">Read-only.</span></span>

      <span data-ttu-id="52976-146">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-146">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.ConditionalFormat.getRanges
    summary: |-
      <span data-ttu-id="52976-147">Возвращает объект RangeAreas, состоящий из одного или нескольких прямоугольных диапазонов, к которым применено условное форматирование.</span><span class="sxs-lookup"><span data-stu-id="52976-147">Returns the RangeAreas, comprising one or more rectangular ranges, the conditonal format is applied to.</span></span> <span data-ttu-id="52976-148">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-148">Read-only.</span></span>

      <span data-ttu-id="52976-149">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-149">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel_release.Excel.ConditionalFormat.iconSet
    summary: |-
      <span data-ttu-id="52976-150">Возвращает свойства условного форматирования набора значков, если текущим условным форматированием является тип набора значков.</span><span class="sxs-lookup"><span data-stu-id="52976-150">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="52976-151">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-151">Read-only.</span></span>

      <span data-ttu-id="52976-152">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-152">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSet
    fullName: iconSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-153">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-153">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.iconSetOrNullObject
    summary: |-
      <span data-ttu-id="52976-154">Возвращает свойства условного форматирования набора значков, если текущим условным форматированием является тип набора значков.</span><span class="sxs-lookup"><span data-stu-id="52976-154">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="52976-155">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-155">Read-only.</span></span>

      <span data-ttu-id="52976-156">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-156">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSetOrNullObject
    fullName: iconSetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.id
    summary: |-
      <span data-ttu-id="52976-157">Приоритет условного форматирования в пределах текущего класса ConditionalFormatCollection.</span><span class="sxs-lookup"><span data-stu-id="52976-157">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="52976-158">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-158">Read-only.</span></span>

      <span data-ttu-id="52976-159">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-159">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ConditionalFormat.load
    summary: <span data-ttu-id="52976-160">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="52976-161">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="52976-161">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="52976-162">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="52976-162">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="52976-163">`load(option?: string | string[]): Excel.ConditionalFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="52976-163">`load(option?: string | string[]): Excel.ConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="52976-164">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="52976-164">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="52976-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="52976-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="52976-166">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="52976-166">It is similar to the preceding signature.</span></span> <span data-ttu-id="52976-167">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="52976-167">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="52976-168">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="52976-168">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="52976-169">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="52976-169">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalFormatLoadOptions
  - uid: excel_release.Excel.ConditionalFormat.load_1
    summary: <span data-ttu-id="52976-170">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="52976-171">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="52976-171">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="52976-172">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="52976-172">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ConditionalFormat.load_2
    summary: <span data-ttu-id="52976-173">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-173">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="52976-174">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="52976-174">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="52976-175">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="52976-175">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ConditionalFormat.preset
    summary: |-
      <span data-ttu-id="52976-176">Возвращает условное форматирование предварительно установленных условий.</span><span class="sxs-lookup"><span data-stu-id="52976-176">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="52976-177">Дополнительные сведения см. в статье Excel. Пресеткритериакондитионалформат.</span><span class="sxs-lookup"><span data-stu-id="52976-177">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="52976-178">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-178">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preset
    fullName: preset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-179">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-179">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.presetCriteria);
              conditionalFormat.preset.format.font.color = "white";
              conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.presetOrNullObject
    summary: |-
      <span data-ttu-id="52976-180">Возвращает условное форматирование предварительно установленных условий.</span><span class="sxs-lookup"><span data-stu-id="52976-180">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="52976-181">Дополнительные сведения см. в статье Excel. Пресеткритериакондитионалформат.</span><span class="sxs-lookup"><span data-stu-id="52976-181">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="52976-182">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-182">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: presetOrNullObject
    fullName: presetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.priority
    summary: |-
      <span data-ttu-id="52976-183">Приоритет (или индекс) в коллекции условных форматов, в которой в настоящее время существует данное условное форматирование.</span><span class="sxs-lookup"><span data-stu-id="52976-183">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="52976-184">При этом также изменяются приоритеты других условных форматов для обеспечения непрерывного порядка приоритетов.</span><span class="sxs-lookup"><span data-stu-id="52976-184">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="52976-185">Используйте отрицательный приоритет, чтобы начать с обратного.</span><span class="sxs-lookup"><span data-stu-id="52976-185">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="52976-186">Приоритеты, превышающие пределы, будут получены и установлены в максимальном (или минимальном, при отрицательном) приоритете.</span><span class="sxs-lookup"><span data-stu-id="52976-186">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="52976-187">Обратите внимание, что при изменении приоритета необходимо повторно получить новую копию объекта в новом расположении приоритета, если вы хотите внести в него другие изменения.</span><span class="sxs-lookup"><span data-stu-id="52976-187">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="52976-188">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-188">Read-only.</span></span>

      <span data-ttu-id="52976-189">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-189">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: priority
    fullName: priority
    langs:
      - typeScript
    type: property
    syntax:
      content: 'priority: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ConditionalFormat.set
    summary: '<span data-ttu-id="52976-190">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-190">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="52976-191">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="52976-191">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="52976-192">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="52976-192">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="52976-193">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="52976-193">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="52976-194">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-194">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ConditionalFormat.set_1
    summary: '<span data-ttu-id="52976-195">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-195">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.stopIfTrue
    summary: |-
      <span data-ttu-id="52976-196">Если выполняются условия этого условного форматирования, форматы с более низким приоритетом не будут применяться в этой ячейке.</span><span class="sxs-lookup"><span data-stu-id="52976-196">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="52976-197">NULL в данных, наборах значков и колорскалес, так как для них отсутствует концепция StopIfTrue</span><span class="sxs-lookup"><span data-stu-id="52976-197">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>

      <span data-ttu-id="52976-198">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-198">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: stopIfTrue
    fullName: stopIfTrue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stopIfTrue: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ConditionalFormat.textComparison
    summary: |-
      <span data-ttu-id="52976-199">Возвращает определенные свойства условного форматирования текста, если текущим условным форматированием является текстовый тип.</span><span class="sxs-lookup"><span data-stu-id="52976-199">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="52976-200">Например, чтобы форматировать ячейки, которые соответствуют слову "Text".</span><span class="sxs-lookup"><span data-stu-id="52976-200">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="52976-201">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-201">Read-only.</span></span>

      <span data-ttu-id="52976-202">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-202">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparison
    fullName: textComparison
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparison: Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-203">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-203">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
    summary: |-
      <span data-ttu-id="52976-204">Возвращает определенные свойства условного форматирования текста, если текущим условным форматированием является текстовый тип.</span><span class="sxs-lookup"><span data-stu-id="52976-204">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="52976-205">Например, чтобы форматировать ячейки, которые соответствуют слову "Text".</span><span class="sxs-lookup"><span data-stu-id="52976-205">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="52976-206">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-206">Read-only.</span></span>

      <span data-ttu-id="52976-207">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-207">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparisonOrNullObject
    fullName: textComparisonOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.toJSON
    summary: '<span data-ttu-id="52976-208">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="52976-208">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="52976-209">.</span><span class="sxs-lookup"><span data-stu-id="52976-209"></span></span> <span data-ttu-id="52976-210">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="52976-210"></span></span><!-- --><span data-ttu-id="52976-211">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ConditionalFormat — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="52976-211">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`</span></span><!-- --><span data-ttu-id="52976-212">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="52976-212">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalFormatData
        description: ''
  - uid: excel_release.Excel.ConditionalFormat.topBottom
    summary: |-
      <span data-ttu-id="52976-213">Возвращает верхнее и нижнее свойства условного форматирования, если текущее условное форматирование имеет тип TopBottom.</span><span class="sxs-lookup"><span data-stu-id="52976-213">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="52976-214">Например, чтобы отформатировать первые 10% или 10 последних элементов.</span><span class="sxs-lookup"><span data-stu-id="52976-214">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="52976-215">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-215">Read-only.</span></span>

      <span data-ttu-id="52976-216">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-216">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottom
    fullName: topBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - excel.Excel.TopBottomConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.topBottomOrNullObject
    summary: |-
      <span data-ttu-id="52976-217">Возвращает верхнее и нижнее свойства условного форматирования, если текущее условное форматирование имеет тип TopBottom.</span><span class="sxs-lookup"><span data-stu-id="52976-217">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="52976-218">Например, чтобы отформатировать первые 10% или 10 последних элементов.</span><span class="sxs-lookup"><span data-stu-id="52976-218">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="52976-219">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-219">Read-only.</span></span>

      <span data-ttu-id="52976-220">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-220">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottomOrNullObject
    fullName: topBottomOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - excel.Excel.TopBottomConditionalFormat
  - uid: excel_release.Excel.ConditionalFormat.type
    summary: |-
      <span data-ttu-id="52976-221">Тип условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="52976-221">A type of conditional format.</span></span> <span data-ttu-id="52976-222">В каждый момент времени можно задать только один из них.</span><span class="sxs-lookup"><span data-stu-id="52976-222">Only one can be set at a time.</span></span> <span data-ttu-id="52976-223">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="52976-223">Read-only.</span></span>

      <span data-ttu-id="52976-224">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="52976-224">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
      return:
        type:
          - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="52976-225">Примеры</span><span class="sxs-lookup"><span data-stu-id="52976-225">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```