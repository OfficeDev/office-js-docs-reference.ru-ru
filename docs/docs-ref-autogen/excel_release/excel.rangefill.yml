### YamlMime:UniversalReference
ms.openlocfilehash: 0ac5588de691b35ca3f7a92d3315b9e31b28e946
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105596"
items:
- uid: excel_release.Excel.RangeFill
  summary: >-
    <span data-ttu-id="4e683-101">Представляет фон объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="4e683-101">Represents the background of a range object.</span></span>


    <span data-ttu-id="4e683-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e683-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFill
  fullName: Excel.RangeFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.RangeFill.clear
  - excel_release.Excel.RangeFill.color
  - excel_release.Excel.RangeFill.context
  - excel_release.Excel.RangeFill.load
  - excel_release.Excel.RangeFill.load_1
  - excel_release.Excel.RangeFill.load_2
  - excel_release.Excel.RangeFill.set
  - excel_release.Excel.RangeFill.set_1
  - excel_release.Excel.RangeFill.toJSON
- uid: excel_release.Excel.RangeFill.clear
  summary: >-
    <span data-ttu-id="4e683-103">Сбрасывает фон диапазона.</span><span class="sxs-lookup"><span data-stu-id="4e683-103">Resets the range background.</span></span>


    <span data-ttu-id="4e683-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e683-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4e683-105\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e683-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.RangeFill.color
  summary: >-
    <span data-ttu-id="4e683-106">HTML-код цвета, представляющий цвет линии границы для формы \#RRGGBB (например, "FFA500") или в виде именованного цвета HTML (например, "Апельсин")</span><span class="sxs-lookup"><span data-stu-id="4e683-106">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange")</span></span>


    <span data-ttu-id="4e683-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e683-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.RangeFill.context
  summary: <span data-ttu-id="4e683-108">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="4e683-108">The request context associated with the object.</span></span> <span data-ttu-id="4e683-109">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="4e683-109">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.RangeFill.load
  summary: <span data-ttu-id="4e683-110">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e683-111">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="4e683-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4e683-112">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="4e683-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4e683-113">`load(option?: string | string[]): Excel.RangeFill`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4e683-113">`load(option?: string | string[]): Excel.RangeFill` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4e683-114">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4e683-114">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4e683-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="4e683-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill` - Only available on collection types.</span></span> <span data-ttu-id="4e683-116">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="4e683-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="4e683-117">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="4e683-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4e683-118">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="4e683-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4e683-119">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="4e683-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFillLoadOptions
- uid: excel_release.Excel.RangeFill.load_1
  summary: <span data-ttu-id="4e683-120">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e683-121">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="4e683-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4e683-122\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e683-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4e683-123">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4e683-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.RangeFill.load_2
  summary: <span data-ttu-id="4e683-124">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e683-125">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="4e683-125">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="4e683-126">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4e683-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.RangeFill.set
  summary: <span data-ttu-id="4e683-127">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4e683-128">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="4e683-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="4e683-129">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="4e683-129">This method has the following additional signature:</span></span>


    `set(properties: Excel.RangeFill): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="4e683-130">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="4e683-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.RangeFillUpdateData
    - id: options
      description: <span data-ttu-id="4e683-131">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="4e683-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.RangeFill.set_1
  summary: <span data-ttu-id="4e683-132">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFill): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFill
- uid: excel_release.Excel.RangeFill.toJSON
  summary: <span data-ttu-id="4e683-133">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="4e683-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4e683-134">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. RangeFill — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.RangeFillData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="4e683-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFillData
      description: ''
