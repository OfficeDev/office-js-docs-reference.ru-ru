### YamlMime:UniversalReference
ms.openlocfilehash: 5fcda619495e1ef3f50e53afe6975f410abaaec9
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458000"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="d6eb2-101">Представляет XML-узел в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d6eb2-102">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="d6eb2-102">Requirement Sets</span></span></td><td><span data-ttu-id="d6eb2-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6eb2-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="d6eb2-104">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="d6eb2-104">**Support details**</span></span>


    <span data-ttu-id="d6eb2-105">Прописная Y в следующих матрицы указывает, что этот интерфейс поддерживается в соответствующем ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="d6eb2-106">Пустая ячейка указывает, что ведущего приложения Office не поддерживает этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="d6eb2-107">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-107">For more information about Office host application and server requirements, see [ Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="d6eb2-108">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="d6eb2-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="d6eb2-109">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="d6eb2-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="d6eb2-110">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="d6eb2-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="d6eb2-111">Office для iPad</span><span class="sxs-lookup"><span data-stu-id="d6eb2-111">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id="d6eb2-112"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="d6eb2-112"><strong> Word </strong></span></span></td><td> <span data-ttu-id="d6eb2-113">Да</span><span class="sxs-lookup"><span data-stu-id="d6eb2-113">Y</span></span> </td><td> <span data-ttu-id="d6eb2-114">Да</span><span class="sxs-lookup"><span data-stu-id="d6eb2-114">Y</span></span> </td><td> <span data-ttu-id="d6eb2-115">Да</span><span class="sxs-lookup"><span data-stu-id="d6eb2-115">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: office.Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setXmlAsync
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="d6eb2-116">Получает базовое имя узла без префикса пространства имен (если оно существует).</span><span class="sxs-lookup"><span data-stu-id="d6eb2-116">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-117\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-117\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-118\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-118\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-119\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: office.Office.CustomXmlNode.baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="d6eb2-120">Получает узлы, связанные с выражение XPath.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-120">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-121\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-121\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-122\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-122\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-123\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-123\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, options, callback)
  fullName: office.Office.CustomXmlNode.getNodesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="d6eb2-124">Выражение XPath, которое указывает узлы, которые нужно получить.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-124">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="d6eb2-125">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-125">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6eb2-126">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-126">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-127">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-127">Optional.</span></span> <span data-ttu-id="d6eb2-128">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-128">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6eb2-129">`value` Свойства результата представляет собой массив объектов CustomXmlNode, представляющих узлы, указанные выражением XPath, переданной в `xPath` параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-129">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="d6eb2-130">Получает значение узла.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-130">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-131\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-131\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-132\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-132\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-133\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-133\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6eb2-134">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-134">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-135">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-135">Optional.</span></span> <span data-ttu-id="d6eb2-136">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-136">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6eb2-137">`value` Свойства результата — это строка, содержащая значение указанного узла.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-137">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="d6eb2-138">Получает текст узел XML в пользовательской XML-части.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-138">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-139\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-139\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-140\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-140\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-141\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-141\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6eb2-142">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-142">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-143">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-143">Optional.</span></span> <span data-ttu-id="d6eb2-144">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6eb2-145">`value` Свойства результата — это строка, содержащая внутренний текст из узлов, который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-145">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="d6eb2-146">Получает узел XML.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-146">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-147\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-147\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-148\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-148\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-149\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-149\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(options, callback)
  fullName: office.Office.CustomXmlNode.getXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6eb2-150">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-150">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-151">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-151">Optional.</span></span> <span data-ttu-id="d6eb2-152">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-152">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6eb2-153">`value` Свойства результата — это строка, содержащая XML указанного узла.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-153">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="d6eb2-154">Получает GUID объекта CustomXMLPart строки.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-154">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-155\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-155\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-156\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-156\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-157\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-157\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: office.Office.CustomXmlNode.namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="d6eb2-158">Получает тип CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-158">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-159\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-160\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-160\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-161\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-161\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: office.Office.CustomXmlNode.nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="d6eb2-162">Задает значение узла.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-162">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-163\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-163\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-164\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-164\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-165\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-165\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, {}, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, options, callback)
  fullName: office.Office.CustomXmlNode.setNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="d6eb2-166">Значение должно быть задано в узле</span><span class="sxs-lookup"><span data-stu-id="d6eb2-166">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6eb2-167">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-168">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-168">Optional.</span></span> <span data-ttu-id="d6eb2-169">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="d6eb2-170">Асинхронно задает текст XML-узла в настраиваемой XML-части.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-170">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6eb2-171\">Hosts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-171\">Hosts</span></span></td><td><span data-ttu-id=\"d6eb2-172\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-172\">Word</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"d6eb2-173\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-173\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6eb2-174\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-174\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6eb2-175\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6eb2-175\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: office.Office.CustomXmlNode.setTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="d6eb2-p108">Обязательный параметр. Текстовое значение XML-узла.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-p108">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6eb2-178">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-178">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-179">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-179">Optional.</span></span> <span data-ttu-id="d6eb2-180">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-180">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="d6eb2-181">Задает узел XML.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-181">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d6eb2-182">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="d6eb2-182">Requirement Sets</span></span></td><td><span data-ttu-id="d6eb2-183">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6eb2-183">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="d6eb2-184">Примеры</span><span class="sxs-lookup"><span data-stu-id="d6eb2-184">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: office.Office.CustomXmlNode.setXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="d6eb2-185">XML-код для установки на узле</span><span class="sxs-lookup"><span data-stu-id="d6eb2-185">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6eb2-186">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-186">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6eb2-187">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-187">Optional.</span></span> <span data-ttu-id="d6eb2-188">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6eb2-188">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
