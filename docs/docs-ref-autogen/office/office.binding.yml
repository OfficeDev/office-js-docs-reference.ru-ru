### YamlMime:UniversalReference
items:
  - uid: office.Office.Binding
    summary: |-
      <span data-ttu-id="25902-101">Представляет привязку к разделу документа.</span><span class="sxs-lookup"><span data-stu-id="25902-101">Represents a binding to a section of the document.</span></span>

      <span data-ttu-id="25902-102">Объект Binding предоставляет функциональные возможности, которыми обладают все привязки, независимо от типа.</span><span class="sxs-lookup"><span data-stu-id="25902-102">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>

      <span data-ttu-id="25902-103">Объект Binding никогда не вызывается напрямую.</span><span class="sxs-lookup"><span data-stu-id="25902-103">The Binding object is never called directly.</span></span> <span data-ttu-id="25902-104">Это абстрактный родительский класс объектов, представляющих каждый тип привязки: [Office. MatrixBinding](xref:office.Office.MatrixBinding)</span><span class="sxs-lookup"><span data-stu-id="25902-104">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)</span></span><!-- --><span data-ttu-id="25902-105">, [Office. TableBinding](xref:office.Office.TableBinding)</span><span class="sxs-lookup"><span data-stu-id="25902-105">, [Office.TableBinding](xref:office.Office.TableBinding)</span></span><!-- --><span data-ttu-id="25902-106">или [Office. TextBinding](xref:office.Office.TextBinding)</span><span class="sxs-lookup"><span data-stu-id="25902-106">, or [Office.TextBinding](xref:office.Office.TextBinding)</span></span><!-- --><span data-ttu-id="25902-107">.</span><span class="sxs-lookup"><span data-stu-id="25902-107"></span></span> <span data-ttu-id="25902-108">Все три из этих объектов наследуют методы getDataAsync и setDataAsync из объекта Binding, которые позволяют взаимодействовать с данными в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-108">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="25902-109">Они также наследуют свойства id и type и позволяют запрашивать значения этих свойств.</span><span class="sxs-lookup"><span data-stu-id="25902-109">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="25902-110">Кроме того, объекты MatrixBinding и TableBinding предоставляют дополнительные методы для работы с матрицами и таблицами, например, для подсчета количества строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="25902-110">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>
    remarks: |-
      <span data-ttu-id="25902-111">**Узлы**: Access, Excel, Word</span><span class="sxs-lookup"><span data-stu-id="25902-111">**Hosts**: Access, Excel, Word</span></span>

      <span data-ttu-id="25902-112">**Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-112">**Requirement sets**: [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span></span><!-- --><span data-ttu-id="25902-113">, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span><span class="sxs-lookup"><span data-stu-id="25902-113">, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span></span><!-- --><span data-ttu-id="25902-114">, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-114">, [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span></span>
    name: Office.Binding
    fullName: Office.Binding
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Binding.addHandlerAsync
      - office.Office.Binding.addHandlerAsync_1
      - office.Office.Binding.getDataAsync
      - office.Office.Binding.getDataAsync_1
      - office.Office.Binding.removeHandlerAsync
      - office.Office.Binding.removeHandlerAsync_1
      - office.Office.Binding.setDataAsync
      - office.Office.Binding.setDataAsync_1
      - office.Office.Binding.document
      - office.Office.Binding.id
      - office.Office.Binding.type
  - uid: office.Office.Binding.addHandlerAsync
    summary: '<span data-ttu-id="25902-115">Добавляет обработчик событий для объекта для указанного элемента [Office. EventType](xref:office.Office.EventType)</span><span class="sxs-lookup"><span data-stu-id="25902-115">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)</span></span><!-- --><span data-ttu-id="25902-116">.</span><span class="sxs-lookup"><span data-stu-id="25902-116"></span></span> <span data-ttu-id="25902-117">Поддерживаемые Евенттипес `Office.EventType.BindingDataChanged``Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-117">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-118">.</span><span class="sxs-lookup"><span data-stu-id="25902-118"></span></span>'
    remarks: |-
      <span data-ttu-id="25902-119">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="25902-119">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="25902-120">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="25902-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="25902-121">Тип события.</span><span class="sxs-lookup"><span data-stu-id="25902-121">The event type.</span></span> <span data-ttu-id="25902-122">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-122">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-123">.</span><span class="sxs-lookup"><span data-stu-id="25902-123"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="25902-124">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office. свойство bindingselectionchangedeventargs](xref:office.Office.BindingSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="25902-124">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="25902-125">.</span><span class="sxs-lookup"><span data-stu-id="25902-125"></span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="25902-126">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="25902-126">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="25902-127">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-127">Optional.</span></span> <span data-ttu-id="25902-128">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-128">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-129">.</span><span class="sxs-lookup"><span data-stu-id="25902-129"></span></span>'
          type:
            - '(result: Office.AsyncResult<void>) => void'
  - uid: office.Office.Binding.addHandlerAsync_1
    summary: '<span data-ttu-id="25902-130">Добавляет обработчик событий для объекта для указанного элемента [Office. EventType](xref:office.Office.EventType)</span><span class="sxs-lookup"><span data-stu-id="25902-130">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)</span></span><!-- --><span data-ttu-id="25902-131">.</span><span class="sxs-lookup"><span data-stu-id="25902-131"></span></span> <span data-ttu-id="25902-132">Поддерживаемые Евенттипес `Office.EventType.BindingDataChanged``Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-132">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-133">.</span><span class="sxs-lookup"><span data-stu-id="25902-133"></span></span>'
    remarks: |-
      <span data-ttu-id="25902-134">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="25902-134">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="25902-135">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="25902-135">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="25902-136">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-136">Examples</span></span>

      ```javascript
      // The following code sample calls the select method of the Office object to access the binding
      // with ID "MyBinding", and then calls the addHandlerAsync method to add a handler function 
      // for the bindingDataChanged event of that binding.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingDataChanged, onBindingDataChanged);
      }

      function onBindingDataChanged(eventArgs) {
          write("Data has changed in binding: " + eventArgs.binding.id);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // To add an event handler for the BindingSelectionChanged event of a binding, 
      // use the addHandlerAsync method of the Binding object.
      // The event handler receives an argument of type BindingSelectionChangedEventArgs.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);
      }

      function onBindingSelectionChanged(eventArgs) {
          write(eventArgs.binding.id + " has been selected.");
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="25902-137">Тип события.</span><span class="sxs-lookup"><span data-stu-id="25902-137">The event type.</span></span> <span data-ttu-id="25902-138">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-138">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-139">.</span><span class="sxs-lookup"><span data-stu-id="25902-139"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="25902-140">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office. свойство bindingselectionchangedeventargs](xref:office.Office.BindingSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="25902-140">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="25902-141">.</span><span class="sxs-lookup"><span data-stu-id="25902-141"></span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="25902-142">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-142">Optional.</span></span> <span data-ttu-id="25902-143">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-144">.</span><span class="sxs-lookup"><span data-stu-id="25902-144"></span></span>'
          type:
            - '(result: Office.AsyncResult<void>) => void'
  - uid: office.Office.Binding.getDataAsync
    summary: '<span data-ttu-id="25902-145">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-145">Returns the data contained within the binding.</span></span>'
    remarks: |-
      <span data-ttu-id="25902-146">**Наборы**обязательных элементов: [хтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="25902-146">**Requirement sets**: [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="25902-147">), [Матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-147">), [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span></span><!-- --><span data-ttu-id="25902-148">, [МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="25902-148">, [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="25902-149">), [УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="25902-149">), [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="25902-150">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span><span class="sxs-lookup"><span data-stu-id="25902-150">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span></span><!-- --><span data-ttu-id="25902-151">, [ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="25902-151">, [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="25902-152">), [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-152">), [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span></span><!-- --><span data-ttu-id="25902-153">, [ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="25902-153">, [TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="25902-154">)</span><span class="sxs-lookup"><span data-stu-id="25902-154"></span></span>

      <span data-ttu-id="25902-155">При вызове из MatrixBinding или TableBinding метод getDataAsync будет возвращать подмножество связанных значений, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (и они указывают непрерывный и допустимый диапазон).</span><span class="sxs-lookup"><span data-stu-id="25902-155">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
    name: 'getDataAsync(options, callback)'
    fullName: 'getDataAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="25902-156">Предоставляет параметры для получения данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-156">Provides options for how to get the data in a binding.</span></span>
          type:
            - office.Office.GetBindingDataOptions
        - id: callback
          description: '<span data-ttu-id="25902-157">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-157">Optional.</span></span> <span data-ttu-id="25902-158">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-158">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-159">.</span><span class="sxs-lookup"><span data-stu-id="25902-159"></span></span> <span data-ttu-id="25902-160">`value` Свойство Result имеет значения в указанной привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-160">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="25902-161">Если `coercionType` параметр указан (при успешном вызове), данные возвращаются в формате, описанном в разделе Перечисление CoercionType.</span><span class="sxs-lookup"><span data-stu-id="25902-161">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
  - uid: office.Office.Binding.getDataAsync_1
    summary: '<span data-ttu-id="25902-162">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-162">Returns the data contained within the binding.</span></span>'
    remarks: |-
      <span data-ttu-id="25902-163">**Наборы**обязательных элементов: [хтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="25902-163">**Requirement sets**: [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="25902-164">), [Матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-164">), [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span></span><!-- --><span data-ttu-id="25902-165">, [МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="25902-165">, [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="25902-166">), [УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="25902-166">), [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="25902-167">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span><span class="sxs-lookup"><span data-stu-id="25902-167">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span></span><!-- --><span data-ttu-id="25902-168">, [ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="25902-168">, [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="25902-169">), [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-169">), [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span></span><!-- --><span data-ttu-id="25902-170">, [ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="25902-170">, [TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="25902-171">)</span><span class="sxs-lookup"><span data-stu-id="25902-171"></span></span>

      <span data-ttu-id="25902-172">При вызове из MatrixBinding или TableBinding метод getDataAsync будет возвращать подмножество связанных значений, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (и они указывают непрерывный и допустимый диапазон).</span><span class="sxs-lookup"><span data-stu-id="25902-172">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>

      #### <a name="examples"></a><span data-ttu-id="25902-173">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-173">Examples</span></span>

      ```javascript
      function showBindingData() {
          Office.select("bindings#MyBinding").getDataAsync(function (asyncResult) {
              write(asyncResult.value)
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // There is an important difference in behavior between using the "table" and "matrix" coercionType with the
      // Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following
      // two examples. These code examples show event handler functions for the Binding.SelectionChanged event.

      // If you specify the "table" coercionType, the TableData.rows property ( result.value.rows in the following
      // code example) returns an array that contains only the body rows of the table. So, its 0th row will be the
      // first non-header row in the table.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'table', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value.rows[0][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }

      // However, if you specify the "matrix" coercionType, result.value in the following code example returns an array
      // that contains the table header in the 0th row. If the table header contains multiple rows, then these are all
      // included in the result.value matrix as separate rows before the table body rows are included.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'matrix', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value[1][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getDataAsync(callback)
    fullName: getDataAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="25902-174">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-174">Optional.</span></span> <span data-ttu-id="25902-175">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-175">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-176">.</span><span class="sxs-lookup"><span data-stu-id="25902-176"></span></span> <span data-ttu-id="25902-177">`value` Свойство Result имеет значения в указанной привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-177">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="25902-178">Если `coercionType` параметр указан (при успешном вызове), данные возвращаются в формате, описанном в разделе Перечисление CoercionType.</span><span class="sxs-lookup"><span data-stu-id="25902-178">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
  - uid: office.Office.Binding.removeHandlerAsync
    summary: <span data-ttu-id="25902-179">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="25902-179">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: '<span data-ttu-id="25902-180">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="25902-180">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="25902-181">Тип события.</span><span class="sxs-lookup"><span data-stu-id="25902-181">The event type.</span></span> <span data-ttu-id="25902-182">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-182">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-183">.</span><span class="sxs-lookup"><span data-stu-id="25902-183"></span></span>'
          type:
            - Office.EventType
        - id: options
          description: '<span data-ttu-id="25902-184">Предоставляет параметры для определения обработчика событий или обработчиков, которые удаляются.</span><span class="sxs-lookup"><span data-stu-id="25902-184">Provides options to determine which event handler or handlers are removed.</span></span>'
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="25902-185">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-185">Optional.</span></span> <span data-ttu-id="25902-186">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-186">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-187">.</span><span class="sxs-lookup"><span data-stu-id="25902-187"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.removeHandlerAsync_1
    summary: <span data-ttu-id="25902-188">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="25902-188">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="25902-189">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="25902-189">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      #### <a name="examples"></a><span data-ttu-id="25902-190">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-190">Examples</span></span>

      ```javascript
      function removeEventHandlerFromBinding() {
          Office.select("bindings#MyBinding").removeHandlerAsync(
              Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="25902-191">Тип события.</span><span class="sxs-lookup"><span data-stu-id="25902-191">The event type.</span></span> <span data-ttu-id="25902-192">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="25902-192">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="25902-193">.</span><span class="sxs-lookup"><span data-stu-id="25902-193"></span></span>'
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="25902-194">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-194">Optional.</span></span> <span data-ttu-id="25902-195">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-195">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-196">.</span><span class="sxs-lookup"><span data-stu-id="25902-196"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.setDataAsync
    summary: '<span data-ttu-id="25902-197">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="25902-197">Writes data to the bound section of the document represented by the specified binding object.</span></span>'
    remarks: |-
      <span data-ttu-id="25902-198">**Наборы**обязательных элементов: [хтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="25902-198">**Requirement sets**: [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="25902-199">), [Матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-199">), [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span></span><!-- --><span data-ttu-id="25902-200">, [МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="25902-200">, [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="25902-201">), [УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="25902-201">), [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="25902-202">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span><span class="sxs-lookup"><span data-stu-id="25902-202">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span></span><!-- --><span data-ttu-id="25902-203">, [ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="25902-203">, [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="25902-204">), [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-204">), [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span></span><!-- --><span data-ttu-id="25902-205">, [ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="25902-205">, [TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="25902-206">)</span><span class="sxs-lookup"><span data-stu-id="25902-206"></span></span>

      <span data-ttu-id="25902-207">Значение, передаваемое для данных, содержит данные, которые будут записаны в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-207">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="25902-208">Тип передаваемых значений определяет, что будет записано, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="25902-208">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="25902-209">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-209">`data` value</span></span></th> <th><span data-ttu-id="25902-210">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-210">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-211">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-211">A string</span></span></td> <td><span data-ttu-id="25902-212">Записывается обычный текст или все данные, которые можно привести к строке.</span><span class="sxs-lookup"><span data-stu-id="25902-212">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-213">Массив массивов (матрица)</span><span class="sxs-lookup"><span data-stu-id="25902-213">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="25902-214">.</span><span class="sxs-lookup"><span data-stu-id="25902-214"></span></span> <span data-ttu-id="25902-215">Чтобы записать один столбец из трех строк, передайте массив следующим образом:`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="25902-215">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="25902-216">.</span><span class="sxs-lookup"><span data-stu-id="25902-216"></span></span></td> </tr> <tr> <td><span data-ttu-id="25902-217">Объект [Office. TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="25902-217">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="25902-218">Записываются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="25902-218">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="25902-219">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class="sxs-lookup"><span data-stu-id="25902-219">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="25902-220">Для Word указанные данные записываются в привязку следующим образом:</span><span class="sxs-lookup"><span data-stu-id="25902-220">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="25902-221">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-221">`data` value</span></span></th> <th><span data-ttu-id="25902-222">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-222">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-223">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-223">A string</span></span></td> <td><span data-ttu-id="25902-224">Записывается указанный текст.</span><span class="sxs-lookup"><span data-stu-id="25902-224">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-225">Массив массивов (матрица) или объект [Office. TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="25902-225">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="25902-226">Записывается таблица Word.</span><span class="sxs-lookup"><span data-stu-id="25902-226">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-227">HTML</span><span class="sxs-lookup"><span data-stu-id="25902-227">HTML</span></span></td> <td><span data-ttu-id="25902-228">Записывается указанный HTML-код.</span><span class="sxs-lookup"><span data-stu-id="25902-228">The specified HTML is written.</span></span> <span data-ttu-id="25902-229">Если указанный HTML-код содержит недопустимые фрагменты, Word не вызовет ошибку.</span><span class="sxs-lookup"><span data-stu-id="25902-229">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="25902-230">Word запишет весь допустимый HTML-код и пропустит недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="25902-230">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-231">Office Open XML (Open XML)</span><span class="sxs-lookup"><span data-stu-id="25902-231">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="25902-232">Записывается указанный XML-код.</span><span class="sxs-lookup"><span data-stu-id="25902-232">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="25902-233">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="25902-233">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="25902-234">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-234">`data` value</span></span></th> <th><span data-ttu-id="25902-235">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-235">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-236">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-236">A string</span></span></td> <td><span data-ttu-id="25902-237">Указанный текст вставляется в качестве значения первой привязанной ячейки. Кроме того, можно указать допустимую формулу, чтобы добавить эту формулу в связанную ячейку.</span><span class="sxs-lookup"><span data-stu-id="25902-237">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="25902-238">Например, если задать для параметра data значение `"=SUM(A1:A5)"`, значения в указанном диапазоне будут суммироваться.</span><span class="sxs-lookup"><span data-stu-id="25902-238">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="25902-239">Если задать формулу в связанной ячейке, добавленную (или существующую) формулу в этой ячейке будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="25902-239">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="25902-240">Когда вызывается метод Binding.getDataAsync для привязанной ячейки для чтения этих данных, метод может вернуть только данные, отображенные в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="25902-240">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-241">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class="sxs-lookup"><span data-stu-id="25902-241">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="25902-242">Записывается набор строк и столбцов. Кроме того, можно указать массив массивов, содержащий допустимые формулы, чтобы добавить их в связанные ячейки.</span><span class="sxs-lookup"><span data-stu-id="25902-242">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="25902-243">Например, если задать для `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` параметра data значение, в привязку, которая содержит две ячейки, будут добавлены эти две формулы.</span><span class="sxs-lookup"><span data-stu-id="25902-243">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="25902-244">Как и при задании формулы в одной связанной ячейке, невозможно считать добавленные формулы (или все существующие формулы) из привязки с помощью `Binding.getDataAsync` метода — она возвращает только те данные, которые отображаются в связанных ячейках.</span><span class="sxs-lookup"><span data-stu-id="25902-244">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-245">Объект [Office. TableData](xref:office.Office.TableData) и форма таблицы соответствует связанной таблице.</span><span class="sxs-lookup"><span data-stu-id="25902-245">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="25902-246">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class="sxs-lookup"><span data-stu-id="25902-246">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="25902-247">**Note**: Если вы задаете формулы в объекте TableData, который вы передаете в качестве параметра *Data* , вы можете не получить ожидаемые результаты из-за функции "вычисляемые столбцы" в Excel, которая автоматически дублирует формулы в столбце.</span><span class="sxs-lookup"><span data-stu-id="25902-247">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="25902-248">Чтобы обойти это, когда вы хотите записать *data* с формулами в привязанную таблицу, попробуйте указать данные как массив массивов (вместо объекта TableData) и для *coercionType* указать Microsoft.Office.Matrix или "матрица".</span><span class="sxs-lookup"><span data-stu-id="25902-248">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="25902-249">Для Excel Online:</span><span class="sxs-lookup"><span data-stu-id="25902-249">For Excel Online:</span></span>

      - <span data-ttu-id="25902-250">Общее число ячеек в значении, переданном параметру Data, не может превышать 20 000 в отдельном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="25902-250">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="25902-251">Количество групп форматирования, переданных параметру cellFormat, не может превышать 100.</span><span class="sxs-lookup"><span data-stu-id="25902-251">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="25902-252">Одна группа форматирования состоит из набора вариантов форматирования, применяемого к указанному диапазону ячеек.</span><span class="sxs-lookup"><span data-stu-id="25902-252">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="25902-253">Во всех остальных случаях возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="25902-253">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="25902-254">Метод setDataAsync записывает данные в подмножество таблицы или привязки матрицы, если указаны необязательные параметры startRow и startColumn, и они указывают допустимый диапазон.</span><span class="sxs-lookup"><span data-stu-id="25902-254">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="25902-255">В функции обратного вызова, переданной в метод setDataAsync, можно использовать свойства объекта AsyncResult, чтобы возвратить такие сведения:</span><span class="sxs-lookup"><span data-stu-id="25902-255">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="25902-256">Свойство</span><span class="sxs-lookup"><span data-stu-id="25902-256">Property</span></span></th> <th><span data-ttu-id="25902-257">Назначение</span><span class="sxs-lookup"><span data-stu-id="25902-257">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-258">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="25902-258">AsyncResult.value</span></span></td> <td><span data-ttu-id="25902-259">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="25902-259">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-260">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="25902-260">AsyncResult.status</span></span></td> <td><span data-ttu-id="25902-261">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="25902-261">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-262">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="25902-262">AsyncResult.error</span></span></td> <td><span data-ttu-id="25902-263">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="25902-263">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-264">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="25902-264">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="25902-265">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="25902-265">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setDataAsync(data, options, callback)'
    fullName: 'setDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="25902-266">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="25902-266">The data to be set in the current selection.</span></span> <span data-ttu-id="25902-267">Возможные типы данных для узла:</span><span class="sxs-lookup"><span data-stu-id="25902-267">Possible data types by host:</span></span>

            <span data-ttu-id="25902-268">строка: только Excel, Excel Online, Word и Word Online</span><span class="sxs-lookup"><span data-stu-id="25902-268">string: Excel, Excel Online, Word, and Word Online only</span></span>

            <span data-ttu-id="25902-269">массив массивов: только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="25902-269">array of arrays: Excel and Word only</span></span>

            [<span data-ttu-id="25902-270">Office. TableData</span><span class="sxs-lookup"><span data-stu-id="25902-270">Office.TableData</span></span>](xref:office.Office.TableData)<!-- --><span data-ttu-id="25902-271">: Только Access, Excel и Word</span><span class="sxs-lookup"><span data-stu-id="25902-271">: Access, Excel, and Word only</span></span>

            <span data-ttu-id="25902-272">HTML: только Word и Word Online</span><span class="sxs-lookup"><span data-stu-id="25902-272">HTML: Word and Word Online only</span></span>

            <span data-ttu-id="25902-273">Office Open XML: только Word</span><span class="sxs-lookup"><span data-stu-id="25902-273">Office Open XML: Word only</span></span>
          type:
            - TableData | any
        - id: options
          description: <span data-ttu-id="25902-274">Предоставляет параметры для настройки данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-274">Provides options for how to set the data in a binding.</span></span>
          type:
            - office.Office.SetBindingDataOptions
        - id: callback
          description: '<span data-ttu-id="25902-275">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-275">Optional.</span></span> <span data-ttu-id="25902-276">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-276">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-277">.</span><span class="sxs-lookup"><span data-stu-id="25902-277"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.setDataAsync_1
    summary: '<span data-ttu-id="25902-278">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="25902-278">Writes data to the bound section of the document represented by the specified binding object.</span></span>'
    remarks: |-
      <span data-ttu-id="25902-279">**Наборы**обязательных элементов: [хтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="25902-279">**Requirement sets**: [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="25902-280">), [Матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-280">), [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)</span></span><!-- --><span data-ttu-id="25902-281">, [МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="25902-281">, [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="25902-282">), [УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="25902-282">), [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="25902-283">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span><span class="sxs-lookup"><span data-stu-id="25902-283">), [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)</span></span><!-- --><span data-ttu-id="25902-284">, [ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="25902-284">, [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="25902-285">), [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span><span class="sxs-lookup"><span data-stu-id="25902-285">), [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)</span></span><!-- --><span data-ttu-id="25902-286">, [ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="25902-286">, [TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="25902-287">)</span><span class="sxs-lookup"><span data-stu-id="25902-287"></span></span>

      <span data-ttu-id="25902-288">Значение, передаваемое для данных, содержит данные, которые будут записаны в привязке.</span><span class="sxs-lookup"><span data-stu-id="25902-288">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="25902-289">Тип передаваемых значений определяет, что будет записано, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="25902-289">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="25902-290">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-290">`data` value</span></span></th> <th><span data-ttu-id="25902-291">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-291">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-292">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-292">A string</span></span></td> <td><span data-ttu-id="25902-293">Записывается обычный текст или все данные, которые можно привести к строке.</span><span class="sxs-lookup"><span data-stu-id="25902-293">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-294">Массив массивов (матрица)</span><span class="sxs-lookup"><span data-stu-id="25902-294">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="25902-295">.</span><span class="sxs-lookup"><span data-stu-id="25902-295"></span></span> <span data-ttu-id="25902-296">Чтобы записать один столбец из трех строк, передайте массив следующим образом:`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="25902-296">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="25902-297">.</span><span class="sxs-lookup"><span data-stu-id="25902-297"></span></span></td> </tr> <tr> <td><span data-ttu-id="25902-298">Объект [Office. TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="25902-298">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="25902-299">Записываются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="25902-299">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="25902-300">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class="sxs-lookup"><span data-stu-id="25902-300">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="25902-301">Для Word указанные данные записываются в привязку следующим образом:</span><span class="sxs-lookup"><span data-stu-id="25902-301">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="25902-302">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-302">`data` value</span></span></th> <th><span data-ttu-id="25902-303">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-303">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-304">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-304">A string</span></span></td> <td><span data-ttu-id="25902-305">Записывается указанный текст.</span><span class="sxs-lookup"><span data-stu-id="25902-305">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-306">Массив массивов (матрица) или объект [Office. TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="25902-306">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="25902-307">Записывается таблица Word.</span><span class="sxs-lookup"><span data-stu-id="25902-307">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-308">HTML</span><span class="sxs-lookup"><span data-stu-id="25902-308">HTML</span></span></td> <td><span data-ttu-id="25902-309">Записывается указанный HTML-код.</span><span class="sxs-lookup"><span data-stu-id="25902-309">The specified HTML is written.</span></span> <span data-ttu-id="25902-310">Если указанный HTML-код содержит недопустимые фрагменты, Word не вызовет ошибку.</span><span class="sxs-lookup"><span data-stu-id="25902-310">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="25902-311">Word запишет весь допустимый HTML-код и пропустит недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="25902-311">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-312">Office Open XML (Open XML)</span><span class="sxs-lookup"><span data-stu-id="25902-312">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="25902-313">Записывается указанный XML-код.</span><span class="sxs-lookup"><span data-stu-id="25902-313">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="25902-314">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="25902-314">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="25902-315">`data`оно</span><span class="sxs-lookup"><span data-stu-id="25902-315">`data` value</span></span></th> <th><span data-ttu-id="25902-316">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="25902-316">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-317">Строка</span><span class="sxs-lookup"><span data-stu-id="25902-317">A string</span></span></td> <td><span data-ttu-id="25902-318">Указанный текст вставляется в качестве значения первой привязанной ячейки. Кроме того, можно указать допустимую формулу, чтобы добавить эту формулу в связанную ячейку.</span><span class="sxs-lookup"><span data-stu-id="25902-318">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="25902-319">Например, если задать для параметра data значение `"=SUM(A1:A5)"`, значения в указанном диапазоне будут суммироваться.</span><span class="sxs-lookup"><span data-stu-id="25902-319">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="25902-320">Если задать формулу в связанной ячейке, добавленную (или существующую) формулу в этой ячейке будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="25902-320">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="25902-321">Когда вызывается метод Binding.getDataAsync для привязанной ячейки для чтения этих данных, метод может вернуть только данные, отображенные в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="25902-321">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-322">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class="sxs-lookup"><span data-stu-id="25902-322">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="25902-323">Записывается набор строк и столбцов. Кроме того, можно указать массив массивов, содержащий допустимые формулы, чтобы добавить их в связанные ячейки.</span><span class="sxs-lookup"><span data-stu-id="25902-323">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="25902-324">Например, если задать для `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` параметра data значение, в привязку, которая содержит две ячейки, будут добавлены эти две формулы.</span><span class="sxs-lookup"><span data-stu-id="25902-324">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="25902-325">Как и при задании формулы в одной связанной ячейке, невозможно считать добавленные формулы (или все существующие формулы) из привязки с помощью `Binding.getDataAsync` метода — она возвращает только те данные, которые отображаются в связанных ячейках.</span><span class="sxs-lookup"><span data-stu-id="25902-325">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-326">Объект [Office. TableData](xref:office.Office.TableData) и форма таблицы соответствует связанной таблице.</span><span class="sxs-lookup"><span data-stu-id="25902-326">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="25902-327">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class="sxs-lookup"><span data-stu-id="25902-327">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="25902-328">**Note**: Если вы задаете формулы в объекте TableData, который вы передаете в качестве параметра *Data* , вы можете не получить ожидаемые результаты из-за функции "вычисляемые столбцы" в Excel, которая автоматически дублирует формулы в столбце.</span><span class="sxs-lookup"><span data-stu-id="25902-328">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="25902-329">Чтобы обойти это, когда вы хотите записать *data* с формулами в привязанную таблицу, попробуйте указать данные как массив массивов (вместо объекта TableData) и для *coercionType* указать Microsoft.Office.Matrix или "матрица".</span><span class="sxs-lookup"><span data-stu-id="25902-329">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="25902-330">Для Excel Online:</span><span class="sxs-lookup"><span data-stu-id="25902-330">For Excel Online:</span></span>

      - <span data-ttu-id="25902-331">Общее число ячеек в значении, переданном параметру Data, не может превышать 20 000 в отдельном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="25902-331">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="25902-332">Количество групп форматирования, переданных параметру cellFormat, не может превышать 100.</span><span class="sxs-lookup"><span data-stu-id="25902-332">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="25902-333">Одна группа форматирования состоит из набора вариантов форматирования, применяемого к указанному диапазону ячеек.</span><span class="sxs-lookup"><span data-stu-id="25902-333">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="25902-334">Во всех остальных случаях возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="25902-334">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="25902-335">Метод setDataAsync записывает данные в подмножество таблицы или привязки матрицы, если указаны необязательные параметры startRow и startColumn, и они указывают допустимый диапазон.</span><span class="sxs-lookup"><span data-stu-id="25902-335">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="25902-336">В функции обратного вызова, переданной в метод setDataAsync, можно использовать свойства объекта AsyncResult, чтобы возвратить такие сведения:</span><span class="sxs-lookup"><span data-stu-id="25902-336">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="25902-337">Свойство</span><span class="sxs-lookup"><span data-stu-id="25902-337">Property</span></span></th> <th><span data-ttu-id="25902-338">Назначение</span><span class="sxs-lookup"><span data-stu-id="25902-338">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="25902-339">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="25902-339">AsyncResult.value</span></span></td> <td><span data-ttu-id="25902-340">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="25902-340">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-341">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="25902-341">AsyncResult.status</span></span></td> <td><span data-ttu-id="25902-342">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="25902-342">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-343">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="25902-343">AsyncResult.error</span></span></td> <td><span data-ttu-id="25902-344">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="25902-344">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="25902-345">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="25902-345">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="25902-346">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="25902-346">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="25902-347">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-347">Examples</span></span>

      ```javascript
      function setBindingData() {
          Office.select("bindings#MyBinding").setDataAsync('Hello World!', function (asyncResult) { });
      }

      // Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.
      // For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter 
      // as "html" as shown in the following example, which uses HTML <b> tags to make "Hello" bold.
      function writeHtmlData() {
          Office.select("bindings#myBinding").setDataAsync(
              "<b>Hello</b> World!", {coercionType: "html"}, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In this example, the call to setDataAsync passes the data parameter as an array of arrays
      // (to create a single column of three rows), and specifies the data structure with the 
      // coercionType parameter as a "matrix".
      function writeBoundDataMatrix() {
          Office.select("bindings#myBinding").setDataAsync(
              [['Berlin'],['Munich'],['Duisburg']],{ coercionType: "matrix" }, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter 
      // as a TableData object (to write three columns and three rows), and specifies the data structure
      // with the coercionType parameter as a "table".

      // In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,
      // but as a single column with a new header and three rows, to update the values in the last column 
      // of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter 
      // is specified as 2 to replace the values in the third column of the table.
      function writeBoundDataTable() {
          // Create a TableData object.
          var myTable = new Office.TableData();
          myTable.headers = ['First Name', 'Last Name', 'Grade'];
          myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];

          // Set myTable in the binding.
          Office.select("bindings#myBinding").setDataAsync(myTable, { coercionType: "table" }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }

      // Replace last column with different data.
      function updateTableData() {
          var newTable = new Office.TableData();
          newTable.headers = ["Gender"];
          newTable.rows = [["M"],["M"],["F"]];
          Office.select("bindings#myBinding").setDataAsync(newTable, { coercionType: "table", startColumn:2 }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }     
          });   
      }

      // In this example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setDataAsync([['Berlin'],['Munich'],['Duisburg']],
        {cellFormat:[{cells: {row: 1}, format: {fontColor: "yellow"}}, 
            {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}]}, 
        function (asyncResult){});
      ```
    name: 'setDataAsync(data, callback)'
    fullName: 'setDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="25902-348">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="25902-348">The data to be set in the current selection.</span></span> <span data-ttu-id="25902-349">Возможные типы данных для узла:</span><span class="sxs-lookup"><span data-stu-id="25902-349">Possible data types by host:</span></span>

            <span data-ttu-id="25902-350">строка: только Excel, Excel Online, Word и Word Online</span><span class="sxs-lookup"><span data-stu-id="25902-350">string: Excel, Excel Online, Word, and Word Online only</span></span>

            <span data-ttu-id="25902-351">массив массивов: только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="25902-351">array of arrays: Excel and Word only</span></span>

            [<span data-ttu-id="25902-352">Office. TableData</span><span class="sxs-lookup"><span data-stu-id="25902-352">Office.TableData</span></span>](xref:office.Office.TableData)<!-- --><span data-ttu-id="25902-353">: Только Access, Excel и Word</span><span class="sxs-lookup"><span data-stu-id="25902-353">: Access, Excel, and Word only</span></span>

            <span data-ttu-id="25902-354">HTML: только Word и Word Online</span><span class="sxs-lookup"><span data-stu-id="25902-354">HTML: Word and Word Online only</span></span>

            <span data-ttu-id="25902-355">Office Open XML: только Word</span><span class="sxs-lookup"><span data-stu-id="25902-355">Office Open XML: Word only</span></span>
          type:
            - TableData | any
        - id: callback
          description: '<span data-ttu-id="25902-356">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="25902-356">Optional.</span></span> <span data-ttu-id="25902-357">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="25902-357">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="25902-358">.</span><span class="sxs-lookup"><span data-stu-id="25902-358"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.document
    summary: '<span data-ttu-id="25902-359">Получение объекта Document, связанного с привязкой.</span><span class="sxs-lookup"><span data-stu-id="25902-359">Get the Document object associated with the binding.</span></span>'
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Office.Document;'
      return:
        type:
          - office.Office.Document
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25902-360">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-360">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.document.url);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.Binding.id
    summary: '<span data-ttu-id="25902-361">Строка, однозначно идентифицирующая эту привязку между привязками в одном объекте [Office. Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="25902-361">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25902-362">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-362">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.id);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.Binding.type
    summary: <span data-ttu-id="25902-363">Получает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="25902-363">Gets the type of the binding.</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: Office.BindingType;'
      return:
        type:
          - Office.BindingType
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25902-364">Примеры</span><span class="sxs-lookup"><span data-stu-id="25902-364">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("MyBinding", function (asyncResult) { 
              write(asyncResult.value.type); 
          }) 

          // Function that writes to a div with id='message' on the page. 
          function write(message){ 
              document.getElementById('message').innerText += message;  
          }
          ```