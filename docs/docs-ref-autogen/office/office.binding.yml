### YamlMime:UniversalReference
ms.openlocfilehash: c188f127b540706dc459a9ea8dfdec041be486e5
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977400"
items:
- uid: office.Office.Binding
  summary: <span data-ttu-id="fe8af-101">Представляет привязку к разделу документа.</span><span class="sxs-lookup"><span data-stu-id="fe8af-101">Represents a binding to a section of the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="fe8af-102">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="fe8af-102">Requirement Sets</span></span></td><td><span data-ttu-id="fe8af-103">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="fe8af-103">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="fe8af-104">Объект Binding предоставляет функциональные возможности, которыми обладают все привязки независимо от типа.</span><span class="sxs-lookup"><span data-stu-id="fe8af-104">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>


    <span data-ttu-id="fe8af-105">Объект Binding никогда не вызывается напрямую.</span><span class="sxs-lookup"><span data-stu-id="fe8af-105">The Binding object is never called directly.</span></span> <span data-ttu-id="fe8af-106">Класс абстрактный родительских объектов, представляющих каждый тип привязки: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, или [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-106">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, or [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span></span> <span data-ttu-id="fe8af-107">Все три этих объектов наследуют getDataAsync и метода setDataAsync от объекта Binding, которые позволяют вам работать с данными в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-107">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="fe8af-108">Они также наследуют идентификатор и тип свойства для запросов к их значения.</span><span class="sxs-lookup"><span data-stu-id="fe8af-108">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="fe8af-109">Кроме того MatrixBinding и TableBinding объекты предоставляют дополнительные методы для конкретных таблица и таблица функции, например подсчет числа строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="fe8af-109">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>


    <span data-ttu-id="fe8af-110">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="fe8af-110">**Support details**</span></span>


    <span data-ttu-id="fe8af-111">Прописная Y в следующих матрицы указывает, что этот интерфейс поддерживается в соответствующем ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="fe8af-111">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="fe8af-112">Пустая ячейка указывает, что ведущего приложения Office не поддерживает этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="fe8af-112">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="fe8af-113">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-113">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="fe8af-114">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="fe8af-114">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="fe8af-115">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="fe8af-115">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="fe8af-116">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="fe8af-116">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="fe8af-117">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="fe8af-117">Office for iPad</span></span> </th><th> <span data-ttu-id="fe8af-118">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="fe8af-118">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="fe8af-119"><strong>Access</strong></span><span class="sxs-lookup"><span data-stu-id="fe8af-119"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="fe8af-120">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-120">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="fe8af-121"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="fe8af-121"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="fe8af-122">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-122">Y</span></span> </td><td> <span data-ttu-id="fe8af-123">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-123">Y</span></span> </td><td> <span data-ttu-id="fe8af-124">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-124">Y</span></span> </td><td> <span data-ttu-id="fe8af-125">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-125">Y</span></span> </td></tr> <tr><td><span data-ttu-id="fe8af-126"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="fe8af-126"><strong> Word </strong></span></span></td><td> <span data-ttu-id="fe8af-127">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-127">Y</span></span> </td><td> <span data-ttu-id="fe8af-128">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-128">Y</span></span> </td><td> <span data-ttu-id="fe8af-129">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-129">Y</span></span> </td><td> <span data-ttu-id="fe8af-130">Да</span><span class="sxs-lookup"><span data-stu-id="fe8af-130">Y</span></span> </td></tr> </table>
  name: Office.Binding
  fullName: Office.Binding
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Binding.addHandlerAsync
  - office.Office.Binding.addHandlerAsync_1
  - office.Office.Binding.getDataAsync
  - office.Office.Binding.getDataAsync_1
  - office.Office.Binding.removeHandlerAsync
  - office.Office.Binding.removeHandlerAsync_1
  - office.Office.Binding.setDataAsync
  - office.Office.Binding.setDataAsync_1
  - office.Office.Binding.document
  - office.Office.Binding.id
  - office.Office.Binding.type
- uid: office.Office.Binding.addHandlerAsync
  summary: <span data-ttu-id="fe8af-131">Добавляет обработчик событий к объекту для указанного [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-131">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="fe8af-132">Поддерживаемые EventTypes, `Office.EventType.BindingDataChanged` и `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-132">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: <span data-ttu-id="fe8af-133">Можно добавить несколько обработчиков событий для указанного объекта eventType, поскольку имя каждой функции обработчика событий является уникальным.</span><span class="sxs-lookup"><span data-stu-id="fe8af-133">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="fe8af-134">Тип события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-134">The event type.</span></span> <span data-ttu-id="fe8af-135">Для привязок, он может быть `Office.EventType.BindingDataChanged` или `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-135">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="fe8af-136">Функцию обработчика событий для добавления, единственный параметр которой имеет тип [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-136">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="fe8af-137">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="fe8af-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="fe8af-138">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-138">Optional.</span></span> <span data-ttu-id="fe8af-139">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.addHandlerAsync_1
  summary: <span data-ttu-id="fe8af-140">Добавляет обработчик событий к объекту для указанного [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-140">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="fe8af-141">Поддерживаемые EventTypes, `Office.EventType.BindingDataChanged` и `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-141">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: "<span data-ttu-id=\"fe8af-142\">Можно добавить несколько обработчиков событий для указанного объекта eventType, поскольку имя каждой функции обработчика событий является уникальным.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-142\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"fe8af-143\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-143\">Examples</span></span>\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="fe8af-144">Тип события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-144">The event type.</span></span> <span data-ttu-id="fe8af-145">Для привязок, он может быть `Office.EventType.BindingDataChanged` или `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-145">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="fe8af-146">Функцию обработчика событий для добавления, единственный параметр которой имеет тип [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-146">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="fe8af-147">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-147">Optional.</span></span> <span data-ttu-id="fe8af-148">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.getDataAsync
  summary: <span data-ttu-id="fe8af-149">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-149">Returns the data contained within the binding.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="fe8af-150">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="fe8af-150">Requirement Sets</span></span></td><td><span data-ttu-id="fe8af-151">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="fe8af-151">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="fe8af-152">При вызове из MatrixBinding или TableBinding метод getDataAsync вернет подмножество значений привязки, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (задают непрерывный и допустимый диапазон).</span><span class="sxs-lookup"><span data-stu-id="fe8af-152">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
  name: getDataAsync(options, callback)
  fullName: getDataAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="fe8af-153">Предоставляет параметры для получения данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-153">Provides options for how to get the data in a binding.</span></span>
      type:
      - office.Office.GetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="fe8af-154">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-154">Optional.</span></span> <span data-ttu-id="fe8af-155">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-155">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="fe8af-156">`value` Свойства результата — это значения в указанную привязку.</span><span class="sxs-lookup"><span data-stu-id="fe8af-156">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="fe8af-157">Если `coercionType` указан параметр (и вызов выполнен успешно), данные возвращаются в формате, описанном в перечислении coerciontype.</span><span class="sxs-lookup"><span data-stu-id="fe8af-157">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.getDataAsync_1
  summary: <span data-ttu-id="fe8af-158">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-158">Returns the data contained within the binding.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"fe8af-159\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"fe8af-160\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-160\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"fe8af-161\">При вызове из MatrixBinding или TableBinding метод getDataAsync вернет подмножество значений привязки, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (задают непрерывный и допустимый диапазон).</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-161\">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"fe8af-162\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-162\">Examples</span></span>\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  name: getDataAsync(callback)
  fullName: getDataAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="fe8af-163">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-163">Optional.</span></span> <span data-ttu-id="fe8af-164">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="fe8af-165">`value` Свойства результата — это значения в указанную привязку.</span><span class="sxs-lookup"><span data-stu-id="fe8af-165">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="fe8af-166">Если `coercionType` указан параметр (и вызов выполнен успешно), данные возвращаются в формате, описанном в перечислении coerciontype.</span><span class="sxs-lookup"><span data-stu-id="fe8af-166">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.removeHandlerAsync
  summary: <span data-ttu-id="fe8af-167">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-167">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: <table><tr><td><span data-ttu-id="fe8af-168">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="fe8af-168">Requirement Sets</span></span></td><td><span data-ttu-id="fe8af-169">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="fe8af-169">BindingEvents</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="fe8af-170">Тип события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-170">The event type.</span></span> <span data-ttu-id="fe8af-171">Для привязок, он может быть `Office.EventType.BindingDataChanged` или `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-171">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="fe8af-172">Содержит параметры, чтобы определить, какой обработчик событий или обработчики удаляются.</span><span class="sxs-lookup"><span data-stu-id="fe8af-172">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="fe8af-173">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-173">Optional.</span></span> <span data-ttu-id="fe8af-174">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.removeHandlerAsync_1
  summary: <span data-ttu-id="fe8af-175">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-175">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="fe8af-176">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="fe8af-176">Requirement Sets</span></span></td><td><span data-ttu-id="fe8af-177">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="fe8af-177">BindingEvents</span></span></td></tr></table>

    #### <span data-ttu-id="fe8af-178">Примеры</span><span class="sxs-lookup"><span data-stu-id="fe8af-178">Examples</span></span>


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="fe8af-179">Тип события.</span><span class="sxs-lookup"><span data-stu-id="fe8af-179">The event type.</span></span> <span data-ttu-id="fe8af-180">Для привязок, он может быть `Office.EventType.BindingDataChanged` или `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-180">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="fe8af-181">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-181">Optional.</span></span> <span data-ttu-id="fe8af-182">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-182">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync
  summary: <span data-ttu-id="fe8af-183">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-183">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="fe8af-184">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="fe8af-184">Requirement Sets</span></span></td><td><span data-ttu-id="fe8af-185">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="fe8af-185">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="fe8af-186">Значение, переданное для данных содержит данные для записи в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-186">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="fe8af-187">Вид значение, переданное определяет, что будет записан, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="fe8af-187">The kind of value passed determines what will be written as described in the following table.</span></span>


    <table> <tr> <th><span data-ttu-id="fe8af-188">`data`значение</span><span class="sxs-lookup"><span data-stu-id="fe8af-188">`data` value</span></span></th> <th><span data-ttu-id="fe8af-189">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="fe8af-189">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="fe8af-190">Строка</span><span class="sxs-lookup"><span data-stu-id="fe8af-190">A string</span></span></td> <td><span data-ttu-id="fe8af-191">Будет записан обычный текст или другие данные, которые могут быть приведены к типу string.</span><span class="sxs-lookup"><span data-stu-id="fe8af-191">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-192">Массив массивов (матрица)</span><span class="sxs-lookup"><span data-stu-id="fe8af-192">An array of arrays ("matrix")</span></span></td> <td><span data-ttu-id="fe8af-193">Записываются табличные данные без заголовков.</span><span class="sxs-lookup"><span data-stu-id="fe8af-193">Tabular data without headers will be written.</span></span> <span data-ttu-id="fe8af-194">Например, для записи данных в три строки по два столбца, вы можете передать такой массив: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-194">For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- -->.</span></span> <span data-ttu-id="fe8af-195">Для записи одного столбца из трех строк передайте такой массив: `[["R1C1"], ["R2C1"], ["R3C1"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-195">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-196">Объект [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="fe8af-196">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="fe8af-197">Записываются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="fe8af-197">A table with headers will be written.</span></span></td> </tr> </table>


    <span data-ttu-id="fe8af-198">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class="sxs-lookup"><span data-stu-id="fe8af-198">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="fe8af-199">В Word указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="fe8af-199">For Word, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="fe8af-200">`data`значение</span><span class="sxs-lookup"><span data-stu-id="fe8af-200">`data` value</span></span></th> <th><span data-ttu-id="fe8af-201">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="fe8af-201">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="fe8af-202">Строка</span><span class="sxs-lookup"><span data-stu-id="fe8af-202">A string</span></span></td> <td><span data-ttu-id="fe8af-203">Записывается указанный текст.</span><span class="sxs-lookup"><span data-stu-id="fe8af-203">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-204">Массив массивов («матрицу») или объект [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="fe8af-204">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="fe8af-205">Записывается таблица Word.</span><span class="sxs-lookup"><span data-stu-id="fe8af-205">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-206">HTML</span><span class="sxs-lookup"><span data-stu-id="fe8af-206">HTML</span></span></td> <td><span data-ttu-id="fe8af-207">Записывается указанный HTML-код.</span><span class="sxs-lookup"><span data-stu-id="fe8af-207">The specified HTML is written.</span></span> <span data-ttu-id="fe8af-208">Если какие-либо записи недопустимый HTML-код, Word не вызовет ошибку.</span><span class="sxs-lookup"><span data-stu-id="fe8af-208">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="fe8af-209">Word запишет объем HTML-код, как его можно и будет пропущен любой недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="fe8af-209">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-210">Office Open XML (Open XML)</span><span class="sxs-lookup"><span data-stu-id="fe8af-210">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="fe8af-211">Записывается указанный XML-код.</span><span class="sxs-lookup"><span data-stu-id="fe8af-211">The specified the XML is written.</span></span></td> </tr> </table>


    <span data-ttu-id="fe8af-212">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="fe8af-212">For Excel, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="fe8af-213">`data`значение</span><span class="sxs-lookup"><span data-stu-id="fe8af-213">`data` value</span></span></th> <th><span data-ttu-id="fe8af-214">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="fe8af-214">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="fe8af-215">Строка</span><span class="sxs-lookup"><span data-stu-id="fe8af-215">A string</span></span></td> <td><span data-ttu-id="fe8af-216">Указанный текст вставляется в качестве значения первой ячейки привязки. Можно также указать допустимое формулу для добавления этой формуле ячейки привязки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-216">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="fe8af-217">Например, если задать для параметра data значение `"=SUM(A1:A5)"`, значения в указанном диапазоне будут суммироваться.</span><span class="sxs-lookup"><span data-stu-id="fe8af-217">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="fe8af-218">Тем не менее, если задать формулу в связанной ячейке, добавленную (или существующую) формулу будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="fe8af-218">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="fe8af-219">Если вызвать метод Binding.getDataAsync для ячейки привязки для чтения данных, этот метод может возвращать только данные, показанные в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="fe8af-219">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-220">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class="sxs-lookup"><span data-stu-id="fe8af-220">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="fe8af-221">Записывается набор строк и столбцов. Также можно задать массив массивов, которые содержат допустимый формул, добавьте их в связанной ячейки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-221">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="fe8af-222">Например, установка для данных `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` добавит эти две формулы привязку, которая содержит две ячейки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-222">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="fe8af-223">Так же, как при установке формулы на одну ячейку привязки, не может читать добавлены формулы (или все существующие формулы) из привязки с `Binding.getDataAsync` метод - возвращает только данные, показанные в привязанной ячеек.</span><span class="sxs-lookup"><span data-stu-id="fe8af-223">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-224">Объект [Office.TableData](xref:office.Office.TableData) и форма таблицы соответствует связанной таблице.</span><span class="sxs-lookup"><span data-stu-id="fe8af-224">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="fe8af-225">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class="sxs-lookup"><span data-stu-id="fe8af-225">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="fe8af-226">**Примечание**: при указании формул в объект TableData, передайте для параметра *data* не может получить результаты, предполагается, что из-за компонента «вычисляемые столбцы» из Excel, который автоматически дублирует формул в пределах столбца.</span><span class="sxs-lookup"><span data-stu-id="fe8af-226">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="fe8af-227">Чтобы обойти этот флажок записать *данные* , которые содержат формулы в связанной таблице, попробуйте определения данных в виде массива массивов (вместо объекта TableData) и укажите *coercionType* как Microsoft.Office.Matrix или «матрица».</span><span class="sxs-lookup"><span data-stu-id="fe8af-227">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>


    <span data-ttu-id="fe8af-228">Для Интернет-версия Excel:</span><span class="sxs-lookup"><span data-stu-id="fe8af-228">For Excel Online:</span></span>


    - <span data-ttu-id="fe8af-229">Общее число ячеек в значение, переданное для параметра data не может превышать 20 000 один вызов в этот метод.</span><span class="sxs-lookup"><span data-stu-id="fe8af-229">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>


    - <span data-ttu-id="fe8af-230">Количество групп форматирования, передаваемых в параметр cellFormat, не может превышать 100.</span><span class="sxs-lookup"><span data-stu-id="fe8af-230">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="fe8af-231">Одна группа форматирования состоит из набора параметров форматирования, применяемого к указанному диапазону ячеек.</span><span class="sxs-lookup"><span data-stu-id="fe8af-231">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>


    <span data-ttu-id="fe8af-232">Во всех остальных случаях возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="fe8af-232">In all other cases, an error is returned.</span></span>


    <span data-ttu-id="fe8af-233">Метод setDataAsync запишет данные в подмножество привязки таблицы или матрицы Если указаны необязательные параметры startRow и startColumn, задают допустимый диапазон.</span><span class="sxs-lookup"><span data-stu-id="fe8af-233">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>


    <span data-ttu-id="fe8af-234">В функции обратного вызова, переданной в метод setDataAsync можно использовать свойства объекта AsyncResult для возврата следующей информации.</span><span class="sxs-lookup"><span data-stu-id="fe8af-234">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>


    <table> <tr> <th><span data-ttu-id="fe8af-235">Свойство</span><span class="sxs-lookup"><span data-stu-id="fe8af-235">Property</span></span></th> <th><span data-ttu-id="fe8af-236">Применение</span><span class="sxs-lookup"><span data-stu-id="fe8af-236">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="fe8af-237">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="fe8af-237">AsyncResult.value</span></span></td> <td><span data-ttu-id="fe8af-238">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="fe8af-238">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-239">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="fe8af-239">AsyncResult.status</span></span></td> <td><span data-ttu-id="fe8af-240">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="fe8af-240">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-241">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="fe8af-241">AsyncResult.error</span></span></td> <td><span data-ttu-id="fe8af-242">Получает доступ к объекту Error, который содержит сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="fe8af-242">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="fe8af-243">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="fe8af-243">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="fe8af-244">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="fe8af-244">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
  name: setDataAsync(data, options, callback)
  fullName: setDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="fe8af-245">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="fe8af-245">The data to be set in the current selection.</span></span> <span data-ttu-id="fe8af-246">Типы данных с узла.</span><span class="sxs-lookup"><span data-stu-id="fe8af-246">Possible data types by host:</span></span>


        <span data-ttu-id="fe8af-247">Строка: Excel Excel Online, Word и Word Online только</span><span class="sxs-lookup"><span data-stu-id="fe8af-247">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="fe8af-248">Массив массивов: только Word и Excel.</span><span class="sxs-lookup"><span data-stu-id="fe8af-248">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="fe8af-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel и только для Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="fe8af-250">HTML-код: Word и Интернет-версия только Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-250">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="fe8af-251">Office Open XML: Только Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-251">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: options
      description: <span data-ttu-id="fe8af-252">Предоставляет параметры для определения данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="fe8af-252">Provides options for how to set the data in a binding.</span></span>
      type:
      - office.Office.SetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="fe8af-253">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-253">Optional.</span></span> <span data-ttu-id="fe8af-254">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-254">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync_1
  summary: <span data-ttu-id="fe8af-255">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-255">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"fe8af-256\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-256\">Requirement Sets</span></span></td><td><span data-ttu-id=\"fe8af-257\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-257\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"fe8af-258\">Значение, переданное для данных содержит данные для записи в привязке.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-258\">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id=\"fe8af-259\">Вид значение, переданное определяет, что будет записан, как описано в следующей таблице.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-259\">The kind of value passed determines what will be written as described in the following table.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"fe8af-260\">`data`значение</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-260\">`data` value</span></span></th> <th><span data-ttu-id=\"fe8af-261\">Записываемые данные</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-261\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"fe8af-262\">Строка</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-262\">A string</span></span></td> <td><span data-ttu-id=\"fe8af-263\">Будет записан обычный текст или другие данные, которые могут быть приведены к типу string.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-263\">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-264\">Массив массивов (матрица)</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-264\">An array of arrays (\"matrix\")</span></span></td> <td><span data-ttu-id=\"fe8af-265\">Записываются табличные данные без заголовков.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-265\">Tabular data without headers will be written.</span></span> <span data-ttu-id=\"fe8af-266\">Например, для записи данных в три строки по два столбца, вы можете передать такой массив: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-266\">For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->.</span></span> <span data-ttu-id=\"fe8af-267\">Для записи одного столбца из трех строк передайте такой массив: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-267\">To write a single column of three rows, pass an array like this: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-268\">Объект [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-268\">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"fe8af-269\">Записываются табличные данные с заголовками.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-269\">A table with headers will be written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"fe8af-270\">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-270\">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id=\"fe8af-271\">В Word указанное значение параметра data записывается в привязку таким образом:</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-271\">For Word, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"fe8af-272\">`data`значение</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-272\">`data` value</span></span></th> <th><span data-ttu-id=\"fe8af-273\">Записываемые данные</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-273\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"fe8af-274\">Строка</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-274\">A string</span></span></td> <td><span data-ttu-id=\"fe8af-275\">Записывается указанный текст.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-275\">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-276\">Массив массивов («матрицу») или объект [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-276\">An array of arrays (\"matrix\") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"fe8af-277\">Записывается таблица Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-277\">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-278\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-278\">HTML</span></span></td> <td><span data-ttu-id=\"fe8af-279\">Записывается указанный HTML-код.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-279\">The specified HTML is written.</span></span> <span data-ttu-id=\"fe8af-280\">Если какие-либо записи недопустимый HTML-код, Word не вызовет ошибку.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-280\">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id=\"fe8af-281\">Word запишет объем HTML-код, как его можно и будет пропущен любой недопустимые данные.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-281\">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-282\">Office Open XML (Open XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-282\">Office Open XML (\"Open XML\")</span></span></td> <td><span data-ttu-id=\"fe8af-283\">Записывается указанный XML-код.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-283\">The specified the XML is written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"fe8af-284\">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-284\">For Excel, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"fe8af-285\">`data`значение</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-285\">`data` value</span></span></th> <th><span data-ttu-id=\"fe8af-286\">Записываемые данные</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-286\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"fe8af-287\">Строка</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-287\">A string</span></span></td> <td><span data-ttu-id=\"fe8af-288\">Указанный текст вставляется в качестве значения первой ячейки привязки. Можно также указать допустимое формулу для добавления этой формуле ячейки привязки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-288\">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id=\"fe8af-289\">Например, если задать для параметра data значение `\"=SUM(A1:A5)\"`, значения в указанном диапазоне будут суммироваться.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-289\">For example, setting data to `\"=SUM(A1:A5)\"` will total the values in the specified range.</span></span> <span data-ttu-id=\"fe8af-290\">Тем не менее, если задать формулу в связанной ячейке, добавленную (или существующую) формулу будет невозможно считать.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-290\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"fe8af-291\">Если вызвать метод Binding.getDataAsync для ячейки привязки для чтения данных, этот метод может возвращать только данные, показанные в ячейке (результат формулы).</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-291\">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-292\">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-292\">An array of arrays (\"matrix\"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id=\"fe8af-293\">Записывается набор строк и столбцов. Также можно задать массив массивов, которые содержат допустимый формул, добавьте их в связанной ячейки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-293\">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id=\"fe8af-294\">Например, установка для данных `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` добавит эти две формулы привязку, которая содержит две ячейки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-294\">For example, setting data to `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id=\"fe8af-295\">Так же, как при установке формулы на одну ячейку привязки, не может читать добавлены формулы (или все существующие формулы) из привязки с `Binding.getDataAsync` метод - возвращает только данные, показанные в привязанной ячеек.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-295\">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-296\">Объект [Office.TableData](xref:office.Office.TableData) и форма таблицы соответствует связанной таблице.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-296\">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id=\"fe8af-297\">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-297\">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id=\"fe8af-298\">**Примечание**: при указании формул в объект TableData, передайте для параметра *data* не может получить результаты, предполагается, что из-за компонента «вычисляемые столбцы» из Excel, который автоматически дублирует формул в пределах столбца.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-298\">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"fe8af-299\">Чтобы обойти этот флажок записать *данные* , которые содержат формулы в связанной таблице, попробуйте определения данных в виде массива массивов (вместо объекта TableData) и укажите *coercionType* как Microsoft.Office.Matrix или «матрица».</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-299\">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or \"matrix\".</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"fe8af-300\">Для Интернет-версия Excel:</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-300\">For Excel Online:</span></span>\n\n- <span data-ttu-id=\"fe8af-301\">Общее число ячеек в значение, переданное для параметра data не может превышать 20 000 один вызов в этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-301\">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>\n\n- <span data-ttu-id=\"fe8af-302\">Количество групп форматирования, передаваемых в параметр cellFormat, не может превышать 100.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-302\">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id=\"fe8af-303\">Одна группа форматирования состоит из набора параметров форматирования, применяемого к указанному диапазону ячеек.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-303\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>\n\n<span data-ttu-id=\"fe8af-304\">Во всех остальных случаях возвращается ошибка.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-304\">In all other cases, an error is returned.</span></span>\n\n<span data-ttu-id=\"fe8af-305\">Метод setDataAsync запишет данные в подмножество привязки таблицы или матрицы Если указаны необязательные параметры startRow и startColumn, задают допустимый диапазон.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-305\">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>\n\n<span data-ttu-id=\"fe8af-306\">В функции обратного вызова, переданной в метод setDataAsync можно использовать свойства объекта AsyncResult для возврата следующей информации.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-306\">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"fe8af-307\">Свойство</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-307\">Property</span></span></th> <th><span data-ttu-id=\"fe8af-308\">Применение</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-308\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"fe8af-309\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-309\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"fe8af-310\">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-310\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-311\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-311\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"fe8af-312\">Определяет, удалось ли выполнить операцию.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-312\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-313\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-313\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"fe8af-314\">Получает доступ к объекту Error, который содержит сведения об ошибке, если операция завершилась неудачно.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-314\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"fe8af-315\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-315\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"fe8af-316\">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-316\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n#### <span data-ttu-id=\"fe8af-317\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-317\">Examples</span></span>\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  name: setDataAsync(data, callback)
  fullName: setDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="fe8af-318">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="fe8af-318">The data to be set in the current selection.</span></span> <span data-ttu-id="fe8af-319">Типы данных с узла.</span><span class="sxs-lookup"><span data-stu-id="fe8af-319">Possible data types by host:</span></span>


        <span data-ttu-id="fe8af-320">Строка: Excel Excel Online, Word и Word Online только</span><span class="sxs-lookup"><span data-stu-id="fe8af-320">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="fe8af-321">Массив массивов: только Word и Excel.</span><span class="sxs-lookup"><span data-stu-id="fe8af-321">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="fe8af-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel и только для Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="fe8af-323">HTML-код: Word и Интернет-версия только Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-323">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="fe8af-324">Office Open XML: Только Word</span><span class="sxs-lookup"><span data-stu-id="fe8af-324">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: callback
      description: <span data-ttu-id="fe8af-325">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="fe8af-325">Optional.</span></span> <span data-ttu-id="fe8af-326">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="fe8af-326">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.document
  summary: <span data-ttu-id="fe8af-327">Получает объект Document, связанный с привязкой.</span><span class="sxs-lookup"><span data-stu-id="fe8af-327">Get the Document object associated with the binding.</span></span>
  name: document
  fullName: document
  langs:
  - typeScript
  type: property
  syntax:
    content: 'document: Office.Document;'
    return:
      type:
      - office.Office.Document
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fe8af-328\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-328\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.id
  summary: <span data-ttu-id="fe8af-329">Строка, однозначно идентифицирует данную привязку среди привязок в одном объекте [Office.Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="fe8af-329">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fe8af-330\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-330\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.type
  summary: <span data-ttu-id="fe8af-331">Получает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="fe8af-331">Gets the type of the binding.</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type:
      - Office.BindingType
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fe8af-332\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"fe8af-332\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
