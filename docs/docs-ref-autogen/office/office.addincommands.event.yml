### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: 'Объект Event передается в качестве параметра функциям надстроек, вызываемым кнопками команд без пользовательского интерфейса. Этот объект позволяет надстройке определить нажатую кнопку и уведомить узел о завершении обработки.'
    remarks: |-
      Для получения дополнительных сведений о поддержке обратитесь к разделу [наборы требований для команд надстройки](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) .

      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный ** [режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание или чтение
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      Указывает на то, что надстройка завершила обработку, активированную с помощью кнопки надстройки или обработчика события.

      Этот метод должен вызываться в конце функции, которая была вызвана командой надстройки, определенной с помощью элемента Action, для атрибута xsi: Type задано значение ExecuteFunction. При вызове этого метода клиент узла узнает, что функция завершена и что он может очистить любое состояние, связанное с вызовом функции. Например, если пользователь закроет Outlook до вызова этого метода, Outlook предупредит его, что функция по-прежнему выполняется.

      Этот метод необходимо вызывать в обработчике событий, добавленном с помощью метода Office.context.mailbox.addHandlerAsync, по завершении обработки события.

      \[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный ** [режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание или чтение

      В почтовом ящике 1,3 `options` нет параметра, в то время как предварительный просмотр почтового ящика поддерживает `options` параметр.

      #### <a name="examples"></a>Примеры

      ```javascript
      function processItem (event) {
          // Do some processing

          event.completed();
      }

      // In the following example, the checkMessage function has
      // been registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK"
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in result.value
              if (result.value.indexOf('BLOCK') != -1) {
                  // Value is found, stop send
                  event.completed({allowEvent = false});
              } else {
                  // Value wasn't found, allow send
                  event.completed({allowEvent = true});
              }
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Необязательно. Объект, определяющий параметры поведения при завершении события.'
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: 'Сведения об элементе управления, который инициировал вызов этой функции.'
    remarks: |-
      Это свойство поддерживается только в Outlook в [наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) обязательных элементов почтовых ящиков 1,3 и более поздних версий.

      #### <a name="examples"></a>Примеры

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source