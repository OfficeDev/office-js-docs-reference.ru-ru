### YamlMime:UniversalReference
ms.openlocfilehash: 95ab99162b2cda8560c060c82f693ce72457bf00
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974026"
items:
- uid: office.Office.TableData
  summary: Представляет данные в таблице или [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->.
  remarks: >-
    <table><tr><td>Узлы</td><td>Excel, Word</td></tr>


    <tr><td>Наборы требований</td><td>TableBindings</td></tr></table>
  name: Office.TableData
  fullName: Office.TableData
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.Office.TableData.(constructor)
  - office.Office.TableData.(constructor)_1
  - office.Office.TableData.headers
  - office.Office.TableData.rows
- uid: office.Office.TableData.(constructor)
  name: (constructor)(rows, headers)
  fullName: (constructor)(rows, headers)
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(rows: any[][], headers: any[]);'
    parameters:
    - id: rows
      description: ''
      type:
      - any[][]
    - id: headers
      description: ''
      type:
      - any[]
- uid: office.Office.TableData.(constructor)_1
  name: (constructor)()
  fullName: (constructor)()
  langs:
  - typeScript
  type: constructor
  syntax:
    content: constructor();
- uid: office.Office.TableData.headers
  summary: Получает или задает заголовки таблицы.
  remarks: >-
    <table><tr><td>Узлы</td><td>Excel, Word</td></tr>


    <tr><td>Наборы требований</td><td>TableBindings</td></tr></table>


    Чтобы указать заголовки, необходимо указать массив массивов, соответствующий структура таблицы. Например, чтобы сделать заголовки для двух столбцов таблицы в свойства заголовка сначала задать \[ \[«верхний колонтитул1», «верхний колонтитул2»\]\].


    Если указать значение null для свойства headers (или оставить это свойство пустым при построении объекта TableData), при выполнении кода будут получены следующие результаты:


    - При вставке новой таблицы будут созданы заголовки столбцов по умолчанию.


    - При перезаписи или обновлении существующей таблицы существующие заголовки не изменятся.

    #### <a name="examples"></a>Примеры


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: headers
  fullName: headers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'headers: any[];'
    return:
      type:
      - any[]
- uid: office.Office.TableData.rows
  summary: Получает или задает строки в таблице. Возвращает массив массивов, который содержит данные в таблице. Возвращает пустой массив, если нет ни одной строки.
  remarks: >-
    <table><tr><td>Узлы</td><td>Excel, Word</td></tr>


    <tr><td>Наборы требований</td><td>TableBindings</td></tr></table>


    Чтобы задать строки, необходимо указать массив массивов, соответствующий структуре таблицы. Например, для указания две строки значений string в двух столбцов таблицы будет присвойте свойству строк \[ \['a', 'b'\], \['c', 'd'\]\].


    Если указать значение null для свойства rows (или оставить это свойство пустым при построении объекта TableData), при выполнении кода будут получены следующие результаты:


    - При вставке новой таблицы будет вставлена пустая строка.


    - При перезаписи или обновлении существующей таблицы существующие строки не изменятся.

    #### <a name="examples"></a>Примеры


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rows: any[][];'
    return:
      type:
      - any[][]
