### YamlMime:UniversalReference
items:
  - uid: office.Office.Bindings
    summary: 'Представляет привязки, которые есть у надстройки в документе.'
    name: Office.Bindings
    fullName: Office.Bindings
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Bindings.addFromNamedItemAsync
      - office.Office.Bindings.addFromNamedItemAsync_1
      - office.Office.Bindings.addFromPromptAsync
      - office.Office.Bindings.addFromPromptAsync_1
      - office.Office.Bindings.addFromSelectionAsync
      - office.Office.Bindings.addFromSelectionAsync_1
      - office.Office.Bindings.getAllAsync
      - office.Office.Bindings.getAllAsync_1
      - office.Office.Bindings.getByIdAsync
      - office.Office.Bindings.getByIdAsync_1
      - office.Office.Bindings.releaseByIdAsync
      - office.Office.Bindings.releaseByIdAsync_1
      - office.Office.Bindings.document
  - uid: office.Office.Bindings.addFromNamedItemAsync
    summary: Создает привязку для именованного объекта в документе.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Для Excel параметр itemName может ссылаться на именованный диапазон или таблицу.

      По умолчанию при добавлении таблиц в Excel имя "Table1" назначается первой добавленной таблице, "Table2" — второй таблице и так далее. Чтобы присвоить понятное имя таблице в ПОЛЬЗОВАТЕЛЬСКОМ ИНТЕРФЕЙСе Excel, используйте свойство Table name на вкладке Конструктор инструментов \| таблицы ленты.

      **Note**: в Excel при указании таблицы в качестве именованного элемента необходимо полностью указать имя листа в качестве имени таблицы в следующем формате: "Лист1! Таблицу

      Для Word параметр itemName ссылается на свойство Title элемента управления содержимым "форматированный текст". (Привязка к элементам управления содержимым, отличным от элемента управления содержимым "форматированный текст", невозможна).

      По умолчанию для элемента управления содержимым не назначено значение Title. Чтобы назначить понятное имя в пользовательском интерфейсе Word, после вставки элемента управления контентом Форматированный текст из группы Элементы управления на вкладке Разработчик ленты выберите команду Свойства в группе Элементы управления, чтобы открыть диалоговое окно Свойства элемента управления контентом. Затем задайте для свойства Title элемента управления контентом имя, на которое вы будете ссылаться в коде.

      **Примечание**: в Word при наличии нескольких элементов управления форматированным текстом с одинаковым значением свойства Title (Name) и попытке выполнить присоединение к одному из этих элементов управления содержимым с помощью этого метода (указав его имя как параметр itemName) операция завершится с ошибками.

      #### <a name="examples"></a>Примеры

      ```javascript
      // The following example adds a binding to the myRange named item in Excel as a "matrix" binding,
      // and assigns the binding's id as myMatrix.
      function bindNamedItem() {
          Office.context.document.bindings.addFromNamedItemAsync(
              "myRange", "matrix", {id:'myMatrix'}, function (result) {
              if (result.status == 'succeeded'){
                  write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);
                  }
              else
                  write('Error: ' + result.error.message);
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // The following example adds a binding to the Table1 named item in Excel as a "table" binding,
      // and assigns the binding's id as myTable.
      function bindNamedItem() {
          Office.context.document.bindings.addFromNamedItemAsync(
              "Table1", "table", {id:'myTable'}, function (result) {
              if (result.status == 'succeeded'){
                  write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);
                  }
              else
                  write('Error: ' + result.error.message);
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // The following example creates a text binding in Word to a rich text content control named "FirstName",
      // assigns the id "firstName", and then displays that information.
      function bindContentControl() {
          Office.context.document.bindings.addFromNamedItemAsync('FirstName', 
              Office.BindingType.Text, {id:'firstName'},
              function (result) {
                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                      write('Control bound. Binding.id: '
                          + result.value.id + ' Binding.type: ' + result.value.type);
                  } else {
                      write('Error:', result.error.message);
                  }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromNamedItemAsync(itemName, bindingType, options, callback)'
    fullName: 'addFromNamedItemAsync(itemName, bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, options?: AddBindingFromNamedItemOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemName
          description: 'Имя объекта с возможностью связывания в документе. Например, таблица "Мекспенсес" в Excel. "'
          type:
            - string
        - id: bindingType
          description: '[Office. BindingType](xref:office.Office.BindingType) для данных. Метод возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: options
          description: Предоставляет параметры для настройки создаваемой привязки.
          type:
            - office.Office.AddBindingFromNamedItemOptions
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. `value` Свойство Result представляет объект Binding, представляющий указанный именованный элемент.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.addFromNamedItemAsync_1
    summary: Создает привязку для именованного объекта в документе.
    remarks: |-
      [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Для Excel параметр itemName может ссылаться на именованный диапазон или таблицу.

      По умолчанию при добавлении таблиц в Excel имя "Table1" назначается первой добавленной таблице, "Table2" — второй таблице и так далее. Чтобы присвоить понятное имя таблице в ПОЛЬЗОВАТЕЛЬСКОМ ИНТЕРФЕЙСе Excel, используйте свойство Table name на вкладке Конструктор инструментов \| таблицы ленты.

      **Note**: в Excel при указании таблицы в качестве именованного элемента необходимо полностью указать имя листа в качестве имени таблицы в следующем формате: "Лист1! Таблицу

      Для Word параметр itemName ссылается на свойство Title элемента управления содержимым "форматированный текст". (Привязка к элементам управления содержимым, отличным от элемента управления содержимым "форматированный текст", невозможна).

      По умолчанию для элемента управления содержимым не назначено значение Title. Чтобы назначить понятное имя в пользовательском интерфейсе Word, после вставки элемента управления контентом Форматированный текст из группы Элементы управления на вкладке Разработчик ленты выберите команду Свойства в группе Элементы управления, чтобы открыть диалоговое окно Свойства элемента управления контентом. Затем задайте для свойства Title элемента управления контентом имя, на которое вы будете ссылаться в коде.

      **Примечание**: в Word при наличии нескольких элементов управления форматированным текстом с одинаковым значением свойства Title (Name) и попытке выполнить присоединение к одному из этих элементов управления содержимым с помощью этого метода (указав его имя как параметр itemName) операция завершится с ошибками.
    name: 'addFromNamedItemAsync(itemName, bindingType, callback)'
    fullName: 'addFromNamedItemAsync(itemName, bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemName
          description: 'Имя объекта с возможностью связывания в документе. Например, таблица "Мекспенсес" в Excel. "'
          type:
            - string
        - id: bindingType
          description: '[Office. BindingType](xref:office.Office.BindingType) для данных. Метод возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. `value` Свойство Result представляет объект Binding, представляющий указанный именованный элемент.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.addFromPromptAsync
    summary: 'Создайте привязку, запросите пользователя сделать выбор в документе.'
    remarks: |-
      **Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)

      Добавляет объект привязки указанного типа в коллекцию Bindings, которая определяется идентификатором id. Метод завершается ошибкой, если заданную выборку невозможно привязать.

      #### <a name="examples"></a>Примеры

      ```javascript
      function addBindingFromPrompt() {
          Office.context.document.bindings.addFromPromptAsync(
              Office.BindingType.Text, 
              { id: 'MyBinding', promptText: 'Select text to bind to.' },
              function (asyncResult) {
                  write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromPromptAsync(bindingType, options, callback)'
    fullName: 'addFromPromptAsync(bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromPromptAsync(bindingType: BindingType, options?: AddBindingFromPromptOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Указывает тип объекта привязки для создания. Обязательный параметр. Возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: options
          description: Предоставляет параметры для настройки подсказки и идентификации создаваемой привязки.
          type:
            - office.Office.AddBindingFromPromptOptions
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является объект Binding, представляющий выбранное пользователем значение.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.addFromPromptAsync_1
    summary: 'Создайте привязку, запросите пользователя сделать выбор в документе.'
    remarks: |-
      **Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)

      Добавляет объект привязки указанного типа в коллекцию Bindings, которая определяется идентификатором id. Метод завершается ошибкой, если заданную выборку невозможно привязать.
    name: 'addFromPromptAsync(bindingType, callback)'
    fullName: 'addFromPromptAsync(bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromPromptAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Указывает тип объекта привязки для создания. Обязательный параметр. Возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является объект Binding, представляющий выбранное пользователем значение.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.addFromSelectionAsync
    summary: Создание привязки на основе выбранного пользователем фрагмента.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Добавляет указанный тип объекта привязки в коллекцию Bindings, которая будет идентифицирована с помощью указанного идентификатора.

      Примечание в Excel при вызове метода addFromSelectionAsync, переданного в Binding.id существующей привязки, используется привязка. тип этой привязки, и ее тип невозможно изменить, указав другое значение для параметра bindingType. Если вам требуется использовать существующий id и изменить bindingType, вызовите сначала метод Bindings.releaseByIdAsync, чтобы освободить привязку, а затем метод addFromSelectionAsync, чтобы повторно установить привязку с новым типом.

      #### <a name="examples"></a>Примеры

      ```javascript
      function addBindingFromSelection() {
          Office.context.document.bindings.addFromSelectionAsync(Office.BindingType.Text, { id: 'MyBinding' }, 
              function (asyncResult) {
              write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
              }
          );
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromSelectionAsync(bindingType, options, callback)'
    fullName: 'addFromSelectionAsync(bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelectionAsync(bindingType: BindingType, options?: AddBindingFromSelectionOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Указывает тип объекта привязки для создания. Обязательный параметр. Возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: options
          description: Предоставляет параметры для настройки подсказки и идентификации создаваемой привязки.
          type:
            - office.Office.AddBindingFromSelectionOptions
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является объект Binding, представляющий выбранное пользователем значение.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.addFromSelectionAsync_1
    summary: Создание привязки на основе выбранного пользователем фрагмента.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Добавляет указанный тип объекта привязки в коллекцию Bindings, которая будет идентифицирована с помощью указанного идентификатора.

      Примечание в Excel при вызове метода addFromSelectionAsync, переданного в Binding.id существующей привязки, используется привязка. тип этой привязки, и ее тип невозможно изменить, указав другое значение для параметра bindingType. Если вам требуется использовать существующий id и изменить bindingType, вызовите сначала метод Bindings.releaseByIdAsync, чтобы освободить привязку, а затем метод addFromSelectionAsync, чтобы повторно установить привязку с новым типом.
    name: 'addFromSelectionAsync(bindingType, callback)'
    fullName: 'addFromSelectionAsync(bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelectionAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Указывает тип объекта привязки для создания. Обязательный параметр. Возвращает значение null, если выбранный объект нельзя привести к указанному типу.'
          type:
            - BindingType
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является объект Binding, представляющий выбранное пользователем значение.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.getAllAsync
    summary: Получает все ранее созданные привязки.
    remarks: '**Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)'
    name: 'getAllAsync(options, callback)'
    fullName: 'getAllAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: 'Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является массив, содержащий каждую привязку, созданную для упоминаемого объекта Bindings.'
          type:
            - '(result: AsyncResult<Binding[]>) => void'
  - uid: office.Office.Bindings.getAllAsync_1
    summary: Получает все ранее созданные привязки.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      #### <a name="examples"></a>Примеры

      ```javascript
      function displayAllBindingNames() {
          Office.context.document.bindings.getAllAsync(function (asyncResult) {
              var bindingString = '';
              for (var i in asyncResult.value) {
                  bindingString += asyncResult.value[i].id + '\n';
              }
              write('Existing bindings: ' + bindingString);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getAllAsync(callback)
    fullName: getAllAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(callback?: (result: AsyncResult<Binding[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. Результатом `value` этого свойства является массив, содержащий каждую привязку, созданную для упоминаемого объекта Bindings.'
          type:
            - '(result: AsyncResult<Binding[]>) => void'
  - uid: office.Office.Bindings.getByIdAsync
    summary: Получает привязку с учетом ее имени
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Завершается с ошибкой, если указанный идентификатор не существует.
    name: 'getByIdAsync(id, options, callback)'
    fullName: 'getByIdAsync(id, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: Задает уникальное имя объекта Binding. Обязательно.
          type:
            - string
        - id: options
          description: Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. `value` Свойство Result является объектом Binding, указанным идентификатором в вызове.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.getByIdAsync_1
    summary: Получает привязку с учетом ее имени
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Завершается с ошибкой, если указанный идентификатор не существует.

      #### <a name="examples"></a>Примеры

      ```javascript
      function displayBindingType() {
          Office.context.document.bindings.getByIdAsync('MyBinding', function (asyncResult) {
              write('Retrieved binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getByIdAsync(id, callback)'
    fullName: 'getByIdAsync(id, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: Задает уникальное имя объекта Binding. Обязательно.
          type:
            - string
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->. `value` Свойство Result является объектом Binding, указанным идентификатором в вызове.'
          type:
            - '(result: AsyncResult<Binding>) => void'
  - uid: office.Office.Bindings.releaseByIdAsync
    summary: Удаляет привязку из документа.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Завершается с ошибкой, если указанный идентификатор не существует.
    name: 'releaseByIdAsync(id, options, callback)'
    fullName: 'releaseByIdAsync(id, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'releaseByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 'Задает уникальное имя, используемое для идентификации объекта привязки. Обязательный.'
          type:
            - string
        - id: options
          description: Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Bindings.releaseByIdAsync_1
    summary: Удаляет привязку из документа.
    remarks: |-
      **Наборы требований**: [матриксбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->, [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Текстбиндингс](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Завершается с ошибкой, если указанный идентификатор не существует.

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.context.document.bindings.releaseByIdAsync("MyBinding", function (asyncResult) { 
          write("Released MyBinding!"); 
      }); 
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message;  
      }
      ```
    name: 'releaseByIdAsync(id, callback)'
    fullName: 'releaseByIdAsync(id, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'releaseByIdAsync(id: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 'Задает уникальное имя, используемое для идентификации объекта привязки. Обязательный.'
          type:
            - string
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Bindings.document
    summary: 'Возвращает объект [Office. Document](xref:office.Office.Document) , представляющий документ, связанный с этим набором привязок.'
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Document;'
      return:
        type:
          - Document