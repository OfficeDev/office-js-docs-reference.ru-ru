### YamlMime:UniversalReference
items:
  - uid: 'office!Office.UI:interface'
    summary: |-
      Предоставляет объекты и методы, которые можно использовать для создания компонентов пользовательского интерфейса, например диалоговых окон, в надстройках Office и управления ими.

      Посетите страницу "[Использование API диалоговых окон в](https://docs.microsoft.com/office/dev/add-ins/develop/dialog-api-in-office-add-ins) надстройках Office<!-- -->"для получения дополнительных сведений.
    name: Office.UI
    fullName: Office.UI
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.UI#addHandlerAsync:member(1)'
      - 'office!Office.UI#closeContainer:member(1)'
      - 'office!Office.UI#displayDialogAsync:member(1)'
      - 'office!Office.UI#displayDialogAsync:member(2)'
      - 'office!Office.UI#messageParent:member(1)'
  - uid: 'office!Office.UI#addHandlerAsync:member(1)'
    summary: 'Добавляет обработчик событий в объект, используя указанный тип события.'
    remarks: |-
      **Набор требований**: подлежит определению

      Можно добавить несколько обработчиков событий для указанного типа события, если имя каждой функции обработчика событий уникально.
    isPreview: true
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Указывает тип добавляемого события. Это должно быть`Office.EventType.DialogParentMessageReceived`<!-- -->.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: 'Функция обработчика событий для добавления, единственный параметр которой имеет тип.'
          type:
            - '(result: any) => void'
        - id: options
          description: Необязательный параметр. Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Необязательный параметр. Функция, вызываемая при возвращении регистрации обработчика, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.'
          type:
            - 'office!Office.UI#addHandlerAsync~0:complex'
  - uid: 'office!Office.UI#closeContainer:member(1)'
    summary: 'Закрывает контейнер пользовательского интерфейса, в котором выполняется код JavaScript.'
    remarks: |-
      **Hosts**: Excel, Word, PowerPoint, Outlook (минимальный набор обязательных элементов: Mailbox 1,5)

      **Набор требований**: [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)

      Поведение этого метода задается следующим образом:

      - Вызывается из кнопки команды без пользовательского интерфейса: не оказывает никакого действия. Все диалоговые окна, открытые с помощью метода displayDialogAsync, останутся открытыми.

      - Вызывается из области задач: область задач будет закрыта. Все диалоговые окна, открываемые displayDialogAsync, также будут закрыты. Если область задач поддерживает закрепление и была закреплена пользователем, она будет незакрепленной.

      - Вызывается из расширения модуля: не оказывает никакого действия.
    name: closeContainer()
    fullName: closeContainer()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'closeContainer(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office!Office.UI#displayDialogAsync:member(1)'
    summary: Отображает диалоговое окно для отображения или сбора сведений о пользователе или для упрощения веб-навигации.
    remarks: |-
      **Узлы**: Word, Excel, Outlook, PowerPoint

      **Наборы требований**:

      - [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)

      - [Mailbox 1.4](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)

      Этот метод доступен в наборе обязательных элементов DialogAPI для надстроек Word, Excel или PowerPoint, а также в наборе обязательных элементов Mailbox 1.4 для Outlook. Дополнительные сведения о том, как задать набор обязательных элементов в манифесте, можно узнать в статье [Указание ведущих приложений Office и требований к API](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!-- -->.

      Начальная страница должна находиться в том же домене, что и родительская страница (параметр Стартаддресс). После загрузки начальной страницы можно перейти к другим доменам.

      Вызов `Office.context.ui.messageParent` любой страницы также должен находиться в том же домене, что и родительская страница.

      **Рекомендации по проектированию**:

      К диалоговым окнам применяются следующие рекомендации по оформлению:

      - В области задач надстройки Office в любой момент времени может быть открыто только одно диалоговое окно. С помощью команд надстроек (настраиваемых кнопок ленты или пунктов меню) можно одновременно открыть несколько диалоговых окон.

      - Пользователь может перемещать все диалоговые окна и изменять их размер.

      - При открытии все диалоговые окна размещаются по центру экрана.

      - Диалоговые окна отображаются поверх ведущего приложения в порядке создания.

      Примеры применения диалогового окна:

      - Отображение страниц проверки подлинности для сбора учетных данных пользователей.

      - Отобразить сообщение об ошибке/ходе выполнения и ввод данных из команды ShowTaskpane или ExecuteAction.

      - Временное увеличение пространства, доступного пользователю для выполнения задачи.

      Не используйте диалоговое окно для работы с документом. Используйте область задач.

      Шаблон, который можно использовать для создания [диалогового окна](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md), см. в репозитории шаблонов на сайте GitHub.

      **ошибки displayDialogAsync**:

      <table> <tr> <th>Цифровой код</th> <th>Значение</th> </tr> <tr> <td>12004</td> <td>Домен URL-адреса, переданный в displayDialogAsync, не является доверенным. Домен должен совпадать с главной страницей (включая протокол и номер порта) или должен быть зарегистрирован в разделе <AppDomains> манифеста надстройки.</td> </tr> <tr> <td>12005</td> <td>URL-адрес, переданный в displayDialogAsync, использует протокол HTTP. Необходим протокол HTTPS. (В некоторых версиях Office сообщение об ошибке 12005 совпадает с сообщением 12004.)</td> </tr> <tr> <td>12007</td> <td>Диалоговое окно уже открыто из области задач. Надстройка области задач не может открывать сразу несколько диалоговых окон.</td> </tr> <tr> <td>12009</td> <td>Пользователь проигнорировал диалоговое окно. Эта ошибка может возникнуть в веб-версиях Office, где пользователи могут не разрешить надстройке открыть диалоговое окно.</td> </tr> </table>

      В функции обратного вызова, переданной в метод displayDialogAsync, можно использовать свойства объекта AsyncResult, чтобы получить следующие сведения.

      <table> <tr> <th>Свойство</th> <th>Использовать для</th> </tr> <tr> <td>AsyncResult.value</td> <td>Доступ к объекту Dialog.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Определяет, удалось ли выполнить операцию.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Получает доступ к пользовательскому object или значению, если они переданы в качестве параметра asyncContext.</td> </tr> </table>
    name: 'displayDialogAsync(startAddress, options, callback)'
    fullName: 'displayDialogAsync(startAddress, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult<Dialog>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: startAddress
          description: 'Принимает исходный URL-адрес HTTPS, который открывается в диалоговом окне.'
          type:
            - string
        - id: options
          description: 'Необязательный параметр. Принимает объект [Office. диалогоптионс](xref:office!Office.DialogOptions:interface) , который определяет отображение диалогового окна.'
          type:
            - 'office!Office.DialogOptions:interface'
        - id: callback
          description: 'Необязательный параметр. Принимает метод обратного вызова, обрабатывающий попытку создания диалогового окна. В случае успешного выполнения AsyncResult. Value — это объект Dialog.'
          type:
            - 'office!Office.UI#displayDialogAsync~0:complex'
  - uid: 'office!Office.UI#displayDialogAsync:member(2)'
    summary: Отображает диалоговое окно для отображения или сбора сведений о пользователе или для упрощения веб-навигации.
    remarks: |-
      **Hosts**: Excel, Outlook, PowerPoint, Word

      **Наборы требований**:

      - [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)

      - [Mailbox 1.4](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)

      Этот метод доступен в наборе обязательных элементов DialogAPI для надстроек Word, Excel или PowerPoint, а также в наборе обязательных элементов Mailbox 1.4 для Outlook. Дополнительные сведения о том, как задать набор обязательных элементов в манифесте, можно узнать в статье [Указание ведущих приложений Office и требований к API](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!-- -->.

      Начальная страница должна находиться в том же домене, что и родительская страница (параметр Стартаддресс). После загрузки начальной страницы можно перейти к другим доменам.

      Вызов `Office.context.ui.messageParent` любой страницы также должен находиться в том же домене, что и родительская страница.

      **Рекомендации по проектированию**:

      К диалоговым окнам применяются следующие рекомендации по оформлению:

      - В области задач надстройки Office в любой момент времени может быть открыто только одно диалоговое окно. С помощью команд надстроек (настраиваемых кнопок ленты или пунктов меню) можно одновременно открыть несколько диалоговых окон.

      - Пользователь может перемещать все диалоговые окна и изменять их размер.

      - При открытии все диалоговые окна размещаются по центру экрана.

      - Диалоговые окна отображаются поверх ведущего приложения в порядке создания.

      Примеры применения диалогового окна:

      - Отображение страниц проверки подлинности для сбора учетных данных пользователей.

      - Отобразить сообщение об ошибке/ходе выполнения и ввод данных из команды ShowTaskpane или ExecuteAction.

      - Временное увеличение пространства, доступного пользователю для выполнения задачи.

      Не используйте диалоговое окно для работы с документом. Используйте область задач.

      Шаблон, который можно использовать для создания [диалогового окна](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md), см. в репозитории шаблонов на сайте GitHub.

      **ошибки displayDialogAsync**:

      <table> <tr> <th>Цифровой код</th> <th>Значение</th> </tr> <tr> <td>12004</td> <td>Домен URL-адреса, переданный в displayDialogAsync, не является доверенным. Домен должен совпадать с главной страницей (включая протокол и номер порта) или должен быть зарегистрирован в разделе <AppDomains> манифеста надстройки.</td> </tr> <tr> <td>12005</td> <td>URL-адрес, переданный в displayDialogAsync, использует протокол HTTP. Необходим протокол HTTPS. (В некоторых версиях Office сообщение об ошибке 12005 совпадает с сообщением 12004.)</td> </tr> <tr> <td>12007</td> <td>Диалоговое окно уже открыто из области задач. Надстройка области задач не может открывать сразу несколько диалоговых окон.</td> </tr> <tr> <td>12009</td> <td>Пользователь проигнорировал диалоговое окно. Эта ошибка может возникнуть в веб-версиях Office, где пользователи могут не разрешить надстройке открыть диалоговое окно.</td> </tr> </table>

      В функции обратного вызова, переданной в метод displayDialogAsync, можно использовать свойства объекта AsyncResult, чтобы получить следующие сведения.

      <table> <tr> <th>Свойство</th> <th>Использовать для</th> </tr> <tr> <td>AsyncResult.value</td> <td>Доступ к объекту Dialog.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Определяет, удалось ли выполнить операцию.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Получает доступ к пользовательскому object или значению, если они переданы в качестве параметра asyncContext.</td> </tr> </table>
    name: 'displayDialogAsync(startAddress, callback)'
    fullName: 'displayDialogAsync(startAddress, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayDialogAsync(startAddress: string, callback?: (result: AsyncResult<Dialog>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: startAddress
          description: 'Принимает исходный URL-адрес HTTPS, который открывается в диалоговом окне.'
          type:
            - string
        - id: callback
          description: 'Необязательный параметр. Принимает метод обратного вызова, обрабатывающий попытку создания диалогового окна. В случае успешного выполнения AsyncResult. Value — это объект Dialog.'
          type:
            - 'office!Office.UI#displayDialogAsync~1:complex'
  - uid: 'office!Office.UI#messageParent:member(1)'
    summary: 'Доставляет сообщение из диалогового окна родительской странице. Страница, вызывающая этот API, и родительская страница должны быть в одном домене.'
    remarks: '**Набор требований**: [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)'
    name: messageParent(message)
    fullName: messageParent(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'messageParent(message: boolean | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: 'Принимает от диалогового окна сообщение, доставляемое надстройке. Помимо логического значения могут быть отправлены все данные, которые могут быть сериализованы в строку, включая JSON и XML.'
          type:
            - boolean | string
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.UI#addHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.DialogOptions:interface'
    name: DialogOptions
  - uid: 'office!Office.UI#displayDialogAsync~0:complex'
    name: '(result: AsyncResult<Dialog>) => void'
    fullName: '(result: Office.AsyncResult<Office.Dialog>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Dialog:interface'
        name: Dialog
        fullName: Office.Dialog
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.UI#displayDialogAsync~1:complex'
    name: '(result: AsyncResult<Dialog>) => void'
    fullName: '(result: Office.AsyncResult<Office.Dialog>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Dialog:interface'
        name: Dialog
        fullName: Office.Dialog
      - name: '>) => void'
        fullName: '>) => void'