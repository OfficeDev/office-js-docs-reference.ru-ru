### YamlMime:UniversalReference
items:
  - uid: office.Office.Binding
    summary: |-
      <span data-ttu-id="9c5aa-101">Представляет привязку к разделу документа.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-101">Represents a binding to a section of the document.</span></span>

      <span data-ttu-id="9c5aa-102">Объект Binding предоставляет функциональные возможности, которыми обладают все привязки, независимо от типа.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-102">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>

      <span data-ttu-id="9c5aa-103">Объект Binding никогда не вызывается напрямую.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-103">The Binding object is never called directly.</span></span> <span data-ttu-id="9c5aa-104">Это абстрактный родительский класс объектов, представляющих каждый тип привязки: [Office. MatrixBinding](xref:office.Office.MatrixBinding)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-104">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)</span></span><!-- --><span data-ttu-id="9c5aa-105">, [Office. TableBinding](xref:office.Office.TableBinding)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-105">, [Office.TableBinding](xref:office.Office.TableBinding)</span></span><!-- --><span data-ttu-id="9c5aa-106">или [Office. TextBinding](xref:office.Office.TextBinding)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-106">, or [Office.TextBinding](xref:office.Office.TextBinding)</span></span><!-- --><span data-ttu-id="9c5aa-107">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-107"></span></span> <span data-ttu-id="9c5aa-108">Все три из этих объектов наследуют методы getDataAsync и setDataAsync из объекта Binding, которые позволяют взаимодействовать с данными в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-108">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="9c5aa-109">Они также наследуют свойства id и type и позволяют запрашивать значения этих свойств.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-109">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="9c5aa-110">Кроме того, объекты MatrixBinding и TableBinding предоставляют дополнительные методы для работы с матрицами и таблицами, например, для подсчета количества строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-110">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>
    remarks: |-
      <span data-ttu-id="9c5aa-111">**Узлы**: Excel, Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-111">**Hosts**: Excel, Word</span></span>

      <span data-ttu-id="9c5aa-112">**Наборы требований**:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-112">**Requirement sets**:</span></span>

      - [<span data-ttu-id="9c5aa-113">матриксбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-113">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [<span data-ttu-id="9c5aa-114">TableBindings</span><span class="sxs-lookup"><span data-stu-id="9c5aa-114">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [<span data-ttu-id="9c5aa-115">текстбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-115">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
    name: Office.Binding
    fullName: Office.Binding
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Binding.addHandlerAsync
      - office.Office.Binding.addHandlerAsync_1
      - office.Office.Binding.getDataAsync
      - office.Office.Binding.getDataAsync_1
      - office.Office.Binding.removeHandlerAsync
      - office.Office.Binding.removeHandlerAsync_1
      - office.Office.Binding.setDataAsync
      - office.Office.Binding.setDataAsync_1
      - office.Office.Binding.document
      - office.Office.Binding.id
      - office.Office.Binding.type
  - uid: office.Office.Binding.addHandlerAsync
    summary: '<span data-ttu-id="9c5aa-116">Добавляет обработчик событий для объекта для указанного элемента [Office. EventType](xref:office.Office.EventType)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-116">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)</span></span><!-- --><span data-ttu-id="9c5aa-117">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-117"></span></span> <span data-ttu-id="9c5aa-118">Поддерживаемые Евенттипес `Office.EventType.BindingDataChanged``Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-118">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-119">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-119"></span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-120">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-120">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="9c5aa-121">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-121">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="9c5aa-122">Тип события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-122">The event type.</span></span> <span data-ttu-id="9c5aa-123">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-123">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-124">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-124"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: '<span data-ttu-id="9c5aa-125">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office. свойство bindingselectionchangedeventargs](xref:office.Office.BindingSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-125">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="9c5aa-126">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-126"></span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="9c5aa-127">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-127">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="9c5aa-128">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-128">Optional.</span></span> <span data-ttu-id="9c5aa-129">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-129">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-130">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-130"></span></span>'
          type:
            - '(result: Office.AsyncResult<void>) => void'
  - uid: office.Office.Binding.addHandlerAsync_1
    summary: '<span data-ttu-id="9c5aa-131">Добавляет обработчик событий для объекта для указанного элемента [Office. EventType](xref:office.Office.EventType)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-131">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)</span></span><!-- --><span data-ttu-id="9c5aa-132">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-132"></span></span> <span data-ttu-id="9c5aa-133">Поддерживаемые Евенттипес `Office.EventType.BindingDataChanged``Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-133">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-134">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-134"></span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-135">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-135">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="9c5aa-136">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-136">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="9c5aa-137">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-137">Examples</span></span>

      ```javascript
      // The following code sample calls the select method of the Office object to access the binding
      // with ID "MyBinding", and then calls the addHandlerAsync method to add a handler function 
      // for the bindingDataChanged event of that binding.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingDataChanged, onBindingDataChanged);
      }

      function onBindingDataChanged(eventArgs) {
          write("Data has changed in binding: " + eventArgs.binding.id);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // To add an event handler for the BindingSelectionChanged event of a binding, 
      // use the addHandlerAsync method of the Binding object.
      // The event handler receives an argument of type BindingSelectionChangedEventArgs.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);
      }

      function onBindingSelectionChanged(eventArgs) {
          write(eventArgs.binding.id + " has been selected.");
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="9c5aa-138">Тип события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-138">The event type.</span></span> <span data-ttu-id="9c5aa-139">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-139">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-140">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-140"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: '<span data-ttu-id="9c5aa-141">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) или [Office. свойство bindingselectionchangedeventargs](xref:office.Office.BindingSelectionChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-141">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)</span></span><!-- --><span data-ttu-id="9c5aa-142">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-142"></span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="9c5aa-143">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-143">Optional.</span></span> <span data-ttu-id="9c5aa-144">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-145">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-145"></span></span>'
          type:
            - '(result: Office.AsyncResult<void>) => void'
  - uid: office.Office.Binding.getDataAsync
    summary: '<span data-ttu-id="9c5aa-146">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-146">Returns the data contained within the binding.</span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-147">**Наборы требований**:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-147">**Requirement sets**:</span></span>

      - <span data-ttu-id="9c5aa-148">[ХтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-148">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="9c5aa-149">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-149"></span></span>

      - [<span data-ttu-id="9c5aa-150">матриксбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-150">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="9c5aa-151">[МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-151">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="9c5aa-152">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-152"></span></span>

      - <span data-ttu-id="9c5aa-153">[УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-153">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="9c5aa-154">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-154"></span></span>

      - [<span data-ttu-id="9c5aa-155">TableBindings</span><span class="sxs-lookup"><span data-stu-id="9c5aa-155">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="9c5aa-156">[ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-156">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="9c5aa-157">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-157"></span></span>

      - [<span data-ttu-id="9c5aa-158">текстбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-158">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="9c5aa-159">[ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-159">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="9c5aa-160">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-160"></span></span>

      <span data-ttu-id="9c5aa-161">При вызове из MatrixBinding или TableBinding метод getDataAsync будет возвращать подмножество связанных значений, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (и они указывают непрерывный и допустимый диапазон).</span><span class="sxs-lookup"><span data-stu-id="9c5aa-161">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
    name: 'getDataAsync(options, callback)'
    fullName: 'getDataAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="9c5aa-162">Предоставляет параметры для получения данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-162">Provides options for how to get the data in a binding.</span></span>
          type:
            - office.Office.GetBindingDataOptions
        - id: callback
          description: '<span data-ttu-id="9c5aa-163">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-163">Optional.</span></span> <span data-ttu-id="9c5aa-164">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-165">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-165"></span></span> <span data-ttu-id="9c5aa-166">`value` Свойство Result имеет значения в указанной привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-166">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="9c5aa-167">Если `coercionType` параметр указан (при успешном вызове), данные возвращаются в формате, описанном в разделе Перечисление CoercionType.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-167">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
      typeParameters:
        - id: T
  - uid: office.Office.Binding.getDataAsync_1
    summary: '<span data-ttu-id="9c5aa-168">Возвращает данные, содержащиеся в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-168">Returns the data contained within the binding.</span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-169">**Наборы требований**:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-169">**Requirement sets**:</span></span>

      - <span data-ttu-id="9c5aa-170">[ХтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-170">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="9c5aa-171">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-171"></span></span>

      - [<span data-ttu-id="9c5aa-172">матриксбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-172">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="9c5aa-173">[МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-173">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="9c5aa-174">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-174"></span></span>

      - <span data-ttu-id="9c5aa-175">[УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-175">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="9c5aa-176">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-176"></span></span>

      - [<span data-ttu-id="9c5aa-177">TableBindings</span><span class="sxs-lookup"><span data-stu-id="9c5aa-177">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="9c5aa-178">[ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-178">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="9c5aa-179">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-179"></span></span>

      - [<span data-ttu-id="9c5aa-180">текстбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-180">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="9c5aa-181">[ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-181">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="9c5aa-182">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-182"></span></span>

      <span data-ttu-id="9c5aa-183">При вызове из MatrixBinding или TableBinding метод getDataAsync будет возвращать подмножество связанных значений, если указаны необязательные параметры startRow, startColumn, rowCount и columnCount (и они указывают непрерывный и допустимый диапазон).</span><span class="sxs-lookup"><span data-stu-id="9c5aa-183">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>

      #### <a name="examples"></a><span data-ttu-id="9c5aa-184">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-184">Examples</span></span>

      ```javascript
      function showBindingData() {
          Office.select("bindings#MyBinding").getDataAsync(function (asyncResult) {
              write(asyncResult.value)
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // There is an important difference in behavior between using the "table" and "matrix" coercionType with the
      // Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following
      // two examples. These code examples show event handler functions for the Binding.SelectionChanged event.

      // If you specify the "table" coercionType, the TableData.rows property ( result.value.rows in the following
      // code example) returns an array that contains only the body rows of the table. So, its 0th row will be the
      // first non-header row in the table.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'table', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value.rows[0][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }

      // However, if you specify the "matrix" coercionType, result.value in the following code example returns an array
      // that contains the table header in the 0th row. If the table header contains multiple rows, then these are all
      // included in the result.value matrix as separate rows before the table body rows are included.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'matrix', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value[1][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getDataAsync(callback)
    fullName: getDataAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="9c5aa-185">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-185">Optional.</span></span> <span data-ttu-id="9c5aa-186">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-186">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-187">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-187"></span></span> <span data-ttu-id="9c5aa-188">`value` Свойство Result имеет значения в указанной привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-188">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="9c5aa-189">Если `coercionType` параметр указан (при успешном вызове), данные возвращаются в формате, описанном в разделе Перечисление CoercionType.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-189">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - '(result: AsyncResult<T>) => void'
      typeParameters:
        - id: T
  - uid: office.Office.Binding.removeHandlerAsync
    summary: <span data-ttu-id="9c5aa-190">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-190">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: '<span data-ttu-id="9c5aa-191">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-191">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="9c5aa-192">Тип события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-192">The event type.</span></span> <span data-ttu-id="9c5aa-193">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-193">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-194">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-194"></span></span>'
          type:
            - office.Office.EventType
        - id: options
          description: '<span data-ttu-id="9c5aa-195">Предоставляет параметры для определения обработчика событий или обработчиков, которые удаляются.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-195">Provides options to determine which event handler or handlers are removed.</span></span>'
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="9c5aa-196">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-196">Optional.</span></span> <span data-ttu-id="9c5aa-197">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-197">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-198">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-198"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.removeHandlerAsync_1
    summary: <span data-ttu-id="9c5aa-199">Удаляет указанный обработчик из привязки для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-199">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="9c5aa-200">**Набор требований**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-200">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      #### <a name="examples"></a><span data-ttu-id="9c5aa-201">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-201">Examples</span></span>

      ```javascript
      function removeEventHandlerFromBinding() {
          Office.select("bindings#MyBinding").removeHandlerAsync(
              Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="9c5aa-202">Тип события.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-202">The event type.</span></span> <span data-ttu-id="9c5aa-203">Для привязок можно `Office.EventType.BindingDataChanged` или`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-203">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="9c5aa-204">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-204"></span></span>'
          type:
            - office.Office.EventType
        - id: callback
          description: '<span data-ttu-id="9c5aa-205">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-205">Optional.</span></span> <span data-ttu-id="9c5aa-206">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-206">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-207">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-207"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.setDataAsync
    summary: '<span data-ttu-id="9c5aa-208">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-208">Writes data to the bound section of the document represented by the specified binding object.</span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-209">**Наборы требований**:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-209">**Requirement sets**:</span></span>

      - <span data-ttu-id="9c5aa-210">[ХтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-210">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="9c5aa-211">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-211"></span></span>

      - [<span data-ttu-id="9c5aa-212">матриксбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-212">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="9c5aa-213">[МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-213">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="9c5aa-214">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-214"></span></span>

      - <span data-ttu-id="9c5aa-215">[УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-215">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="9c5aa-216">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-216"></span></span>

      - [<span data-ttu-id="9c5aa-217">TableBindings</span><span class="sxs-lookup"><span data-stu-id="9c5aa-217">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="9c5aa-218">[ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-218">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="9c5aa-219">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-219"></span></span>

      - [<span data-ttu-id="9c5aa-220">текстбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-220">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="9c5aa-221">[ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-221">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="9c5aa-222">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-222"></span></span>

      <span data-ttu-id="9c5aa-223">Значение, передаваемое для данных, содержит данные, которые будут записаны в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-223">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="9c5aa-224">Тип передаваемых значений определяет, что будет записано, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-224">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-225">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-225">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-226">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-226">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-227">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-227">A string</span></span></td> <td><span data-ttu-id="9c5aa-228">Записывается обычный текст или все данные, которые можно привести к строке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-228">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-229">Массив массивов (матрица)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-229">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="9c5aa-230">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-230"></span></span> <span data-ttu-id="9c5aa-231">Чтобы записать один столбец из трех строк, передайте массив следующим образом:`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-231">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="9c5aa-232">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-232"></span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-233">`TableData` Объект</span><span class="sxs-lookup"><span data-stu-id="9c5aa-233">A `TableData` object</span></span></td> <td><span data-ttu-id="9c5aa-234">Записываются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-234">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-235">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-235">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="9c5aa-236">Для Word указанные данные записываются в привязку следующим образом:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-236">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-237">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-237">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-238">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-238">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-239">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-239">A string</span></span></td> <td><span data-ttu-id="9c5aa-240">Записывается указанный текст.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-240">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-241">Массив массивов (матрица) или `TableData` объект</span><span class="sxs-lookup"><span data-stu-id="9c5aa-241">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="9c5aa-242">Записывается таблица Word.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-242">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-243">HTML</span><span class="sxs-lookup"><span data-stu-id="9c5aa-243">HTML</span></span></td> <td><span data-ttu-id="9c5aa-244">Записывается указанный HTML-код.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-244">The specified HTML is written.</span></span> <span data-ttu-id="9c5aa-245">Если указанный HTML-код содержит недопустимые фрагменты, Word не вызовет ошибку.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-245">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="9c5aa-246">Word запишет весь допустимый HTML-код и пропустит недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-246">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-247">Office Open XML (Open XML)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-247">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="9c5aa-248">Записывается указанный XML-код.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-248">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-249">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-249">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-250">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-250">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-251">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-251">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-252">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-252">A string</span></span></td> <td><span data-ttu-id="9c5aa-253">Указанный текст вставляется в качестве значения первой привязанной ячейки. Кроме того, можно указать допустимую формулу, чтобы добавить эту формулу в связанную ячейку.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-253">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="9c5aa-254">Например, если задать для параметра data значение `"=SUM(A1:A5)"`, значения в указанном диапазоне будут суммироваться.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-254">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="9c5aa-255">Если задать формулу в связанной ячейке, добавленную (или существующую) формулу в этой ячейке будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-255">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="9c5aa-256">Когда вызывается метод Binding.getDataAsync для привязанной ячейки для чтения этих данных, метод может вернуть только данные, отображенные в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="9c5aa-256">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-257">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class="sxs-lookup"><span data-stu-id="9c5aa-257">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="9c5aa-258">Записывается набор строк и столбцов. Кроме того, можно указать массив массивов, содержащий допустимые формулы, чтобы добавить их в связанные ячейки.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-258">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="9c5aa-259">Например, если задать для `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` параметра data значение, в привязку, которая содержит две ячейки, будут добавлены эти две формулы.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-259">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="9c5aa-260">Как и при задании формулы в одной связанной ячейке, невозможно считать добавленные формулы (или все существующие формулы) из привязки с помощью `Binding.getDataAsync` метода — она возвращает только те данные, которые отображаются в связанных ячейках.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-260">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-261">`TableData` Объект, а форма таблицы соответствует связанной таблице.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-261">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="9c5aa-262">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-262">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="9c5aa-263">**Note**: Если вы задаете формулы в объекте TableData, который вы передаете в качестве параметра *Data* , вы можете не получить ожидаемые результаты из-за функции "вычисляемые столбцы" в Excel, которая автоматически дублирует формулы в столбце.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-263">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="9c5aa-264">Чтобы обойти это, когда вы хотите записать *data* с формулами в привязанную таблицу, попробуйте указать данные как массив массивов (вместо объекта TableData) и для *coercionType* указать Microsoft.Office.Matrix или "матрица".</span><span class="sxs-lookup"><span data-stu-id="9c5aa-264">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-265">Для Excel в Интернете:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-265">For Excel on the web:</span></span>

      - <span data-ttu-id="9c5aa-266">Общее число ячеек в значении, переданном параметру Data, не может превышать 20 000 в отдельном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-266">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="9c5aa-267">Количество групп форматирования, переданных параметру cellFormat, не может превышать 100.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-267">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="9c5aa-268">Одна группа форматирования состоит из набора вариантов форматирования, применяемого к указанному диапазону ячеек.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-268">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="9c5aa-269">Во всех остальных случаях возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-269">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="9c5aa-270">Метод setDataAsync записывает данные в подмножество таблицы или привязки матрицы, если указаны необязательные параметры startRow и startColumn, и они указывают допустимый диапазон.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-270">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="9c5aa-271">В функции обратного вызова, переданной в метод setDataAsync, можно использовать свойства объекта AsyncResult, чтобы возвратить такие сведения:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-271">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-272">Свойство</span><span class="sxs-lookup"><span data-stu-id="9c5aa-272">Property</span></span></th> <th><span data-ttu-id="9c5aa-273">Назначение</span><span class="sxs-lookup"><span data-stu-id="9c5aa-273">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-274">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="9c5aa-274">AsyncResult.value</span></span></td> <td><span data-ttu-id="9c5aa-275">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-275">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-276">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="9c5aa-276">AsyncResult.status</span></span></td> <td><span data-ttu-id="9c5aa-277">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-277">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-278">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="9c5aa-278">AsyncResult.error</span></span></td> <td><span data-ttu-id="9c5aa-279">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-279">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-280">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="9c5aa-280">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="9c5aa-281">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-281">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setDataAsync(data, options, callback)'
    fullName: 'setDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="9c5aa-282">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-282">The data to be set in the current selection.</span></span> <span data-ttu-id="9c5aa-283">Возможные типы данных для узла:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-283">Possible data types by host:</span></span>

            <span data-ttu-id="9c5aa-284">строка: Excel в Интернете и Windows, Word только в Интернете и Windows</span><span class="sxs-lookup"><span data-stu-id="9c5aa-284">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="9c5aa-285">массив массивов: только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-285">array of arrays: Excel and Word only</span></span>

            [<span data-ttu-id="9c5aa-286">Office. TableData</span><span class="sxs-lookup"><span data-stu-id="9c5aa-286">Office.TableData</span></span>](xref:office.Office.TableData)<!-- --><span data-ttu-id="9c5aa-287">: Только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-287">: Excel and Word only</span></span>

            <span data-ttu-id="9c5aa-288">HTML: Word только в Интернете и Windows</span><span class="sxs-lookup"><span data-stu-id="9c5aa-288">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="9c5aa-289">Office Open XML: только Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-289">Office Open XML: Word only</span></span>
          type:
            - TableData | any
        - id: options
          description: <span data-ttu-id="9c5aa-290">Предоставляет параметры для настройки данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-290">Provides options for how to set the data in a binding.</span></span>
          type:
            - office.Office.SetBindingDataOptions
        - id: callback
          description: '<span data-ttu-id="9c5aa-291">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-291">Optional.</span></span> <span data-ttu-id="9c5aa-292">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-292">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-293">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-293"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.setDataAsync_1
    summary: '<span data-ttu-id="9c5aa-294">Записывает данные в привязанный раздел документа, представленный указанным объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-294">Writes data to the bound section of the document represented by the specified binding object.</span></span>'
    remarks: |-
      <span data-ttu-id="9c5aa-295">**Наборы требований**:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-295">**Requirement sets**:</span></span>

      - <span data-ttu-id="9c5aa-296">[ХтмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (при использовании`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-296">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="9c5aa-297">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-297"></span></span>

      - [<span data-ttu-id="9c5aa-298">матриксбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-298">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="9c5aa-299">[МатрикскоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (при использовании`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-299">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="9c5aa-300">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-300"></span></span>

      - <span data-ttu-id="9c5aa-301">[УксмлкоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (при использовании`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-301">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="9c5aa-302">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-302"></span></span>

      - [<span data-ttu-id="9c5aa-303">TableBindings</span><span class="sxs-lookup"><span data-stu-id="9c5aa-303">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="9c5aa-304">[ТаблекоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (при использовании`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-304">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="9c5aa-305">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-305"></span></span>

      - [<span data-ttu-id="9c5aa-306">текстбиндингс</span><span class="sxs-lookup"><span data-stu-id="9c5aa-306">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="9c5aa-307">[ТексткоерЦион](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (при использовании`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-307">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="9c5aa-308">)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-308"></span></span>

      <span data-ttu-id="9c5aa-309">Значение, передаваемое для данных, содержит данные, которые будут записаны в привязке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-309">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="9c5aa-310">Тип передаваемых значений определяет, что будет записано, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-310">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-311">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-311">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-312">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-312">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-313">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-313">A string</span></span></td> <td><span data-ttu-id="9c5aa-314">Записывается обычный текст или все данные, которые можно привести к строке.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-314">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-315">Массив массивов (матрица)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-315">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="9c5aa-316">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-316"></span></span> <span data-ttu-id="9c5aa-317">Чтобы записать один столбец из трех строк, передайте массив следующим образом:`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="9c5aa-317">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="9c5aa-318">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-318"></span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-319">`TableData` Объект</span><span class="sxs-lookup"><span data-stu-id="9c5aa-319">A `TableData` object</span></span></td> <td><span data-ttu-id="9c5aa-320">Записываются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-320">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-321">Кроме того, при записи данных в привязку применяются следующие действия, соответствующие конкретному приложению.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-321">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="9c5aa-322">Для Word указанные данные записываются в привязку следующим образом:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-322">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-323">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-323">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-324">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-324">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-325">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-325">A string</span></span></td> <td><span data-ttu-id="9c5aa-326">Записывается указанный текст.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-326">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-327">Массив массивов (матрица) или `TableData` объект</span><span class="sxs-lookup"><span data-stu-id="9c5aa-327">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="9c5aa-328">Записывается таблица Word.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-328">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-329">HTML</span><span class="sxs-lookup"><span data-stu-id="9c5aa-329">HTML</span></span></td> <td><span data-ttu-id="9c5aa-330">Записывается указанный HTML-код.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-330">The specified HTML is written.</span></span> <span data-ttu-id="9c5aa-331">Если указанный HTML-код содержит недопустимые фрагменты, Word не вызовет ошибку.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-331">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="9c5aa-332">Word запишет весь допустимый HTML-код и пропустит недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-332">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-333">Office Open XML (Open XML)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-333">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="9c5aa-334">Записывается указанный XML-код.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-334">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-335">В Excel указанное значение параметра data записывается в привязку таким образом:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-335">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-336">`data`оно</span><span class="sxs-lookup"><span data-stu-id="9c5aa-336">`data` value</span></span></th> <th><span data-ttu-id="9c5aa-337">Записываемые данные</span><span class="sxs-lookup"><span data-stu-id="9c5aa-337">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-338">Строка</span><span class="sxs-lookup"><span data-stu-id="9c5aa-338">A string</span></span></td> <td><span data-ttu-id="9c5aa-339">Указанный текст вставляется в качестве значения первой привязанной ячейки. Кроме того, можно указать допустимую формулу, чтобы добавить эту формулу в связанную ячейку.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-339">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="9c5aa-340">Например, если задать для параметра data значение `"=SUM(A1:A5)"`, значения в указанном диапазоне будут суммироваться.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-340">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="9c5aa-341">Если задать формулу в связанной ячейке, добавленную (или существующую) формулу в этой ячейке будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-341">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="9c5aa-342">Когда вызывается метод Binding.getDataAsync для привязанной ячейки для чтения этих данных, метод может вернуть только данные, отображенные в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="9c5aa-342">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-343">Массив массивов (матрица) и форма точно соответствует форме указанной привязки</span><span class="sxs-lookup"><span data-stu-id="9c5aa-343">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="9c5aa-344">Записывается набор строк и столбцов. Кроме того, можно указать массив массивов, содержащий допустимые формулы, чтобы добавить их в связанные ячейки.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-344">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="9c5aa-345">Например, если задать для `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` параметра data значение, в привязку, которая содержит две ячейки, будут добавлены эти две формулы.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-345">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="9c5aa-346">Как и при задании формулы в одной связанной ячейке, невозможно считать добавленные формулы (или все существующие формулы) из привязки с помощью `Binding.getDataAsync` метода — она возвращает только те данные, которые отображаются в связанных ячейках.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-346">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-347">`TableData` Объект, а форма таблицы соответствует связанной таблице.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-347">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="9c5aa-348">Записывается указанный набор строк или заголовков, если никакие другие данные в окружающих ячейках не перезаписываются.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-348">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="9c5aa-349">**Note**: Если вы задаете формулы в объекте TableData, который вы передаете в качестве параметра *Data* , вы можете не получить ожидаемые результаты из-за функции "вычисляемые столбцы" в Excel, которая автоматически дублирует формулы в столбце.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-349">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="9c5aa-350">Чтобы обойти это, когда вы хотите записать *data* с формулами в привязанную таблицу, попробуйте указать данные как массив массивов (вместо объекта TableData) и для *coercionType* указать Microsoft.Office.Matrix или "матрица".</span><span class="sxs-lookup"><span data-stu-id="9c5aa-350">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="9c5aa-351">Для Excel в Интернете:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-351">For Excel on the web:</span></span>

      - <span data-ttu-id="9c5aa-352">Общее число ячеек в значении, переданном параметру Data, не может превышать 20 000 в отдельном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-352">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="9c5aa-353">Количество групп форматирования, переданных параметру cellFormat, не может превышать 100.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-353">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="9c5aa-354">Одна группа форматирования состоит из набора вариантов форматирования, применяемого к указанному диапазону ячеек.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-354">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="9c5aa-355">Во всех остальных случаях возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-355">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="9c5aa-356">Метод setDataAsync записывает данные в подмножество таблицы или привязки матрицы, если указаны необязательные параметры startRow и startColumn, и они указывают допустимый диапазон.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-356">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="9c5aa-357">В функции обратного вызова, переданной в метод setDataAsync, можно использовать свойства объекта AsyncResult, чтобы возвратить такие сведения:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-357">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="9c5aa-358">Свойство</span><span class="sxs-lookup"><span data-stu-id="9c5aa-358">Property</span></span></th> <th><span data-ttu-id="9c5aa-359">Назначение</span><span class="sxs-lookup"><span data-stu-id="9c5aa-359">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="9c5aa-360">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="9c5aa-360">AsyncResult.value</span></span></td> <td><span data-ttu-id="9c5aa-361">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-361">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-362">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="9c5aa-362">AsyncResult.status</span></span></td> <td><span data-ttu-id="9c5aa-363">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-363">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-364">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="9c5aa-364">AsyncResult.error</span></span></td> <td><span data-ttu-id="9c5aa-365">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-365">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="9c5aa-366">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="9c5aa-366">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="9c5aa-367">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-367">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="9c5aa-368">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-368">Examples</span></span>

      ```javascript
      function setBindingData() {
          Office.select("bindings#MyBinding").setDataAsync('Hello World!', function (asyncResult) { });
      }

      // Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.
      // For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter 
      // as "html" as shown in the following example, which uses HTML <b> tags to make "Hello" bold.
      function writeHtmlData() {
          Office.select("bindings#myBinding").setDataAsync(
              "<b>Hello</b> World!", {coercionType: "html"}, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In this example, the call to setDataAsync passes the data parameter as an array of arrays
      // (to create a single column of three rows), and specifies the data structure with the 
      // coercionType parameter as a "matrix".
      function writeBoundDataMatrix() {
          Office.select("bindings#myBinding").setDataAsync(
              [['Berlin'],['Munich'],['Duisburg']],{ coercionType: "matrix" }, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter 
      // as a TableData object (to write three columns and three rows), and specifies the data structure
      // with the coercionType parameter as a "table".

      // In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,
      // but as a single column with a new header and three rows, to update the values in the last column 
      // of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter 
      // is specified as 2 to replace the values in the third column of the table.
      function writeBoundDataTable() {
          // Create a TableData object.
          var myTable = new Office.TableData();
          myTable.headers = ['First Name', 'Last Name', 'Grade'];
          myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];

          // Set myTable in the binding.
          Office.select("bindings#myBinding").setDataAsync(myTable, { coercionType: "table" }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }

      // Replace last column with different data.
      function updateTableData() {
          var newTable = new Office.TableData();
          newTable.headers = ["Gender"];
          newTable.rows = [["M"],["M"],["F"]];
          Office.select("bindings#myBinding").setDataAsync(newTable, { coercionType: "table", startColumn:2 }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }     
          });   
      }

      // In this example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setDataAsync([['Berlin'],['Munich'],['Duisburg']],
        {cellFormat:[{cells: {row: 1}, format: {fontColor: "yellow"}}, 
            {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}]}, 
        function (asyncResult){});
      ```
    name: 'setDataAsync(data, callback)'
    fullName: 'setDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="9c5aa-369">Данные, записываемые в текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-369">The data to be set in the current selection.</span></span> <span data-ttu-id="9c5aa-370">Возможные типы данных для узла:</span><span class="sxs-lookup"><span data-stu-id="9c5aa-370">Possible data types by host:</span></span>

            <span data-ttu-id="9c5aa-371">строка: Excel в Интернете и Windows, Word только в Интернете и Windows</span><span class="sxs-lookup"><span data-stu-id="9c5aa-371">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="9c5aa-372">массив массивов: только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-372">array of arrays: Excel and Word only</span></span>

            `TableData`<!-- --><span data-ttu-id="9c5aa-373">: Только Excel и Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-373">: Excel and Word only</span></span>

            <span data-ttu-id="9c5aa-374">HTML: Word только в Интернете и Windows</span><span class="sxs-lookup"><span data-stu-id="9c5aa-374">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="9c5aa-375">Office Open XML: только Word</span><span class="sxs-lookup"><span data-stu-id="9c5aa-375">Office Open XML: Word only</span></span>
          type:
            - TableData | any
        - id: callback
          description: '<span data-ttu-id="9c5aa-376">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-376">Optional.</span></span> <span data-ttu-id="9c5aa-377">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="9c5aa-377">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="9c5aa-378">.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-378"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Binding.document
    summary: '<span data-ttu-id="9c5aa-379">Получение объекта Document, связанного с привязкой.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-379">Get the Document object associated with the binding.</span></span>'
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Office.Document;'
      return:
        type:
          - office.Office.Document
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9c5aa-380">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-380">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.document.url);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.Binding.id
    summary: '<span data-ttu-id="9c5aa-381">Строка, однозначно идентифицирующая эту привязку между привязками в одном объекте [Office. Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="9c5aa-381">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9c5aa-382">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-382">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.id);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.Binding.type
    summary: <span data-ttu-id="9c5aa-383">Получает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="9c5aa-383">Gets the type of the binding.</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: Office.BindingType;'
      return:
        type:
          - office.Office.BindingType
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9c5aa-384">Примеры</span><span class="sxs-lookup"><span data-stu-id="9c5aa-384">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("MyBinding", function (asyncResult) { 
              write(asyncResult.value.type); 
          }) 

          // Function that writes to a div with id='message' on the page. 
          function write(message){ 
              document.getElementById('message').innerText += message;  
          }
          ```