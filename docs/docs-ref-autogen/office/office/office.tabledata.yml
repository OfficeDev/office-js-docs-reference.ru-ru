### YamlMime:UniversalReference
items:
  - uid: office.Office.TableData
    summary: '<span data-ttu-id="7b80f-101">Представляет данные в таблице или в [Office. TableBinding](xref:office.Office.TableBinding)</span><span class="sxs-lookup"><span data-stu-id="7b80f-101">Represents the data in a table or an [Office.TableBinding](xref:office.Office.TableBinding)</span></span><!-- --><span data-ttu-id="7b80f-102">.</span><span class="sxs-lookup"><span data-stu-id="7b80f-102"></span></span>'
    name: Office.TableData
    fullName: Office.TableData
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.Office.TableData.(constructor)
      - office.Office.TableData.(constructor)_1
      - office.Office.TableData.headers
      - office.Office.TableData.rows
  - uid: office.Office.TableData.(constructor)
    summary: <span data-ttu-id="7b80f-103">Создает новый экземпляр `TableData` класса</span><span class="sxs-lookup"><span data-stu-id="7b80f-103">Constructs a new instance of the `TableData` class</span></span>
    name: '(constructor)(rows, headers)'
    fullName: '(constructor)(rows, headers)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(rows: any[][], headers: any[]);'
      parameters:
        - id: rows
          description: ''
          type:
            - 'any[][]'
        - id: headers
          description: ''
          type:
            - 'any[]'
  - uid: office.Office.TableData.(constructor)_1
    summary: <span data-ttu-id="7b80f-104">Создает новый экземпляр `TableData` класса</span><span class="sxs-lookup"><span data-stu-id="7b80f-104">Constructs a new instance of the `TableData` class</span></span>
    name: (constructor)()
    fullName: (constructor)()
    langs:
      - typeScript
    type: constructor
    syntax:
      content: constructor();
  - uid: office.Office.TableData.headers
    summary: <span data-ttu-id="7b80f-105">Получает или задает заголовки таблицы.</span><span class="sxs-lookup"><span data-stu-id="7b80f-105">Gets or sets the headers of the table.</span></span>
    remarks: |-
      <span data-ttu-id="7b80f-106">Чтобы указать заголовки, задайте массив массивов, соответствующий структуре таблицы.</span><span class="sxs-lookup"><span data-stu-id="7b80f-106">To specify headers, you must specify an array of arrays that corresponds to the structure of the table.</span></span> <span data-ttu-id="7b80f-107">Например, чтобы указать заголовки таблицы с двумя столбцами, необходимо задать для \[ \[свойства Header значение "Header1", "header2"\]\].</span><span class="sxs-lookup"><span data-stu-id="7b80f-107">For example, to specify headers for a two-column table you would set the header property to \[\['header1', 'header2'\]\].</span></span>

      <span data-ttu-id="7b80f-108">Если указать значение NULL для свойства Headers (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода будут получены следующие результаты:</span><span class="sxs-lookup"><span data-stu-id="7b80f-108">If you specify null for the headers property (or leaving the property empty when you construct a TableData object), the following results occur when your code executes:</span></span>

      - <span data-ttu-id="7b80f-109">При вставке новой таблицы будут созданы заголовки столбцов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7b80f-109">If you insert a new table, the default column headers for the table are created.</span></span>

      - <span data-ttu-id="7b80f-110">При перезаписи или обновлении существующей таблицы существующие заголовки не изменятся.</span><span class="sxs-lookup"><span data-stu-id="7b80f-110">If you overwrite or update an existing table, the existing headers are not altered.</span></span>

      #### <a name="examples"></a><span data-ttu-id="7b80f-111">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b80f-111">Examples</span></span>

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: headers
    fullName: headers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headers: any[];'
      return:
        type:
          - 'any[]'
  - uid: office.Office.TableData.rows
    summary: '<span data-ttu-id="7b80f-112">Получает или задает строки в таблице.</span><span class="sxs-lookup"><span data-stu-id="7b80f-112">Gets or sets the rows in the table.</span></span> <span data-ttu-id="7b80f-113">Возвращает массив массивов, который содержит данные в таблице.</span><span class="sxs-lookup"><span data-stu-id="7b80f-113">Returns an array of arrays that contains the data in the table.</span></span> <span data-ttu-id="7b80f-114">Возвращает пустой массив, если строки отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="7b80f-114">Returns an empty array if there are no rows.</span></span>'
    remarks: |-
      <span data-ttu-id="7b80f-115">Чтобы задать строки, необходимо указать массив массивов, соответствующий структуре таблицы.</span><span class="sxs-lookup"><span data-stu-id="7b80f-115">To specify rows, you must specify an array of arrays that corresponds to the structure of the table.</span></span> <span data-ttu-id="7b80f-116">Например, чтобы указать две строки строковых значений в таблице из двух столбцов, необходимо задать \[ \[для свойства Rows значение ' a ', ' b '\], \[' c ',\]\]' '.</span><span class="sxs-lookup"><span data-stu-id="7b80f-116">For example, to specify two rows of string values in a two-column table you would set the rows property to \[\['a', 'b'\], \['c', 'd'\]\].</span></span>

      <span data-ttu-id="7b80f-117">Если указать значение NULL для свойства Rows (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода выполняются следующие результаты:</span><span class="sxs-lookup"><span data-stu-id="7b80f-117">If you specify null for the rows property (or leave the property empty when you construct a TableData object), the following results occur when your code executes:</span></span>

      - <span data-ttu-id="7b80f-118">При вставке новой таблицы будет вставлена пустая строка.</span><span class="sxs-lookup"><span data-stu-id="7b80f-118">If you insert a new table, a blank row will be inserted.</span></span>

      - <span data-ttu-id="7b80f-119">При перезаписи или обновлении существующей таблицы существующие строки не изменятся.</span><span class="sxs-lookup"><span data-stu-id="7b80f-119">If you overwrite or update an existing table, the existing rows are not altered.</span></span>

      #### <a name="examples"></a><span data-ttu-id="7b80f-120">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b80f-120">Examples</span></span>

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rows: any[][];'
      return:
        type:
          - 'any[][]'