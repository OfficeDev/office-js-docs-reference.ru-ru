### YamlMime:TSType
name: Office.TableData
uid: office!Office.TableData:class
package: office!
fullName: Office.TableData
summary: Представляет данные в таблице или в [Office. TableBinding](xref:office!Office.TableBinding:interface)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
- name: (constructor)(rows, headers)
  uid: office!Office.TableData:constructor(1)
  package: office!
  fullName: (constructor)(rows, headers)
  summary: Создает новый экземпляр `TableData` класса
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'constructor(rows: any[][], headers: any[]);'
    parameters:
    - id: rows
      description: ''
      type: any[][]
    - id: headers
      description: ''
      type: any[]
- name: (constructor)()
  uid: office!Office.TableData:constructor(2)
  package: office!
  fullName: (constructor)()
  summary: Создает новый экземпляр `TableData` класса
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: constructor();
properties:
- name: headers
  uid: office!Office.TableData#headers:member
  package: office!
  fullName: headers
  summary: Получает или задает заголовки таблицы.
  remarks: >-
    Чтобы указать заголовки, задайте массив массивов, соответствующий структуре таблицы. Например, чтобы указать заголовки таблицы с двумя столбцами, необходимо задать для свойства Header значение \[ \[ "Header1", "header2" \] \] .


    Если указать значение NULL для свойства Headers (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода будут получены следующие результаты:


    - При вставке новой таблицы будут созданы заголовки столбцов по умолчанию.


    - При перезаписи или обновлении существующей таблицы существующие заголовки не изменятся.


    #### <a name="examples"></a>Примеры


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'headers: any[];'
    return:
      type: any[]
- name: rows
  uid: office!Office.TableData#rows:member
  package: office!
  fullName: rows
  summary: Получает или задает строки в таблице. Возвращает массив массивов, который содержит данные в таблице. Возвращает пустой массив, если строки отсутствуют.
  remarks: >-
    Чтобы задать строки, необходимо указать массив массивов, соответствующий структуре таблицы. Например, чтобы указать две строки строковых значений в таблице из двух столбцов, необходимо задать для свойства Rows значение \[ \[ ' a ', ' b ' \] , \[ ' c ', \] \] ' '.


    Если указать значение NULL для свойства Rows (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода выполняются следующие результаты:


    - При вставке новой таблицы будет вставлена пустая строка.


    - При перезаписи или обновлении существующей таблицы существующие строки не изменятся.


    #### <a name="examples"></a>Примеры


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rows: any[][];'
    return:
      type: any[][]
metadata:
  ms.openlocfilehash: 86d43e96e35287a0b6f70f75eee9b0922f5bd0a2
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49251334"
