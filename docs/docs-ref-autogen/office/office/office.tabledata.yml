### YamlMime:UniversalReference
items:
  - uid: 'office!Office.TableData:class'
    summary: 'Представляет данные в таблице или в [Office. TableBinding](xref:office!Office.TableBinding:interface)<!-- -->.'
    name: Office.TableData
    fullName: Office.TableData
    langs:
      - typeScript
    type: class
    package: office!
    children:
      - 'office!Office.TableData:constructor(1)'
      - 'office!Office.TableData:constructor(2)'
      - 'office!Office.TableData#headers:member'
      - 'office!Office.TableData#rows:member'
  - uid: 'office!Office.TableData:constructor(1)'
    summary: Создает новый экземпляр `TableData` класса
    name: '(constructor)(rows, headers)'
    fullName: '(constructor)(rows, headers)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(rows: any[][], headers: any[]);'
      parameters:
        - id: rows
          description: ''
          type:
            - 'any[][]'
        - id: headers
          description: ''
          type:
            - 'any[]'
  - uid: 'office!Office.TableData:constructor(2)'
    summary: Создает новый экземпляр `TableData` класса
    name: (constructor)()
    fullName: (constructor)()
    langs:
      - typeScript
    type: constructor
    syntax:
      content: constructor();
  - uid: 'office!Office.TableData#headers:member'
    summary: Получает или задает заголовки таблицы.
    remarks: |-
      Чтобы указать заголовки, задайте массив массивов, соответствующий структуре таблицы. Например, чтобы указать заголовки таблицы с двумя столбцами, необходимо задать для свойства Header значение \[ \[ "Header1", "header2" \] \] .

      Если указать значение NULL для свойства Headers (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода будут получены следующие результаты:

      - При вставке новой таблицы будут созданы заголовки столбцов по умолчанию.

      - При перезаписи или обновлении существующей таблицы существующие заголовки не изменятся.

      #### <a name="examples"></a>Примеры

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: headers
    fullName: headers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headers: any[];'
      return:
        type:
          - 'any[]'
  - uid: 'office!Office.TableData#rows:member'
    summary: 'Получает или задает строки в таблице. Возвращает массив массивов, который содержит данные в таблице. Возвращает пустой массив, если строки отсутствуют.'
    remarks: |-
      Чтобы задать строки, необходимо указать массив массивов, соответствующий структуре таблицы. Например, чтобы указать две строки строковых значений в таблице из двух столбцов, необходимо задать для свойства Rows значение \[ \[ ' a ', ' b ' \] , \[ ' c ', \] \] ' '.

      Если указать значение NULL для свойства Rows (или оставить это свойство пустым при построении объекта TableData), то при выполнении кода выполняются следующие результаты:

      - При вставке новой таблицы будет вставлена пустая строка.

      - При перезаписи или обновлении существующей таблицы существующие строки не изменятся.

      #### <a name="examples"></a>Примеры

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rows: any[][];'
      return:
        type:
          - 'any[][]'