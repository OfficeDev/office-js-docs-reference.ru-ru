### YamlMime:UniversalReference
items:
  - uid: 'office!Office.TableBinding:interface'
    summary: '<span data-ttu-id="dd244-101">Представляет привязку в двух измерениях строк и столбцов, при желании с заголовками.</span><span class="sxs-lookup"><span data-stu-id="dd244-101">Represents a binding in two dimensions of rows and columns, optionally with headers.</span></span>'
    remarks: |-
      <span data-ttu-id="dd244-102">Объект `id` TableBinding наследует свойство, `type` свойство, `getDataAsync` метод и `setDataAsync` метод из объекта [Office. Binding](xref:office!Office.Binding:interface) .</span><span class="sxs-lookup"><span data-stu-id="dd244-102">The TableBinding object inherits the `id` property, `type` property, `getDataAsync` method, and `setDataAsync` method from the [Office.Binding](xref:office!Office.Binding:interface) object.</span></span>

      <span data-ttu-id="dd244-103">Обратите внимание, что после создания привязки таблицы каждая новая строка, добавляемая пользователем в таблицу, автоматически включается в привязку и увеличивается значение rowCount.</span><span class="sxs-lookup"><span data-stu-id="dd244-103">For Excel, note that after you establish a table binding, each new row a user adds to the table is automatically included in the binding and rowCount increases.</span></span>
    name: Office.TableBinding
    fullName: Office.TableBinding
    langs:
      - typeScript
    type: interface
    extends:
      - 'office!Office.Binding:interface'
    package: office!
    children:
      - 'office!Office.TableBinding#addColumnsAsync:member(1)'
      - 'office!Office.TableBinding#addColumnsAsync:member(2)'
      - 'office!Office.TableBinding#addRowsAsync:member(1)'
      - 'office!Office.TableBinding#addRowsAsync:member(2)'
      - 'office!Office.TableBinding#clearFormatsAsync:member(1)'
      - 'office!Office.TableBinding#clearFormatsAsync:member(2)'
      - 'office!Office.TableBinding#columnCount:member'
      - 'office!Office.TableBinding#deleteAllDataValuesAsync:member(1)'
      - 'office!Office.TableBinding#deleteAllDataValuesAsync:member(2)'
      - 'office!Office.TableBinding#getFormatsAsync:member(1)'
      - 'office!Office.TableBinding#getFormatsAsync:member(2)'
      - 'office!Office.TableBinding#hasHeaders:member'
      - 'office!Office.TableBinding#rowCount:member'
      - 'office!Office.TableBinding#setFormatsAsync:member(1)'
      - 'office!Office.TableBinding#setFormatsAsync:member(2)'
      - 'office!Office.TableBinding#setTableOptionsAsync:member(1)'
      - 'office!Office.TableBinding#setTableOptionsAsync:member(2)'
  - uid: 'office!Office.TableBinding#addColumnsAsync:member(1)'
    summary: <span data-ttu-id="dd244-104">Добавляет указанные данные в таблицу в качестве дополнительных столбцов.</span><span class="sxs-lookup"><span data-stu-id="dd244-104">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-105">Чтобы добавить один или несколько столбцов, указывающих значения данных и заголовков, передайте объект TableData в качестве параметра data.</span><span class="sxs-lookup"><span data-stu-id="dd244-105">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="dd244-106">Чтобы добавить один или несколько столбцов только с данными, передайте в качестве параметра data массив массивов ("матрицу").</span><span class="sxs-lookup"><span data-stu-id="dd244-106">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="dd244-107">Успех или неудача операции addColumnsAsync является атомарной.</span><span class="sxs-lookup"><span data-stu-id="dd244-107">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="dd244-108">То есть либо вся операция добавления столбцов выполняется успешно, либо происходит полный откат (и свойство AsyncResult.status, возвращенное в обратный вызов, будет содержать сведения об ошибке).</span><span class="sxs-lookup"><span data-stu-id="dd244-108">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="dd244-109">Каждая строка в массиве, передаваемой в качестве аргумента данных, должна иметь то же количество строк, что и обновляемая таблица.</span><span class="sxs-lookup"><span data-stu-id="dd244-109">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="dd244-110">В противном случае вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-110">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-p104">Все строки и ячейки массива должны быть успешно добавлены в новые столбцы таблицы. Если какая-либо строка или ячейка по какой-то причине не добавляется, вся операция завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-p104">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-113">Если вы передаете объект TableData в качестве аргумента Data, число строк заголовков должно быть соответствующим для обновляемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-113">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="dd244-114">Дополнительная зазамечание для Excel в Интернете: общее число ячеек в объекте TableData, переданном параметру Data, не может превышать 20 000 в единственном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="dd244-114">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-115">Examples</span></span>

      ```javascript
      // The following example adds a single column with three rows to a bound table with the id "myTable"
      // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,
      // the table being updated must have three rows.

      // Add a column to a binding of type table by passing a TableData object.
      function addColumns() {
          var myTable = new Office.TableData();
          myTable.headers = [["Cities"]];
          myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }

      // The following example adds a single column with three rows to a bound table with the id myTable
      // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.
      // To succeed, the table being updated must have three rows.

      // Add a column to a binding of type table by passing an array of arrays.
      function addColumns() {
          var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }
      ```
    name: 'addColumnsAsync(tableData, options, callback)'
    fullName: 'addColumnsAsync(tableData, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: '<span data-ttu-id="dd244-116">Массив массивов ("Matrix") или объект TableData, который содержит один или несколько столбцов данных для добавления в таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-116">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="dd244-117">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-117">Required.</span></span>'
          type:
            - 'office!Office.TableBinding#addColumnsAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="dd244-118">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-118">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-119">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-119">Optional.</span></span> <span data-ttu-id="dd244-120">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-121">.</span><span class="sxs-lookup"><span data-stu-id="dd244-121"></span></span>'
          type:
            - 'office!Office.TableBinding#addColumnsAsync~1:complex'
  - uid: 'office!Office.TableBinding#addColumnsAsync:member(2)'
    summary: <span data-ttu-id="dd244-122">Добавляет указанные данные в таблицу в качестве дополнительных столбцов.</span><span class="sxs-lookup"><span data-stu-id="dd244-122">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-123">Чтобы добавить один или несколько столбцов, указывающих значения данных и заголовков, передайте объект TableData в качестве параметра data.</span><span class="sxs-lookup"><span data-stu-id="dd244-123">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="dd244-124">Чтобы добавить один или несколько столбцов только с данными, передайте в качестве параметра data массив массивов ("матрицу").</span><span class="sxs-lookup"><span data-stu-id="dd244-124">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="dd244-125">Успех или неудача операции addColumnsAsync является атомарной.</span><span class="sxs-lookup"><span data-stu-id="dd244-125">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="dd244-126">То есть либо вся операция добавления столбцов выполняется успешно, либо происходит полный откат (и свойство AsyncResult.status, возвращенное в обратный вызов, будет содержать сведения об ошибке).</span><span class="sxs-lookup"><span data-stu-id="dd244-126">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="dd244-127">Каждая строка в массиве, передаваемой в качестве аргумента данных, должна иметь то же количество строк, что и обновляемая таблица.</span><span class="sxs-lookup"><span data-stu-id="dd244-127">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="dd244-128">В противном случае вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-128">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-p110">Все строки и ячейки массива должны быть успешно добавлены в новые столбцы таблицы. Если какая-либо строка или ячейка по какой-то причине не добавляется, вся операция завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-p110">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-131">Если вы передаете объект TableData в качестве аргумента Data, число строк заголовков должно быть соответствующим для обновляемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-131">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="dd244-132">Дополнительная зазамечание для Excel в Интернете: общее число ячеек в объекте TableData, переданном параметру Data, не может превышать 20 000 в единственном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="dd244-132">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addColumnsAsync(tableData, callback)'
    fullName: 'addColumnsAsync(tableData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: '<span data-ttu-id="dd244-133">Массив массивов ("Matrix") или объект TableData, который содержит один или несколько столбцов данных для добавления в таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-133">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="dd244-134">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-134">Required.</span></span>'
          type:
            - 'office!Office.TableBinding#addColumnsAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="dd244-135">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-135">Optional.</span></span> <span data-ttu-id="dd244-136">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-136">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-137">.</span><span class="sxs-lookup"><span data-stu-id="dd244-137"></span></span>'
          type:
            - 'office!Office.TableBinding#addColumnsAsync~3:complex'
  - uid: 'office!Office.TableBinding#addRowsAsync:member(1)'
    summary: <span data-ttu-id="dd244-138">Добавляет указанные данные в таблицу в качестве дополнительных строк.</span><span class="sxs-lookup"><span data-stu-id="dd244-138">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-139">Успех или неудача операции addRowsAsync является атомарной.</span><span class="sxs-lookup"><span data-stu-id="dd244-139">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="dd244-140">То есть либо вся операция добавления столбцов выполняется успешно, либо происходит полный откат (и свойство AsyncResult.status, возвращенное в обратный вызов, будет содержать сведения об ошибке).</span><span class="sxs-lookup"><span data-stu-id="dd244-140">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="dd244-141">Каждая строка в массиве, передаваемой в качестве аргумента данных, должна иметь то же количество столбцов, что и обновляемая таблица.</span><span class="sxs-lookup"><span data-stu-id="dd244-141">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="dd244-142">В противном случае вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-142">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-143">Каждый столбец и ячейка в массиве должны успешно добавить этот столбец или ячейку в таблицу во вновь добавленных строках.</span><span class="sxs-lookup"><span data-stu-id="dd244-143">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="dd244-144">Если по какой либо причине не удается задать любой из столбцов или ячеек, вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-144">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-145">Если вы передаете объект TableData в качестве аргумента Data, число строк заголовков должно быть соответствующим для обновляемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-145">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="dd244-146">Дополнительная зазамечание для Excel в Интернете: общее число ячеек в объекте TableData, переданном параметру Data, не может превышать 20 000 в единственном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="dd244-146">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-147">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-147">Examples</span></span>

      ```javascript
      function addRowsToTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.addRowsAsync([["6", "k"], ["7", "j"]]);
          });
      }
      ```
    name: 'addRowsAsync(rows, options, callback)'
    fullName: 'addRowsAsync(rows, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: '<span data-ttu-id="dd244-148">Массив массивов ("Matrix") или объект TableData, который содержит одну или несколько строк данных для добавления в таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-148">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="dd244-149">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-149">Required.</span></span>'
          type:
            - 'office!Office.TableBinding#addRowsAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="dd244-150">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-150">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-151">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-151">Optional.</span></span> <span data-ttu-id="dd244-152">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-152">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-153">.</span><span class="sxs-lookup"><span data-stu-id="dd244-153"></span></span>'
          type:
            - 'office!Office.TableBinding#addRowsAsync~1:complex'
  - uid: 'office!Office.TableBinding#addRowsAsync:member(2)'
    summary: <span data-ttu-id="dd244-154">Добавляет указанные данные в таблицу в качестве дополнительных строк.</span><span class="sxs-lookup"><span data-stu-id="dd244-154">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-155">Успех или неудача операции addRowsAsync является атомарной.</span><span class="sxs-lookup"><span data-stu-id="dd244-155">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="dd244-156">То есть либо вся операция добавления столбцов выполняется успешно, либо происходит полный откат (и свойство AsyncResult.status, возвращенное в обратный вызов, будет содержать сведения об ошибке).</span><span class="sxs-lookup"><span data-stu-id="dd244-156">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="dd244-157">Каждая строка в массиве, передаваемой в качестве аргумента данных, должна иметь то же количество столбцов, что и обновляемая таблица.</span><span class="sxs-lookup"><span data-stu-id="dd244-157">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="dd244-158">В противном случае вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-158">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-159">Каждый столбец и ячейка в массиве должны успешно добавить этот столбец или ячейку в таблицу во вновь добавленных строках.</span><span class="sxs-lookup"><span data-stu-id="dd244-159">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="dd244-160">Если по какой либо причине не удается задать любой из столбцов или ячеек, вся операция завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="dd244-160">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="dd244-161">Если вы передаете объект TableData в качестве аргумента Data, число строк заголовков должно быть соответствующим для обновляемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-161">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="dd244-162">Дополнительная зазамечание для Excel в Интернете: общее число ячеек в объекте TableData, переданном параметру Data, не может превышать 20 000 в единственном вызове этого метода.</span><span class="sxs-lookup"><span data-stu-id="dd244-162">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addRowsAsync(rows, callback)'
    fullName: 'addRowsAsync(rows, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: '<span data-ttu-id="dd244-163">Массив массивов ("Matrix") или объект TableData, который содержит одну или несколько строк данных для добавления в таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-163">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="dd244-164">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-164">Required.</span></span>'
          type:
            - 'office!Office.TableBinding#addRowsAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="dd244-165">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-165">Optional.</span></span> <span data-ttu-id="dd244-166">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-166">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-167">.</span><span class="sxs-lookup"><span data-stu-id="dd244-167"></span></span>'
          type:
            - 'office!Office.TableBinding#addRowsAsync~3:complex'
  - uid: 'office!Office.TableBinding#clearFormatsAsync:member(1)'
    summary: <span data-ttu-id="dd244-168">Очищает форматирование в привязанной таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-168">Clears formatting on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-169">Более подробную информацию можно узнать [в статье Format Tables in надстроек для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) .</span><span class="sxs-lookup"><span data-stu-id="dd244-169">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-170">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-170">Examples</span></span>

      ```javascript
      // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":
      Office.select("bindings#myBinding").clearFormatsAsync();
      ```
    name: 'clearFormatsAsync(options, callback)'
    fullName: 'clearFormatsAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="dd244-171">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-171">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-172">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-172">Optional.</span></span> <span data-ttu-id="dd244-173">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-173">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-174">.</span><span class="sxs-lookup"><span data-stu-id="dd244-174"></span></span>'
          type:
            - 'office!Office.TableBinding#clearFormatsAsync~0:complex'
  - uid: 'office!Office.TableBinding#clearFormatsAsync:member(2)'
    summary: <span data-ttu-id="dd244-175">Очищает форматирование в привязанной таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-175">Clears formatting on the bound table.</span></span>
    remarks: '<span data-ttu-id="dd244-176">Более подробную информацию можно узнать [в статье Format Tables in надстроек для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) .</span><span class="sxs-lookup"><span data-stu-id="dd244-176">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>'
    name: clearFormatsAsync(callback)
    fullName: clearFormatsAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="dd244-177">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-177">Optional.</span></span> <span data-ttu-id="dd244-178">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-178">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-179">.</span><span class="sxs-lookup"><span data-stu-id="dd244-179"></span></span>'
          type:
            - 'office!Office.TableBinding#clearFormatsAsync~1:complex'
  - uid: 'office!Office.TableBinding#columnCount:member'
    summary: '<span data-ttu-id="dd244-180">Получает количество столбцов в TableBinding в виде целого значения.</span><span class="sxs-lookup"><span data-stu-id="dd244-180">Gets the number of columns in the TableBinding, as an integer value.</span></span>'
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="dd244-181">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-181">Examples</span></span>

          ```javascript
          function showBindingColumnCount() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Column: " + asyncResult.value.columnCount);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.TableBinding#deleteAllDataValuesAsync:member(1)'
    summary: '<span data-ttu-id="dd244-182">Удаляет из таблицы все строки и их значения, кроме строк заголовка; сдвиг зависит от ведущего приложения.</span><span class="sxs-lookup"><span data-stu-id="dd244-182">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: |-
      <span data-ttu-id="dd244-183">В Excel, если в таблице нет строки заголовка, этот метод удалит всю таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-183">In Excel, if the table has no header row, this method will delete the table itself.</span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-184">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-184">Examples</span></span>

      ```javascript
      function deleteAllRowsFromTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.deleteAllDataValuesAsync();
          });
      }
      ```
    name: 'deleteAllDataValuesAsync(options, callback)'
    fullName: 'deleteAllDataValuesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="dd244-185">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-185">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-186">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-186">Optional.</span></span> <span data-ttu-id="dd244-187">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-188">.</span><span class="sxs-lookup"><span data-stu-id="dd244-188"></span></span>'
          type:
            - 'office!Office.TableBinding#deleteAllDataValuesAsync~0:complex'
  - uid: 'office!Office.TableBinding#deleteAllDataValuesAsync:member(2)'
    summary: '<span data-ttu-id="dd244-189">Удаляет из таблицы все строки и их значения, кроме строк заголовка; сдвиг зависит от ведущего приложения.</span><span class="sxs-lookup"><span data-stu-id="dd244-189">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: '<span data-ttu-id="dd244-190">В Excel, если в таблице нет строки заголовка, этот метод удалит всю таблицу.</span><span class="sxs-lookup"><span data-stu-id="dd244-190">In Excel, if the table has no header row, this method will delete the table itself.</span></span>'
    name: deleteAllDataValuesAsync(callback)
    fullName: deleteAllDataValuesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="dd244-191">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-191">Optional.</span></span> <span data-ttu-id="dd244-192">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-192">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-193">.</span><span class="sxs-lookup"><span data-stu-id="dd244-193"></span></span>'
          type:
            - 'office!Office.TableBinding#deleteAllDataValuesAsync~1:complex'
  - uid: 'office!Office.TableBinding#getFormatsAsync:member(1)'
    summary: <span data-ttu-id="dd244-194">Получает форматирование указанных элементов в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-194">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-195">**Возвращаемая структура формата**</span><span class="sxs-lookup"><span data-stu-id="dd244-195">**Returned format structure**</span></span>

      <span data-ttu-id="dd244-196">Каждый объект JavaScript в массиве возвращаемых значений имеет следующую форму:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="dd244-196">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="dd244-197">`cells:` Свойство указывает диапазон, который необходимо отформатировать, используя одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="dd244-197">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="dd244-198">**Поддерживаемые диапазоны в свойстве ячеек**</span><span class="sxs-lookup"><span data-stu-id="dd244-198">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-199">параметры диапазона ячеек</span><span class="sxs-lookup"><span data-stu-id="dd244-199">cells range settings</span></span></th> <th><span data-ttu-id="dd244-200">Описание</span><span class="sxs-lookup"><span data-stu-id="dd244-200">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="dd244-201">Задает диапазон данных, отменяющий строку данных с отсчетом от нуля в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-201">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="dd244-202">Задает диапазон данных, который является столбцом n (от нуля) данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-202">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="dd244-203">Задает одну ячейку, которая является i-ой строкой и столбцом j таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-203">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="dd244-204">Указывает всю таблицу, включая заголовки столбцов, данные и итоги (если они имеются)</span><span class="sxs-lookup"><span data-stu-id="dd244-204">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="dd244-205">Указывает только данные в таблице (без заголовков и итогов).</span><span class="sxs-lookup"><span data-stu-id="dd244-205">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="dd244-206">Указывает только строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="dd244-206">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="dd244-207">`format:` Свойство указывает значения, соответствующие подмножеству параметров, доступных в диалоговом окне "Формат ячеек" в Excel (щелкните правой кнопкой &gt; мыши формат ячеек или &gt; ячеек &gt; формата основного формата).</span><span class="sxs-lookup"><span data-stu-id="dd244-207">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, options, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: '<span data-ttu-id="dd244-208">Литерал объекта, содержащий пары "имя — значение", указывающие диапазон ячеек, из которых нужно получить форматирование.</span><span class="sxs-lookup"><span data-stu-id="dd244-208">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>'
          type:
            - any
        - id: formats
          description: '<span data-ttu-id="dd244-209">Массив, указывающий свойства формата, которые требуется получить.</span><span class="sxs-lookup"><span data-stu-id="dd244-209">An array specifying the format properties to get.</span></span>'
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="dd244-210">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-210">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-211">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-211">Optional.</span></span> <span data-ttu-id="dd244-212">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-212">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-213">.</span><span class="sxs-lookup"><span data-stu-id="dd244-213"></span></span> <span data-ttu-id="dd244-214">Результатом `value` этого свойства является массив, содержащий один или несколько объектов JavaScript, указывающих форматирование соответствующих ячеек.</span><span class="sxs-lookup"><span data-stu-id="dd244-214">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - 'office!Office.TableBinding#getFormatsAsync~0:complex'
  - uid: 'office!Office.TableBinding#getFormatsAsync:member(2)'
    summary: <span data-ttu-id="dd244-215">Получает форматирование указанных элементов в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-215">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-216">**Возвращаемая структура формата**</span><span class="sxs-lookup"><span data-stu-id="dd244-216">**Returned format structure**</span></span>

      <span data-ttu-id="dd244-217">Каждый объект JavaScript в массиве возвращаемых значений имеет следующую форму:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="dd244-217">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="dd244-218">`cells:` Свойство указывает диапазон, который необходимо отформатировать, используя одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="dd244-218">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="dd244-219">**Поддерживаемые диапазоны в свойстве ячеек**</span><span class="sxs-lookup"><span data-stu-id="dd244-219">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-220">параметры диапазона ячеек</span><span class="sxs-lookup"><span data-stu-id="dd244-220">cells range settings</span></span></th> <th><span data-ttu-id="dd244-221">Описание</span><span class="sxs-lookup"><span data-stu-id="dd244-221">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="dd244-222">Задает диапазон данных, отменяющий строку данных с отсчетом от нуля в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-222">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="dd244-223">Задает диапазон данных, который является столбцом n (от нуля) данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-223">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="dd244-224">Задает одну ячейку, которая является i-ой строкой и столбцом j таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-224">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="dd244-225">Указывает всю таблицу, включая заголовки столбцов, данные и итоги (если они имеются)</span><span class="sxs-lookup"><span data-stu-id="dd244-225">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="dd244-226">Указывает только данные в таблице (без заголовков и итогов).</span><span class="sxs-lookup"><span data-stu-id="dd244-226">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="dd244-227">Указывает только строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="dd244-227">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="dd244-228">`format:` Свойство указывает значения, соответствующие подмножеству параметров, доступных в диалоговом окне "Формат ячеек" в Excel (щелкните правой кнопкой &gt; мыши формат ячеек или &gt; ячеек &gt; формата основного формата).</span><span class="sxs-lookup"><span data-stu-id="dd244-228">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: '<span data-ttu-id="dd244-229">Литерал объекта, содержащий пары "имя — значение", указывающие диапазон ячеек, из которых нужно получить форматирование.</span><span class="sxs-lookup"><span data-stu-id="dd244-229">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>'
          type:
            - any
        - id: formats
          description: '<span data-ttu-id="dd244-230">Массив, указывающий свойства формата, которые требуется получить.</span><span class="sxs-lookup"><span data-stu-id="dd244-230">An array specifying the format properties to get.</span></span>'
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="dd244-231">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-231">Optional.</span></span> <span data-ttu-id="dd244-232">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-232">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-233">.</span><span class="sxs-lookup"><span data-stu-id="dd244-233"></span></span> <span data-ttu-id="dd244-234">Результатом `value` этого свойства является массив, содержащий один или несколько объектов JavaScript, указывающих форматирование соответствующих ячеек.</span><span class="sxs-lookup"><span data-stu-id="dd244-234">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - 'office!Office.TableBinding#getFormatsAsync~1:complex'
  - uid: 'office!Office.TableBinding#hasHeaders:member'
    summary: '<span data-ttu-id="dd244-235">Значение true, если в таблице есть заголовки; в противном случае — false.</span><span class="sxs-lookup"><span data-stu-id="dd244-235">True, if the table has headers; otherwise false.</span></span>'
    name: hasHeaders
    fullName: hasHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasHeaders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="dd244-236">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-236">Examples</span></span>

          ```javascript
          function showBindingHasHeaders() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Binding has headers: " + asyncResult.value.hasHeaders);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.TableBinding#rowCount:member'
    summary: '<span data-ttu-id="dd244-237">Получает количество строк в TableBinding в виде целого значения.</span><span class="sxs-lookup"><span data-stu-id="dd244-237">Gets the number of rows in the TableBinding, as an integer value.</span></span>'
    remarks: |-
      <span data-ttu-id="dd244-238">Когда вы вставляете пустую таблицу, выбрав одну строку в Excel 2013 и Excel в Интернете (с помощью таблицы на вкладке Вставка), ведущие приложения Office создают одну строку заголовков, а затем одну пустую строку.</span><span class="sxs-lookup"><span data-stu-id="dd244-238">When you insert an empty table by selecting a single row in Excel 2013 and Excel on the web (using Table on the Insert tab), both Office host applications create a single row of headers followed by a single blank row.</span></span> <span data-ttu-id="dd244-239">Тем не менее, если скрипт надстройки создает привязку для новой вставленной таблицы (например, с помощью [привязки Office. bindings).](xref:office!Office.Bindings:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-239">However, if your add-in's script creates a binding for this newly inserted table (for example, by using the [Office.Bindings](xref:office!Office.Bindings:interface)</span></span><!-- --><span data-ttu-id="dd244-240">метод. addFromSelectionAsync), а затем проверяет значение свойства rowCount, возвращаемое значение будет отличаться в зависимости от того, открыта ли электронная таблица в Excel 2013 или Excel в Интернете.</span><span class="sxs-lookup"><span data-stu-id="dd244-240">.addFromSelectionAsync method), and then checks the value of the rowCount property, the value returned will differ depending whether the spreadsheet is open in Excel 2013 or Excel on the web.</span></span>

      - <span data-ttu-id="dd244-241">В Excel на рабочем столе количество строк будет возвращать значение 0 (не учитывается пустая строка, следующая после заголовков).</span><span class="sxs-lookup"><span data-stu-id="dd244-241">In Excel on the desktop, rowCount will return 0 (the blank row following the headers is not counted).</span></span>

      - <span data-ttu-id="dd244-242">В Excel в Интернете количество строк возвратит 1 (подсчитывается пустая строка, следующая после заголовков).</span><span class="sxs-lookup"><span data-stu-id="dd244-242">In Excel on the web, rowCount will return 1 (the blank row following the headers is counted).</span></span>

      <span data-ttu-id="dd244-243">Чтобы избежать разницы в сценарии, проверьте значение rowCount == 1, если да, проверьте все ли строки являются незаполненными.</span><span class="sxs-lookup"><span data-stu-id="dd244-243">You can work around this difference in your script by checking if rowCount == 1, and if so, then checking if the row contains all empty strings.</span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-244">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-244">Examples</span></span>

      ```javascript
      function showBindingRowCount() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write("Rows: " + asyncResult.value.rowCount);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rowCount: number;'
      return:
        type:
          - number
  - uid: 'office!Office.TableBinding#setFormatsAsync:member(1)'
    summary: <span data-ttu-id="dd244-245">Задает форматирование для указанных элементов и данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-245">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-246">**Указание параметра cellFormat**</span><span class="sxs-lookup"><span data-stu-id="dd244-246">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="dd244-247">Используйте параметр cellFormat, чтобы задать или изменить значения форматирования ячейки, такие как ширина, высота, шрифт, фон, выравнивание и т. д.</span><span class="sxs-lookup"><span data-stu-id="dd244-247">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="dd244-248">Значение, передаваемое в качестве параметра cellFormat, представляет собой массив, содержащий список из одного или нескольких объектов JavaScript, которые указывают, какие целевые ячейки (`cells:`</span><span class="sxs-lookup"><span data-stu-id="dd244-248">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="dd244-249">) и форматы (`format:`</span><span class="sxs-lookup"><span data-stu-id="dd244-249">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="dd244-250">), которые необходимо применить к ним.</span><span class="sxs-lookup"><span data-stu-id="dd244-250">) to apply to them.</span></span>

      <span data-ttu-id="dd244-251">Каждый объект JavaScript в массиве cellFormat имеет следующую форму:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="dd244-251">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="dd244-252">`cells:` Свойство указывает диапазон, который необходимо отформатировать, используя одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="dd244-252">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="dd244-253">**Поддерживаемые диапазоны в свойстве ячеек**</span><span class="sxs-lookup"><span data-stu-id="dd244-253">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-254">параметры диапазона ячеек</span><span class="sxs-lookup"><span data-stu-id="dd244-254">cells range settings</span></span></th> <th><span data-ttu-id="dd244-255">Описание</span><span class="sxs-lookup"><span data-stu-id="dd244-255">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="dd244-256">Задает диапазон данных, отменяющий строку данных с отсчетом от нуля в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-256">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="dd244-257">Задает диапазон данных, который является столбцом n (от нуля) данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-257">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="dd244-258">Задает одну ячейку, которая является i-ой строкой и столбцом j таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-258">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="dd244-259">Указывает всю таблицу, включая заголовки столбцов, данные и итоги (если они имеются)</span><span class="sxs-lookup"><span data-stu-id="dd244-259">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="dd244-260">Указывает только данные в таблице (без заголовков и итогов).</span><span class="sxs-lookup"><span data-stu-id="dd244-260">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="dd244-261">Указывает только строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="dd244-261">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="dd244-262">`format:` Свойство указывает значения, соответствующие подмножеству параметров, доступных в диалоговом окне "Формат ячеек" в Excel (щелкните правой кнопкой &gt; мыши формат ячеек или &gt; ячеек &gt; формата основного формата).</span><span class="sxs-lookup"><span data-stu-id="dd244-262">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="dd244-263">Значение `format:` свойства задается в виде списка из одной или нескольких пар "имя — значение свойства" в литерале объекта JavaScript.</span><span class="sxs-lookup"><span data-stu-id="dd244-263">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="dd244-264">Имя свойства обозначает имя устанавливаемого свойства, а значение — значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="dd244-264">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="dd244-265">Вы можете указать несколько значений формата, например цвет и размер шрифта.</span><span class="sxs-lookup"><span data-stu-id="dd244-265">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="dd244-266">Ниже приводятся три примера значений свойства `format:`:</span><span class="sxs-lookup"><span data-stu-id="dd244-266">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="dd244-267">Вы можете указать числовые форматы, указав в `numberFormat:` свойстве строку "код" в формате "код".</span><span class="sxs-lookup"><span data-stu-id="dd244-267">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="dd244-268">Строки формата чисел, которые можно указывать, соответствуют параметрам Excel, доступным в категории Дополнительный на вкладке Число диалогового окна Формат ячеек.</span><span class="sxs-lookup"><span data-stu-id="dd244-268">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="dd244-269">В этом примере показано, как отформатировать число в виде процентного значения с двумя десятичными знаками:</span><span class="sxs-lookup"><span data-stu-id="dd244-269">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="dd244-270">Дополнительные сведения см. в статье [Создание настраиваемого числового формата](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span><span class="sxs-lookup"><span data-stu-id="dd244-270">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="dd244-271">.</span><span class="sxs-lookup"><span data-stu-id="dd244-271"></span></span>

      <span data-ttu-id="dd244-272">Чтобы задать форматирование таблиц при записи данных, используйте необязательные параметры tableOptions и cellFormat для методов `Document.setSelectedDataAsync` или `TableBinding.setDataAsync` .</span><span class="sxs-lookup"><span data-stu-id="dd244-272">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="dd244-273">Задание форматирования с использованием необязательных параметров `Document.setSelectedDataAsync` методов `TableBinding.setDataAsync` and работает только для установки форматирования при первом написании данных.</span><span class="sxs-lookup"><span data-stu-id="dd244-273">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="dd244-274">Чтобы изменить форматирование после записи данных, используйте следующие методы:</span><span class="sxs-lookup"><span data-stu-id="dd244-274">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="dd244-275">Чтобы обновить форматирование ячеек, например, цвет и стиль шрифта, используйте `TableBinding.setFormatsAsync` метод (этот метод).</span><span class="sxs-lookup"><span data-stu-id="dd244-275">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="dd244-276">Чтобы обновить параметры таблицы, такие как чередующиеся строки и кнопки фильтра, используйте `TableBinding.setTableOptions` метод.</span><span class="sxs-lookup"><span data-stu-id="dd244-276">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="dd244-277">Чтобы очистить форматирование, используйте `TableBinding.clearFormats` метод.</span><span class="sxs-lookup"><span data-stu-id="dd244-277">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="dd244-278">Дополнительные сведения и примеры приведены в статье [Форматирование таблиц в надстройках для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span><span class="sxs-lookup"><span data-stu-id="dd244-278">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="dd244-279">.</span><span class="sxs-lookup"><span data-stu-id="dd244-279"></span></span>

      #### <a name="examples"></a><span data-ttu-id="dd244-280">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-280">Examples</span></span>

      ```javascript
      // Specifying a single target
      // The following example shows a cellFormat value that sets the font color of the header row to red.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: Office.Table.Headers, format: {fontColor: "red"}}], 
          function (asyncResult){});

      // Specifying multiple targets
      // The setFormatsAsync method can support formatting multiple targets within the bound table in a 
      // single function call. To do that, you pass a list of objects in the cellFormat array 
      // for each target that you want to format.
      // For example, the following line of code will set the font color of the first row yellow, 
      // and the fourth cell in the third row to have a white border and bold text.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});

      // Additional remarks for Excel Online
      // The number of formatting groups passed to the cellFormat parameter can't exceed 100. 
      // A single formatting group consists of a set of formatting applied to a specified range of cells. 
      // For example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});
      ```
    name: 'setFormatsAsync(cellFormat, options, callback)'
    fullName: 'setFormatsAsync(cellFormat, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: '<span data-ttu-id="dd244-281">Массив, содержащий один или несколько объектов JavaScript, указывающих целевые ячейки и форматирование, которое необходимо к ним применить.</span><span class="sxs-lookup"><span data-stu-id="dd244-281">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>'
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="dd244-282">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-282">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-283">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-283">Optional.</span></span> <span data-ttu-id="dd244-284">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-284">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-285">.</span><span class="sxs-lookup"><span data-stu-id="dd244-285"></span></span>'
          type:
            - 'office!Office.TableBinding#setFormatsAsync~0:complex'
  - uid: 'office!Office.TableBinding#setFormatsAsync:member(2)'
    summary: <span data-ttu-id="dd244-286">Задает форматирование для указанных элементов и данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-286">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-287">**Указание параметра cellFormat**</span><span class="sxs-lookup"><span data-stu-id="dd244-287">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="dd244-288">Используйте параметр cellFormat, чтобы задать или изменить значения форматирования ячейки, такие как ширина, высота, шрифт, фон, выравнивание и т. д.</span><span class="sxs-lookup"><span data-stu-id="dd244-288">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="dd244-289">Значение, передаваемое в качестве параметра cellFormat, представляет собой массив, содержащий список из одного или нескольких объектов JavaScript, которые указывают, какие целевые ячейки (`cells:`</span><span class="sxs-lookup"><span data-stu-id="dd244-289">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="dd244-290">) и форматы (`format:`</span><span class="sxs-lookup"><span data-stu-id="dd244-290">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="dd244-291">), которые необходимо применить к ним.</span><span class="sxs-lookup"><span data-stu-id="dd244-291">) to apply to them.</span></span>

      <span data-ttu-id="dd244-292">Каждый объект JavaScript в массиве cellFormat имеет следующую форму:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="dd244-292">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="dd244-293">`cells:` Свойство указывает диапазон, который необходимо отформатировать, используя одно из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="dd244-293">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="dd244-294">**Поддерживаемые диапазоны в свойстве ячеек**</span><span class="sxs-lookup"><span data-stu-id="dd244-294">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-295">параметры диапазона ячеек</span><span class="sxs-lookup"><span data-stu-id="dd244-295">cells range settings</span></span></th> <th><span data-ttu-id="dd244-296">Описание</span><span class="sxs-lookup"><span data-stu-id="dd244-296">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="dd244-297">Задает диапазон данных, отменяющий строку данных с отсчетом от нуля в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-297">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="dd244-298">Задает диапазон данных, который является столбцом n (от нуля) данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="dd244-298">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="dd244-299">Задает одну ячейку, которая является i-ой строкой и столбцом j таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-299">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="dd244-300">Указывает всю таблицу, включая заголовки столбцов, данные и итоги (если они имеются)</span><span class="sxs-lookup"><span data-stu-id="dd244-300">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="dd244-301">Указывает только данные в таблице (без заголовков и итогов).</span><span class="sxs-lookup"><span data-stu-id="dd244-301">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="dd244-302">Указывает только строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="dd244-302">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="dd244-303">`format:` Свойство указывает значения, соответствующие подмножеству параметров, доступных в диалоговом окне "Формат ячеек" в Excel (щелкните правой кнопкой &gt; мыши формат ячеек или &gt; ячеек &gt; формата основного формата).</span><span class="sxs-lookup"><span data-stu-id="dd244-303">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="dd244-304">Значение `format:` свойства задается в виде списка из одной или нескольких пар "имя — значение свойства" в литерале объекта JavaScript.</span><span class="sxs-lookup"><span data-stu-id="dd244-304">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="dd244-305">Имя свойства обозначает имя устанавливаемого свойства, а значение — значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="dd244-305">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="dd244-306">Вы можете указать несколько значений формата, например цвет и размер шрифта.</span><span class="sxs-lookup"><span data-stu-id="dd244-306">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="dd244-307">Ниже приводятся три примера значений свойства `format:`:</span><span class="sxs-lookup"><span data-stu-id="dd244-307">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="dd244-308">Вы можете указать числовые форматы, указав в `numberFormat:` свойстве строку "код" в формате "код".</span><span class="sxs-lookup"><span data-stu-id="dd244-308">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="dd244-309">Строки формата чисел, которые можно указывать, соответствуют параметрам Excel, доступным в категории Дополнительный на вкладке Число диалогового окна Формат ячеек.</span><span class="sxs-lookup"><span data-stu-id="dd244-309">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="dd244-310">В этом примере показано, как отформатировать число в виде процентного значения с двумя десятичными знаками:</span><span class="sxs-lookup"><span data-stu-id="dd244-310">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="dd244-311">Дополнительные сведения см. в статье [Создание настраиваемого числового формата](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span><span class="sxs-lookup"><span data-stu-id="dd244-311">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="dd244-312">.</span><span class="sxs-lookup"><span data-stu-id="dd244-312"></span></span>

      <span data-ttu-id="dd244-313">Чтобы задать форматирование таблиц при записи данных, используйте необязательные параметры tableOptions и cellFormat для методов `Document.setSelectedDataAsync` или `TableBinding.setDataAsync` .</span><span class="sxs-lookup"><span data-stu-id="dd244-313">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="dd244-314">Задание форматирования с использованием необязательных параметров `Document.setSelectedDataAsync` методов `TableBinding.setDataAsync` and работает только для установки форматирования при первом написании данных.</span><span class="sxs-lookup"><span data-stu-id="dd244-314">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="dd244-315">Чтобы изменить форматирование после записи данных, используйте следующие методы:</span><span class="sxs-lookup"><span data-stu-id="dd244-315">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="dd244-316">Чтобы обновить форматирование ячеек, например, цвет и стиль шрифта, используйте `TableBinding.setFormatsAsync` метод (этот метод).</span><span class="sxs-lookup"><span data-stu-id="dd244-316">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="dd244-317">Чтобы обновить параметры таблицы, такие как чередующиеся строки и кнопки фильтра, используйте `TableBinding.setTableOptions` метод.</span><span class="sxs-lookup"><span data-stu-id="dd244-317">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="dd244-318">Чтобы очистить форматирование, используйте `TableBinding.clearFormats` метод.</span><span class="sxs-lookup"><span data-stu-id="dd244-318">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="dd244-319">Дополнительные сведения и примеры приведены в статье [Форматирование таблиц в надстройках для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span><span class="sxs-lookup"><span data-stu-id="dd244-319">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="dd244-320">.</span><span class="sxs-lookup"><span data-stu-id="dd244-320"></span></span>
    name: 'setFormatsAsync(cellFormat, callback)'
    fullName: 'setFormatsAsync(cellFormat, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: '<span data-ttu-id="dd244-321">Массив, содержащий один или несколько объектов JavaScript, указывающих целевые ячейки и форматирование, которое необходимо к ним применить.</span><span class="sxs-lookup"><span data-stu-id="dd244-321">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>'
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="dd244-322">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-322">Optional.</span></span> <span data-ttu-id="dd244-323">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-323">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-324">.</span><span class="sxs-lookup"><span data-stu-id="dd244-324"></span></span>'
          type:
            - 'office!Office.TableBinding#setFormatsAsync~1:complex'
  - uid: 'office!Office.TableBinding#setTableOptionsAsync:member(1)'
    summary: <span data-ttu-id="dd244-325">Обновляет параметры форматирования привязанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-325">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-326">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="dd244-326">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="dd244-327">В функции обратного вызова, переданной методу goToByIdAsync, вы можете использовать свойства объекта AsyncResult, чтобы получить следующие сведения.</span><span class="sxs-lookup"><span data-stu-id="dd244-327">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-328">Свойство</span><span class="sxs-lookup"><span data-stu-id="dd244-328">Property</span></span></th> <th><span data-ttu-id="dd244-329">Назначение</span><span class="sxs-lookup"><span data-stu-id="dd244-329">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="dd244-330">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="dd244-330">AsyncResult.value</span></span></td> <td><span data-ttu-id="dd244-331">Всегда возвращает значение undefine, так как данные или объекты, которые можно получить при задании форматов, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="dd244-331">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-332">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="dd244-332">AsyncResult.status</span></span></td> <td><span data-ttu-id="dd244-333">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="dd244-333">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-334">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="dd244-334">AsyncResult.error</span></span></td> <td><span data-ttu-id="dd244-335">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="dd244-335">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-336">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="dd244-336">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="dd244-337">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="dd244-337">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="dd244-338">Примеры</span><span class="sxs-lookup"><span data-stu-id="dd244-338">Examples</span></span>

      ```javascript
      // The following example shows how to:
      // 1. Create an object literal that specifies the table formatting options to update on the bound table.
      // 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object
      //    with formatting setting as the tableOptions parameter.
      function updateTableFormatting(){
          var tableOptions = {bandedRows: true, filterButton: false, style: "TableStyleMedium3"}; 

          Office.select("bindings#myBinding").setTableOptionsAsync(tableOptions, function(asyncResult){});
      }
      ```
    name: 'setTableOptionsAsync(tableOptions, options, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: '<span data-ttu-id="dd244-339">Литерал объекта, содержащий список пар "имя-значение" для свойств, определяющих применяемые параметры таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-339">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="dd244-340">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="dd244-340">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="dd244-341">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-341">Optional.</span></span> <span data-ttu-id="dd244-342">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-342">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-343">.</span><span class="sxs-lookup"><span data-stu-id="dd244-343"></span></span>'
          type:
            - 'office!Office.TableBinding#setTableOptionsAsync~0:complex'
  - uid: 'office!Office.TableBinding#setTableOptionsAsync:member(2)'
    summary: <span data-ttu-id="dd244-344">Обновляет параметры форматирования привязанной таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-344">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="dd244-345">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="dd244-345">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="dd244-346">В функции обратного вызова, переданной методу goToByIdAsync, вы можете использовать свойства объекта AsyncResult, чтобы получить следующие сведения.</span><span class="sxs-lookup"><span data-stu-id="dd244-346">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="dd244-347">Свойство</span><span class="sxs-lookup"><span data-stu-id="dd244-347">Property</span></span></th> <th><span data-ttu-id="dd244-348">Назначение</span><span class="sxs-lookup"><span data-stu-id="dd244-348">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="dd244-349">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="dd244-349">AsyncResult.value</span></span></td> <td><span data-ttu-id="dd244-350">Всегда возвращает значение undefine, так как данные или объекты, которые можно получить при задании форматов, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="dd244-350">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-351">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="dd244-351">AsyncResult.status</span></span></td> <td><span data-ttu-id="dd244-352">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="dd244-352">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-353">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="dd244-353">AsyncResult.error</span></span></td> <td><span data-ttu-id="dd244-354">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="dd244-354">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="dd244-355">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="dd244-355">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="dd244-356">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="dd244-356">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setTableOptionsAsync(tableOptions, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: '<span data-ttu-id="dd244-357">Литерал объекта, содержащий список пар "имя-значение" для свойств, определяющих применяемые параметры таблицы.</span><span class="sxs-lookup"><span data-stu-id="dd244-357">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="dd244-358">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="dd244-358">Optional.</span></span> <span data-ttu-id="dd244-359">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="dd244-359">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="dd244-360">.</span><span class="sxs-lookup"><span data-stu-id="dd244-360"></span></span>'
          type:
            - 'office!Office.TableBinding#setTableOptionsAsync~1:complex'
references:
  - uid: 'office!Office.Binding:interface'
    name: Binding
  - uid: 'office!Office.TableBinding#addColumnsAsync~0:complex'
    name: 'TableData | any[][]'
    fullName: 'Office.TableData | any[][]'
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any[][]'
        fullName: ' | any[][]'
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.TableBinding#addColumnsAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#addColumnsAsync~2:complex'
    name: 'TableData | any[][]'
    fullName: 'Office.TableData | any[][]'
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any[][]'
        fullName: ' | any[][]'
  - uid: 'office!Office.TableBinding#addColumnsAsync~3:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#addRowsAsync~0:complex'
    name: 'TableData | any[][]'
    fullName: 'Office.TableData | any[][]'
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any[][]'
        fullName: ' | any[][]'
  - uid: 'office!Office.TableBinding#addRowsAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#addRowsAsync~2:complex'
    name: 'TableData | any[][]'
    fullName: 'Office.TableData | any[][]'
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any[][]'
        fullName: ' | any[][]'
  - uid: 'office!Office.TableBinding#addRowsAsync~3:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#clearFormatsAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#clearFormatsAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#deleteAllDataValuesAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#deleteAllDataValuesAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#getFormatsAsync~0:complex'
    name: '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
    fullName: '(result: Office.AsyncResult< ({ cells: any, format: any})[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: '< ({ cells: any, format: any})[]>) => void'
        fullName: '< ({ cells: any, format: any})[]>) => void'
  - uid: 'office!Office.TableBinding#getFormatsAsync~1:complex'
    name: '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
    fullName: '(result: Office.AsyncResult< ({ cells: any, format: any})[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: '< ({ cells: any, format: any})[]>) => void'
        fullName: '< ({ cells: any, format: any})[]>) => void'
  - uid: 'office!Office.TableBinding#setFormatsAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#setFormatsAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#setTableOptionsAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.TableBinding#setTableOptionsAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void