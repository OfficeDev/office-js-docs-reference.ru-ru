### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlNode
    summary: <span data-ttu-id="20824-101">Представляет XML-узел в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="20824-101">Represents an XML node in a tree in a document.</span></span>
    remarks: '<span data-ttu-id="20824-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="20824-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlNode
    fullName: Office.CustomXmlNode
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlNode.getNodesAsync
      - office.Office.CustomXmlNode.getNodesAsync_1
      - office.Office.CustomXmlNode.getNodeValueAsync
      - office.Office.CustomXmlNode.getNodeValueAsync_1
      - office.Office.CustomXmlNode.getTextAsync
      - office.Office.CustomXmlNode.getTextAsync_1
      - office.Office.CustomXmlNode.getXmlAsync
      - office.Office.CustomXmlNode.getXmlAsync_1
      - office.Office.CustomXmlNode.setNodeValueAsync
      - office.Office.CustomXmlNode.setNodeValueAsync_1
      - office.Office.CustomXmlNode.setTextAsync
      - office.Office.CustomXmlNode.setTextAsync_1
      - office.Office.CustomXmlNode.setXmlAsync
      - office.Office.CustomXmlNode.setXmlAsync_1
      - office.Office.CustomXmlNode.baseName
      - office.Office.CustomXmlNode.namespaceUri
      - office.Office.CustomXmlNode.nodeType
  - uid: office.Office.CustomXmlNode.getNodesAsync
    summary: '<span data-ttu-id="20824-103">Возвращает узлы, связанные с выражением XPath.</span><span class="sxs-lookup"><span data-stu-id="20824-103">Gets the nodes associated with the XPath expression.</span></span>'
    remarks: '<span data-ttu-id="20824-104">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="20824-105">Выражение XPath, задающее узлы, которые требуется получить.</span><span class="sxs-lookup"><span data-stu-id="20824-105">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="20824-106">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-106">Required.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="20824-107">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-107">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-108">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-108">Optional.</span></span> <span data-ttu-id="20824-109">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-109">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-110">.</span><span class="sxs-lookup"><span data-stu-id="20824-110"></span></span> <span data-ttu-id="20824-111">`value` Свойство Result представляет собой массив объектов CustomXmlNode, представляющих узлы, указанные выражением XPath, передаваемым в `xPath` параметр.</span><span class="sxs-lookup"><span data-stu-id="20824-111">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodesAsync_1
    summary: '<span data-ttu-id="20824-112">Возвращает узлы, связанные с выражением XPath.</span><span class="sxs-lookup"><span data-stu-id="20824-112">Gets the nodes associated with the XPath expression.</span></span>'
    remarks: |-
      <span data-ttu-id="20824-113">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-113">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-114">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-114">Examples</span></span>

      ```javascript
      function showXmlChildNodes() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodesAsync('*', function (nodeResults) {
                          write(nodeResults.value.length + " childNodes");
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="20824-115">Выражение XPath, задающее узлы, которые требуется получить.</span><span class="sxs-lookup"><span data-stu-id="20824-115">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="20824-116">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-116">Required.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="20824-117">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-117">Optional.</span></span> <span data-ttu-id="20824-118">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-118">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-119">.</span><span class="sxs-lookup"><span data-stu-id="20824-119"></span></span> <span data-ttu-id="20824-120">`value` Свойство Result представляет собой массив объектов CustomXmlNode, представляющих узлы, указанные выражением XPath, передаваемым в `xPath` параметр.</span><span class="sxs-lookup"><span data-stu-id="20824-120">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync
    summary: <span data-ttu-id="20824-121">Получает значение узла.</span><span class="sxs-lookup"><span data-stu-id="20824-121">Gets the node value.</span></span>
    remarks: '<span data-ttu-id="20824-122">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-122">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodeValueAsync(options, callback)'
    fullName: 'getNodeValueAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="20824-123">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-124">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-124">Optional.</span></span> <span data-ttu-id="20824-125">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-126">.</span><span class="sxs-lookup"><span data-stu-id="20824-126"></span></span> <span data-ttu-id="20824-127">`value` Свойство Result является строкой, которая содержит значение узла, на который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="20824-127">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync_1
    summary: <span data-ttu-id="20824-128">Получает значение узла.</span><span class="sxs-lookup"><span data-stu-id="20824-128">Gets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="20824-129">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-129">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-130">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-130">Examples</span></span>

      ```javascript
      function showXmlNodeValues() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodeValueAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getNodeValueAsync(callback)
    fullName: getNodeValueAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="20824-131">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-131">Optional.</span></span> <span data-ttu-id="20824-132">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-132">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-133">.</span><span class="sxs-lookup"><span data-stu-id="20824-133"></span></span> <span data-ttu-id="20824-134">`value` Свойство Result является строкой, которая содержит значение узла, на который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="20824-134">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync
    summary: <span data-ttu-id="20824-135">Получает текст XML-узла в пользовательской XML-части.</span><span class="sxs-lookup"><span data-stu-id="20824-135">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="20824-136">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-136">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-137">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-137">Examples</span></span>

      ```javascript
      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}", function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp',
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to Word.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:title", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression. 
                      var node = getNodesAsyncResult.value[0];
                      
                      // Get the text value of the node and use the asyncContext. This results in a call to Word. 
                      // The results are logged to the browser console.
                      node.getTextAsync({asyncContext: "StateNormal"}, function (getTextAsyncResult) {
                        console.log("Text of the title element = " + getTextAsyncResult.value;
                        console.log("The asyncContext value = " + getTextAsyncResult.asyncContext;
                      });
                  });
              });
          });
      });
      ```
    name: 'getTextAsync(options, callback)'
    fullName: 'getTextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="20824-138">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-138">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-139">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-139">Optional.</span></span> <span data-ttu-id="20824-140">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-140">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-141">.</span><span class="sxs-lookup"><span data-stu-id="20824-141"></span></span> <span data-ttu-id="20824-142">`value` Свойство Result — это строка, содержащая внутренний текст узлов, на которые указывают ссылки.</span><span class="sxs-lookup"><span data-stu-id="20824-142">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync_1
    summary: <span data-ttu-id="20824-143">Получает текст XML-узла в пользовательской XML-части.</span><span class="sxs-lookup"><span data-stu-id="20824-143">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="20824-144">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-144">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: getTextAsync(callback)
    fullName: getTextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="20824-145">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-145">Optional.</span></span> <span data-ttu-id="20824-146">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-146">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-147">.</span><span class="sxs-lookup"><span data-stu-id="20824-147"></span></span> <span data-ttu-id="20824-148">`value` Свойство Result — это строка, содержащая внутренний текст узлов, на которые указывают ссылки.</span><span class="sxs-lookup"><span data-stu-id="20824-148">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync
    summary: <span data-ttu-id="20824-149">Получает XML-файл узла.</span><span class="sxs-lookup"><span data-stu-id="20824-149">Gets the node's XML.</span></span>
    remarks: '<span data-ttu-id="20824-150">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-150">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="20824-151">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-151">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-152">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-152">Optional.</span></span> <span data-ttu-id="20824-153">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-154">.</span><span class="sxs-lookup"><span data-stu-id="20824-154"></span></span> <span data-ttu-id="20824-155">`value` Свойство Result — это строка, содержащая XML узла, на который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="20824-155">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync_1
    summary: <span data-ttu-id="20824-156">Получает XML-файл узла.</span><span class="sxs-lookup"><span data-stu-id="20824-156">Gets the node's XML.</span></span>
    remarks: |-
      <span data-ttu-id="20824-157">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-157">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-158">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-158">Examples</span></span>

      ```javascript
      function showXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getXmlAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="20824-159">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-159">Optional.</span></span> <span data-ttu-id="20824-160">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-161">.</span><span class="sxs-lookup"><span data-stu-id="20824-161"></span></span> <span data-ttu-id="20824-162">`value` Свойство Result — это строка, содержащая XML узла, на который указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="20824-162">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync
    summary: <span data-ttu-id="20824-163">Задает значение узла.</span><span class="sxs-lookup"><span data-stu-id="20824-163">Sets the node value.</span></span>
    remarks: '<span data-ttu-id="20824-164">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setNodeValueAsync(value, options, callback)'
    fullName: 'setNodeValueAsync(value, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: '<span data-ttu-id="20824-165">Значение, которое необходимо задать для узла.</span><span class="sxs-lookup"><span data-stu-id="20824-165">The value to be set on the node</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="20824-166">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-166">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-167">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-167">Optional.</span></span> <span data-ttu-id="20824-168">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-168">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-169">.</span><span class="sxs-lookup"><span data-stu-id="20824-169"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync_1
    summary: <span data-ttu-id="20824-170">Задает значение узла.</span><span class="sxs-lookup"><span data-stu-id="20824-170">Sets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="20824-171">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-172">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-172">Examples</span></span>

      ```javascript
      function setXmlNodeValue() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node);
                      node.setNodeValueAsync("item number" + i, function (result) { });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'setNodeValueAsync(value, callback)'
    fullName: 'setNodeValueAsync(value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: '<span data-ttu-id="20824-173">Значение, которое необходимо задать для узла.</span><span class="sxs-lookup"><span data-stu-id="20824-173">The value to be set on the node</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="20824-174">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-174">Optional.</span></span> <span data-ttu-id="20824-175">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-175">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-176">.</span><span class="sxs-lookup"><span data-stu-id="20824-176"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync
    summary: <span data-ttu-id="20824-177">Асинхронно задает текст XML-узла в настраиваемой XML-части.</span><span class="sxs-lookup"><span data-stu-id="20824-177">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="20824-178">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-179">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-179">Examples</span></span>

      ```javascript
      // Learn how to set the text value of a node in a custom XML part from the following example.

      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}",
          function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp', 
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', 
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to the host.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:subject", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression.
                      // This will be the subject element in this example.
                      var subjectNode = getNodesAsyncResult.value[0];
                      
                      // Set the text value of the subject node and use the asyncContext. 
                      // This results in a call to the host.  The results are logged to the browser console.
                      subjectNode.setTextAsync(
                          "newSubject", 
                          {asyncContext: "StateNormal"}, 
                          function (setTextAsyncResult) {
                              console.log("The status of the call: " + setTextAsyncResult.status);
                              console.log("The asyncContext value = " + setTextAsyncResult.asyncContext);
                      });
                  });
              });
          });
      });
      ```
    name: 'setTextAsync(text, options, callback)'
    fullName: 'setTextAsync(text, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: Обязательный параметр. <span data-ttu-id="20824-181">Текстовое значение XML-узла.</span><span class="sxs-lookup"><span data-stu-id="20824-181">The text value of the XML node.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="20824-182">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-182">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-183">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-183">Optional.</span></span> <span data-ttu-id="20824-184">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-184">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-185">.</span><span class="sxs-lookup"><span data-stu-id="20824-185"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync_1
    summary: <span data-ttu-id="20824-186">Асинхронно задает текст XML-узла в настраиваемой XML-части.</span><span class="sxs-lookup"><span data-stu-id="20824-186">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="20824-187">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-187">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setTextAsync(text, callback)'
    fullName: 'setTextAsync(text, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="20824-188">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="20824-188">Required.</span></span> <span data-ttu-id="20824-189">Текстовое значение XML-узла.</span><span class="sxs-lookup"><span data-stu-id="20824-189">The text value of the XML node.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="20824-190">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-190">Optional.</span></span> <span data-ttu-id="20824-191">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-191">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-192">.</span><span class="sxs-lookup"><span data-stu-id="20824-192"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync
    summary: <span data-ttu-id="20824-193">Задает XML-файл узла.</span><span class="sxs-lookup"><span data-stu-id="20824-193">Sets the node XML.</span></span>
    remarks: |-
      <span data-ttu-id="20824-194">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-194">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="20824-195">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-195">Examples</span></span>

      ```javascript
      function setXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.setXmlAsync("<childNode>" + i + "</childNode>");
                  }
              });
          });
      }
      ```
    name: 'setXmlAsync(xml, options, callback)'
    fullName: 'setXmlAsync(xml, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: '<span data-ttu-id="20824-196">XML-код, который необходимо задать для узла.</span><span class="sxs-lookup"><span data-stu-id="20824-196">The XML to be set on the node</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="20824-197">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="20824-197">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="20824-198">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-198">Optional.</span></span> <span data-ttu-id="20824-199">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-200">.</span><span class="sxs-lookup"><span data-stu-id="20824-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync_1
    summary: <span data-ttu-id="20824-201">Задает XML-файл узла.</span><span class="sxs-lookup"><span data-stu-id="20824-201">Sets the node XML.</span></span>
    remarks: '<span data-ttu-id="20824-202">**Набор требований**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="20824-202">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setXmlAsync(xml, callback)'
    fullName: 'setXmlAsync(xml, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: '<span data-ttu-id="20824-203">XML-код, который необходимо задать для узла.</span><span class="sxs-lookup"><span data-stu-id="20824-203">The XML to be set on the node</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="20824-204">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="20824-204">Optional.</span></span> <span data-ttu-id="20824-205">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="20824-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="20824-206">.</span><span class="sxs-lookup"><span data-stu-id="20824-206"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.baseName
    summary: '<span data-ttu-id="20824-207">Получает базовое имя узла без префикса пространства имен (если оно существует).</span><span class="sxs-lookup"><span data-stu-id="20824-207">Gets the base name of the node without the namespace prefix, if one exists.</span></span>'
    name: baseName
    fullName: baseName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseName: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20824-208">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-208">Examples</span></span>

          ```javascript
          function showXmlNodeBaseNames() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.baseName);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.namespaceUri
    summary: <span data-ttu-id="20824-209">Получает GUID строки CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="20824-209">Retrieves the string GUID of the CustomXMLPart.</span></span>
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceUri: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20824-210">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-210">Examples</span></span>

          ```javascript
          function showXmlNamespaceUri() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.namespaceUri);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.nodeType
    summary: <span data-ttu-id="20824-211">Получает тип CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="20824-211">Gets the type of the CustomXMLNode.</span></span>
    name: nodeType
    fullName: nodeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nodeType: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20824-212">Примеры</span><span class="sxs-lookup"><span data-stu-id="20824-212">Examples</span></span>

          ```javascript
          function showXmlNodeType() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.nodeType);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```