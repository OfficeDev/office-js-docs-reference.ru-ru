### YamlMime:UniversalReference
items:
  - uid: office
    name: office
    fullName: office
    langs:
      - typeScript
    type: package
    children:
      - office.Office.ActiveView
      - office.Office.AddBindingFromNamedItemOptions
      - office.Office.AddBindingFromPromptOptions
      - office.Office.AddBindingFromSelectionOptions
      - office.Office.AddinCommands.Event
      - office.Office.AddinCommands.EventCompletedOptions
      - office.Office.AddinCommands.Source
      - office.Office.AsyncContextOptions
      - office.Office.AsyncResult
      - office.Office.AsyncResultStatus
      - office.Office.Auth
      - office.Office.AuthOptions
      - office.Office.Binding
      - office.Office.BindingDataChangedEventArgs
      - office.Office.Bindings
      - office.Office.BindingSelectionChangedEventArgs
      - office.Office.BindingType
      - office.Office.CoercionType
      - office.Office.Context
      - office.Office.ContextInformation
      - office.Office.CustomXmlNode
      - office.Office.CustomXMLNodeType
      - office.Office.CustomXmlPart
      - office.Office.CustomXmlParts
      - office.Office.CustomXmlPrefixMappings
      - office.Office.Dialog
      - office.Office.DialogOptions
      - office.Office.Document
      - office.Office.DocumentMode
      - office.Office.DocumentSelectionChangedEventArgs
      - office.Office.Error
      - office.Office.EventType
      - office.Office.File
      - office.Office.FileProperties
      - office.Office.FileType
      - office.Office.FilterType
      - office.Office.GetBindingDataOptions
      - office.Office.GetFileOptions
      - office.Office.GetSelectedDataOptions
      - office.Office.GoToByIdOptions
      - office.Office.GoToType
      - office.Office.HostType
      - office.Office.Index
      - office.Office.InitializationReason
      - office.Office.initialize
      - office.Office.IPromiseConstructor
      - office.Office.MatrixBinding
      - office.Office.NodeDeletedEventArgs
      - office.Office.NodeInsertedEventArgs
      - office.Office.NodeReplacedEventArgs
      - office.Office.OfficeTheme
      - office.Office.onReady
      - office.Office.PlatformType
      - office.Office.ProjectProjectFields
      - office.Office.ProjectResourceFields
      - office.Office.ProjectTaskFields
      - office.Office.ProjectViewTypes
      - office.Office.RangeCoordinates
      - office.Office.RangeFormatConfiguration
      - office.Office.RemoveHandlerOptions
      - office.Office.RequirementSetSupport
      - office.Office.SaveSettingsOptions
      - office.Office.select
      - office.Office.SelectionMode
      - office.Office.SetBindingDataOptions
      - office.Office.SetSelectedDataOptions
      - office.Office.Settings
      - office.Office.SettingsChangedEventArgs
      - office.Office.Slice
      - office.Office.Table
      - office.Office.TableBinding
      - office.Office.TableData
      - office.Office.TextBinding
      - office.Office.UI
      - office.Office.useShortNamespace
      - office.Office.ValueFormat
      - office.OfficeExtension.ClientObject
      - office.OfficeExtension.ClientRequestContext
      - office.OfficeExtension.ClientResult
      - office.OfficeExtension.DebugInfo
      - office.OfficeExtension.EmbeddedOptions
      - office.OfficeExtension.EmbeddedSession
      - office.OfficeExtension.Error
      - office.OfficeExtension.ErrorCodes
      - office.OfficeExtension.EventHandlerResult
      - office.OfficeExtension.EventHandlers
      - office.OfficeExtension.EventInfo
      - office.OfficeExtension.LoadOption
      - office.OfficeExtension.RequestContextDebugInfo
      - office.OfficeExtension.RequestUrlAndHeaderInfo
      - office.OfficeExtension.RunOptions
      - office.OfficeExtension.TrackedObjects
      - office.OfficeExtension.UpdateOptions
  - uid: office.Office.initialize
    summary: |-
      Происходит, когда среда выполнения загружена и надстройка готова начать взаимодействие с приложением и размещенным документом.

      Параметр Reason функции listener события Initialize возвращает значение `InitializationReason` перечисления, задающее способ инициализации. Надстройку области задач или контентную надстройку можно инициализировать двумя способами:

      - Пользователь только что вставил раздел "недавно использовавшиеся надстройки" в раскрывающемся списке надстройки на вкладке "Вставка" ленты в ведущем приложении Office или в диалоговом окне "Вставка надстройки".

      - пользователь может открыть документ, который уже содержит надстройку.

      *Note*: параметр Reason функции listener события Initialize возвращает только значение `InitializationReason` перечисления для надстроек области задач и контентных надстроек. Он не возвращает значения для надстроек Outlook.
    remarks: |-
      **Сведения о поддержке**

      Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.

      Дополнительные сведения о требованиях к ведущему приложению и серверу Office приведены в статье требования к запуску надстроек [Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.

      *Поддерживаемые ведущие приложения по платформе* <table> <tr><th> </th><th> Office для Windows </th><th> Office в веб-браузере </th><th> Office на iPad </th><th> Outlook на мобильных устройствах </th><th> Office на Mac </th></tr> <tr><td><strong>Невозможно</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> <tr><td><strong>Приложению</strong></td><td> Да </td><td> Да </td><td> </td><td> Да </td><td> Да </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> <tr><td><strong>Project</strong></td><td> Да </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Текстовых</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> </table>

      #### <a name="examples"></a>Примеры

      ```javascript
      // You can use the value of the InitializationEnumeration to implement different logic for
      // when the add-in is first inserted versus when it is already part of the document.
      // The following example shows some simple logic that uses the value of the reason parameter
      // to display how the task pane or content add-in was initialized.
      Office.initialize = function (reason) {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
          // After the DOM is loaded, code specific to the add-in can run.
          // Display initialization reason.
          if (reason == "inserted")
          write("The add-in was just inserted.");

          if (reason == "documentOpened")
          write("The add-in is already part of the document.");
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: Office.initialize
    fullName: Office.initialize
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function initialize(reason: InitializationReason): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: reason
          description: Указывает способ инициализации приложения.
          type:
            - office.Office.InitializationReason
  - uid: office.Office.onReady
    summary: 'Гарантирует, что API JavaScript для Office будут готовы вызываться надстройкой. Если платформа еще не инициализирована, обратный вызов или обещание ждет, пока ведущее приложение Office не будет готово к приему вызовов API. Обратите внимание, что хотя этот API предназначен для использования в надстройке Office, его также можно использовать за пределами надстройки. В этом случае, когда файл Office. js определяет, что он выполняется за пределами ведущего приложения Office, он будет вызывать обратный вызов и разрешать обещание с нулевым значением для узла и платформы.'
    name: Office.onReady
    fullName: Office.onReady
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;'
      return:
        type:
          - 'Promise<{ host: HostType, platform: PlatformType }>'
        description: 'Обещание, содержащее сведения об узле и платформе после завершения инициализации.'
      parameters:
        - id: callback
          description: 'Необязательный метод обратного вызова, который получит сведения об узле и платформе. Кроме того, вместо обратного вызова надстройка может просто подождать, пока она не будет возвращена функцией для разрешения.'
          type:
            - '(info: { host: HostType, platform: PlatformType }) => any'
  - uid: office.Office.select
    summary: 'Возвращает обещание объекта, описанного в выражении. Функция обратного вызова вызывается только в случае сбоя метода.'
    remarks: |-
      **Сведения о поддержке**

      Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.

      Дополнительные сведения о требованиях к ведущему приложению и серверу Office приведены в статье требования к запуску надстроек [Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.

      *Поддерживаемые ведущие приложения по платформе* <table> <tr><th> </th><th> Office для Windows </th><th> Office в веб-браузере </th><th> Office на iPad </th></tr> <tr><td><strong>Невозможно</strong></td><td> Да </td><td> Да </td><td> Да </td></tr> <tr><td><strong>Текстовых</strong></td><td> Да </td><td> </td><td> Да </td></tr> </table>

      #### <a name="examples"></a>Примеры

      ```javascript
      // The following code example uses the select method to retrieve a binding with the id "cities" from
      // the Bindings collection, and then calls the addHandlerAsync method to add an event handler for the
      // dataChanged event of the binding.
      function addBindingDataChangedEventHandler() {
          Office.select("bindings#cities", function onError(){}).addHandlerAsync(Office.EventType.BindingDataChanged,
          function (eventArgs) {
              doSomethingWithBinding(eventArgs.binding);
          });
      }
      ```
    name: Office.select
    fullName: Office.select
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function select(expression: string, callback?: (result: AsyncResult<any>) => void): Binding;'
      return:
        type:
          - office.Office.Binding
        description: ''
      parameters:
        - id: expression
          description: 'Объект, который требуется получить. Пример "Bindings\#биндингнаме", получающий обещание привязки для привязки с именем "биндингнаме"'
          type:
            - string
        - id: callback
          description: 'Необязательно. Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->.'
          type:
            - '(result: AsyncResult<any>) => void'
  - uid: office.Office.useShortNamespace
    summary: Включает и выключает `Office` псевдоним для полного `Microsoft.Office.WebExtension` пространства имен.
    remarks: |-
      **Сведения о поддержке**

      Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.

      Дополнительные сведения о требованиях к ведущему приложению и серверу Office приведены в статье требования к запуску надстроек [Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.

      *Поддерживаемые ведущие приложения по платформе* <table> <tr><th> </th><th> Office для Windows </th><th> Office в веб-браузере </th><th> Office на iPad </th><th> Outlook на мобильных устройствах </th><th> Office на Mac </th></tr> <tr><td><strong>Невозможно</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> <tr><td><strong>Приложению</strong></td><td> Да </td><td> Да </td><td> </td><td> Да </td><td> Да </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> <tr><td><strong>Project</strong></td><td> Да </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Текстовых</strong></td><td> Да </td><td> Да </td><td> Да </td><td> </td><td> </td></tr> </table>

      #### <a name="examples"></a>Примеры

      ```javascript
      function startUsingShortNamespace() {
          if (typeof Office === 'undefined') {
              Microsoft.Office.WebExtension.useShortNamespace(true);
          }
          else {
              Office.useShortNamespace(true);
          }
          write('Office alias is now ' + typeof Office);
      }

      function stopUsingShortNamespace() {
          if (typeof Office === 'undefined') {
              Microsoft.Office.WebExtension.useShortNamespace(false);
          }
          else {
              Office.useShortNamespace(false);
          }
          write('Office alias is now ' + typeof Office);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: Office.useShortNamespace
    fullName: Office.useShortNamespace
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function useShortNamespace(useShortNamespace: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: useShortNamespace
          description: 'Значение true, чтобы использовать псевдоним ярлыка; в противном случае — false. Значение по умолчанию: true.'
          type:
            - boolean
references:
  - uid: office.Office.ActiveView
    name: Office.ActiveView
  - uid: office.Office.AddBindingFromNamedItemOptions
    name: Office.AddBindingFromNamedItemOptions
  - uid: office.Office.AddBindingFromPromptOptions
    name: Office.AddBindingFromPromptOptions
  - uid: office.Office.AddBindingFromSelectionOptions
    name: Office.AddBindingFromSelectionOptions
  - uid: office.Office.AddinCommands.Event
    name: Office.AddinCommands.Event
  - uid: office.Office.AddinCommands.EventCompletedOptions
    name: Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Source
    name: Office.AddinCommands.Source
  - uid: office.Office.AsyncContextOptions
    name: Office.AsyncContextOptions
  - uid: office.Office.AsyncResult
    name: Office.AsyncResult
  - uid: office.Office.AsyncResultStatus
    name: Office.AsyncResultStatus
  - uid: office.Office.Auth
    name: Office.Auth
  - uid: office.Office.AuthOptions
    name: Office.AuthOptions
  - uid: office.Office.Binding
    name: Office.Binding
  - uid: office.Office.BindingDataChangedEventArgs
    name: Office.BindingDataChangedEventArgs
  - uid: office.Office.Bindings
    name: Office.Bindings
  - uid: office.Office.BindingSelectionChangedEventArgs
    name: Office.BindingSelectionChangedEventArgs
  - uid: office.Office.BindingType
    name: Office.BindingType
  - uid: office.Office.CoercionType
    name: Office.CoercionType
  - uid: office.Office.Context
    name: Office.Context
  - uid: office.Office.ContextInformation
    name: Office.ContextInformation
  - uid: office.Office.CustomXmlNode
    name: Office.CustomXmlNode
  - uid: office.Office.CustomXMLNodeType
    name: Office.CustomXMLNodeType
  - uid: office.Office.CustomXmlPart
    name: Office.CustomXmlPart
  - uid: office.Office.CustomXmlParts
    name: Office.CustomXmlParts
  - uid: office.Office.CustomXmlPrefixMappings
    name: Office.CustomXmlPrefixMappings
  - uid: office.Office.Dialog
    name: Office.Dialog
  - uid: office.Office.DialogOptions
    name: Office.DialogOptions
  - uid: office.Office.Document
    name: Office.Document
  - uid: office.Office.DocumentMode
    name: Office.DocumentMode
  - uid: office.Office.DocumentSelectionChangedEventArgs
    name: Office.DocumentSelectionChangedEventArgs
  - uid: office.Office.Error
    name: Office.Error
  - uid: office.Office.EventType
    name: Office.EventType
  - uid: office.Office.File
    name: Office.File
  - uid: office.Office.FileProperties
    name: Office.FileProperties
  - uid: office.Office.FileType
    name: Office.FileType
  - uid: office.Office.FilterType
    name: Office.FilterType
  - uid: office.Office.GetBindingDataOptions
    name: Office.GetBindingDataOptions
  - uid: office.Office.GetFileOptions
    name: Office.GetFileOptions
  - uid: office.Office.GetSelectedDataOptions
    name: Office.GetSelectedDataOptions
  - uid: office.Office.GoToByIdOptions
    name: Office.GoToByIdOptions
  - uid: office.Office.GoToType
    name: Office.GoToType
  - uid: office.Office.HostType
    name: Office.HostType
  - uid: office.Office.Index
    name: Office.Index
  - uid: office.Office.InitializationReason
    name: Office.InitializationReason
  - uid: office.Office.IPromiseConstructor
    name: Office.IPromiseConstructor
  - uid: office.Office.MatrixBinding
    name: Office.MatrixBinding
  - uid: office.Office.NodeDeletedEventArgs
    name: Office.NodeDeletedEventArgs
  - uid: office.Office.NodeInsertedEventArgs
    name: Office.NodeInsertedEventArgs
  - uid: office.Office.NodeReplacedEventArgs
    name: Office.NodeReplacedEventArgs
  - uid: office.Office.OfficeTheme
    name: Office.OfficeTheme
  - uid: office.Office.PlatformType
    name: Office.PlatformType
  - uid: office.Office.ProjectProjectFields
    name: Office.ProjectProjectFields
  - uid: office.Office.ProjectResourceFields
    name: Office.ProjectResourceFields
  - uid: office.Office.ProjectTaskFields
    name: Office.ProjectTaskFields
  - uid: office.Office.ProjectViewTypes
    name: Office.ProjectViewTypes
  - uid: office.Office.RangeCoordinates
    name: Office.RangeCoordinates
  - uid: office.Office.RangeFormatConfiguration
    name: Office.RangeFormatConfiguration
  - uid: office.Office.RemoveHandlerOptions
    name: Office.RemoveHandlerOptions
  - uid: office.Office.RequirementSetSupport
    name: Office.RequirementSetSupport
  - uid: office.Office.SaveSettingsOptions
    name: Office.SaveSettingsOptions
  - uid: office.Office.SelectionMode
    name: Office.SelectionMode
  - uid: office.Office.SetBindingDataOptions
    name: Office.SetBindingDataOptions
  - uid: office.Office.SetSelectedDataOptions
    name: Office.SetSelectedDataOptions
  - uid: office.Office.Settings
    name: Office.Settings
  - uid: office.Office.SettingsChangedEventArgs
    name: Office.SettingsChangedEventArgs
  - uid: office.Office.Slice
    name: Office.Slice
  - uid: office.Office.Table
    name: Office.Table
  - uid: office.Office.TableBinding
    name: Office.TableBinding
  - uid: office.Office.TableData
    name: Office.TableData
  - uid: office.Office.TextBinding
    name: Office.TextBinding
  - uid: office.Office.UI
    name: Office.UI
  - uid: office.Office.ValueFormat
    name: Office.ValueFormat
  - uid: office.OfficeExtension.ClientObject
    name: OfficeExtension.ClientObject
  - uid: office.OfficeExtension.ClientRequestContext
    name: OfficeExtension.ClientRequestContext
  - uid: office.OfficeExtension.ClientResult
    name: OfficeExtension.ClientResult
  - uid: office.OfficeExtension.DebugInfo
    name: OfficeExtension.DebugInfo
  - uid: office.OfficeExtension.EmbeddedOptions
    name: OfficeExtension.EmbeddedOptions
  - uid: office.OfficeExtension.EmbeddedSession
    name: OfficeExtension.EmbeddedSession
  - uid: office.OfficeExtension.Error
    name: OfficeExtension.Error
  - uid: office.OfficeExtension.ErrorCodes
    name: OfficeExtension.ErrorCodes
  - uid: office.OfficeExtension.EventHandlerResult
    name: OfficeExtension.EventHandlerResult
  - uid: office.OfficeExtension.EventHandlers
    name: OfficeExtension.EventHandlers
  - uid: office.OfficeExtension.EventInfo
    name: OfficeExtension.EventInfo
  - uid: office.OfficeExtension.LoadOption
    name: OfficeExtension.LoadOption
  - uid: office.OfficeExtension.RequestContextDebugInfo
    name: OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.RequestUrlAndHeaderInfo
    name: OfficeExtension.RequestUrlAndHeaderInfo
  - uid: office.OfficeExtension.RunOptions
    name: OfficeExtension.RunOptions
  - uid: office.OfficeExtension.TrackedObjects
    name: OfficeExtension.TrackedObjects
  - uid: office.OfficeExtension.UpdateOptions
    name: OfficeExtension.UpdateOptions