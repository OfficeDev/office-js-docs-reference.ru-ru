### YamlMime:UniversalReference
items:
  - uid: office.Office.Settings
    summary: '<span data-ttu-id="64a4a-101">Представляет пользовательские параметры для надстройки области задач или контентной надстройки, которые хранятся в документе ведущего приложения как пары "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="64a4a-101">Represents custom settings for a task pane or content add-in that are stored in the host document as name/value pairs.</span></span>'
    remarks: |-
      <span data-ttu-id="64a4a-102">**Узлы**: Access, Excel, PowerPoint, Word</span><span class="sxs-lookup"><span data-stu-id="64a4a-102">**Hosts**: Access, Excel, PowerPoint, Word</span></span>

      <span data-ttu-id="64a4a-103">Параметры, созданные с помощью методов объекта Settings, сохраняются для каждой надстройки и документа.</span><span class="sxs-lookup"><span data-stu-id="64a4a-103">The settings created by using the methods of the Settings object are saved per add-in and per document.</span></span> <span data-ttu-id="64a4a-104">Таким образом, они доступны только для создавшего их приложения и только из того документа, в котором они сохранены.</span><span class="sxs-lookup"><span data-stu-id="64a4a-104">That is, they are available only to the add-in that created them, and only from the document in which they are saved.</span></span>

      <span data-ttu-id="64a4a-105">Имя параметра — это строка, а значение может быть String, Number, Boolean, null, Object или Array.</span><span class="sxs-lookup"><span data-stu-id="64a4a-105">The name of a setting is a string, while the value can be a string, number, boolean, null, object, or array.</span></span>

      <span data-ttu-id="64a4a-106">Объект Settings автоматически загружается как часть объекта Document и доступен с помощью вызова свойства Settings этого объекта при активации надстройки.</span><span class="sxs-lookup"><span data-stu-id="64a4a-106">The Settings object is automatically loaded as part of the Document object, and is available by calling the settings property of that object when the add-in is activated.</span></span>

      <span data-ttu-id="64a4a-107">Разработчик должен предусмотреть вызов метода saveAsync после добавления или удаления параметров, чтобы сохранить параметры в документе.</span><span class="sxs-lookup"><span data-stu-id="64a4a-107">The developer is responsible for calling the saveAsync method after adding or deleting settings to save the settings in the document.</span></span>
    name: Office.Settings
    fullName: Office.Settings
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Settings.addHandlerAsync
      - office.Office.Settings.addHandlerAsync_1
      - office.Office.Settings.get
      - office.Office.Settings.refreshAsync
      - office.Office.Settings.remove
      - office.Office.Settings.removeHandlerAsync
      - office.Office.Settings.removeHandlerAsync_1
      - office.Office.Settings.saveAsync
      - office.Office.Settings.saveAsync_1
      - office.Office.Settings.set
  - uid: office.Office.Settings.addHandlerAsync
    summary: |-
      <span data-ttu-id="64a4a-108">Добавляет обработчик событий для события settingsChanged.</span><span class="sxs-lookup"><span data-stu-id="64a4a-108">Adds an event handler for the settingsChanged event.</span></span>

      <span data-ttu-id="64a4a-109">**Важно!** код надстройки может зарегистрировать обработчик для события settingsChanged при запуске надстройки в любом клиенте Excel, но событие будет срабатывать только при загрузке надстройки с помощью электронной таблицы, открытой в Excel Online, и нескольких пользователей. редактирует электронную таблицу (совместное редактирование).</span><span class="sxs-lookup"><span data-stu-id="64a4a-109">**Important**: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in Excel Online, and more than one user is editing the spreadsheet (co-authoring).</span></span> <span data-ttu-id="64a4a-110">Therefore, effectively the settingsChanged event is supported only in Excel Online in co-authoring scenarios.</span><span class="sxs-lookup"><span data-stu-id="64a4a-110">Therefore, effectively the settingsChanged event is supported only in Excel Online in co-authoring scenarios.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-111">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="64a4a-111">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="64a4a-112">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="64a4a-112">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="64a4a-113">Указывает тип добавляемого события.</span><span class="sxs-lookup"><span data-stu-id="64a4a-113">Specifies the type of event to add.</span></span> <span data-ttu-id="64a4a-114">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="64a4a-114">Required.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="64a4a-115">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="64a4a-115">The event handler function to add, whose only parameter is of type [Office.SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)</span></span><!-- --><span data-ttu-id="64a4a-116">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-116"></span></span> <span data-ttu-id="64a4a-117">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-117">Required.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="64a4a-118">Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.</span><span class="sxs-lookup"><span data-stu-id="64a4a-118">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: |-
            <span data-ttu-id="64a4a-119">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-119">Optional.</span></span> <span data-ttu-id="64a4a-120">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-121">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-121"></span></span>

            <table> <tr> <th><span data-ttu-id="64a4a-122">Свойство</span><span class="sxs-lookup"><span data-stu-id="64a4a-122">Property</span></span></th> <th><span data-ttu-id="64a4a-123">Назначение</span><span class="sxs-lookup"><span data-stu-id="64a4a-123">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="64a4a-124">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="64a4a-124">AsyncResult.value</span></span></td> <td><span data-ttu-id="64a4a-125">Всегда возвращает значение undefined, так как при добавлении обработчика события нет данных или объектов, которые можно вернуть.</span><span class="sxs-lookup"><span data-stu-id="64a4a-125">Always returns undefined because there is no data or object to retrieve when adding an event handler.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-126">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="64a4a-126">AsyncResult.status</span></span></td> <td><span data-ttu-id="64a4a-127">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="64a4a-127">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-128">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="64a4a-128">AsyncResult.error</span></span></td> <td><span data-ttu-id="64a4a-129">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-129">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-130">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="64a4a-130">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="64a4a-131">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-131">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.addHandlerAsync_1
    summary: |-
      <span data-ttu-id="64a4a-132">Добавляет обработчик событий для события settingsChanged.</span><span class="sxs-lookup"><span data-stu-id="64a4a-132">Adds an event handler for the settingsChanged event.</span></span>

      <span data-ttu-id="64a4a-133">**Важно!** код надстройки может зарегистрировать обработчик для события settingsChanged при запуске надстройки в любом клиенте Excel, но событие будет срабатывать только при загрузке надстройки с помощью электронной таблицы, открытой в Excel Online, и нескольких пользователей. редактирует электронную таблицу (совместное редактирование).</span><span class="sxs-lookup"><span data-stu-id="64a4a-133">**Important**: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in Excel Online, and more than one user is editing the spreadsheet (co-authoring).</span></span> <span data-ttu-id="64a4a-134">Therefore, effectively the settingsChanged event is supported only in Excel Online in co-authoring scenarios.</span><span class="sxs-lookup"><span data-stu-id="64a4a-134">Therefore, effectively the settingsChanged event is supported only in Excel Online in co-authoring scenarios.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-135">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="64a4a-135">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="64a4a-136">Можно добавить несколько обработчиков событий для указанного объекта eventType, если имя каждой функции обработчика событий уникально.</span><span class="sxs-lookup"><span data-stu-id="64a4a-136">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="64a4a-137">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-137">Examples</span></span>

      ```javascript
      function addSelectionChangedEventHandler() {
          Office.context.document.settings.addHandlerAsync(Office.EventType.SettingsChanged, MyHandler);
      }

      function MyHandler(eventArgs) {
          write('Event raised: ' + eventArgs.type);
          doSomethingWithSettings(eventArgs.settings);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="64a4a-138">Указывает тип добавляемого события.</span><span class="sxs-lookup"><span data-stu-id="64a4a-138">Specifies the type of event to add.</span></span> <span data-ttu-id="64a4a-139">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="64a4a-139">Required.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="64a4a-140">Добавляемая функция обработчика событий, единственный параметр которой имеет тип [Office. SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="64a4a-140">The event handler function to add, whose only parameter is of type [Office.SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)</span></span><!-- --><span data-ttu-id="64a4a-141">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-141"></span></span> <span data-ttu-id="64a4a-142">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-142">Required.</span></span>'
          type:
            - any
        - id: callback
          description: |-
            <span data-ttu-id="64a4a-143">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-143">Optional.</span></span> <span data-ttu-id="64a4a-144">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-145">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-145"></span></span>

            <table> <tr> <th><span data-ttu-id="64a4a-146">Свойство</span><span class="sxs-lookup"><span data-stu-id="64a4a-146">Property</span></span></th> <th><span data-ttu-id="64a4a-147">Назначение</span><span class="sxs-lookup"><span data-stu-id="64a4a-147">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="64a4a-148">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="64a4a-148">AsyncResult.value</span></span></td> <td><span data-ttu-id="64a4a-149">Всегда возвращает значение undefined, так как при добавлении обработчика события нет данных или объектов, которые можно вернуть.</span><span class="sxs-lookup"><span data-stu-id="64a4a-149">Always returns undefined because there is no data or object to retrieve when adding an event handler.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-150">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="64a4a-150">AsyncResult.status</span></span></td> <td><span data-ttu-id="64a4a-151">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="64a4a-151">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-152">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="64a4a-152">AsyncResult.error</span></span></td> <td><span data-ttu-id="64a4a-153">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-153">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-154">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="64a4a-154">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="64a4a-155">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-155">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.get
    summary: <span data-ttu-id="64a4a-156">Извлекает указанный параметр.</span><span class="sxs-lookup"><span data-stu-id="64a4a-156">Retrieves the specified setting.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-157">**Набор требований**: [Параметры](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="64a4a-157">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      #### <a name="examples"></a><span data-ttu-id="64a4a-158">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-158">Examples</span></span>

      ```javascript
      function displayMySetting() {
          write('Current value for mySetting: ' + Office.context.document.settings.get('mySetting'));
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: get(name)
    fullName: get(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: '<span data-ttu-id="64a4a-159">Объект, содержащий имена свойств, сопоставленные с сериализованными значениями JSON.</span><span class="sxs-lookup"><span data-stu-id="64a4a-159">An object that has property names mapped to JSON serialized values.</span></span>'
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: office.Office.Settings.refreshAsync
    summary: '<span data-ttu-id="64a4a-160">Считывает все параметры, сохраненные в документе, и обновляет копию этих параметров в памяти для контентной надстройки или надстройки области задач.</span><span class="sxs-lookup"><span data-stu-id="64a4a-160">Reads all settings persisted in the document and refreshes the content or task pane add-in''s copy of those settings held in memory.</span></span>'
    remarks: |-
      <span data-ttu-id="64a4a-161">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="64a4a-161">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="64a4a-162">Этот метод полезен в сценариях совместного редактирования Excel, Word и PowerPoint, когда несколько экземпляров одной и той же надстройки работают с одним и тем же документом.</span><span class="sxs-lookup"><span data-stu-id="64a4a-162">This method is useful in Excel, Word, and PowerPoint coauthoring scenarios when multiple instances of the same add-in are working against the same document.</span></span> <span data-ttu-id="64a4a-163">Так как каждая надстройка работает с копией параметров, загруженных из памяти документа, на момент открытия его пользователем, значения параметров, используемых каждым пользователем, могут быть получены из синхронизации. Это может произойти, когда экземпляр надстройки вызывает метод Settings. saveAsync для сохранения всех параметров этого пользователя в документе.</span><span class="sxs-lookup"><span data-stu-id="64a4a-163">Because each add-in is working against an in-memory copy of the settings loaded from the document at the time the user opened it, the settings values used by each user can get out of sync. This can happen whenever an instance of the add-in calls the Settings.saveAsync method to persist all of that user's settings to the document.</span></span> <span data-ttu-id="64a4a-164">Вызов метода refreshAsync из обработчика событий для события settingsChanged надстройки приведет к обновлению значений параметров для всех пользователей.</span><span class="sxs-lookup"><span data-stu-id="64a4a-164">Calling the refreshAsync method from the event handler for the settingsChanged event of the add-in will refresh the settings values for all users.</span></span>

      <span data-ttu-id="64a4a-165">Если функция обратного вызова передана методу refreshAsync, можно использовать свойства объекта AsyncResult для возврата следующей информации.</span><span class="sxs-lookup"><span data-stu-id="64a4a-165">In the callback function passed to the refreshAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="64a4a-166">Свойство</span><span class="sxs-lookup"><span data-stu-id="64a4a-166">Property</span></span></th> <th><span data-ttu-id="64a4a-167">Назначение</span><span class="sxs-lookup"><span data-stu-id="64a4a-167">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="64a4a-168">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="64a4a-168">AsyncResult.value</span></span></td> <td><span data-ttu-id="64a4a-169">Получает доступ к объекту Settings с обновленными значениями.</span><span class="sxs-lookup"><span data-stu-id="64a4a-169">Access a Settings object with the refreshed values.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-170">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="64a4a-170">AsyncResult.status</span></span></td> <td><span data-ttu-id="64a4a-171">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="64a4a-171">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-172">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="64a4a-172">AsyncResult.error</span></span></td> <td><span data-ttu-id="64a4a-173">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-173">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-174">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="64a4a-174">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="64a4a-175">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-175">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="64a4a-176">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-176">Examples</span></span>

      ```javascript
      function refreshSettings() {
          Office.context.document.settings.refreshAsync(function (asyncResult) {
              write('Settings refreshed with status: ' + asyncResult.status);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: refreshAsync(callback)
    fullName: refreshAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAsync(callback?: (result: AsyncResult<Office.Settings>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="64a4a-177">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-177">Optional.</span></span> <span data-ttu-id="64a4a-178">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-178">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-179">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-179"></span></span> <span data-ttu-id="64a4a-180">Значением `value` свойства является объект [Office. Settings](xref:office.Office.Settings) с обновленными значениями.</span><span class="sxs-lookup"><span data-stu-id="64a4a-180">The `value` property of the result is an [Office.Settings](xref:office.Office.Settings) object with the refreshed values.</span></span>'
          type:
            - '(result: AsyncResult<Office.Settings>) => void'
  - uid: office.Office.Settings.remove
    summary: |-
      <span data-ttu-id="64a4a-181">Удаляет указанный параметр.</span><span class="sxs-lookup"><span data-stu-id="64a4a-181">Removes the specified setting.</span></span>

      <span data-ttu-id="64a4a-182">**Важно!** Обратите внимание на то, что метод Settings. Remove влияет только на копию контейнера свойств параметров параметров, нашедшегося в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-182">**Important**: Be aware that the Settings.remove method affects only the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="64a4a-183">To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method.</span><span class="sxs-lookup"><span data-stu-id="64a4a-183">To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-184">**Набор требований**: [Параметры](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="64a4a-184">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="64a4a-185">Для параметра допустимо значение null.</span><span class="sxs-lookup"><span data-stu-id="64a4a-185">null is a valid value for a setting.</span></span> <span data-ttu-id="64a4a-186">Таким образом, назначение параметру значения null не приведет к его удалению из контейнера свойств параметров.</span><span class="sxs-lookup"><span data-stu-id="64a4a-186">Therefore, assigning null to the setting will not remove it from the settings property bag.</span></span>

      #### <a name="examples"></a><span data-ttu-id="64a4a-187">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-187">Examples</span></span>

      ```javascript
      function removeMySetting() {
          Office.context.document.settings.remove('mySetting');
      }
      ```
    name: remove(name)
    fullName: remove(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: office.Office.Settings.removeHandlerAsync
    summary: <span data-ttu-id="64a4a-188">Удаляет обработчик события settingsChanged.</span><span class="sxs-lookup"><span data-stu-id="64a4a-188">Removes an event handler for the settingsChanged event.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-189">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="64a4a-189">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="64a4a-190">Если необязательный параметр Handler опущен при вызове метода removeHandlerAsync, все обработчики событий для указанного объекта eventType будут удалены.</span><span class="sxs-lookup"><span data-stu-id="64a4a-190">If the optional handler parameter is omitted when calling the removeHandlerAsync method, all event handlers for the specified eventType will be removed.</span></span>

      <span data-ttu-id="64a4a-191">При выполнении функции, переданной в параметр callback, она получает объект AsyncResult, к которому можно получить доступ с помощью единственного параметра функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="64a4a-191">When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter.</span></span>

      <span data-ttu-id="64a4a-192">В функции обратного вызова, переданной в метод removeHandlerAsync, можно использовать свойства объекта AsyncResult, чтобы получить следующие сведения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-192">In the callback function passed to the removeHandlerAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="64a4a-193">Указывает тип удаляемого события.</span><span class="sxs-lookup"><span data-stu-id="64a4a-193">Specifies the type of event to remove.</span></span> <span data-ttu-id="64a4a-194">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="64a4a-194">Required.</span></span>
          type:
            - Office.EventType
        - id: options
          description: '<span data-ttu-id="64a4a-195">Предоставляет параметры для определения обработчика событий или обработчиков, которые удаляются.</span><span class="sxs-lookup"><span data-stu-id="64a4a-195">Provides options to determine which event handler or handlers are removed.</span></span>'
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="64a4a-196">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-196">Optional.</span></span> <span data-ttu-id="64a4a-197">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-197">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-198">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-198"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.removeHandlerAsync_1
    summary: <span data-ttu-id="64a4a-199">Удаляет обработчик события settingsChanged.</span><span class="sxs-lookup"><span data-stu-id="64a4a-199">Removes an event handler for the settingsChanged event.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-200">**Набор**обязательных элементов: [не в наборе](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="64a4a-200">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="64a4a-201">Если необязательный параметр Handler опущен при вызове метода removeHandlerAsync, все обработчики событий для указанного объекта eventType будут удалены.</span><span class="sxs-lookup"><span data-stu-id="64a4a-201">If the optional handler parameter is omitted when calling the removeHandlerAsync method, all event handlers for the specified eventType will be removed.</span></span>

      <span data-ttu-id="64a4a-202">При выполнении функции, переданной в параметр callback, она получает объект AsyncResult, к которому можно получить доступ с помощью единственного параметра функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="64a4a-202">When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter.</span></span>

      <span data-ttu-id="64a4a-203">В функции обратного вызова, переданной в метод removeHandlerAsync, можно использовать свойства объекта AsyncResult, чтобы получить следующие сведения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-203">In the callback function passed to the removeHandlerAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      #### <a name="examples"></a><span data-ttu-id="64a4a-204">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-204">Examples</span></span>

      ```javascript
      function removeSettingsChangedEventHandler() {
          Office.context.document.settings.removeHandlerAsync(Office.EventType.SettingsChanged, MyHandler);
      }

      function MyHandler(eventArgs) {
          write('Event raised: ' + eventArgs.type);
          doSomethingWithSettings(eventArgs.settings);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="64a4a-205">Указывает тип удаляемого события.</span><span class="sxs-lookup"><span data-stu-id="64a4a-205">Specifies the type of event to remove.</span></span> <span data-ttu-id="64a4a-206">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="64a4a-206">Required.</span></span>
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="64a4a-207">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-207">Optional.</span></span> <span data-ttu-id="64a4a-208">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-208">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-209">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-209"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.saveAsync
    summary: '<span data-ttu-id="64a4a-210">Хранится в копии контейнера свойств параметров в документе, содержащейся в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-210">Persists the in-memory copy of the settings property bag in the document.</span></span>'
    remarks: |-
      <span data-ttu-id="64a4a-211">**Набор требований**: [Параметры](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="64a4a-211">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="64a4a-212">Все параметры, ранее сохраненные надстройкой, загружаются при ее инициализации, поэтому на протяжении всего сеанса можно использовать только методы set и get для работы с копией контейнера свойств в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-212">Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="64a4a-213">Если требуется сохранить параметры, чтобы они были доступны при следующем использовании надстройки, воспользуйтесь методом saveAsync.</span><span class="sxs-lookup"><span data-stu-id="64a4a-213">When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method.</span></span>

      <span data-ttu-id="64a4a-214">**Note**: метод saveAsync сохраняет в файле документа контейнер свойств параметров в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-214">**Note**: The saveAsync method persists the in-memory settings property bag into the document file.</span></span> <span data-ttu-id="64a4a-215">Однако изменения в самом файле документа сохраняются только в том случае, если пользователь (или параметр автосохранения) сохраняет документ в файловой системе.</span><span class="sxs-lookup"><span data-stu-id="64a4a-215">However, the changes to the document file itself are saved only when the user (or AutoRecover setting) saves the document to the file system.</span></span> <span data-ttu-id="64a4a-216">Метод refreshAsync полезен только в сценариях совместного редактирования, если другие экземпляры одной и той же надстройки могут изменить параметры, и эти изменения должны быть сделаны доступными для всех экземпляров.</span><span class="sxs-lookup"><span data-stu-id="64a4a-216">The refreshAsync method is only useful in coauthoring scenarios when other instances of the same add-in might change the settings and those changes should be made available to all instances.</span></span>

      <table> <tr> <th><span data-ttu-id="64a4a-217">Свойство</span><span class="sxs-lookup"><span data-stu-id="64a4a-217">Property</span></span></th> <th><span data-ttu-id="64a4a-218">Назначение</span><span class="sxs-lookup"><span data-stu-id="64a4a-218">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="64a4a-219">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="64a4a-219">AsyncResult.value</span></span></td> <td><span data-ttu-id="64a4a-220">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-220">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-221">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="64a4a-221">AsyncResult.status</span></span></td> <td><span data-ttu-id="64a4a-222">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="64a4a-222">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-223">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="64a4a-223">AsyncResult.error</span></span></td> <td><span data-ttu-id="64a4a-224">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-224">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-225">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="64a4a-225">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="64a4a-226">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-226">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="64a4a-227">Предоставляет параметры для сохранения параметров.</span><span class="sxs-lookup"><span data-stu-id="64a4a-227">Provides options for saving settings.</span></span>
          type:
            - office.Office.SaveSettingsOptions
        - id: callback
          description: '<span data-ttu-id="64a4a-228">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-228">Optional.</span></span> <span data-ttu-id="64a4a-229">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-229">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-230">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-230"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.saveAsync_1
    summary: '<span data-ttu-id="64a4a-231">Хранится в копии контейнера свойств параметров в документе, содержащейся в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-231">Persists the in-memory copy of the settings property bag in the document.</span></span>'
    remarks: |-
      <span data-ttu-id="64a4a-232">**Набор требований**: [Параметры](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="64a4a-232">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="64a4a-233">Все параметры, ранее сохраненные надстройкой, загружаются при ее инициализации, поэтому на протяжении всего сеанса можно использовать только методы set и get для работы с копией контейнера свойств в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-233">Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="64a4a-234">Если требуется сохранить параметры, чтобы они были доступны при следующем использовании надстройки, воспользуйтесь методом saveAsync.</span><span class="sxs-lookup"><span data-stu-id="64a4a-234">When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method.</span></span>

      <span data-ttu-id="64a4a-235">**Note**: метод saveAsync сохраняет в файле документа контейнер свойств параметров в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-235">**Note**: The saveAsync method persists the in-memory settings property bag into the document file.</span></span> <span data-ttu-id="64a4a-236">Однако изменения в самом файле документа сохраняются только в том случае, если пользователь (или параметр автосохранения) сохраняет документ в файловой системе.</span><span class="sxs-lookup"><span data-stu-id="64a4a-236">However, the changes to the document file itself are saved only when the user (or AutoRecover setting) saves the document to the file system.</span></span> <span data-ttu-id="64a4a-237">Метод refreshAsync полезен только в сценариях совместного редактирования, если другие экземпляры одной и той же надстройки могут изменить параметры, и эти изменения должны быть сделаны доступными для всех экземпляров.</span><span class="sxs-lookup"><span data-stu-id="64a4a-237">The refreshAsync method is only useful in coauthoring scenarios when other instances of the same add-in might change the settings and those changes should be made available to all instances.</span></span>

      <table> <tr> <th><span data-ttu-id="64a4a-238">Свойство</span><span class="sxs-lookup"><span data-stu-id="64a4a-238">Property</span></span></th> <th><span data-ttu-id="64a4a-239">Назначение</span><span class="sxs-lookup"><span data-stu-id="64a4a-239">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="64a4a-240">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="64a4a-240">AsyncResult.value</span></span></td> <td><span data-ttu-id="64a4a-241">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-241">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-242">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="64a4a-242">AsyncResult.status</span></span></td> <td><span data-ttu-id="64a4a-243">Определяет, удалось ли выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="64a4a-243">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-244">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="64a4a-244">AsyncResult.error</span></span></td> <td><span data-ttu-id="64a4a-245">Доступ к объекту Error, который предоставляет сведения об ошибке, если операция завершилась неудачно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-245">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="64a4a-246">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="64a4a-246">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="64a4a-247">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class="sxs-lookup"><span data-stu-id="64a4a-247">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="64a4a-248">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-248">Examples</span></span>

      ```javascript
      function persistSettings() {
          Office.context.document.settings.saveAsync(function (asyncResult) {
              write('Settings saved with status: ' + asyncResult.status);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="64a4a-249">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="64a4a-249">Optional.</span></span> <span data-ttu-id="64a4a-250">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="64a4a-250">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="64a4a-251">.</span><span class="sxs-lookup"><span data-stu-id="64a4a-251"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.Settings.set
    summary: |-
      <span data-ttu-id="64a4a-252">Устанавливает или создает указанный параметр.</span><span class="sxs-lookup"><span data-stu-id="64a4a-252">Sets or creates the specified setting.</span></span>

      <span data-ttu-id="64a4a-253">**Важно!** Обратите внимание на то, что метод Settings. Set влияет только на копию контейнера свойств параметров параметров, нашедшегося в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-253">**Important**: Be aware that the Settings.set method affects only the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="64a4a-254">To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document.</span><span class="sxs-lookup"><span data-stu-id="64a4a-254">To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document.</span></span>
    remarks: |-
      <span data-ttu-id="64a4a-255">**Набор требований**: [Параметры](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="64a4a-255">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="64a4a-256">Метод Set создает новое значение указанного имени, если оно еще не существует, или задает существующее значение указанного имени в копии контейнера свойств параметров в памяти.</span><span class="sxs-lookup"><span data-stu-id="64a4a-256">The set method creates a new setting of the specified name if it does not already exist, or sets an existing setting of the specified name in the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="64a4a-257">После вызова метода Settings.saveAsync значение сохраняется в документе в виде сериализованного JSON-представления своего типа данных.</span><span class="sxs-lookup"><span data-stu-id="64a4a-257">After you call the Settings.saveAsync method, the value is stored in the document as the serialized JSON representation of its data type.</span></span> <span data-ttu-id="64a4a-258">Максимальный размер параметров для каждой надстройки составляет 2 МБ.</span><span class="sxs-lookup"><span data-stu-id="64a4a-258">A maximum of 2MB is available for the settings of each add-in.</span></span>

      #### <a name="examples"></a><span data-ttu-id="64a4a-259">Примеры</span><span class="sxs-lookup"><span data-stu-id="64a4a-259">Examples</span></span>

      ```javascript
      function setMySetting() {
          Office.context.document.settings.set('mySetting', 'mySetting value');
      }
      ```
    name: 'set(name, value)'
    fullName: 'set(name, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: value
          description: <span data-ttu-id="64a4a-260">Задает сохраняемое значение.</span><span class="sxs-lookup"><span data-stu-id="64a4a-260">Specifies the value to be stored.</span></span>
          type:
            - any