### YamlMime:UniversalReference
ms.openlocfilehash: d164a366b460ce05b8e60dc2eaf8c184e757ad74
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/09/2018
ms.locfileid: "26232841"
items:
- uid: office.OfficeExtension.ClientRequestContext
  summary: Абстрактный RequestContext объект, облегчающий выполнение запросов для размещения приложений Office. `Excel.run` И `Word.run` методы предоставляют контекста запроса.
  name: OfficeExtension.ClientRequestContext
  fullName: OfficeExtension.ClientRequestContext
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.ClientRequestContext.constructor
  - office.OfficeExtension.ClientRequestContext.debugInfo
  - office.OfficeExtension.ClientRequestContext.load
  - office.OfficeExtension.ClientRequestContext.loadRecursive
  - office.OfficeExtension.ClientRequestContext.requestHeaders
  - office.OfficeExtension.ClientRequestContext.sync
  - office.OfficeExtension.ClientRequestContext.trace
  - office.OfficeExtension.ClientRequestContext.trackedObjects
- uid: office.OfficeExtension.ClientRequestContext.constructor
  summary: Создает новый экземпляр класса [ClientRequestContext](xref:office.OfficeExtension.ClientRequestContext)
  name: constructor(url)
  fullName: constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.debugInfo
  summary: Данные отладки
  name: debugInfo
  fullName: debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type:
      - office.OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.ClientRequestContext.load
  summary: Очереди команды для загрузки указанного свойства объекта. Необходимо вызвать `context.sync()` перед чтением свойства.
  name: load(object, option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: Объект, свойства которого загружаются.
      type:
      - office.OfficeExtension.ClientObject
    - id: option
      description: Разделенный запятыми строку или массив строк, который указывает свойств для загрузки или объект [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) .
      type:
      - string | string[] | LoadOption
- uid: office.OfficeExtension.ClientRequestContext.loadRecursive
  summary: >-
    Очереди команды для рекурсивного загрузить определенные свойства объекта и его свойства навигации.


    Необходимо вызвать `context.sync()` перед чтением свойства.
  name: loadRecursive(object, options, maxDepth)
  fullName: loadRecursive
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: Объект, который будет загружен.
      type:
      - office.OfficeExtension.ClientObject
    - id: options
      description: 'Объединение ключ значение параметры загрузки для типов, таких как`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
      type:
      - '{ [typeName: string]: string | string[] | LoadOption }'
    - id: maxDepth
      description: Глубина максимальное рекурсивный.
      type:
      - number
- uid: office.OfficeExtension.ClientRequestContext.requestHeaders
  summary: Заголовки запросов
  name: requestHeaders
  fullName: requestHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requestHeaders:'
    return:
      type:
      - '{ [name: string]: string }'
- uid: office.OfficeExtension.ClientRequestContext.sync
  summary: Синхронизирует состояние между объектами JavaScript прокси-сервера и Office, документов, путем выполнения инструкций в очередь на контекста запроса, а также извлечение свойств загруженных объектов Microsoft Office для использования в вашем коде. Этот метод возвращает резервирования, которая разрешается после завершения синхронизации.
  name: sync(passThroughValue)
  fullName: sync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    return:
      type:
      - Promise<T>
      description: ''
    parameters:
    - id: passThroughValue
      description: ''
      type:
      - T
- uid: office.OfficeExtension.ClientRequestContext.trace
  summary: Добавляет трассировки сообщений в очередь. Если перспективы, возвращаемый `context.sync()` отклонено из-за ошибки, добавляет массива «.traceMessages» OfficeExtension.Error объект, содержащий все сообщения трассировки, которые были выполнены. Эти сообщения могут помочь отслеживания последовательность выполнения программы и определить причину ошибки.
  name: trace(message)
  fullName: trace
  langs:
  - typeScript
  type: method
  syntax:
    content: 'trace(message: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.trackedObjects
  summary: Коллекция объектов, которые отслеживаются для автоматического корректировок с учетом соседних изменения в документе.
  name: trackedObjects
  fullName: trackedObjects
  langs:
  - typeScript
  type: property
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type:
      - office.OfficeExtension.TrackedObjects
