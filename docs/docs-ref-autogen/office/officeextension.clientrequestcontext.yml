### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: '<span data-ttu-id="65c60-101">Абстрактный объект RequestContext, упрощающий запросы к ведущему приложению Office.</span><span class="sxs-lookup"><span data-stu-id="65c60-101">An abstract RequestContext object that facilitates requests to the host Office application.</span></span> <span data-ttu-id="65c60-102">Методы `Excel.run` и `Word.run` предоставляют контекст запроса.</span><span class="sxs-lookup"><span data-stu-id="65c60-102">The `Excel.run` and `Word.run` methods provide a request context.</span></span>'
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.(constructor)
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.(constructor)
    summary: <span data-ttu-id="65c60-103">Создает новый экземпляр `ClientRequestContext` класса</span><span class="sxs-lookup"><span data-stu-id="65c60-103">Constructs a new instance of the `ClientRequestContext` class</span></span>
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: <span data-ttu-id="65c60-104">Данные отладки</span><span class="sxs-lookup"><span data-stu-id="65c60-104">Debug information</span></span>
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: <span data-ttu-id="65c60-105">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="65c60-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="65c60-106">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="65c60-106">You must call `context.sync()` before reading the properties.</span></span>
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: '<span data-ttu-id="65c60-107">Объект, свойства которого загружаются.</span><span class="sxs-lookup"><span data-stu-id="65c60-107">The object whose properties are loaded.</span></span>'
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: '<span data-ttu-id="65c60-108">Разделенная запятыми строка или массив строк, указывающая свойства для загрузки или объект [объект officeextension. LoadOption](xref:office.OfficeExtension.LoadOption) .</span><span class="sxs-lookup"><span data-stu-id="65c60-108">A comma-delimited string, or array of strings, that specifies the properties to load, or an [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.</span></span>'
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      <span data-ttu-id="65c60-109">Ставит в очередь команду на рекурсивную загрузку заданных свойств объекта и его свойств навигации.</span><span class="sxs-lookup"><span data-stu-id="65c60-109">Queues up a command to recursively load the specified properties of the object and its navigation properties.</span></span>

      <span data-ttu-id="65c60-110">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="65c60-110">You must call `context.sync()` before reading the properties.</span></span>
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: <span data-ttu-id="65c60-111">Загружаемый объект.</span><span class="sxs-lookup"><span data-stu-id="65c60-111">The object to be loaded.</span></span>
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: '<span data-ttu-id="65c60-112">Ключ — значение параметров загрузки для таких типов, как`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span><span class="sxs-lookup"><span data-stu-id="65c60-112">The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span></span>'
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: <span data-ttu-id="65c60-113">Максимальное рекурсивное значение глубины.</span><span class="sxs-lookup"><span data-stu-id="65c60-113">The maximum recursive depth.</span></span>
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: <span data-ttu-id="65c60-114">Заголовки запросов</span><span class="sxs-lookup"><span data-stu-id="65c60-114">Request headers</span></span>
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: '<span data-ttu-id="65c60-115">Синхронизирует состояние между прокси-объектами JavaScript и документом Office, выполняя инструкции в очереди контекста запроса и получая свойства загруженных объектов Office для использования в коде.</span><span class="sxs-lookup"><span data-stu-id="65c60-115">Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.</span></span> <span data-ttu-id="65c60-116">Этот метод возвращает обещание, которое разрешается по завершении синхронизации.</span><span class="sxs-lookup"><span data-stu-id="65c60-116">This method returns a promise, which is resolved when the synchronization is complete.</span></span>'
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: '<span data-ttu-id="65c60-117">Добавляет сообщение трассировки в очередь.</span><span class="sxs-lookup"><span data-stu-id="65c60-117">Adds a trace message to the queue.</span></span> <span data-ttu-id="65c60-118">Если обещание, возвращенное `context.sync()` в результате, отклонено из-за ошибки, в объект объект officeextension. Error добавляется массив ". трацемессажес", содержащий все выполненные сообщения трассировки.</span><span class="sxs-lookup"><span data-stu-id="65c60-118">If the promise returned by `context.sync()` is rejected due to an error, this adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were executed.</span></span> <span data-ttu-id="65c60-119">Эти сообщения могут помочь отслеживать последовательность выполнения программы и определять причину ошибки.</span><span class="sxs-lookup"><span data-stu-id="65c60-119">These messages can help you monitor the program execution sequence and detect the cause of the error.</span></span>'
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: '<span data-ttu-id="65c60-120">Коллекция объектов, отслеживаемых для автоматических корректировок на основе окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="65c60-120">Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.</span></span>'
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects