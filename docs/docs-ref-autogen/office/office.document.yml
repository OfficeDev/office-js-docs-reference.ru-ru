### YamlMime:UniversalReference
ms.openlocfilehash: 43587368b6fde56000701231808f563df3ec1936
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725503"
items:
- uid: office.Office.Document
  summary: <span data-ttu-id="e7de6-101">Абстрактный класс, представляющий документ, с которым взаимодействует надстройка.</span><span class="sxs-lookup"><span data-stu-id="e7de6-101">An abstract class that represents the document the add-in is interacting with.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e7de6-102">Hosts</span><span class="sxs-lookup"><span data-stu-id="e7de6-102">Hosts</span></span></td><td><span data-ttu-id="e7de6-103">Access, Excel, PowerPoint, Project, Word</span><span class="sxs-lookup"><span data-stu-id="e7de6-103">Access, Excel, PowerPoint, Project, Word</span></span></td></tr></table>
  name: Office.Document
  fullName: Office.Document
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Document.addHandlerAsync
  - office.Office.Document.bindings
  - office.Office.Document.customXmlParts
  - office.Office.Document.getActiveViewAsync
  - office.Office.Document.getFileAsync
  - office.Office.Document.getFilePropertiesAsync
  - office.Office.Document.getMaxResourceIndexAsync
  - office.Office.Document.getMaxTaskIndexAsync
  - office.Office.Document.getProjectFieldAsync
  - office.Office.Document.getResourceByIndexAsync
  - office.Office.Document.getResourceFieldAsync
  - office.Office.Document.getSelectedDataAsync
  - office.Office.Document.getSelectedResourceAsync
  - office.Office.Document.getSelectedTaskAsync
  - office.Office.Document.getSelectedViewAsync
  - office.Office.Document.getTaskAsync
  - office.Office.Document.getTaskByIndexAsync
  - office.Office.Document.getTaskFieldAsync
  - office.Office.Document.getWSSUrlAsync
  - office.Office.Document.goToByIdAsync
  - office.Office.Document.mode
  - office.Office.Document.removeHandlerAsync
  - office.Office.Document.setResourceFieldAsync
  - office.Office.Document.setSelectedDataAsync
  - office.Office.Document.setTaskFieldAsync
  - office.Office.Document.settings
  - office.Office.Document.url
- uid: office.Office.Document.addHandlerAsync
  summary: <span data-ttu-id="e7de6-104">Добавляет обработчик событий для события объекта Document.</span><span class="sxs-lookup"><span data-stu-id="e7de6-104">Adds an event handler for a Document object event.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e7de6-105\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-105\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e7de6-106\">DocumentEvents</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-106\">DocumentEvents</span></span></td></tr></table>\n\n<span data-ttu-id=\"e7de6-107\">Можно добавить несколько обработчиков событий для указанного объекта eventType, поскольку имя каждой функции обработчика событий является уникальным.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-107\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n\n<span data-ttu-id=\"e7de6-108\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-108\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p101\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p101\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-111\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-111\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-112\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-112\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-113\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-113\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-114\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-114\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-115\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-115\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-116\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-116\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-117\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-117\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-118\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-118\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-119\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-119\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-120\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-120\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-121\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-121\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-122\"><strong>OneNote</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-122\"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id=\"e7de6-123\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-123\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-124\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-124\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-125\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-125\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-126\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-126\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-127\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-127\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-128\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-128\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-129\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-129\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-130\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-130\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-131\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-131\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-132\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-132\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-133\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-133\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-134\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-134\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-135\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-135\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-136\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-136\">Examples</span></span>\n\n```javascript\n// The following example adds an event handler for the SelectionChanged event of a document\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithDocument(eventArgs.document);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example adds a handler for the ResourceSelectionChanged event.\n// When the resource selection changes in the document, it gets the GUID of the selected resource.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ResourceSelectionChanged,\n                getResourceGuid);\n        });\n    };\n\n    // Get the GUID of the selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ResourceSelectionChanged\n// event handler in a Project add-in, see \"Create your first task pane add-in\n// for Project 2013 by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example adds a handler for the TaskSelectionChanged event.\n// When the task selection changes in the document, it gets the GUID of the\n// selected task.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.TaskSelectionChanged,\n                getTaskGuid);\n            getTaskGuid();\n        });\n    };\n\n    // Get the GUID of the selected task and display it in the add-in.\n    function getTaskGuid() {\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```\n```javascript\n// The following code example adds a handler for the ViewSelectionChanged\n// event. When the active view changes, it gets the name and type of the active view.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            getActiveView();\n        });\n    };\n\n    // Get the name and type of the active view and display it in the add-in.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, result.value.viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For an example that shows how to use a ViewSelectionChanged event handler in a\n// Project add-in, see \"Create your first task pane add-in for Project 2013 by\n// using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example uses addHandlerAsync to add an event handler for the ViewSelectionChanged event.\n// When the active view changes, the handler checks the view type. It enables a button if the view is a resource\n// view and disables the button if it isn't a resource view. Choosing the button gets the GUID of the selected\n// resource and displays it in the add-in.\n// The example assumes that your add-in has a reference to the jQuery library and that the following page controls\n// are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" disabled=\"disabled\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            // Add a ViewSelectionChanged event handler.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            $('#get-info').click(getResourceGuid);\n\n            // This example calls the handler on page load to get the active view\n            // of the default page.\n            getActiveView();\n        });\n    };\n\n    // Activate the button based on the active view type of the document.\n    // This is the ViewSelectionChanged event handler.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var viewType = result.value.viewType;\n                    if (viewType == 6 ||   // ResourceForm\n                        viewType == 7 ||   // ResourceSheet\n                        viewType == 8 ||   // ResourceGraph\n                        viewType == 15) {  // ResourceUsage\n                        $('#get-info').removeAttr('disabled');\n                    }\n                    else {\n                        $('#get-info').attr('disabled', 'disabled');\n                    }\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    // Get the GUID of the currently selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html('Resource GUID: ' + result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ViewSelectionChanged event handler in a Project add-in,\n// see \"Create your first task pane add-in for Project by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```"
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="e7de6-137">Для события объекта Document параметру eventType могут быть присвоены как `Office.EventType.Document.SelectionChanged` или `Office.EventType.Document.ActiveViewChanged` <!-- -->, или соответствующее текстовое значение этого перечисления.</span><span class="sxs-lookup"><span data-stu-id="e7de6-137">For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`<!-- -->, or the corresponding text value of this enumeration.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="e7de6-138">Функцию обработчика событий для добавления, единственный параметр которой имеет тип [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-138">The event handler function to add, whose only parameter is of type [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)<!-- -->.</span></span> <span data-ttu-id="e7de6-139">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-139">Required.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="e7de6-140">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-140">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-141">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-141">Optional.</span></span> <span data-ttu-id="e7de6-142">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-142">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.bindings
  summary: <span data-ttu-id="e7de6-143">Получает объект, предоставляющий доступ к привязкам, определенным в документе.</span><span class="sxs-lookup"><span data-stu-id="e7de6-143">Gets an object that provides access to the bindings defined in the document.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-144\">Создайте экземпляр объекта Document не непосредственно в скрипте.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-144\">You don't instantiate the Document object directly in your script.</span></span> <span data-ttu-id=\"e7de6-145\">Чтобы вызвать элементы объекта Document для взаимодействия с текущего документа или листа, используйте `Office.context.document` в скрипте.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-145\">To call members of the Document object to interact with the current document or worksheet, use `Office.context.document` in your script.</span></span>\n\n<span data-ttu-id=\"e7de6-146\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-146\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p105\">Заглавная буква Y в следующей матрице указывает на то, что это свойство поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает это свойство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p105\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"e7de6-149\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-149\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-150\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-150\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-151\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-151\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-152\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-152\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-153\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-153\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-154\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-154\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-155\"><strong>Access</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-155\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"e7de6-156\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-156\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-157\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-157\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-158\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-158\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-159\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-159\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-160\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-160\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-161\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-161\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-162\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-162\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-163\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-163\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-164\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-164\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-165\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-165\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-166\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-166\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-167\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-167\">Examples</span></span>\n\n```javascript\nfunction displayAllBindings() {\n    Office.context.document.bindings.getAllAsync(function (asyncResult) {\n        var bindingString = '';\n        for (var i in asyncResult.value) {\n            bindingString += asyncResult.value[i].id + '\\n';\n        }\n        write('Existing bindings: ' + bindingString);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bindings: Bindings;'
    return:
      type:
      - office.Office.Bindings
- uid: office.Office.Document.customXmlParts
  summary: <span data-ttu-id="e7de6-168">Получает объект, представляющий настраиваемые XML-части в документе.</span><span class="sxs-lookup"><span data-stu-id="e7de6-168">Gets an object that represents the custom XML parts in the document.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-169\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-169\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p106\">Заглавная буква Y в следующей матрице указывает на то, что это свойство поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает это свойство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p106\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"e7de6-172\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-172\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-173\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-173\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-174\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-174\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-175\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-175\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-176\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-176\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-177\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-177\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-178\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-178\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-179\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-179\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-180\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-180\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-181\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-181\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-182\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-182\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-183\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-183\">Examples</span></span>\n\n```javascript\nfunction getCustomXmlParts(){\n    Office.context.document.customXmlParts.getByNamespaceAsync('http://tempuri.org', function (asyncResult) {\n        write('Retrieved ' + asyncResult.value.length + ' custom XML parts');\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'customXmlParts: CustomXmlParts;'
    return:
      type:
      - office.Office.CustomXmlParts
- uid: office.Office.Document.getActiveViewAsync
  summary: <span data-ttu-id="e7de6-184">Возвращает состояние текущего представления презентации (редактирование или чтение).</span><span class="sxs-lookup"><span data-stu-id="e7de6-184">Returns the state of the current view of the presentation (edit or read).</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e7de6-185">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="e7de6-185">Requirement Sets</span></span></td><td><span data-ttu-id="e7de6-186">ActiveView</span><span class="sxs-lookup"><span data-stu-id="e7de6-186">ActiveView</span></span></td></tr></table>


    <span data-ttu-id="e7de6-187">Может активировать событие при изменении представления.</span><span class="sxs-lookup"><span data-stu-id="e7de6-187">Can trigger an event when the view changes.</span></span>


    <span data-ttu-id="e7de6-188">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-188">**Support details**</span></span>


    <span data-ttu-id="e7de6-p107">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p107">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-191">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-191">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-192">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-192">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-193">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-193">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-194">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-194">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e7de6-195">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="e7de6-195">Office for iPad</span></span> </th><th> <span data-ttu-id="e7de6-196">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e7de6-196">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e7de6-197"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-197"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="e7de6-198">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-198">Y</span></span> </td><td> <span data-ttu-id="e7de6-199">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-199">Y</span></span> </td><td> <span data-ttu-id="e7de6-200">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-200">Y</span></span> </td><td> <span data-ttu-id="e7de6-201">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-201">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-202">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-202">Examples</span></span>


    ```javascript

    function getFileView() {
        // Get whether the current view is edit or read.
        Office.context.document.getActiveViewAsync(function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage(asyncResult.value);
            }
        });
    }

    ```
  name: getActiveViewAsync(options, callback)
  fullName: getActiveViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<"edit" | "read">) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-203">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-203">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-204">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-204">Optional.</span></span> <span data-ttu-id="e7de6-205">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-206">`value` Свойства результата — это состояние текущее представление презентации.</span><span class="sxs-lookup"><span data-stu-id="e7de6-206">The `value` property of the result is the state of the presentation's current view.</span></span> <span data-ttu-id="e7de6-207">Возвращаемое значение может быть либо «edit» или «чтение».</span><span class="sxs-lookup"><span data-stu-id="e7de6-207">The value returned can be either "edit" or "read".</span></span> <span data-ttu-id="e7de6-208">«Изменение» соответствует любой из представления, в которых можно изменять слайдов, такие как обычный или в режиме структуры.</span><span class="sxs-lookup"><span data-stu-id="e7de6-208">"edit" corresponds to any of the views in which you can edit slides, such as Normal or Outline View.</span></span> <span data-ttu-id="e7de6-209">«чтение» соответствует слайд-шоу или режиме чтения.</span><span class="sxs-lookup"><span data-stu-id="e7de6-209">"read" corresponds to either Slide Show or Reading View.</span></span>
      type:
      - '(result: AsyncResult<"edit" | "read">) => void'
- uid: office.Office.Document.getFileAsync
  summary: <span data-ttu-id="e7de6-210">Возвращает полный файл документа по фрагментам размером до 4194304 байт (4 МБ).</span><span class="sxs-lookup"><span data-stu-id="e7de6-210">Returns the entire document file in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id="e7de6-211">Надстройки для iOS поддерживают фрагменты до 65536 байт (64 КБ).</span><span class="sxs-lookup"><span data-stu-id="e7de6-211">For add-ins for iOS, file slice is supported up to 65536 (64 KB).</span></span> <span data-ttu-id="e7de6-212">Обратите внимание, что если указать размер фрагмента выше допустимого, возникнет сбой "Внутренняя ошибка".</span><span class="sxs-lookup"><span data-stu-id="e7de6-212">Note that specifying file slice size of above permitted limit will result in an "Internal Error" failure.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e7de6-213\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-213\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e7de6-214\">File</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-214\">File</span></span></td></tr></table>\n\n<span data-ttu-id=\"e7de6-215\">Для надстроек в ведущие приложения Office кроме Office для iOS метод getFileAsync поддерживает получение файлов фрагментами размером до 4194304 байт (4 МБ).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-215\">For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"e7de6-216\">Для надстроек, работающих в приложениях Office для iOS, метод getFileAsync поддерживает получение файлов по фрагментам размером до 65536 байтов (64 КБ).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-216\">For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB).</span></span>\n\n<span data-ttu-id=\"e7de6-217\">Параметр тип файла можно указать с помощью перечисления [Office.FileType](xref:office.Office.FileType) или текстовых значений.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-217\">The fileType parameter can be specified by using the [Office.FileType](xref:office.Office.FileType) enumeration or text values.</span></span> <span data-ttu-id=\"e7de6-218\">Но возможные значения зависят от узла:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-218\">But the possible values vary with the host:</span></span>\n\n<span data-ttu-id=\"e7de6-219\">Excel для Windows рабочего стола, iPad и Excel Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-219\">Excel for Windows desktop, iPad, and Excel Online: `Office.FileType.Compressed`</span></span>\n\n<span data-ttu-id=\"e7de6-220\">Excel для Mac: `Office.FileType.Compressed` <!-- -->,`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-220\">Excel for Mac: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"e7de6-221\">Рабочий стол PowerPoint для Windows, Mac, iPad и PowerPoint Online: `Office.FileType.Compressed` <!-- -->,`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-221\">PowerPoint for Windows desktop, Mac, iPad, and PowerPoint Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"e7de6-222\">Рабочий стол Word для Windows, Mac, iPad и Word Online: `Office.FileType.Compressed` <!-- -->, `Office.FileType.Pdf` <!-- -->,`Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-222\">Word for Windows desktop, Mac, iPad, and Word Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`<!-- -->, `Office.FileType.Text`</span></span>\n\n<span data-ttu-id=\"e7de6-223\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-223\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p112\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p112\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-226\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-226\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-227\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-227\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-228\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-228\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-229\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-229\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-230\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-230\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-231\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-231\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-232\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-232\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-233\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-233\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-234\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-234\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-235\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-235\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-236\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-236\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-237\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-237\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-238\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-238\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-239\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-239\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-240\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-240\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-241\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-241\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-242\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-242\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-243\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-243\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-244\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-244\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-245\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-245\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-246\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-246\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-247\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-247\">Examples</span></span>\n\n```javascript\n// The following example gets the document in Office Open XML (\"compressed\") format in 65536 bytes (64 KB) slices.\n// Note: The implementation of app.showNotification in this example is from the Visual Studio template for Office Add-ins.\nfunction getDocumentAsCompressed() {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, { sliceSize: 65536 /*64 KB*/ }, \n        function (result) {\n            if (result.status == \"succeeded\") {\n            // If the getFileAsync call succeeded, then\n            // result.value will return a valid File Object.\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            var slicesReceived = 0, gotAllSlices = true, docdataSlices = [];\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n\n            // Get the file slices.\n            getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n            else {\n            app.showNotification(\"Error:\", result.error.message);\n            }\n    });\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived) {\n    file.getSliceAsync(nextSlice, function (sliceResult) {\n        if (sliceResult.status == \"succeeded\") {\n            if (!gotAllSlices) { // Failed to get all slices, no need to continue.\n                return;\n            }\n\n            // Got one slice, store it in a temporary array.\n            // (Or you can do something else, such as\n            // send it to a third-party server.)\n            docdataSlices[sliceResult.value.index] = sliceResult.value.data;\n            if (++slicesReceived == sliceCount) {\n              // All slices have been received.\n              file.closeAsync();\n              onGotAllSlices(docdataSlices);\n            }\n            else {\n                getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n        }\n            else {\n                gotAllSlices = false;\n                file.closeAsync();\n                app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n            }\n    });\n}\n\nfunction onGotAllSlices(docdataSlices) {\n    var docdata = [];\n    for (var i = 0; i < docdataSlices.length; i++) {\n        docdata = docdata.concat(docdataSlices[i]);\n    }\n\n    var fileContent = new String();\n    for (var j = 0; j < docdata.length; j++) {\n        fileContent += String.fromCharCode(docdata[j]);\n    }\n\n    // Now all the file content is stored in 'fileContent' variable,\n    // you can do something with it, such as print, fax...\n}\n\n// The following example gets the document in PDF format.\nOffice.context.document.getFileAsync(Office.FileType.Pdf,\n    function(result) {\n        if (result.status == \"succeeded\") {\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n            // Now, you can call getSliceAsync to download the files,\n            // as described in the previous code segment (compressed format).\n            \n            myFile.closeAsync();\n        }\n        else {\n            app.showNotification(\"Error:\", result.error.message);\n        }\n}\n);\n```"
  name: getFileAsync(fileType, options, callback)
  fullName: getFileAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFileAsync(fileType: FileType, options?: GetFileOptions, callback?: (result: AsyncResult<Office.File>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fileType
      description: <span data-ttu-id="e7de6-248">Формат, в котором будут возвращены файла</span><span class="sxs-lookup"><span data-stu-id="e7de6-248">The format in which the file will be returned</span></span>
      type:
      - office.Office.FileType
    - id: options
      description: <span data-ttu-id="e7de6-249">Предоставляет параметры для настройки размера диаграммы, которые будут разделены документа.</span><span class="sxs-lookup"><span data-stu-id="e7de6-249">Provides options for setting the size of slices that the document will be divided into.</span></span>
      type:
      - office.Office.GetFileOptions
    - id: callback
      description: <span data-ttu-id="e7de6-250">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-250">Optional.</span></span> <span data-ttu-id="e7de6-251">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-251">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-252">`value` Свойства результата — это объект файла.</span><span class="sxs-lookup"><span data-stu-id="e7de6-252">The `value` property of the result is the File object.</span></span>
      type:
      - '(result: AsyncResult<Office.File>) => void'
- uid: office.Office.Document.getFilePropertiesAsync
  summary: <span data-ttu-id="e7de6-253">Получает свойства текущего документа.</span><span class="sxs-lookup"><span data-stu-id="e7de6-253">Gets file properties of the current document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e7de6-254">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="e7de6-254">Requirement Sets</span></span></td><td><span data-ttu-id="e7de6-255">Не в наборе</span><span class="sxs-lookup"><span data-stu-id="e7de6-255">Not in a set</span></span></td></tr></table>


    <span data-ttu-id="e7de6-256">Получение URL-адреса файла с помощью свойства URL-адрес `asyncResult.value.url` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-256">You get the file's URL with the url property `asyncResult.value.url`<!-- -->.</span></span>


    <span data-ttu-id="e7de6-257">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-257">**Support details**</span></span>


    <span data-ttu-id="e7de6-p114">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p114">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-260">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-260">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-261">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-261">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-262">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-262">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-263">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-263">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e7de6-264">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="e7de6-264">Office for iPad</span></span> </th><th> <span data-ttu-id="e7de6-265">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e7de6-265">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e7de6-266"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-266"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="e7de6-267">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-267">Y</span></span> </td><td> <span data-ttu-id="e7de6-268">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-268">Y</span></span> </td><td> <span data-ttu-id="e7de6-269">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-269">Y</span></span> </td><td> <span data-ttu-id="e7de6-270">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-270">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-271"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-271"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="e7de6-272">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-272">Y</span></span> </td><td> <span data-ttu-id="e7de6-273">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-273">Y</span></span> </td><td> <span data-ttu-id="e7de6-274">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-274">Y</span></span> </td><td> <span data-ttu-id="e7de6-275">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-275">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-276"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-276"><strong> Word </strong></span></span></td><td> <span data-ttu-id="e7de6-277">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-277">Y</span></span> </td><td> <span data-ttu-id="e7de6-278">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-278">Y</span></span> </td><td> <span data-ttu-id="e7de6-279">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-279">Y</span></span> </td><td> <span data-ttu-id="e7de6-280">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-280">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-281">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-281">Examples</span></span>


    ```javascript

    // To read the URL of the current file, you need to write a callback function that returns the URL.

    // The following example shows how to:

    // 1. Pass an anonymous callback function that returns the value of the file's URL

    //    to the callback parameter of the getFilePropertiesAsync method.

    // 2. Display the value on the add-in's page.

    function getFileUrl() {
        // Get the URL of the current file.
        Office.context.document.getFilePropertiesAsync(function (asyncResult) {
            var fileUrl = asyncResult.value.url;
            if (fileUrl == "") {
                showMessage("The file hasn't been saved yet. Save the file and try again");
            }
            else {
                showMessage(fileUrl);
            }
        });
    }

    ```
  name: getFilePropertiesAsync(options, callback)
  fullName: getFilePropertiesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilePropertiesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.FileProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-282">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-282">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-283">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-283">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-284">`value` Свойства результата — свойств файла (с URL-адреса, найденные в `asyncResult.value.url` <!-- -->).</span><span class="sxs-lookup"><span data-stu-id="e7de6-284">The `value` property of the result is the file's properties (with the URL found at `asyncResult.value.url`<!-- -->).</span></span>
      type:
      - '(result: AsyncResult<Office.FileProperties>) => void'
- uid: office.Office.Document.getMaxResourceIndexAsync
  summary: >-
    <span data-ttu-id="e7de6-285">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-285">Project documents only.</span></span> <span data-ttu-id="e7de6-286">Получите максимальное индексу в коллекции ресурсов в текущем проекте.</span><span class="sxs-lookup"><span data-stu-id="e7de6-286">Get the maximum index of the collection of resources in the current project.</span></span>


    <span data-ttu-id="e7de6-287">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-287">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-288\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-288\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p117\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p117\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-291\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-291\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-292\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-292\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-293\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-293\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-294\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-294\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-295\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-295\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-296\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-296\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-297\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-297\">Examples</span></span>\n\n```javascript\n// The following code example calls getResourceTaskIndexAsync to get the maximum index of the collection \n// of resources in the current project. Then it uses the returned value and the getResourceByIndexAsync\n// method to get each resource GUID. The example assumes that your add-in has a reference to the \n// jQuery library and that the following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getMaxResourceIndexAsync(options, callback)
  fullName: getMaxResourceIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxResourceIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-298">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-298">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-299">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-299">Optional.</span></span> <span data-ttu-id="e7de6-300">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-300">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-301">`value` С наибольшим числом индекса в коллекции ресурсов текущий проект — это свойство результата.</span><span class="sxs-lookup"><span data-stu-id="e7de6-301">The `value` property of the result is the highest index number in the current project's resource collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getMaxTaskIndexAsync
  summary: >-
    <span data-ttu-id="e7de6-302">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-302">Project documents only.</span></span> <span data-ttu-id="e7de6-303">Получите максимальный индекс коллекции задачи в текущем проекте.</span><span class="sxs-lookup"><span data-stu-id="e7de6-303">Get the maximum index of the collection of tasks in the current project.</span></span>


    <span data-ttu-id="e7de6-304">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-304">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-305">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-305">**Support details**</span></span>


    <span data-ttu-id="e7de6-p120">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p120">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-308">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-308">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-309">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-309">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-310">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-310">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-311">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-311">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-312"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-312"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-313">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-313">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-314">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-314">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the maximum index

    // of the collection of tasks in the current project. Then it uses the returned value

    // with the getTaskByIndexAsync method to get each task GUID.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getMaxTaskIndexAsync(options, callback)
  fullName: getMaxTaskIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxTaskIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-315">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-315">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-316">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-316">Optional.</span></span> <span data-ttu-id="e7de6-317">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-317">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-318">`value` С наибольшим числом индекса в коллекцию задач текущий проект — это свойство результата.</span><span class="sxs-lookup"><span data-stu-id="e7de6-318">The `value` property of the result is the highest index number in the current project's task collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getProjectFieldAsync
  summary: <span data-ttu-id="e7de6-319">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-319">Project documents only.</span></span> <span data-ttu-id="e7de6-320">Получение поля проекта (например</span><span class="sxs-lookup"><span data-stu-id="e7de6-320">Get Project field (Ex.</span></span> <span data-ttu-id="e7de6-321">ProjectWebAccessURL).</span><span class="sxs-lookup"><span data-stu-id="e7de6-321">ProjectWebAccessURL).</span></span>
  remarks: "<span data-ttu-id=\"e7de6-322\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-322\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p123\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p123\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-325\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-325\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-326\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-326\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-327\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-327\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-328\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-328\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-329\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-329\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-330\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-330\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-331\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-331\">Examples</span></span>\n\n```javascript\n// The following code example gets the values of three specified fields for the active project, \n// and then displays the values in the add-in.\n// The example calls getProjectFieldAsync recursively, after the previous call returns successfully.\n// It also tracks the calls to determine when all calls are sent.\n// The example assumes your add-in has a reference to the jQuery library and that the \n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information for the active project.\n            getProjectInformation();\n        });\n    };\n\n    // Get the specified fields for the active project.\n    function getProjectInformation() {\n        var fields =\n            [Office.ProjectProjectFields.Start, \n             Office.ProjectProjectFields.Finish, \n             Office.ProjectProjectFields.GUID];\n        var fieldValues = ['Start: ', 'Finish: ', 'GUID: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == fields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n            else {\n                Office.context.document.getProjectFieldAsync(\n                    fields[index],\n                    function (result) {\n\n                        // If the call is successful, get the field value and then get the next field.\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getProjectFieldAsync(fieldId, options, callback)
  fullName: getProjectFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getProjectFieldAsync(fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fieldId
      description: <span data-ttu-id="e7de6-332">Поля уровня проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-332">Project level fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="e7de6-333">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-333">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-334">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-334">Optional.</span></span> <span data-ttu-id="e7de6-335">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-335">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-336">`value` Свойство результат содержит `fieldValue` свойства, которое представляет значение указанного поля.</span><span class="sxs-lookup"><span data-stu-id="e7de6-336">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getResourceByIndexAsync
  summary: >-
    <span data-ttu-id="e7de6-337">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-337">Project documents only.</span></span> <span data-ttu-id="e7de6-338">Получите идентификатор GUID ресурса, который имеет указанному индексу в коллекции ресурсов.</span><span class="sxs-lookup"><span data-stu-id="e7de6-338">Get the GUID of the resource that has the specified index in the resource collection.</span></span>


    <span data-ttu-id="e7de6-339">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-339">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-340\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-340\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p126\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p126\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-343\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-343\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-344\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-344\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-345\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-345\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-346\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-346\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-347\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-347\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-348\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-348\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-349\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-349\">Examples</span></span>\n\n```javascript\n// The following code example calls getMaxResourceIndexAsync to get the maximum index in the project's resource\n// collection, and then calls getResourceByIndexAsync to get the GUID for each resource.\n// The example assumes that your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceByIndexAsync(resourceIndex, options, callback)
  fullName: getResourceByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceByIndexAsync(resourceIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceIndex
      description: <span data-ttu-id="e7de6-350">Индекс ресурса в коллекции ресурсов для проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-350">The index of the resource in the collection of resources for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="e7de6-351">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-351">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-352">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-352">Optional.</span></span> <span data-ttu-id="e7de6-353">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-353">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-354">`value` Свойства результата — это GUID ресурса в виде строки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-354">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getResourceFieldAsync
  summary: <span data-ttu-id="e7de6-355">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-355">Project documents only.</span></span> <span data-ttu-id="e7de6-356">Получение поля ресурсов для указанного ресурса идентификатор (Ex.ResourceName).</span><span class="sxs-lookup"><span data-stu-id="e7de6-356">Get resource field for provided resource Id. (Ex.ResourceName)</span></span>
  remarks: "<span data-ttu-id=\"e7de6-357\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-357\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p129\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p129\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-360\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-360\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-361\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-361\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-362\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-362\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-363\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-363\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-364\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-364\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-365\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-365\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-366\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-366\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource\n// that's currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceFieldAsync(resourceId, fieldId, options, callback)
  fullName: getResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceFieldAsync(resourceId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="e7de6-367">Строку или значение идентификатор ресурса.</span><span class="sxs-lookup"><span data-stu-id="e7de6-367">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="e7de6-368">Поля ресурсов.</span><span class="sxs-lookup"><span data-stu-id="e7de6-368">Resource Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="e7de6-369">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-369">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-370">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-370">Optional.</span></span> <span data-ttu-id="e7de6-371">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-371">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-372">`value` Свойства результата — это GUID ресурса в виде строки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-372">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedDataAsync
  summary: <span data-ttu-id="e7de6-373">Считывает данные в текущем выделенном фрагменте документа.</span><span class="sxs-lookup"><span data-stu-id="e7de6-373">Reads the data contained in the current selection in the document.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e7de6-374\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-374\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e7de6-375\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-375\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"e7de6-376\">В функции обратного вызова, переданной в метод getSelectedDataAsync можно использовать свойства объекта AsyncResult для возврата следующей информации.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-376\">In the callback function that is passed to the getSelectedDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"e7de6-377\">Свойство</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-377\">Property</span></span></th> <th><span data-ttu-id=\"e7de6-378\">Применение</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-378\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"e7de6-379\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-379\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"e7de6-380\">Всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-380\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-381\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-381\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"e7de6-382\">Определяет, удалось ли выполнить операцию.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-382\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-383\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-383\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"e7de6-384\">Получает доступ к объекту Error, который содержит сведения об ошибке, если операция завершилась неудачно.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-384\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-385\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-385\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"e7de6-386\">Определяемый пользователем элемент любого типа, который возвращается в объекте AsyncResult без изменения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-386\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"e7de6-387\">Возможные значения для параметра [Office.CoercionType](xref:office.Office.CoercionType) в зависимости от узла.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-387\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"e7de6-388\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-388\">Host</span></span></th> <th><span data-ttu-id=\"e7de6-389\">Поддерживаемое значение coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-389\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"e7de6-390\">Excel, PowerPoint, Project и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-390\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"e7de6-391\">`Office.CoercionType.Text`(строка)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-391\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-392\">Excel и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-392\">Excel and Word</span></span></td> <td><span data-ttu-id=\"e7de6-393\">`Office.CoercionType.Matrix`(массив массивов)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-393\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-394\">Access, Excel и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-394\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"e7de6-395\">`Office.CoercionType.Table`(Объект TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-395\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-396\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-396\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"e7de6-397\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-397\">Word</span></span></td> <td><span data-ttu-id=\"e7de6-398\">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-398\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-399\">PowerPoint и PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-399\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id=\"e7de6-400\">Excel, PowerPoint и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-400\">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>\n\n<span data-ttu-id=\"e7de6-401\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-401\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p131\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p131\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-404\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-404\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-405\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-405\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-406\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-406\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-407\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-407\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-408\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-408\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-409\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-409\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-410\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-410\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-411\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-411\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-412\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-412\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-413\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-413\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-414\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-414\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-415\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-415\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-416\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-416\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-417\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-417\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-418\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-418\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-419\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-419\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-420\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-420\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-421\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-421\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-422\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-422\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-423\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-423\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-424\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-424\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-425\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-425\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-426\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-426\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-427\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-427\">Examples</span></span>\n\n```javascript\n// The following example uses the getSelectedDataAsync method of the Document object to retrieve the\n// user's current selection as text, and then display it in the add-in's page.\n\n// Display the user's current selection.\nfunction showSelection() {\n    Office.context.document.getSelectedDataAsync(\n        \"text\",                        // coercionType\n        {valueFormat: \"unformatted\",   // valueFormat\n        filterType: \"all\"},            // filterType\n        function (result) {            // callback\n            var dataValue; \n            dataValue = result.value;\n            write('Selected data is: ' + dataValue);\n        });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To read the value of the current selection, you need to write a callback function that reads the selection.\n// The following example shows how to:\n// 1. Pass an anonymous callback function that reads the value of the current selection\n//    to the callback parameter of the getSelectedDataAsync method.\n// 2. Read the selection as text, unformatted, and not filtered.\n// 3. Display the value on the add-in's page.\nfunction getText() {\n    Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, \n        { valueFormat: \"unformatted\", filterType: \"all\" },\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            } \n            else {\n                // Get selected data.\n                var dataValue = asyncResult.value; \n                write('Selected data is ' + dataValue);\n            }            \n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example gets the values of the selected cells. It uses the optional\n// asyncContext parameter to pass some text to the callback function.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getSelectedText);\n        });\n    };\n\n    // Get the text from the selected cells in the document, and display it in the add-in.\n    function getSelectedText() {\n        Office.context.document.getSelectedDataAsync(\n            Office.CoercionType.Text,\n            {asyncContext: 'Some related info'},\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'Selected text: {0}<br/>Passed info: {1}',\n                        result.value, result.asyncContext);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync<T>(coercionType: Office.CoercionType, options?: GetSelectedDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: coercionType
      description: <span data-ttu-id="e7de6-428">Тип возвращаемой структуры данных.</span><span class="sxs-lookup"><span data-stu-id="e7de6-428">The type of data structure to return.</span></span> <span data-ttu-id="e7de6-429">Каждый узел поддерживаемые приведение типов см.</span><span class="sxs-lookup"><span data-stu-id="e7de6-429">See the remarks section for each host's supported coercion types.</span></span>
      type:
      - office.Office.CoercionType
    - id: options
      description: <span data-ttu-id="e7de6-430">Предоставляет параметры для настройки возвращаемых данных и форматирования.</span><span class="sxs-lookup"><span data-stu-id="e7de6-430">Provides options for customizing what data is returned and how it is formatted.</span></span>
      type:
      - office.Office.GetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="e7de6-431">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-431">Optional.</span></span> <span data-ttu-id="e7de6-432">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-432">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-433">`value` Свойства результата — данные в текущем выборе.</span><span class="sxs-lookup"><span data-stu-id="e7de6-433">The `value` property of the result is the data in the current selection.</span></span> <span data-ttu-id="e7de6-434">Возвращаются в формате, указанному с помощью параметра coercionType или структуру данных.</span><span class="sxs-lookup"><span data-stu-id="e7de6-434">This is returned in the data structure or format you specified with the coercionType parameter.</span></span> <span data-ttu-id="e7de6-435">Дополнительные сведения о приведении данных см. в разделе Замечания.</span><span class="sxs-lookup"><span data-stu-id="e7de6-435">(See Remarks for more information about data coercion.)</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Document.getSelectedResourceAsync
  summary: <span data-ttu-id="e7de6-436">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-436">Project documents only.</span></span> <span data-ttu-id="e7de6-437">Получить идентификатор текущего выбранного ресурса.</span><span class="sxs-lookup"><span data-stu-id="e7de6-437">Get the current selected Resource's Id.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-438\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-438\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p135\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p135\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-441\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-441\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-442\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-442\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-443\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-443\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-444\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-444\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-445\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-445\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-446\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-446\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-447\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-447\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource that's \n// currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page controls are\n// defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedResourceAsync(options, callback)
  fullName: getSelectedResourceAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedResourceAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-448">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-448">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-449">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-449">Optional.</span></span> <span data-ttu-id="e7de6-450">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-450">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-451">`value` Свойства результата — это GUID ресурса в виде строки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-451">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedTaskAsync
  summary: <span data-ttu-id="e7de6-452">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-452">Project documents only.</span></span> <span data-ttu-id="e7de6-453">Получите идентификатор текущей выбранной задачи.</span><span class="sxs-lookup"><span data-stu-id="e7de6-453">Get the current selected Task's Id.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-454">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-454">**Support details**</span></span>


    <span data-ttu-id="e7de6-p138">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p138">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-457">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-457">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-458">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-458">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-459">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-459">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-460">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-460">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-461"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-461"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-462">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-462">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-463">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-463">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently

    // selected in a task view. Then it gets task properties by calling getTaskAsync.

    // The example assumes your add-in has a reference to the jQuery library and that the following page

    // controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedTaskAsync(options, callback)
  fullName: getSelectedTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedTaskAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-464">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-464">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-465">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-465">Optional.</span></span> <span data-ttu-id="e7de6-466">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-466">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-467">`value` Свойства результата — это GUID ресурса в виде строки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-467">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedViewAsync
  summary: <span data-ttu-id="e7de6-468">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-468">Project documents only.</span></span> <span data-ttu-id="e7de6-469">Получение текущего выбранного тип представления (например</span><span class="sxs-lookup"><span data-stu-id="e7de6-469">Get the current selected View Type (Ex.</span></span> <span data-ttu-id="e7de6-470">Диаграмма Ганта) и Просмотр имени.</span><span class="sxs-lookup"><span data-stu-id="e7de6-470">Gantt) and View Name.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-471">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-471">**Support details**</span></span>


    <span data-ttu-id="e7de6-p141">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p141">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-474">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-474">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-475">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-475">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-476">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-476">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-477">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-477">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-478"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-478"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-479">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-479">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-480">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-480">Examples</span></span>


    ```javascript

    // The following code example calls adds a ViewSelectionChanged event handler that

    // calls getSelectedViewAsync to get the name and type of the active view in the document.

    // The example assumes your add-in has a reference to the jQuery library and that

    // the following page control is defined in the content div in the page body:

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ViewSelectionChanged,
                    getActiveView);
                getActiveView();
            });
        };

        // Get the active view's name and type.
        function getActiveView() {
            Office.context.document.getSelectedViewAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var output = String.format(
                            'View name: {0}<br/>View type: {1}',
                            result.value.viewName, viewType);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedViewAsync(options, callback)
  fullName: getSelectedViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-481">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-481">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="e7de6-482">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-482">Optional.</span></span> <span data-ttu-id="e7de6-483">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-483">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-484">`value` Свойство результат содержит следующие свойства: `viewName` -имя представления, как константа ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="e7de6-484">The `value` property of the result contains the following properties: `viewName` - The name of the view, as a ProjectViewTypes constant.</span></span> <span data-ttu-id="e7de6-485">`viewType`-Тип представления, как целое значение константы ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="e7de6-485">`viewType` - The type of view, as the integer value of a ProjectViewTypes constant.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskAsync
  summary: <span data-ttu-id="e7de6-486">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-486">Project documents only.</span></span> <span data-ttu-id="e7de6-487">Get имя задачи, идентификатор задачи WSS и ResourceNames для заданного taskId.</span><span class="sxs-lookup"><span data-stu-id="e7de6-487">Get the Task Name, WSS Task Id, and ResourceNames for given taskId.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-488">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-488">**Support details**</span></span>


    <span data-ttu-id="e7de6-p144">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p144">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-491">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-491">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-492">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-492">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-493">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-493">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-494">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-494">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-495"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-495"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-496">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-496">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-497">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-497">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the task GUID of the currently

    // selected task. Then it calls getTaskAsync to get the properties for the task that are

    // available from the JavaScript API for Office.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskAsync(taskId, options, callback)
  fullName: getTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskAsync(taskId: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="e7de6-498">Строку или значение идентификатора задачи.</span><span class="sxs-lookup"><span data-stu-id="e7de6-498">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="e7de6-499">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-499">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="e7de6-500">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-500">Optional.</span></span> <span data-ttu-id="e7de6-501">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-501">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-502">`value` Свойство результат содержит следующие свойства: `taskName` -имя задачи.</span><span class="sxs-lookup"><span data-stu-id="e7de6-502">The `value` property of the result contains the following properties: `taskName` - The name of the task.</span></span> <span data-ttu-id="e7de6-503">`wssTaskId`-Идентификатор задачи в синхронизированном списке задач SharePoint.</span><span class="sxs-lookup"><span data-stu-id="e7de6-503">`wssTaskId` - The ID of the task in the synchronized SharePoint task list.</span></span> <span data-ttu-id="e7de6-504">Если проект не синхронизирована со списком задач SharePoint, значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="e7de6-504">If the project is not synchronized with a SharePoint task list, the value is 0.</span></span> <span data-ttu-id="e7de6-505">`resourceNames`— Разделенный запятыми список имен ресурсы, назначенные задаче.</span><span class="sxs-lookup"><span data-stu-id="e7de6-505">`resourceNames` - The comma-separated list of the names of resources that are assigned to the task.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskByIndexAsync
  summary: >-
    <span data-ttu-id="e7de6-506">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-506">Project documents only.</span></span> <span data-ttu-id="e7de6-507">Получите GUID задачу, которая имеет указанному индексу в коллекции задач.</span><span class="sxs-lookup"><span data-stu-id="e7de6-507">Get the GUID of the task that has the specified index in the task collection.</span></span>


    <span data-ttu-id="e7de6-508">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-508">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-509">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-509">**Support details**</span></span>


    <span data-ttu-id="e7de6-p147">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p147">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-512">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-512">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-513">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-513">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-514">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-514">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-515">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-515">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-516"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-516"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-517">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-517">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-518">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-518">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the

    // maximum index in the project's task collection, and then

    // calls getTaskByIndexAsync to get the GUID for each task.

    // The example assumes that your add-in has a reference to the

    // jQuery library and that the following page controls are defined

    // in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskByIndexAsync(taskIndex, options, callback)
  fullName: getTaskByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskByIndexAsync(taskIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskIndex
      description: <span data-ttu-id="e7de6-519">Индекс задачи в коллекции задач для проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-519">The index of the task in the collection of tasks for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="e7de6-520">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-520">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-521">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-521">Optional.</span></span> <span data-ttu-id="e7de6-522">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-522">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-523">`value` Свойства результата — это GUID задачи в виде строки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-523">The `value` property of the result is the GUID of the task as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getTaskFieldAsync
  summary: <span data-ttu-id="e7de6-524">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-524">Project documents only.</span></span> <span data-ttu-id="e7de6-525">Получение поля задачи для предоставленной задачи (например, идентификатор.</span><span class="sxs-lookup"><span data-stu-id="e7de6-525">Get task field for provided task Id. (Ex.</span></span> <span data-ttu-id="e7de6-526">StartDate).</span><span class="sxs-lookup"><span data-stu-id="e7de6-526">StartDate).</span></span>
  remarks: "<span data-ttu-id=\"e7de6-527\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-527\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p150\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p150\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-530\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-530\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-531\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-531\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-532\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-532\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-533\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-533\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-534\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-534\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-535\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-535\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-536\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-536\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently\n// selected in a task view. Then it gets two task field values by calling getTaskFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page\n// controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function getTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                getTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected task.\n    function getTaskFields(taskGuid) {\n        var output = '';\n        var targetFields = [Office.ProjectTaskFields.Priority, Office.ProjectTaskFields.PercentComplete];\n        var fieldValues = ['Priority: ', '% Complete: '];\n        var index = 0;\n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // Get the field value. If the call is successful, then get the next field.\n            else {\n                Office.context.document.getTaskFieldAsync(\n                    taskGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getTaskFieldAsync(taskId, fieldId, options, callback)
  fullName: getTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskFieldAsync(taskId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="e7de6-537">Строку или значение идентификатора задачи.</span><span class="sxs-lookup"><span data-stu-id="e7de6-537">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="e7de6-538">Поля задач.</span><span class="sxs-lookup"><span data-stu-id="e7de6-538">Task Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="e7de6-539">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-539">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-540">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-540">Optional.</span></span> <span data-ttu-id="e7de6-541">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-541">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-542">`value` Свойство результат содержит `fieldValue` свойства, которое представляет значение указанного поля.</span><span class="sxs-lookup"><span data-stu-id="e7de6-542">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getWSSUrlAsync
  summary: <span data-ttu-id="e7de6-543">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-543">Project documents only.</span></span> <span data-ttu-id="e7de6-544">Получение URL-адрес WSS и списка имя списка задач, MPP синхронизируется слишком.</span><span class="sxs-lookup"><span data-stu-id="e7de6-544">Get the WSS Url and list name for the Tasks List, the MPP is synced too.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-545">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-545">**Support details**</span></span>


    <span data-ttu-id="e7de6-p153">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p153">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-548">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-548">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-549">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-549">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-550">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-550">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-551">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-551">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-552"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-552"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-553">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-553">Y</span></span> </td><td> </td></tr> </table>
  name: getWSSUrlAsync(options, callback)
  fullName: getWSSUrlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWSSUrlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e7de6-554">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-554">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="e7de6-555">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-555">Optional.</span></span> <span data-ttu-id="e7de6-556">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-556">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-557">`value` Свойство результат содержит следующие свойства: `listName` -имя синхронизированного списка задач SharePoint.</span><span class="sxs-lookup"><span data-stu-id="e7de6-557">The `value` property of the result contains the following properties: `listName` - the name of the synchronized SharePoint task list.</span></span> <span data-ttu-id="e7de6-558">`serverUrl`— URL-адрес синхронизированного списка задач SharePoint.</span><span class="sxs-lookup"><span data-stu-id="e7de6-558">`serverUrl` - the URL of the synchronized SharePoint task list.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.goToByIdAsync
  summary: <span data-ttu-id="e7de6-559">Переходит к указанному объекту или месту в документе.</span><span class="sxs-lookup"><span data-stu-id="e7de6-559">Goes to the specified object or location in the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e7de6-560">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="e7de6-560">Requirement Sets</span></span></td><td><span data-ttu-id="e7de6-561">не в наборе</span><span class="sxs-lookup"><span data-stu-id="e7de6-561">not in a set</span></span></td></tr></table>


    <span data-ttu-id="e7de6-562">PowerPoint не поддерживает метод goToByIdAsync в режимах образцов.</span><span class="sxs-lookup"><span data-stu-id="e7de6-562">PowerPoint doesn't support the goToByIdAsync method in Master Views.</span></span>


    <span data-ttu-id="e7de6-563">Настройки, вызванные selectionMode параметр изменяется в соответствии с узла:</span><span class="sxs-lookup"><span data-stu-id="e7de6-563">The behavior caused by the selectionMode option varies by host:</span></span>


    <span data-ttu-id="e7de6-564">В Excel: `Office.SelectionMode.Selected` выбирает все содержимое в привязка или именованный элемент.</span><span class="sxs-lookup"><span data-stu-id="e7de6-564">In Excel: `Office.SelectionMode.Selected` selects all content in the binding, or named item.</span></span> <span data-ttu-id="e7de6-565">Office.SelectionMode.None для привязок к тексту выбирает ячейку; для привязок к матрицам, таблицам и именованных элементов — выбирает первую ячейку с данными (а не первую ячейку в столбце заготовка таблицы).</span><span class="sxs-lookup"><span data-stu-id="e7de6-565">Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="e7de6-566">В PowerPoint: `Office.SelectionMode.Selected` выбирает заголовок слайда или первый элемент textbox на слайде.</span><span class="sxs-lookup"><span data-stu-id="e7de6-566">In PowerPoint: `Office.SelectionMode.Selected` selects the slide title or first textbox on the slide.</span></span> <span data-ttu-id="e7de6-567">`Office.SelectionMode.None`не выбирайте ничего.</span><span class="sxs-lookup"><span data-stu-id="e7de6-567">`Office.SelectionMode.None` doesn't select anything.</span></span>


    <span data-ttu-id="e7de6-568">В Word: `Office.SelectionMode.Selected` выбирает все содержимое в привязке.</span><span class="sxs-lookup"><span data-stu-id="e7de6-568">In Word: `Office.SelectionMode.Selected` selects all content in the binding.</span></span> <span data-ttu-id="e7de6-569">Office.SelectionMode.None для текстовых привязок перемещает указатель в начало текста, а для привязок к матрицам и таблицам выбирает первую ячейку с данными (а не первую ячейку строки заголовка таблицы).</span><span class="sxs-lookup"><span data-stu-id="e7de6-569">Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="e7de6-570">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-570">**Support details**</span></span>


    <span data-ttu-id="e7de6-p158">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p158">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-573">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-573">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-574">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-574">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-575">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-575">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-576">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-576">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e7de6-577">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="e7de6-577">Office for iPad</span></span> </th><th> <span data-ttu-id="e7de6-578">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e7de6-578">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e7de6-579"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-579"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="e7de6-580">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-580">Y</span></span> </td><td> <span data-ttu-id="e7de6-581">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-581">Y</span></span> </td><td> <span data-ttu-id="e7de6-582">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-582">Y</span></span> </td><td> <span data-ttu-id="e7de6-583">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-583">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-584"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-584"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="e7de6-585">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-585">Y</span></span> </td><td> <span data-ttu-id="e7de6-586">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-586">Y</span></span> </td><td> <span data-ttu-id="e7de6-587">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-587">Y</span></span> </td><td> <span data-ttu-id="e7de6-588">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-588">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-589"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-589"><strong> Word </strong></span></span></td><td> <span data-ttu-id="e7de6-590">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-590">Y</span></span> </td><td> </td><td> <span data-ttu-id="e7de6-591">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-591">Y</span></span> </td><td> <span data-ttu-id="e7de6-592">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-592">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-593">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-593">Examples</span></span>


    ```javascript

    // Go to a binding by id (Word and Excel)

    // The following example shows how to:

    // 1. Create a table binding using the addFromSelectionAsync method as a sample binding to work with.

    // 2. Specify that binding as the binding to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value on the add-in's page.

    function gotoBinding() {
        // Create a new table binding for the selected table.
        Office.context.document.bindings.addFromSelectionAsync("table",{ id: "MyTableBinding" }, function (asyncResult) {
        if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Added new binding with type: " + asyncResult.value.type +" and id: " + asyncResult.value.id);
              }
        });

        // Go to binding by id.
        Office.context.document.goToByIdAsync("MyTableBinding", Office.GoToType.Binding, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to a table in a spreadsheet (Excel)

    // The following example shows how to:

    // 1. Specify a table by name as the table to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToTable() {
        Office.context.document.goToByIdAsync("Table1", Office.GoToType.NamedItem, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to the currently selected slide by id (PowerPoint)

    // The following example shows how to:

    // 1. Get the id of the currently selected slides using the getSelectedDataAsync method.

    // 2. Specify the returned id as the slide to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value of the stringified JSON object returned by asyncResult.value,

    //    which contains information about the selected slides, on the add-in's page.

    var firstSlideId = 0;

    function gotoSelectedSlide() {
        //Get currently selected slide's id
        Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                firstSlideId = asyncResult.value.slides[0].id;
                app.showNotification(JSON.stringify(asyncResult.value));
            }
        });
        //Go to slide by id.
        Office.context.document.goToByIdAsync(firstSlideId, Office.GoToType.Slide, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                app.showNotification("Navigation successful");
            }
        });
    }


    // Go to slide by index (PowerPoint)

    // The following example shows how to:

    // 1. Specify the index of the first, last, previous, or next slide to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToSlideByIndex() {
        var goToFirst = Office.Index.First;
        var goToLast = Office.Index.Last;
        var goToPrevious = Office.Index.Previous;
        var goToNext = Office.Index.Next;

        Office.context.document.goToByIdAsync(goToNext, Office.GoToType.Index, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }

    ```
  name: goToByIdAsync(id, goToType, options, callback)
  fullName: goToByIdAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'goToByIdAsync(id: string | number, goToType: GoToType, options?: GoToByIdOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="e7de6-594">Идентификатор объекта или расположение для перехода.</span><span class="sxs-lookup"><span data-stu-id="e7de6-594">The identifier of the object or location to go to.</span></span>
      type:
      - string | number
    - id: goToType
      description: <span data-ttu-id="e7de6-595">Тип расположения для перехода.</span><span class="sxs-lookup"><span data-stu-id="e7de6-595">The type of the location to go to.</span></span>
      type:
      - office.Office.GoToType
    - id: options
      description: <span data-ttu-id="e7de6-596">Предоставляет параметры для необходимость выберите расположение, к которому осуществляется переход.</span><span class="sxs-lookup"><span data-stu-id="e7de6-596">Provides options for whether to select the location that is navigated to.</span></span>
      type:
      - office.Office.GoToByIdOptions
    - id: callback
      description: <span data-ttu-id="e7de6-597">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-597">Optional.</span></span> <span data-ttu-id="e7de6-598">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-598">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-599">`value` Свойство результат является текущим представлением.</span><span class="sxs-lookup"><span data-stu-id="e7de6-599">The `value` property of the result is the current view.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.mode
  summary: <span data-ttu-id="e7de6-600">Получает режим, в котором находится документ.</span><span class="sxs-lookup"><span data-stu-id="e7de6-600">Gets the mode the document is in.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-601\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-601\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p160\">Заглавная буква Y в следующей матрице указывает на то, что это свойство поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает это свойство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p160\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"e7de6-604\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-604\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-605\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-605\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-606\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-606\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-607\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-607\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-608\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-608\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-609\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-609\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-610\"><strong>Access</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-610\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"e7de6-611\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-611\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-612\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-612\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-613\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-613\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-614\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-614\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-615\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-615\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-616\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-616\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-617\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-617\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-618\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-618\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-619\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-619\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-620\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-620\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-621\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-621\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-622\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-622\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-623\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-623\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-624\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-624\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-625\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-625\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-626\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-626\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-627\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-627\">Examples</span></span>\n\n```javascript\nfunction displayDocumentMode() {\n    write(Office.context.document.mode);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following example initializes the add-in and then gets properties of the\n// Document object that are available in the context of a Project document.\n// A Project document is the opened, active project. To access members of the\n// ProjectDocument object, use the Office.context.document object as shown in\n// the code examples for ProjectDocument methods and events.\n// The example assumes your add-in has a reference to the jQuery library and\n// that the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information about the document.\n            showDocumentProperties();\n        });\n    };\n\n    // Get the document mode and the URL of the active project.\n    function showDocumentProperties() {\n        var output = String.format(\n            'The document mode is {0}.<br/>The URL of the active project is {1}.',\n            Office.context.document.mode,\n            Office.context.document.url);\n        $('#message').html(output);\n    }\n})();\n```"
  name: mode
  fullName: mode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'mode: DocumentMode;'
    return:
      type:
      - office.Office.DocumentMode
- uid: office.Office.Document.removeHandlerAsync
  summary: <span data-ttu-id="e7de6-628">Удаляет обработчик событий для указанного типа события.</span><span class="sxs-lookup"><span data-stu-id="e7de6-628">Removes an event handler for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e7de6-629">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="e7de6-629">Requirement Sets</span></span></td><td><span data-ttu-id="e7de6-630">DocumentEvents</span><span class="sxs-lookup"><span data-stu-id="e7de6-630">DocumentEvents</span></span></td></tr></table>


    <span data-ttu-id="e7de6-631">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-631">**Support details**</span></span>


    <span data-ttu-id="e7de6-p161">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p161">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-634">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-634">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-635">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-635">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-636">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-636">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-637">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-637">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e7de6-638">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="e7de6-638">Office for iPad</span></span> </th><th> <span data-ttu-id="e7de6-639">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e7de6-639">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e7de6-640"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-640"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="e7de6-641">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-641">Y</span></span> </td><td> <span data-ttu-id="e7de6-642">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-642">Y</span></span> </td><td> <span data-ttu-id="e7de6-643">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-643">Y</span></span> </td><td> <span data-ttu-id="e7de6-644">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-644">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-645"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-645"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="e7de6-646">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-646">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="e7de6-647"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-647"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="e7de6-648">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-648">Y</span></span> </td><td> <span data-ttu-id="e7de6-649">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-649">Y</span></span> </td><td> <span data-ttu-id="e7de6-650">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-650">Y</span></span> </td><td> <span data-ttu-id="e7de6-651">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-651">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-652"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-652"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-653">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-653">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="e7de6-654"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-654"><strong> Word </strong></span></span></td><td> <span data-ttu-id="e7de6-655">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-655">Y</span></span> </td><td> <span data-ttu-id="e7de6-656">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-656">Y</span></span> </td><td> <span data-ttu-id="e7de6-657">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-657">Y</span></span> </td><td> <span data-ttu-id="e7de6-658">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-658">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-659">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-659">Examples</span></span>


    ```javascript

    // The following example removes the event handler named 'MyHandler'.

    function removeSelectionChangedEventHandler() {
        Office.context.document.removeHandlerAsync(Office.EventType.DocumentSelectionChanged, {handler:MyHandler});
    }


    function MyHandler(eventArgs) {
        doSomethingWithDocument(eventArgs.document);
    }

    ```

    ```javascript

    // The following code example uses addHandlerAsync to add an event handler for the

    // ResourceSelectionChanged event and removeHandlerAsync to remove the handler.

    // When a resource is selected in a resource view, the handler displays the

    // resource GUID. When the handler is removed, the GUID is not displayed.

    // The example assumes that your add-in has a reference to the jQuery library and

    // that the following page control is defined in the content div in the page body:

    // <input id="remove-handler" type="button" value="Remove handler" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ResourceSelectionChanged,
                    getResourceGuid);
                $('#remove-handler').click(removeEventHandler);
            });
        };

        // Remove the event handler.
        function removeEventHandler() {
            Office.context.document.removeHandlerAsync(
                Office.EventType.ResourceSelectionChanged,
                {handler:getResourceGuid,
                asyncContext:'The handler is removed.'},
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#remove-handler').attr('disabled', 'disabled');
                        $('#message').html(result.asyncContext);
                    }
                }
            );
        }

        // Get the GUID of the currently selected resource and display it in the add-in.
        function getResourceGuid() {
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#message').html('Resource GUID: ' + result.value);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="e7de6-660">Тип события.</span><span class="sxs-lookup"><span data-stu-id="e7de6-660">The event type.</span></span> <span data-ttu-id="e7de6-661">Документ может быть «Document.SelectionChanged» или «Document.ActiveViewChanged».</span><span class="sxs-lookup"><span data-stu-id="e7de6-661">For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="e7de6-662">Содержит параметры, чтобы определить, какой обработчик событий или обработчики удаляются.</span><span class="sxs-lookup"><span data-stu-id="e7de6-662">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="e7de6-663">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-663">Optional.</span></span> <span data-ttu-id="e7de6-664">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-664">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setResourceFieldAsync
  summary: >-
    <span data-ttu-id="e7de6-665">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-665">Project documents only.</span></span> <span data-ttu-id="e7de6-666">Введите в поле ресурсов для указанного ресурса идентификатор.</span><span class="sxs-lookup"><span data-stu-id="e7de6-666">Set resource field for specified resource Id.</span></span>


    <span data-ttu-id="e7de6-667">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-667">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-668">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-668">**Support details**</span></span>


    <span data-ttu-id="e7de6-p165">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p165">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="e7de6-671">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-671">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-672">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-672">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-673">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-673">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-674">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-674">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="e7de6-675"><strong>Проекта</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-675"><strong> Project </strong></span></span></td><td> <span data-ttu-id="e7de6-676">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-676">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="e7de6-677">Примеры</span><span class="sxs-lookup"><span data-stu-id="e7de6-677">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedResourceAsync to get the GUID of the resource that's

    // currently selected in a resource view. Then it sets two resource field values by calling

    // setResourceFieldAsync recursively.

    // The getSelectedTaskAsync method used in the example requires that a task view

    // (for example, Task Usage) is the active view and that a task is selected. See the addHandlerAsync

    // method for an example that activates a button based on the active view type.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="set-info" type="button" value="Set info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#set-info').click(setResourceInfo);
            });
        };

        // Get the GUID of the resource, and then get the resource fields.
        function setResourceInfo() {
            getResourceGuid().then(
                function (data) {
                    setResourceFields(data);
                }
            );
        }

        // Get the GUID of the selected resource.
        function getResourceGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Set the specified fields for the selected resource.
        function setResourceFields(resourceGuid) {
            var targetFields = [Office.ProjectResourceFields.StandardRate, Office.ProjectResourceFields.Notes];
            var fieldValues = [.28, 'Notes for the resource.'];

            // Set the field value. If the call is successful, set the next field.
            for (var i = 0; i < targetFields.length; i++) {
                Office.context.document.setResourceFieldAsync(
                    resourceGuid,
                    targetFields[i],
                    fieldValues[i],
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            i++;
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
            $('#message').html('Field values set');
        }

        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: setResourceFieldAsync(resourceId, fieldId, fieldValue, options, callback)
  fullName: setResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setResourceFieldAsync(resourceId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="e7de6-678">Строку или значение идентификатор ресурса.</span><span class="sxs-lookup"><span data-stu-id="e7de6-678">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="e7de6-679">Поля ресурсов.</span><span class="sxs-lookup"><span data-stu-id="e7de6-679">Resource Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="e7de6-680">Значение целевого поля.</span><span class="sxs-lookup"><span data-stu-id="e7de6-680">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="e7de6-681">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-681">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-682">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-682">Optional.</span></span> <span data-ttu-id="e7de6-683">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-683">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setSelectedDataAsync
  summary: <span data-ttu-id="e7de6-684">Записывает указанные данные в текущем выборе.</span><span class="sxs-lookup"><span data-stu-id="e7de6-684">Writes the specified data into the current selection.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e7de6-685\">Наборы требований</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-685\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e7de6-686\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-686\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"e7de6-687\">**Поведение конкретного приложения**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-687\">**Application-specific behaviors**</span></span>\n\n<span data-ttu-id=\"e7de6-688\">При записи данных в выбранный фрагмент применяются следующие действия для конкретного приложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-688\">The following application-specific actions apply when writing data to a selection.</span></span>\n\n<table> <tr><td><span data-ttu-id=\"e7de6-689\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-689\">Word</span></span></td><td><span data-ttu-id=\"e7de6-690\">Если не выбран и точка вставки находится в допустимом расположении, указанном `data` вставляются в точку вставки</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-690\">If there is no selection and the insertion point is at a valid location, the specified `data` is inserted at the insertion point</span></span></td><td><span data-ttu-id=\"e7de6-691\">Если `data` содержит строку, вставляется указанный текст.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-691\">If `data` is a string, the specified text is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-692\">Если `data` представляет собой массив массивов («матрицу») или вставляется в объект TableData, новая таблица Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-692\">If `data` is an array of arrays (\"matrix\") or a TableData object, a new Word table is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-693\">Если `data` содержит HTML-код, вставляется указанный HTML-код.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-693\">If `data` is HTML, the specified HTML is inserted.</span></span> <span data-ttu-id=\"e7de6-694\">(Важно: Если HTML-код, вставленный недопустим, Word не вызовет ошибку.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-694\">(Important: If any of the HTML you insert is invalid, Word won't raise an error.</span></span> <span data-ttu-id=\"e7de6-695\">Word будет вставить значительная часть HTML-код, как он может и не включает все недопустимые данные).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-695\">Word will insert as much of the HTML as it can and omits any invalid data).</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-696\">Если `data` — Office Open XML, вставляется указанный XML-код.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-696\">If `data` is Office Open XML, the specified XML is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-697\">Если `data` — это поток изображения в кодировке base64, вставляется указанный изображения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-697\">If `data` is a base64 encoded image stream, the specified image is inserted.</span></span></td></tr></td></tr> <tr><td></td><td><span data-ttu-id=\"e7de6-698\">Если имеется выделение</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-698\">If there is a selection</span></span></td><td><span data-ttu-id=\"e7de6-699\">Он будет заменен с указанным `data` же правилами, описанными выше.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-699\">It will be replaced with the specified `data` following the same rules as above.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"e7de6-700\">Вставка изображения</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-700\">Insert images</span></span></td><td><span data-ttu-id=\"e7de6-701\">Вставленный изображения помещаются встроенного.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-701\">Inserted images are placed inline.</span></span> <span data-ttu-id=\"e7de6-702\">Параметры imageLeft и imageTop игнорируются.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-702\">The imageLeft and imageTop parameters are ignored.</span></span> <span data-ttu-id=\"e7de6-703\">Пропорции изображения всегда блокируются.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-703\">The image aspect ratio is always locked.</span></span> <span data-ttu-id=\"e7de6-704\">Если задан только параметр imageWidth или imageHeight, второе значение будет подобрано автоматически с учетом исходных пропорций.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-704\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"e7de6-705\">Excel</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-705\">Excel</span></span></td><td><span data-ttu-id=\"e7de6-706\">Если выбрана одна ячейка</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-706\">If a single cell is selected</span></span></td><td><span data-ttu-id=\"e7de6-707\">Если `data` — это строка указанный текст вставляется в качестве значения текущей ячейки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-707\">If `data` is a string, the specified text is inserted as the value of the current cell.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-708\">Если `data` представляет собой массив массивов («матрицу»), указанный набор строк и столбцов вставляются, если будут перезаписаны другие данные в соседних ячейках.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-708\">If `data` is an array of arrays (\"matrix\"), the specified set of rows and columns are inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-709\">Если `data` — это объект TableData, новая таблица Excel с заданным набором строк и заголовков будет вставлена, если будут перезаписаны другие данные в соседних ячейках.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-709\">If `data` is a TableData object, a new Excel table with the specified set of rows and headers is inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"e7de6-710\">Если выбрано несколько ячеек</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-710\">If multiple cells are selected</span></span></td><td><span data-ttu-id=\"e7de6-711\">Если форма не соответствует форме `data` <!-- -->, возвращается ошибка.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-711\">If the shape does not match the shape of `data`<!-- -->, an error is returned.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-712\">Если форма точно соответствует форме `data` <!-- -->, значения выбранных ячеек заменяются на значения в `data` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-712\">If the shape of the selection exactly matches the shape of `data`<!-- -->, the values of the selected cells are updated based on the values in `data`<!-- -->.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"e7de6-713\">Вставка изображения</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-713\">Insert images</span></span></td><td><span data-ttu-id=\"e7de6-714\">Вставляются перемещаемые изображения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-714\">Inserted images are floating.</span></span> <span data-ttu-id=\"e7de6-715\">Параметры положения imageLeft и imageTop указываются относительно выделенных ячеек.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-715\">The position imageLeft and imageTop parameters are relative to currently selected cell(s).</span></span> <span data-ttu-id=\"e7de6-716\">Отрицательные значения imageLeft и imageTop допустимы и могут быть откорректированы Excel для помещения изображения в пределах листа.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-716\">Negative imageLeft and imageTop values are allowed and possibly readjusted by Excel to position the image inside a worksheet.</span></span> <span data-ttu-id=\"e7de6-717\">Пропорции изображения блокируются, если не указаны параметры imageWidth и imageHeight.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-717\">Image aspect ratio is locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"e7de6-718\">Если задан только параметр imageWidth или imageHeight, второе значение будет подобрано автоматически с учетом исходных пропорций.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-718\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"e7de6-719\">Всех остальных случаях</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-719\">All other cases</span></span></td><td><span data-ttu-id=\"e7de6-720\">Возвращается ошибка.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-720\">An error is returned.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"e7de6-721\">Excel Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-721\">Excel Online</span></span></td><td><span data-ttu-id=\"e7de6-722\">В дополнение к модели поведения, описанного для Excel выше эти ограничения применяются при записи данных в Excel Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-722\">In addition to the behaviors described for Excel above, these limits apply when writing data in Excel Online</span></span></td><td><span data-ttu-id=\"e7de6-723\">Общее число ячеек, можно записать в лист с `data` параметра не может превышать 20 000 один вызов в этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-723\">The total number of cells you can write to a worksheet with the `data` parameter can't exceed 20,000 in a single call to this method.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"e7de6-724\">Число групп, форматирования передается `cellFormat` параметра не может превышать 100.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-724\">The number of formatting groups passed to the `cellFormat` parameter can't exceed 100.</span></span> <span data-ttu-id=\"e7de6-725\">Одна группа форматирования состоит из набора параметров форматирования, применяемого к указанному диапазону ячеек.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-725\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"e7de6-726\">PowerPoint</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-726\">PowerPoint</span></span></td><td><span data-ttu-id=\"e7de6-727\">Вставка изображения</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-727\">Insert image</span></span></td><td><span data-ttu-id=\"e7de6-728\">Вставляются перемещаемые изображения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-728\">Inserted images are floating.</span></span> <span data-ttu-id=\"e7de6-729\">Параметры положения imageLeft и imageTop являются необязательными, но если этот параметр указан, оба должны присутствовать.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-729\">The position imageLeft and imageTop parameters are optional but if provided, both should be present.</span></span> <span data-ttu-id=\"e7de6-730\">Если указано одно значение, оно игнорируется.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-730\">If a single value is provided, it will be ignored.</span></span> <span data-ttu-id=\"e7de6-731\">Отрицательные значения imageLeft и imageTop допустимы и позволяют поместить изображение за пределами слайда.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-731\">Negative imageLeft and imageTop values are allowed and can position an image outside of a slide.</span></span> <span data-ttu-id=\"e7de6-732\">Если не указано ни одного необязательного параметра, а слайд содержит заполнитель, изображение заменит заполнитель в слайде.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-732\">If no optional parameter is given and slide has a placeholder, the image will replace the placeholder in the slide.</span></span> <span data-ttu-id=\"e7de6-733\">Пропорции изображения блокируются, если не указаны параметры imageWidth и imageHeight.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-733\">Image aspect ratio will be locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"e7de6-734\">Если задан только параметр imageWidth или imageHeight, второе значение будет подобрано автоматически с учетом исходных пропорций.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-734\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> </table>\n\n<span data-ttu-id=\"e7de6-735\">Возможные значения для параметра [Office.CoercionType](xref:office.Office.CoercionType) в зависимости от узла.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-735\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"e7de6-736\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-736\">Host</span></span></th> <th><span data-ttu-id=\"e7de6-737\">Поддерживаемое значение coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-737\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"e7de6-738\">Excel, PowerPoint, Project и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-738\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"e7de6-739\">`Office.CoercionType.Text`(строка)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-739\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-740\">Excel и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-740\">Excel and Word</span></span></td> <td><span data-ttu-id=\"e7de6-741\">`Office.CoercionType.Matrix`(массив массивов)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-741\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-742\">Access, Excel и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-742\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"e7de6-743\">`Office.CoercionType.Table`(Объект TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-743\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-744\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-744\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"e7de6-745\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-745\">Word</span></span></td> <td><span data-ttu-id=\"e7de6-746\">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-746\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"e7de6-747\">PowerPoint и PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-747\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> <tr> <td><span data-ttu-id=\"e7de6-748\">Excel, PowerPoint и Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-748\">Excel, PowerPoint, and Word</span></span></td> <td>`Office.CoercionType.XmlSvg`</td> </tr> </table>\n\n<span data-ttu-id=\"e7de6-749\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-749\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p172\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p172\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-752\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-752\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-753\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-753\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-754\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-754\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-755\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-755\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-756\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-756\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"e7de6-757\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-757\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-758\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-758\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-759\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-759\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-760\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-760\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-761\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-761\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-762\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-762\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-763\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-763\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-764\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-764\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-765\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-765\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-766\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-766\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-767\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-767\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-768\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-768\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-769\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-769\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-770\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-770\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-771\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-771\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-772\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-772\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-773\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-773\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-774\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-774\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-775\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-775\">Examples</span></span>\n\n```javascript\n// The following example sets the selected text or cell to \"Hello World!\", \n// and if that fails, displays the value of the error.message property.\nfunction writeText() {\n    Office.context.document.setSelectedDataAsync(\"Hello World!\",\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write\n// to a selection. The following example writes data as an array of three rows of two columns, \n// specifying the coercionType as \"matrix\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeMatrix() {\n    Office.context.document.setSelectedDataAsync(\n        [[\"Red\", \"Rojo\"], [\"Green\", \"Verde\"], [\"Blue\", \"Azul\"]],\n        {coercionType: Office.CoercionType.Matrix}\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// The following example writes data as a one column table with a header and four rows, \n// specifying the coercionType as \"table\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeTable() {\n    // Build table.\n    var myTable = new Office.TableData();\n    myTable.headers = [[\"Cities\"]];\n    myTable.rows = [['Berlin'], ['Roma'], ['Tokyo'], ['Seattle']];\n\n    // Write table.\n    Office.context.document.setSelectedDataAsync(myTable, {coercionType: Office.CoercionType.Table},\n        function (result) {\n            var error = result.error\n            if (result.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word if you want to write HTML to the selection, you can specify the coercionType parameter as \"html\"\n// as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.context.document.setSelectedDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: Office.CoercionType.Html}, function (asyncResult) {\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write('Error: ' + asyncResult.error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word, PowerPoint, or Excel, if you want to write an image to the selection, you can specify the coercionType\n// parameter as \"image\" as shown in the following example. Note that imageLeft and imageTop are ignored by Word.\nfunction insertPictureAtSelection(base64EncodedImageStr) {\n\n    Office.context.document.setSelectedDataAsync(base64EncodedImageStr, {\n    coercionType: Office.CoercionType.Image,\n    imageLeft: 50,\n    imageTop: 50,\n    imageWidth: 100,\n    imageHeight: 100\n    },\n    function (asyncResult) {\n        if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n    });\n}\n```"
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string | TableData | any[][], options?: SetSelectedDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="e7de6-776">Данные, должно быть задано.</span><span class="sxs-lookup"><span data-stu-id="e7de6-776">The data to be set.</span></span> <span data-ttu-id="e7de6-777">Строка или значение [Office.CoercionType](xref:office.Office.CoercionType) , двумерных массив или объект TableData.</span><span class="sxs-lookup"><span data-stu-id="e7de6-777">Either a string or [Office.CoercionType](xref:office.Office.CoercionType) value, 2d array or TableData object.</span></span>


        <span data-ttu-id="e7de6-778">Если значение, переданное `data` — это:</span><span class="sxs-lookup"><span data-stu-id="e7de6-778">If the value passed for `data` is:</span></span>


        - <span data-ttu-id="e7de6-779">Строка. Записывается обычный текст или другие данные, которые могут быть приведены к типу string.</span><span class="sxs-lookup"><span data-stu-id="e7de6-779">A string: Plain text or anything that can be coerced to a string will be inserted.</span></span> <span data-ttu-id="e7de6-780">В Excel можно также указать параметр data в виде допустимой формулы, чтобы добавить ее в выделенную ячейку.</span><span class="sxs-lookup"><span data-stu-id="e7de6-780">In Excel, you can also specify data as a valid formula to add that formula to the selected cell.</span></span> <span data-ttu-id="e7de6-781">Например запись данных на «= SUM(A1:A5)» общее значений в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="e7de6-781">For example, setting data to "=SUM(A1:A5)" will total the values in the specified range.</span></span> <span data-ttu-id="e7de6-782">Тем не менее, если задать формулу в связанной ячейке, добавленную (или существующую) формулу будет невозможно считать.</span><span class="sxs-lookup"><span data-stu-id="e7de6-782">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="e7de6-783">При вызове метода Document.getSelectedDataAsync в выделенной ячейке для считывания ее данных этот метод может возвращать только данные, отображаемые в ячейке (результат формулы).</span><span class="sxs-lookup"><span data-stu-id="e7de6-783">If you call the Document.getSelectedDataAsync method on the selected cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span>


        - <span data-ttu-id="e7de6-784">Массив массивов ("matrix"). Будут вставлены табличные данные без заголовков.</span><span class="sxs-lookup"><span data-stu-id="e7de6-784">An array of arrays ("matrix"): Tabular data without headers will be inserted.</span></span> <span data-ttu-id="e7de6-785">Например, для записи данных в три строки по два столбца, вы можете передать такой массив: \[ \[«R1C1», «R1C2»\], \[«R2C1», «С2К2»\], \[«R3C1», «R3C2»\]\].</span><span class="sxs-lookup"><span data-stu-id="e7de6-785">For example, to write data to three rows in two columns, you can pass an array like this: \[\["R1C1", "R1C2"\], \["R2C1", "R2C2"\], \["R3C1", "R3C2"\]\].</span></span> <span data-ttu-id="e7de6-786">Для записи одного столбца из трех строк передайте такой массив: \[ \[«R1C1»\], \[«R2C1»\], \[«R3C1»\]\]</span><span class="sxs-lookup"><span data-stu-id="e7de6-786">To write a single column of three rows, pass an array like this: \[\["R1C1"\], \["R2C1"\], \["R3C1"\]\]</span></span>


        <span data-ttu-id="e7de6-787">В Excel вы также можете указать параметр data как массив массивов, содержащий допустимые формулы, чтобы добавить их в выделенные ячейки.</span><span class="sxs-lookup"><span data-stu-id="e7de6-787">In Excel, you can also specify data as an array of arrays that contains valid formulas to add them to the selected cells.</span></span> <span data-ttu-id="e7de6-788">Например, если нет других данных будут перезаписаны, установка для данных \[ \[«= SUM(A1:A5)","=AVERAGE(A1:A5)»\] \] эти две формулы будут добавлены в выделение.</span><span class="sxs-lookup"><span data-stu-id="e7de6-788">For example if no other data will be overwritten, setting data to \[\["=SUM(A1:A5)","=AVERAGE(A1:A5)"\]\] will add those two formulas to the selection.</span></span> <span data-ttu-id="e7de6-789">Как и при указании формулы в одной ячейке в текстовом виде, добавленные (или существующие) формулы невозможно считывать после того, как они заданы. Вы можете считывать только результаты формул.</span><span class="sxs-lookup"><span data-stu-id="e7de6-789">Just as when setting a formula on a single cell as "text", you can't read the added formulas (or any pre-existing formulas) after they have been set - you can only read the formulas' results.</span></span>


        - <span data-ttu-id="e7de6-790">Объект TableData Вставляются табличные данные с заголовками.</span><span class="sxs-lookup"><span data-stu-id="e7de6-790">A TableData object: A table with headers will be inserted.</span></span> <span data-ttu-id="e7de6-791">В Excel Если указать формул в объект TableData, передаваемого для параметра data можно не получить результаты, которые предполагается, что из-за компонента «вычисляемых столбцов» Excel, который автоматически дублирует формул в пределах столбца.</span><span class="sxs-lookup"><span data-stu-id="e7de6-791">In Excel, if you specify formulas in the TableData object you pass for the data parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="e7de6-792">Чтобы избежать возникновения этой проблемы, когда требуется написать `data` , которая содержит формул, выбранной таблицы, попробуйте определения данных в виде массива массивов (вместо объекта TableData) и укажите параметр coercionType как Microsoft.Office.Matrix или «матрица».</span><span class="sxs-lookup"><span data-stu-id="e7de6-792">To work around this when you want to write `data` that contains formulas to a selected table, try specifying the data as an array of arrays (instead of a TableData object), and specify the coercionType as Microsoft.Office.Matrix or "matrix".</span></span>
      type:
      - string | TableData | any[][]
    - id: options
      description: <span data-ttu-id="e7de6-793">Предоставляет параметры для вставки данных в выделение.</span><span class="sxs-lookup"><span data-stu-id="e7de6-793">Provides options for how to insert data to the selection.</span></span>
      type:
      - office.Office.SetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="e7de6-794">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-794">Optional.</span></span> <span data-ttu-id="e7de6-795">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-795">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e7de6-796">Свойство AsyncResult.value всегда возвращает значение undefined, так как нет объекта или данных для извлечения.</span><span class="sxs-lookup"><span data-stu-id="e7de6-796">The AsyncResult.value property always returns undefined because there is no object or data to retrieve.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setTaskFieldAsync
  summary: >-
    <span data-ttu-id="e7de6-797">Только документы проекта.</span><span class="sxs-lookup"><span data-stu-id="e7de6-797">Project documents only.</span></span> <span data-ttu-id="e7de6-798">Задать поле задачи для указанной задачи идентификатор.</span><span class="sxs-lookup"><span data-stu-id="e7de6-798">Set task field for specified task Id.</span></span>


    <span data-ttu-id="e7de6-799">Важно! Этот API работает только в Project 2016 для настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="e7de6-799">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-800\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-800\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p180\">Заглавная буква Y в следующей матрице указывает на то, что этот метод поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает этот метод.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p180\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"e7de6-803\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-803\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-804\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-804\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-805\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-805\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-806\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-806\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"e7de6-807\"><strong>Проекта</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-807\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"e7de6-808\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-808\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-809\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-809\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's\n// currently selected in a task view. Then it sets two task field values by calling\n// setTaskFieldAsync recursively.\n// The getSelectedTaskAsync method used in the example requires that a task view\n// (for example, Task Usage) is the active view and that a task is selected. See the\n// addHandlerAsync method for an example that activates a button based on the active view type.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"set-info\" type=\"button\" value=\"Set info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#set-info').click(setTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function setTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                setTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Set the specified fields for the selected task.\n    function setTaskFields(taskGuid) {\n        var targetFields = [Office.ProjectTaskFields.Active, Office.ProjectTaskFields.Notes];\n        var fieldValues = [true, 'Notes for the task.'];\n\n        // Set the field value. If the call is successful, set the next field.\n        for (var i = 0; i < targetFields.length; i++) {\n            Office.context.document.setTaskFieldAsync(\n                taskGuid,\n                targetFields[i],\n                fieldValues[i],\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        i++;\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n        $('#message').html('Field values set');\n    }\n\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: setTaskFieldAsync(taskId, fieldId, fieldValue, options, callback)
  fullName: setTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTaskFieldAsync(taskId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="e7de6-810">Строку или значение идентификатора задачи.</span><span class="sxs-lookup"><span data-stu-id="e7de6-810">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="e7de6-811">Поля задач.</span><span class="sxs-lookup"><span data-stu-id="e7de6-811">Task Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="e7de6-812">Значение целевого поля.</span><span class="sxs-lookup"><span data-stu-id="e7de6-812">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="e7de6-813">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="e7de6-813">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e7de6-814">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e7de6-814">Optional.</span></span> <span data-ttu-id="e7de6-815">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-815">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.settings
  summary: <span data-ttu-id="e7de6-816">Получает объект, который представляет сохраненные настраиваемые параметры надстройки области задач или контентной надстройки для текущего документа.</span><span class="sxs-lookup"><span data-stu-id="e7de6-816">Gets an object that represents the saved custom settings of the content or task pane add-in for the current document.</span></span>
  remarks: >-
    <span data-ttu-id="e7de6-817">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="e7de6-817">**Support details**</span></span>


    <span data-ttu-id="e7de6-p182">Заглавная буква Y в следующей матрице указывает на то, что это свойство поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает это свойство.</span><span class="sxs-lookup"><span data-stu-id="e7de6-p182">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>


    <span data-ttu-id="e7de6-820">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7de6-820">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e7de6-821">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="e7de6-821">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e7de6-822">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="e7de6-822">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e7de6-823">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="e7de6-823">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e7de6-824">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="e7de6-824">Office for iPad</span></span> </th><th> <span data-ttu-id="e7de6-825">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e7de6-825">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e7de6-826"><strong>Access</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-826"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="e7de6-827">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-827">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="e7de6-828"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-828"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="e7de6-829">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-829">Y</span></span> </td><td> <span data-ttu-id="e7de6-830">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-830">Y</span></span> </td><td> <span data-ttu-id="e7de6-831">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-831">Y</span></span> </td><td> <span data-ttu-id="e7de6-832">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-832">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-833"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-833"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="e7de6-834">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-834">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="e7de6-835"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-835"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="e7de6-836">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-836">Y</span></span> </td><td> <span data-ttu-id="e7de6-837">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-837">Y</span></span> </td><td> <span data-ttu-id="e7de6-838">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-838">Y</span></span> </td><td> <span data-ttu-id="e7de6-839">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-839">Y</span></span> </td></tr> <tr><td><span data-ttu-id="e7de6-840"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="e7de6-840"><strong> Word </strong></span></span></td><td> <span data-ttu-id="e7de6-841">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-841">Y</span></span> </td><td> <span data-ttu-id="e7de6-842">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-842">Y</span></span> </td><td> <span data-ttu-id="e7de6-843">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-843">Y</span></span> </td><td> <span data-ttu-id="e7de6-844">Да</span><span class="sxs-lookup"><span data-stu-id="e7de6-844">Y</span></span> </td></tr> </table>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'settings: Settings;'
    return:
      type:
      - office.Office.Settings
- uid: office.Office.Document.url
  summary: <span data-ttu-id="e7de6-845">Получает URL-адрес документа, открытого ведущим приложением.</span><span class="sxs-lookup"><span data-stu-id="e7de6-845">Gets the URL of the document that the host application currently has open.</span></span> <span data-ttu-id="e7de6-846">Возвращает значение null, если URL-адрес недоступен.</span><span class="sxs-lookup"><span data-stu-id="e7de6-846">Returns null if the URL is unavailable.</span></span>
  remarks: "<span data-ttu-id=\"e7de6-847\">**Сведения о поддержке**</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-847\">**Support details**</span></span>\n\n<span data-ttu-id=\"e7de6-p184\">Заглавная буква Y в следующей матрице указывает на то, что это свойство поддерживается в соответствующем ведущем приложении Office. Пустая ячейка означает, что ведущее приложение Office не поддерживает это свойство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-p184\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"e7de6-850\">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-850\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"e7de6-851\">*Поддерживаемые ведущие приложения на разных платформах*</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-851\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"e7de6-852\">Office для компьютера с Windows</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-852\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"e7de6-853\">Office Online (в браузере)</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-853\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"e7de6-854\">Office для iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-854\">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id=\"e7de6-855\"><strong>Access</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-855\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"e7de6-856\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-856\">Y</span></span> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-857\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-857\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"e7de6-858\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-858\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-859\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-859\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-860\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-860\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"e7de6-861\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-861\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"e7de6-862\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-862\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"e7de6-863\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-863\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"e7de6-864\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-864\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-865\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-865\">Y</span></span> </td><td> <span data-ttu-id=\"e7de6-866\">Да</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-866\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7de6-867\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7de6-867\">Examples</span></span>\n\n```javascript\nfunction displayDocumentUrl() {\n    write(Office.context.document.url);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: url
  fullName: url
  langs:
  - typeScript
  type: property
  syntax:
    content: 'url: string;'
    return:
      type:
      - string
