### YamlMime:UniversalReference
ms.openlocfilehash: 97693514969a93ac094cb1917e2a95e048161f36
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979304"
items:
- uid: office.Office.CustomXmlParts
  summary: <span data-ttu-id="aea5c-101">Представляет коллекцию объектов CustomXmlPart.</span><span class="sxs-lookup"><span data-stu-id="aea5c-101">Represents a collection of CustomXmlPart objects.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="aea5c-102">Наборы требований</span><span class="sxs-lookup"><span data-stu-id="aea5c-102">Requirement Sets</span></span></td><td><span data-ttu-id="aea5c-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="aea5c-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="aea5c-104">**Сведения о поддержке**</span><span class="sxs-lookup"><span data-stu-id="aea5c-104">**Support details**</span></span>


    <span data-ttu-id="aea5c-105">Прописная Y в следующих матрицы указывает, что этот интерфейс поддерживается в соответствующем ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="aea5c-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="aea5c-106">Пустая ячейка указывает, что ведущего приложения Office не поддерживает этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="aea5c-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="aea5c-107">Дополнительные сведения о требованиях к приложения и сервера узла Office можно [требования для запуска надстроек Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="aea5c-108">*Поддерживаемые ведущие приложения на разных платформах*</span><span class="sxs-lookup"><span data-stu-id="aea5c-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="aea5c-109">Office для компьютера с Windows</span><span class="sxs-lookup"><span data-stu-id="aea5c-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="aea5c-110">Office Online (в браузере)</span><span class="sxs-lookup"><span data-stu-id="aea5c-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="aea5c-111">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="aea5c-111">Office for iPad</span></span> </th><th> <span data-ttu-id="aea5c-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="aea5c-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="aea5c-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="aea5c-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="aea5c-114">Да</span><span class="sxs-lookup"><span data-stu-id="aea5c-114">Y</span></span> </td><td> </td><td> <span data-ttu-id="aea5c-115">Да</span><span class="sxs-lookup"><span data-stu-id="aea5c-115">Y</span></span> </td><td> <span data-ttu-id="aea5c-116">Да</span><span class="sxs-lookup"><span data-stu-id="aea5c-116">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlParts
  fullName: Office.CustomXmlParts
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlParts.addAsync
  - office.Office.CustomXmlParts.addAsync_1
  - office.Office.CustomXmlParts.getByIdAsync
  - office.Office.CustomXmlParts.getByIdAsync_1
  - office.Office.CustomXmlParts.getByNamespaceAsync
  - office.Office.CustomXmlParts.getByNamespaceAsync_1
- uid: office.Office.CustomXmlParts.addAsync
  summary: <span data-ttu-id="aea5c-117">Асинхронно добавляет новую настраиваемую XML-часть в файл.</span><span class="sxs-lookup"><span data-stu-id="aea5c-117">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, options, callback)
  fullName: addAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="aea5c-118">XML, который требуется добавить в только что созданный пользовательской XML-части.</span><span class="sxs-lookup"><span data-stu-id="aea5c-118">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="aea5c-119">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="aea5c-119">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="aea5c-120">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-120">Optional.</span></span> <span data-ttu-id="aea5c-121">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-121">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-122">`value` Свойство результат является только что созданный объект CustomXmlPart.</span><span class="sxs-lookup"><span data-stu-id="aea5c-122">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.addAsync_1
  summary: <span data-ttu-id="aea5c-123">Асинхронно добавляет новую настраиваемую XML-часть в файл.</span><span class="sxs-lookup"><span data-stu-id="aea5c-123">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, callback)
  fullName: addAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"aea5c-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"aea5c-124\">Examples</span></span>\n\n```javascript\nfunction addXMLPart() {\n    Office.context.document.customXmlParts.addAsync(\n        '<root categoryId=\"1\" xmlns=\"http://tempuri.org\"><item name=\"Cheap Item\" price=\"$193.95\"/><item name=\"Expensive Item\" price=\"$931.88\"/></root>',\n        function (result) {});\n}\n\nfunction addXMLPartandHandler() {\n    Office.context.document.customXmlParts.addAsync(\n        \"<testns:book xmlns:testns='http://testns.com'><testns:page number='1'>Hello</testns:page><testns:page number='2'>world!</testns:page></testns:book>\",\n        function(r) { r.value.addHandlerAsync(Office.EventType.DataNodeDeleted,\n            function(a) {write(a.type)\n            },\n                function(s) {write(s.status)\n                });\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message;\n}\n```"
    parameters:
    - id: xml
      description: <span data-ttu-id="aea5c-125">XML, который требуется добавить в только что созданный пользовательской XML-части.</span><span class="sxs-lookup"><span data-stu-id="aea5c-125">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="aea5c-126">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-126">Optional.</span></span> <span data-ttu-id="aea5c-127">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-127">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-128">`value` Свойство результат является только что созданный объект CustomXmlPart.</span><span class="sxs-lookup"><span data-stu-id="aea5c-128">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync
  summary: <span data-ttu-id="aea5c-129">Асинхронно получает указанный настраиваемую XML-часть по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="aea5c-129">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, options, callback)
  fullName: getByIdAsync(id, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"aea5c-130\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"aea5c-130\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync({}, function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="aea5c-131">GUID настраиваемой XML-части, включая открывающие и закрывающие фигурные скобки.</span><span class="sxs-lookup"><span data-stu-id="aea5c-131">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="aea5c-132">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="aea5c-132">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="aea5c-133">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-133">Optional.</span></span> <span data-ttu-id="aea5c-134">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-135">`value` Свойства результата — это объект CustomXmlPart, который представляет указанный настраиваемой XML-части.</span><span class="sxs-lookup"><span data-stu-id="aea5c-135">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="aea5c-136">Если нет пользовательской XML-части с указанным идентификатором, метод возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="aea5c-136">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync_1
  summary: <span data-ttu-id="aea5c-137">Асинхронно получает указанный настраиваемую XML-часть по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="aea5c-137">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, callback)
  fullName: getByIdAsync(id, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="aea5c-138">GUID настраиваемой XML-части, включая открывающие и закрывающие фигурные скобки.</span><span class="sxs-lookup"><span data-stu-id="aea5c-138">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="aea5c-139">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-139">Optional.</span></span> <span data-ttu-id="aea5c-140">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-140">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-141">`value` Свойства результата — это объект CustomXmlPart, который представляет указанный настраиваемой XML-части.</span><span class="sxs-lookup"><span data-stu-id="aea5c-141">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="aea5c-142">Если нет пользовательской XML-части с указанным идентификатором, метод возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="aea5c-142">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync
  summary: <span data-ttu-id="aea5c-143">Асинхронно получает указанный настраиваемые части XML, его пространство имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-143">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, options, callback)
  fullName: getByNamespaceAsync(ns, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: ns
      description: <span data-ttu-id="aea5c-144">URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-144">The namespace URI.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="aea5c-145">Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="aea5c-145">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="aea5c-146">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-146">Optional.</span></span> <span data-ttu-id="aea5c-147">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-148">`value` Свойства результата представляет собой массив объектов CustomXmlPart, соответствующих указанному пространству имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-148">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync_1
  summary: <span data-ttu-id="aea5c-149">Асинхронно получает указанный настраиваемые части XML, его пространство имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-149">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, callback)
  fullName: getByNamespaceAsync(ns, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"aea5c-150\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"aea5c-150\">Examples</span></span>\n\n```javascript\nfunction showXMLPartsInNamespace() {\n    Office.context.document.customXmlParts.getByNamespaceAsync(\n        \"http://tempuri.org\", \n        function (eventArgs) {\n            write(\"Found \" + eventArgs.value.length + \" parts with this namespace\");\n    }); \n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: ns
      description: <span data-ttu-id="aea5c-151">URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-151">The namespace URI.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="aea5c-152">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="aea5c-152">Optional.</span></span> <span data-ttu-id="aea5c-153">Функция, вызываемая при возвращении обратного вызова, единственный параметр которой имеет тип [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="aea5c-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="aea5c-154">`value` Свойства результата представляет собой массив объектов CustomXmlPart, соответствующих указанному пространству имен.</span><span class="sxs-lookup"><span data-stu-id="aea5c-154">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
