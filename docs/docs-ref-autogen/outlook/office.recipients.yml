### YamlMime:UniversalReference
ms.openlocfilehash: b32dc89c1ec83bb3659ebac26fdebf6daa0f06bc
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/10/2018
ms.locfileid: "25457923"
items:
- uid: outlook.Office.Recipients
  summary: '<span data-ttu-id="92cad-101">\[[Набор API-Интерфейсов: почтовый ящик 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="92cad-101">\[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]</span></span>'
  remarks: >-
    <table><tr><td>[<span data-ttu-id="92cad-102">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="92cad-102"> Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="92cad-103">ReadItem</span><span class="sxs-lookup"><span data-stu-id="92cad-103">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="92cad-104">Применимые режим Outlook</span><span class="sxs-lookup"><span data-stu-id="92cad-104"> Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="92cad-105">Создание</span><span class="sxs-lookup"><span data-stu-id="92cad-105">Compose</span></span></td></tr></table>
  name: Office.Recipients
  fullName: outlook.Office.Recipients
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.Recipients.addAsync
  - outlook.Office.Recipients.getAsync
  - outlook.Office.Recipients.setAsync
- uid: outlook.Office.Recipients.addAsync
  summary: >-
    <span data-ttu-id="92cad-106">Добавляет список получателей к существующим получателям для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="92cad-106">Adds a recipient list to the existing recipients for an appointment or message.</span></span>


    <span data-ttu-id="92cad-107">В качестве параметра recipients можно задать массив из любых следующих элементов:</span><span class="sxs-lookup"><span data-stu-id="92cad-107">The recipients parameter can be an array of one of the following:</span></span>


    - <span data-ttu-id="92cad-108">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="92cad-108">Strings containing SMTP email addresses</span></span>


    - <span data-ttu-id="92cad-109">объекты EmailUser;</span><span class="sxs-lookup"><span data-stu-id="92cad-109">EmailUser objects</span></span>


    - <span data-ttu-id="92cad-110">объекты EmailAddressDetails.</span><span class="sxs-lookup"><span data-stu-id="92cad-110">EmailAddressDetails objects</span></span>


    <span data-ttu-id="92cad-111">\[[Набор API-Интерфейсов: почтовый ящик 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="92cad-111">\[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="92cad-112">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="92cad-112"> Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="92cad-113">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="92cad-113">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="92cad-114">Применимые режим Outlook</span><span class="sxs-lookup"><span data-stu-id="92cad-114"> Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="92cad-115">Создание</span><span class="sxs-lookup"><span data-stu-id="92cad-115">Compose</span></span></td></tr>


    <tr><td><span data-ttu-id="92cad-116">Errors</span><span class="sxs-lookup"><span data-stu-id="92cad-116">Errors</span></span></td><td><span data-ttu-id="92cad-117">NumberOfRecipientsExceeded - число получателей превышает 100 записей.</span><span class="sxs-lookup"><span data-stu-id="92cad-117">NumberOfRecipientsExceeded - The number of recipients exceeded 100 entries.</span></span></td></tr></table>


    <span data-ttu-id="92cad-118">В дополнение к подписи этот метод также имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="92cad-118">In addition to this signature, this method also has the following signatures:</span></span>


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;`


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions): void;`


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: AsyncResult<void>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="92cad-119">Примеры</span><span class="sxs-lookup"><span data-stu-id="92cad-119">Examples</span></span>


    ```javascript

    // The following example creates an array of EmailUser objects

    // and adds them to the To recipients of the message.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.to.addAsync(newRecipients, function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            showMessage("Recipients added");
        }
    });

    ```
  name: addAsync(recipients, options, callback)
  fullName: outlook.Office.Recipients.addAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: <span data-ttu-id="92cad-120">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="92cad-120">The recipients to add to the recipients list.</span></span>
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: '<span data-ttu-id="92cad-121">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="92cad-121">Optional.</span></span> <span data-ttu-id="92cad-122">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="92cad-122">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="92cad-123">asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="92cad-123">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="92cad-124">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="92cad-124">Optional.</span></span> <span data-ttu-id="92cad-125">После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="92cad-125">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="92cad-126">Если не удается добавить в список получателей, свойство asyncResult.error будет содержать код ошибки.</span><span class="sxs-lookup"><span data-stu-id="92cad-126">If adding the recipients fails, the asyncResult.error property will contain an error code.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: outlook.Office.Recipients.getAsync
  summary: >-
    <span data-ttu-id="92cad-127">Возвращает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="92cad-127">Gets a recipient list for an appointment or message.</span></span>


    <span data-ttu-id="92cad-128">После завершения вызова, свойство asyncResult.value будет содержать массив объектов [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) .</span><span class="sxs-lookup"><span data-stu-id="92cad-128">When the call completes, the asyncResult.value property will contain an array of [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) objects.</span></span>


    <span data-ttu-id="92cad-129">\[[Набор API-Интерфейсов: почтовый ящик 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="92cad-129">\[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="92cad-130">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="92cad-130"> Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="92cad-131">ReadItem</span><span class="sxs-lookup"><span data-stu-id="92cad-131">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="92cad-132">Применимые режим Outlook</span><span class="sxs-lookup"><span data-stu-id="92cad-132"> Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="92cad-133">Создание</span><span class="sxs-lookup"><span data-stu-id="92cad-133">Compose</span></span></td></tr></table>


    <span data-ttu-id="92cad-134">В дополнение к подписи этот метод также имеет следующую подпись:</span><span class="sxs-lookup"><span data-stu-id="92cad-134">In addition to this signature, this method also has the following signature:</span></span>


    `getAsync(callback: (result: AsyncResult<Office.EmailAddressDetails[]>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="92cad-135">Примеры</span><span class="sxs-lookup"><span data-stu-id="92cad-135">Examples</span></span>


    ```javascript

    // The following example gets the optional attendees of a meeting.

    Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            var msg = "";
            result.value.forEach(function(recip, index) {
                msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
            });
            showMessage(msg);
        }
    });

    ```
  name: getAsync(options, callback)
  fullName: outlook.Office.Recipients.getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: AsyncResult<Office.EmailAddressDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="92cad-136">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="92cad-136">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="92cad-137">asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="92cad-137">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="92cad-138">После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="92cad-138">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="92cad-139">`value` Свойства результата представляет собой массив объектов EmailAddressDetails.</span><span class="sxs-lookup"><span data-stu-id="92cad-139">The `value` property of the result is an array of EmailAddressDetails objects.</span></span>
      type:
      - '(result: AsyncResult<Office.EmailAddressDetails[]>) => void'
- uid: outlook.Office.Recipients.setAsync
  summary: >-
    <span data-ttu-id="92cad-140">Задает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="92cad-140">Sets a recipient list for an appointment or message.</span></span>


    <span data-ttu-id="92cad-141">Метод setAsync перезаписывает текущий список получателей.</span><span class="sxs-lookup"><span data-stu-id="92cad-141">The setAsync method overwrites the current recipient list.</span></span>


    <span data-ttu-id="92cad-142">В качестве параметра recipients можно задать массив из любых следующих элементов:</span><span class="sxs-lookup"><span data-stu-id="92cad-142">The recipients parameter can be an array of one of the following:</span></span>


    - <span data-ttu-id="92cad-143">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="92cad-143">Strings containing SMTP email addresses</span></span>


    - <span data-ttu-id="92cad-144">Объекты [Office.EmailUser](xref:outlook.Office.EmailUser)</span><span class="sxs-lookup"><span data-stu-id="92cad-144">[Office.EmailUser](xref:outlook.Office.EmailUser) objects</span></span>


    - <span data-ttu-id="92cad-145">Объекты [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails)</span><span class="sxs-lookup"><span data-stu-id="92cad-145">[Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) objects</span></span>


    <span data-ttu-id="92cad-146">\[[Набор API-Интерфейсов: почтовый ящик 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="92cad-146">\[ [API set: Mailbox 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="92cad-147">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="92cad-147"> Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="92cad-148">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="92cad-148">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="92cad-149">Применимые режим Outlook</span><span class="sxs-lookup"><span data-stu-id="92cad-149"> Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="92cad-150">Создание</span><span class="sxs-lookup"><span data-stu-id="92cad-150">Compose</span></span></td></tr>


    <tr><td><span data-ttu-id="92cad-151">Errors</span><span class="sxs-lookup"><span data-stu-id="92cad-151">Errors</span></span></td><td><span data-ttu-id="92cad-152">NumberOfRecipientsExceeded - число получателей превышает 100 записей.</span><span class="sxs-lookup"><span data-stu-id="92cad-152">NumberOfRecipientsExceeded - The number of recipients exceeded 100 entries.</span></span></td></tr></table>


    <span data-ttu-id="92cad-153">В дополнение к подписи этот метод также имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="92cad-153">In addition to this signature, this method also has the following signatures:</span></span>


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;`


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions): void;`


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: AsyncResult<void>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="92cad-154">Примеры</span><span class="sxs-lookup"><span data-stu-id="92cad-154">Examples</span></span>


    ```javascript

    // The following example creates an array of EmailUser objects and

    // replaces the CC recipients of the message with the array.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.cc.setAsync(newRecipients, function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            showMessage("Recipients overwritten");
        }
    });

    ```
  name: setAsync(recipients, options, callback)
  fullName: outlook.Office.Recipients.setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: <span data-ttu-id="92cad-155">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="92cad-155">The recipients to add to the recipients list.</span></span>
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: '<span data-ttu-id="92cad-156">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="92cad-156">Optional.</span></span> <span data-ttu-id="92cad-157">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="92cad-157">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="92cad-158">asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="92cad-158">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="92cad-159">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="92cad-159">Optional.</span></span> <span data-ttu-id="92cad-160">После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="92cad-160">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="92cad-161">Если Настройка получателей возникает ошибка свойство asyncResult.error будет содержать код, указывающий на ошибки, которые произошли при добавлении данных.</span><span class="sxs-lookup"><span data-stu-id="92cad-161">If setting the recipients fails the asyncResult.error property will contain a code that indicates any error that occurred while adding the data.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
