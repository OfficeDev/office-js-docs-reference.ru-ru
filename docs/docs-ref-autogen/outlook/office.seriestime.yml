### YamlMime:UniversalReference
ms.openlocfilehash: d92d6f5fed961a106a9de06a5fc1d1995081e68a
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/17/2018
ms.locfileid: "25585984"
items:
- uid: outlook.Office.SeriesTime
  summary: >-
    Объект SeriesTime предоставляет методы для получения и задания даты и время встречи в ряду и получения значения даты и времени приглашений в ряду.


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: Office.SeriesTime
  fullName: outlook.Office.SeriesTime
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.SeriesTime.getDuration
  - outlook.Office.SeriesTime.getEndDate
  - outlook.Office.SeriesTime.getEndTime
  - outlook.Office.SeriesTime.getStartDate
  - outlook.Office.SeriesTime.getStartTime
  - outlook.Office.SeriesTime.setDuration
  - outlook.Office.SeriesTime.setEndDate
  - outlook.Office.SeriesTime.setStartDate
  - outlook.Office.SeriesTime.setStartTime
- uid: outlook.Office.SeriesTime.getDuration
  summary: >-
    Возвращает интервал в минутах обычным экземпляра в последовательности повторяющихся встреч.


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the duration of a usual instance in a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);

    function callback(asyncResult){
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var duration = recurrence.seriesTime.getDuration();
    }

    ```
  name: getDuration()
  fullName: outlook.Office.SeriesTime.getDuration
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDuration(): number;'
    return:
      type:
      - number
      description: ''
- uid: outlook.Office.SeriesTime.getEndDate
  summary: >-
    Получает дату окончания шаблона повторения в следующем формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «Гггг-мм-дд»


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the end date of a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);

    function callback(asyncResult){
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getEndDate();
    }

    ```
  name: getEndDate()
  fullName: outlook.Office.SeriesTime.getEndDate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEndDate(): string;'
    return:
      type:
      - string
      description: ''
- uid: outlook.Office.SeriesTime.getEndTime
  summary: >-
    Получает время окончания обычным встречам и собраниям экземпляра запроса повтора шаблона в независимо от выбранного часового пояса, который пользователь или надстройки задать шаблон повторения, в следующем формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «THH:mm:ss: ммм»


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the end time of a usual instance in a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);

    function callback(asyncResult){
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getEndTime();
    }

    ```
  name: getEndTime()
  fullName: outlook.Office.SeriesTime.getEndTime
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEndTime(): string;'
    return:
      type:
      - string
      description: ''
- uid: outlook.Office.SeriesTime.getStartDate
  summary: >-
    Получает дату начала шаблона повторения в следующем формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «Гггг-мм-дд»


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the start date of a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);

    function callback(asyncResult){
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getStartDate();
    }

    ```
  name: getStartDate()
  fullName: outlook.Office.SeriesTime.getStartDate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getStartDate(): string;'
    return:
      type:
      - string
      description: ''
- uid: outlook.Office.SeriesTime.getStartTime
  summary: >-
    Получает время начала в обычные встречи экземпляр шаблона повторения в независимо от выбранного часового пояса, что пользователь и добавьте в шаблон повторения, в следующем формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «THH:mm:ss: ммм»


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the start time of a usual instance in a recurring appointment series.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setDuration(120);

    ```
  name: getStartTime()
  fullName: outlook.Office.SeriesTime.getStartTime
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getStartTime(): string;'
    return:
      type:
      - string
      description: ''
- uid: outlook.Office.SeriesTime.setDuration
  summary: >-
    Задает продолжительность все встречи в шаблон повторения. Это также будет изменять время окончания повторения.


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>

    ####Примеры


    ```javascript

    // This example sets the duration of each appointment in a recurring series to 2 hours.

    Office.context.mailbox.item.recurrence.getAsync(callback);

    function callback(asyncResult){
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getStartTime();
    }

    ```
  name: setDuration(minutes)
  fullName: outlook.Office.SeriesTime.setDuration
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDuration(minutes: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: minutes
      description: Длина встречи в минутах.
      type:
      - number
- uid: outlook.Office.SeriesTime.setEndDate
  summary: >-
    Задает конечную дату из серии повторяющихся встреч.


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    <tr><td>Errors</td><td>Недопустимый формат даты - дата не допустимый формат.</td></tr></table>


    В дополнение к подписи этот метод также имеет следующую подпись:


    `setEndDate(date: string): void;`(Где дата — это дата окончания ряда повторяющейся встречи, представленного в формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «Гггг-мм-дд»).

    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the end date of a recurring appointment series to November 2, 2017.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setEndDate(2017, 10, 2);


    // Alternative: Set the end date using ISO 8601 date standard

    seriesTimeObject.setEndDate("2017-11-02");

    ```
  name: setEndDate(year, month, day)
  fullName: outlook.Office.SeriesTime.setEndDate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setEndDate(year: number, month: number, day: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: year
      description: Значение года дату окончания.
      type:
      - number
    - id: month
      description: Значение месяца дату окончания. Допустимые значения — 0-11, где 0 соответствует 1-го месяца и 11 представляет 12 месяцев.
      type:
      - number
    - id: day
      description: Значение дня дату окончания.
      type:
      - number
- uid: outlook.Office.SeriesTime.setStartDate
  summary: >-
    Задает дату начала последовательности повторяющихся встреч.


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    <tr><td>Errors</td><td>Недопустимый формат даты - дата не допустимый формат.</td></tr></table>


    В дополнение к подписи этот метод также имеет следующую подпись:


    `setStartDate(date: string): void;`(Где дата — это дата начала ряда повторяющейся встречи, представленного в формате [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) : «Гггг-мм-дд»).

    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start date of a recurring appointment series to November 2, 2017.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setStartDate(2017, 10, 2);


    // Alternative: Set the start date using ISO 8601 date standard

    seriesTimeObject.setStartDate("2017-11-02");

    ```
  name: setStartDate(year, month, day)
  fullName: outlook.Office.SeriesTime.setStartDate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setStartDate(year:number, month:number, day:number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: year
      description: Значение года начальную дату.
      type:
      - number
    - id: month
      description: Значение месяца начальную дату. Допустимые значения — 0-11, где 0 соответствует 1-го месяца и 11 представляет 12 месяцев.
      type:
      - number
    - id: day
      description: Значение дня начальную дату.
      type:
      - number
- uid: outlook.Office.SeriesTime.setStartTime
  summary: >-
    Задает время начала всех экземпляров повторяющихся встреч в независимо от выбранного часовой пояс, заданный шаблон повторения (по умолчанию используется элемент часового пояса).


    \[[Набор API-Интерфейсов: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    <tr><td>Errors</td><td>Недопустимый формат времени - время не допустимый формат.</td></tr></table>


    В дополнение к подписи этот метод также имеет следующую подпись:


    `setStartTime(time: string): void;`(Где время — это время начала всех, представленные элементом формат строки Стандартная даты и времени: «THH:mm:ss: ммм»).

    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start time of each instance of a recurring appointment series to 1:30 PM.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setStartTime(13, 30);


    // This example sets the start time of each instance of a recurring appointment series to 11:30 AM.

    seriesTimeObject.setStartTime(11, 30);


    // Alternative: Set the start time of all instances of a recurring appointment series to 11:30 PM.

    seriesTimeObject.setStartTime("T23:30:00");

    ```
  name: setStartTime(hours, minutes)
  fullName: outlook.Office.SeriesTime.setStartTime
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setStartTime(hours: number, minutes: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: hours
      description: 'Значение времени начала часа. Допустимые значения: 0-24.'
      type:
      - number
    - id: minutes
      description: 'Значение минут времени начала. Допустимые значения: 0 до 59.'
      type:
      - number
