### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Item
    summary: |-
      <span data-ttu-id="db779-101">Пространство имен элемента используется для доступа к выбранному в данный момент сообщению, приглашению на собрание или встрече.</span><span class="sxs-lookup"><span data-stu-id="db779-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="db779-102">Тип элемента можно определить с помощью `itemType` свойства.</span><span class="sxs-lookup"><span data-stu-id="db779-102">You can determine the type of the item by using the `itemType` property.</span></span>

      <span data-ttu-id="db779-103">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-104">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ограниченный</span><span class="sxs-lookup"><span data-stu-id="db779-104">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="db779-105">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-105">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: Office.Item
    fullName: Office.Item
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Item.addHandlerAsync
      - outlook.Office.Item.addHandlerAsync_1
      - outlook.Office.Item.getAttachmentContentAsync
      - outlook.Office.Item.getAttachmentContentAsync_1
      - outlook.Office.Item.getInitializationContextAsync
      - outlook.Office.Item.getInitializationContextAsync_1
      - outlook.Office.Item.getSharedPropertiesAsync
      - outlook.Office.Item.getSharedPropertiesAsync_1
      - outlook.Office.Item.loadCustomPropertiesAsync
      - outlook.Office.Item.removeHandlerAsync
      - outlook.Office.Item.removeHandlerAsync_1
      - outlook.Office.Item.body
      - outlook.Office.Item.categories
      - outlook.Office.Item.itemType
      - outlook.Office.Item.notificationMessages
      - outlook.Office.Item.seriesId
  - uid: outlook.Office.Item.addHandlerAsync
    summary: |-
      <span data-ttu-id="db779-106">Добавляет обработчик для поддерживаемого события.</span><span class="sxs-lookup"><span data-stu-id="db779-106">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="db779-107">В настоящее время поддерживаются типы событий`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-107">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="db779-108">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-108"></span></span><!-- --><span data-ttu-id="db779-109">, а`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-109">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="db779-110">.</span><span class="sxs-lookup"><span data-stu-id="db779-110"></span></span> <span data-ttu-id="db779-111">В предварительной `Office.EventType.AttachmentsChanged` версии `Office.EventType.EnhancedLocationsChanged` , а также поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="db779-111">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="db779-112">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-112">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-113">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-113">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-114">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-114">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="db779-115">Событие, которое должно вызвать обработчик.</span><span class="sxs-lookup"><span data-stu-id="db779-115">The event that should invoke the handler.</span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="db779-116">Функция для обработки события.</span><span class="sxs-lookup"><span data-stu-id="db779-116">The function to handle the event.</span></span> <span data-ttu-id="db779-117">Функция должна принимать один параметр, представляющий собой объектный литерал.</span><span class="sxs-lookup"><span data-stu-id="db779-117">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="db779-118">Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="db779-118">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="db779-119">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-119">Optional.</span></span> <span data-ttu-id="db779-120">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="db779-120">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="db779-121">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-121">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="db779-122">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-122">Optional.</span></span> <span data-ttu-id="db779-123">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-123">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.addHandlerAsync_1
    summary: |-
      <span data-ttu-id="db779-124">Добавляет обработчик для поддерживаемого события.</span><span class="sxs-lookup"><span data-stu-id="db779-124">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="db779-125">В настоящее время поддерживаются типы событий`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-125">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="db779-126">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-126"></span></span><!-- --><span data-ttu-id="db779-127">, а`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-127">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="db779-128">.</span><span class="sxs-lookup"><span data-stu-id="db779-128"></span></span> <span data-ttu-id="db779-129">В предварительной `Office.EventType.AttachmentsChanged` версии `Office.EventType.EnhancedLocationsChanged` , а также поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="db779-129">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="db779-130">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-130">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-131">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-131">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-132">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-132">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-133">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-133">Examples</span></span>

      ```javascript
      function myHandlerFunction(eventarg) {
          if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
              var attachment = eventarg.attachmentDetails;
              console.log("Event Fired and Attachment Added!");
              getAttachmentContentAsync(attachment.id, options, callback);
          }
      }

      Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="db779-134">Событие, которое должно вызвать обработчик.</span><span class="sxs-lookup"><span data-stu-id="db779-134">The event that should invoke the handler.</span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="db779-135">Функция для обработки события.</span><span class="sxs-lookup"><span data-stu-id="db779-135">The function to handle the event.</span></span> <span data-ttu-id="db779-136">Функция должна принимать один параметр, представляющий собой объектный литерал.</span><span class="sxs-lookup"><span data-stu-id="db779-136">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="db779-137">Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="db779-137">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="db779-138">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-138">Optional.</span></span> <span data-ttu-id="db779-139">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-139">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.getAttachmentContentAsync
    summary: |-
      <span data-ttu-id="db779-140">Получает вложение из сообщения или встречи и возвращает его в виде объекта **вложениеимеет содержимое** .</span><span class="sxs-lookup"><span data-stu-id="db779-140">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>

      <span data-ttu-id="db779-141">`getAttachmentContentAsync` Метод получает вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-141">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="db779-142">Рекомендуется использовать идентификатор для получения вложения в том же сеансе, когда Аттачментидс был получен с помощью вызова `getAttachmentsAsync` или. `item.attachments`</span><span class="sxs-lookup"><span data-stu-id="db779-142">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="db779-143">В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="db779-143">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="db779-144">Сеанс переходит к моменту, когда пользователь закрывает приложение, или если пользователь начинает создание встроенной формы, затем извлекает форму, чтобы продолжить работу в отдельном окне.</span><span class="sxs-lookup"><span data-stu-id="db779-144">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="db779-145">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-145">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-146">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-146">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-147">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-147">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      <span data-ttu-id="db779-148">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="db779-148">**Errors**:</span></span>

      - <span data-ttu-id="db779-149">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="db779-149">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-150">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-150">Examples</span></span>

      ```javascript
      var item = Office.context.mailbox.item;
      var listOfAttachments = [];
      item.getAttachmentsAsync(callback);

      function callback(result) {
          if (result.value.length > 0) {
              for (i = 0 ; i < result.value.length ; i++) {
                  var options = {asyncContext: {type: result.value[i].attachmentType}};
                  getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);
              }
          }
      }

      function handleAttachmentsCallback(result) {
          // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
          if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
              // Handle file attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
              // Handle email item attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
              // Handle .icalender attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
              // Handle cloud attachment.
          } else {
              // Handle attachment formats that are not supported.
          }
      }
      ```
    isPreview: true
    name: 'getAttachmentContentAsync(attachmentId, options, callback)'
    fullName: 'getAttachmentContentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentContentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: '<span data-ttu-id="db779-151">Идентификатор вложения, которое требуется получить.</span><span class="sxs-lookup"><span data-stu-id="db779-151">The identifier of the attachment you want to get.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="db779-152">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-152">Optional.</span></span> <span data-ttu-id="db779-153">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="db779-153">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="db779-154">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-154">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="db779-155">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-155">Optional.</span></span> <span data-ttu-id="db779-156">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-156">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="db779-157">Если происходит сбой вызова, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="db779-157">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
  - uid: outlook.Office.Item.getAttachmentContentAsync_1
    summary: |-
      <span data-ttu-id="db779-158">Получает вложение из сообщения или встречи и возвращает его в виде объекта **вложениеимеет содержимое** .</span><span class="sxs-lookup"><span data-stu-id="db779-158">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>

      <span data-ttu-id="db779-159">`getAttachmentContentAsync` Метод получает вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-159">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="db779-160">Рекомендуется использовать идентификатор для получения вложения в том же сеансе, когда Аттачментидс был получен с помощью вызова `getAttachmentsAsync` или. `item.attachments`</span><span class="sxs-lookup"><span data-stu-id="db779-160">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="db779-161">В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="db779-161">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="db779-162">Сеанс переходит к моменту, когда пользователь закрывает приложение, или если пользователь начинает создание встроенной формы, затем извлекает форму, чтобы продолжить работу в отдельном окне.</span><span class="sxs-lookup"><span data-stu-id="db779-162">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="db779-163">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-163">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-164">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-164">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-165">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-165">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      <span data-ttu-id="db779-166">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="db779-166">**Errors**:</span></span>

      - <span data-ttu-id="db779-167">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="db779-167">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    isPreview: true
    name: 'getAttachmentContentAsync(attachmentId, callback)'
    fullName: 'getAttachmentContentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentContentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: '<span data-ttu-id="db779-168">Идентификатор вложения, которое требуется получить.</span><span class="sxs-lookup"><span data-stu-id="db779-168">The identifier of the attachment you want to get.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="db779-169">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-169">Optional.</span></span> <span data-ttu-id="db779-170">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-170">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="db779-171">Если происходит сбой вызова, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="db779-171">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
  - uid: outlook.Office.Item.getInitializationContextAsync
    summary: |-
      <span data-ttu-id="db779-172">Получает данные инициализации, передаваемые при активации надстройки [сообщением с действиями](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="db779-172">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="db779-173">.</span><span class="sxs-lookup"><span data-stu-id="db779-173"></span></span>

      <span data-ttu-id="db779-174">**Примечание**: Этот метод поддерживается только Outlook 2016 для Windows ("нажми и работай версий больше 16.0.8413.1000) и Outlook в Интернете для Office 365.</span><span class="sxs-lookup"><span data-stu-id="db779-174">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="db779-175">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-175">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-176">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-176">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-177">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-177">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    isPreview: true
    name: 'getInitializationContextAsync(options, callback)'
    fullName: 'getInitializationContextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="db779-178">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-178">Optional.</span></span> <span data-ttu-id="db779-179">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="db779-179">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="db779-180">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-180">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="db779-181">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-181">Optional.</span></span> <span data-ttu-id="db779-182">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-182">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="db779-183">При успешном выполнении данные инициализации предоставляются в свойстве asyncResult. Value в виде String.</span><span class="sxs-lookup"><span data-stu-id="db779-183">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="db779-184">Если контекст инициализации отсутствует, объект asyncResult будет содержать объект Error со свойством Code, равным 9020, а свойству name присвоено значение Женерикреспонсиррор.</span><span class="sxs-lookup"><span data-stu-id="db779-184">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Item.getInitializationContextAsync_1
    summary: |-
      <span data-ttu-id="db779-185">Получает данные инициализации, передаваемые при активации надстройки [сообщением с действиями](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="db779-185">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="db779-186">.</span><span class="sxs-lookup"><span data-stu-id="db779-186"></span></span>

      <span data-ttu-id="db779-187">**Примечание**: Этот метод поддерживается только Outlook 2016 для Windows ("нажми и работай версий больше 16.0.8413.1000) и Outlook в Интернете для Office 365.</span><span class="sxs-lookup"><span data-stu-id="db779-187">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="db779-188">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-188">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-189">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-189">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-190">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-190">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-191">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-191">Examples</span></span>

      ```javascript
      // Get the initialization context (if present).
      Office.context.mailbox.item.getInitializationContextAsync(
          function(asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                  if (asyncResult.value != null && asyncResult.value.length > 0) {
                      // The value is a string, parse to an object.
                      var context = JSON.parse(asyncResult.value);
                      // Do something with context.
                  } else {
                      // Empty context, treat as no context.
                  }
              } else {
                  if (asyncResult.error.code == 9020) {
                      // GenericResponseError returned when there is no context.
                      // Treat as no context.
                  } else {
                      // Handle the error.
                  }
              }
          }
      );
      ```
    isPreview: true
    name: getInitializationContextAsync(callback)
    fullName: getInitializationContextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="db779-192">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-192">Optional.</span></span> <span data-ttu-id="db779-193">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-193">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="db779-194">При успешном выполнении данные инициализации предоставляются в свойстве asyncResult. Value в виде String.</span><span class="sxs-lookup"><span data-stu-id="db779-194">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="db779-195">Если контекст инициализации отсутствует, объект asyncResult будет содержать объект Error со свойством Code, равным 9020, а свойству name присвоено значение Женерикреспонсиррор.</span><span class="sxs-lookup"><span data-stu-id="db779-195">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Item.getSharedPropertiesAsync
    summary: |-
      <span data-ttu-id="db779-196">Получает свойства встречи или сообщения в общей папке, календаре или почтовом ящике.</span><span class="sxs-lookup"><span data-stu-id="db779-196">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>

      <span data-ttu-id="db779-197">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-197">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-198">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-198">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-199">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-199">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    isPreview: true
    name: 'getSharedPropertiesAsync(options, callback)'
    fullName: 'getSharedPropertiesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSharedPropertiesAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="db779-200">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="db779-200">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="db779-201">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-201">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="db779-202">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-202">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="db779-203">`value` Свойство Result получает свойства общего элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-203">The `value` property of the result is the properties of the shared item.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
  - uid: outlook.Office.Item.getSharedPropertiesAsync_1
    summary: |-
      <span data-ttu-id="db779-204">Получает свойства встречи или сообщения в общей папке, календаре или почтовом ящике.</span><span class="sxs-lookup"><span data-stu-id="db779-204">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>

      <span data-ttu-id="db779-205">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-205">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-206">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-206">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-207">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-207">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-208">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-208">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.getSharedPropertiesAsync(callback);

      function callback (asyncResult) {
          var context = asyncResult.context;
          var sharedProperties = asyncResult.value;
      }
      ```
    isPreview: true
    name: getSharedPropertiesAsync(callback)
    fullName: getSharedPropertiesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSharedPropertiesAsync(callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="db779-209">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-209">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="db779-210">`value` Свойство Result получает свойства общего элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-210">The `value` property of the result is the properties of the shared item.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
  - uid: outlook.Office.Item.loadCustomPropertiesAsync
    summary: |-
      <span data-ttu-id="db779-211">Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-211">Asynchronously loads custom properties for this add-in on the selected item.</span></span>

      <span data-ttu-id="db779-212">Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-212">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="db779-213">Этот метод возвращает объект CustomProperties в обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, относящимся к текущему элементу и текущей надстройке.</span><span class="sxs-lookup"><span data-stu-id="db779-213">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="db779-214">Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.</span><span class="sxs-lookup"><span data-stu-id="db779-214">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>

      <span data-ttu-id="db779-215">Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="db779-215">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="db779-216">Этот объект позволяет получить, задать и удалить настраиваемые свойства для элемента, а также сохранить изменения, внесенные в набор настраиваемых свойств, на сервере.</span><span class="sxs-lookup"><span data-stu-id="db779-216">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>

      <span data-ttu-id="db779-217">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-217">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-218">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-218">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-219">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-219">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-220">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-220">Examples</span></span>

      ```javascript
      // The following example shows how to use the loadCustomPropertiesAsync method
      // to asynchronously load custom properties that are specific to the current item.
      // The example also shows how to use the saveAsync method to save these properties
      // back to the server. After loading the custom properties, the example uses the
      // get method to read the custom property myProp, the set method to write the
      // custom property otherProp, and then finally calls the saveAsync method to save
      // the custom properties.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, add-in-specific code can run.
              var mailbox = Office.context.mailbox;
              mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
          });
      };

      function customPropsCallback(asyncResult) {
          var customProps = asyncResult.value;
          var myProp = customProps.get("myProp");

          customProps.set("otherProp", "value");
          customProps.saveAsync(saveCallback);
      }

      function saveCallback(asyncResult) {
      }
      ```
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="db779-221">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-221">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: '<span data-ttu-id="db779-222">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-222">Optional.</span></span> <span data-ttu-id="db779-223">Разработчики могут указать любой объект, к которому необходимо получить доступ, в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-223">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="db779-224">Доступ к этому объекту можно получить с помощью свойства asyncResult. asyncContext в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-224">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>'
          type:
            - any
  - uid: outlook.Office.Item.removeHandlerAsync
    summary: |-
      <span data-ttu-id="db779-225">Удаляет обработчиков для поддерживаемого типа события.</span><span class="sxs-lookup"><span data-stu-id="db779-225">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="db779-226">В настоящее время поддерживаются типы событий`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-226">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="db779-227">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-227"></span></span><!-- --><span data-ttu-id="db779-228">, а`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-228">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="db779-229">.</span><span class="sxs-lookup"><span data-stu-id="db779-229"></span></span> <span data-ttu-id="db779-230">В предварительной `Office.EventType.AttachmentsChanged` версии `Office.EventType.EnhancedLocationsChanged` , а также поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="db779-230">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="db779-231">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-231">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-232">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-232">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-233">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-233">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="db779-234">Событие, которое должно отменить обработчик.</span><span class="sxs-lookup"><span data-stu-id="db779-234">The event that should revoke the handler.</span></span>'
          type:
            - Office.EventType
        - id: options
          description: '<span data-ttu-id="db779-235">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-235">Optional.</span></span> <span data-ttu-id="db779-236">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="db779-236">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="db779-237">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="db779-237">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="db779-238">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-238">Optional.</span></span> <span data-ttu-id="db779-239">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-239">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.removeHandlerAsync_1
    summary: |-
      <span data-ttu-id="db779-240">Удаляет обработчиков для поддерживаемого типа события.</span><span class="sxs-lookup"><span data-stu-id="db779-240">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="db779-241">В настоящее время поддерживаются типы событий`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-241">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="db779-242">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-242"></span></span><!-- --><span data-ttu-id="db779-243">, а`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="db779-243">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="db779-244">.</span><span class="sxs-lookup"><span data-stu-id="db779-244"></span></span> <span data-ttu-id="db779-245">В предварительной `Office.EventType.AttachmentsChanged` версии `Office.EventType.EnhancedLocationsChanged` , а также поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="db779-245">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="db779-246">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-246">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-247">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-247">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-248">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-248">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="db779-249">Событие, которое должно отменить обработчик.</span><span class="sxs-lookup"><span data-stu-id="db779-249">The event that should revoke the handler.</span></span>'
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="db779-250">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="db779-250">Optional.</span></span> <span data-ttu-id="db779-251">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="db779-251">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.body
    summary: |-
      <span data-ttu-id="db779-252">Получает объект, предоставляющий методы для работы с основным текстом элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-252">Gets an object that provides methods for manipulating the body of an item.</span></span>

      <span data-ttu-id="db779-253">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-253">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-254">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-254">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-255">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-255">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-256">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-256">Examples</span></span>

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Body
  - uid: outlook.Office.Item.categories
    summary: |-
      <span data-ttu-id="db779-257">Получает объект, предоставляющий методы для управления категориями элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-257">Gets an object that provides methods for managing the item's categories.</span></span>

      <span data-ttu-id="db779-258">\[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-258">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-259">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-259">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-260">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-260">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-261">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-261">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.categories.getAsync(function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              var categories = asyncResult.value;
              console.log("Categories:");
              categories.forEach(function (item) {
                  console.log("-- " + JSON.stringify(item));
              });
          }
      });
      ```
    isPreview: true
    name: categories
    fullName: categories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categories: Categories;'
      return:
        type:
          - outlook.Office.Categories
  - uid: outlook.Office.Item.itemType
    summary: |-
      <span data-ttu-id="db779-262">Получает тип элемента, который представляет экземпляр.</span><span class="sxs-lookup"><span data-stu-id="db779-262">Gets the type of item that an instance represents.</span></span>

      <span data-ttu-id="db779-263">Свойство itemType возвращает одно из значений перечисления ItemType, которое указывает, является ли экземпляр объекта Item сообщением или встречей.</span><span class="sxs-lookup"><span data-stu-id="db779-263">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>

      <span data-ttu-id="db779-264">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-264">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-265">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-265">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-266">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-266">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-267">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-267">Examples</span></span>

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType;'
      return:
        type:
          - MailboxEnums.ItemType
  - uid: outlook.Office.Item.notificationMessages
    summary: |-
      <span data-ttu-id="db779-268">Получает сообщения уведомления для элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-268">Gets the notification messages for an item.</span></span>

      <span data-ttu-id="db779-269">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-269">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-270">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-270">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-271">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-271">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-272">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-272">Examples</span></span>

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - NotificationMessages
  - uid: outlook.Office.Item.seriesId
    summary: |-
      <span data-ttu-id="db779-273">Получает идентификатор ряда, к которому принадлежит экземпляр.</span><span class="sxs-lookup"><span data-stu-id="db779-273">Gets the id of the series that an instance belongs to.</span></span>

      <span data-ttu-id="db779-274">В OWA и Outlook seriesId возвращает идентификатор веб-служб Exchange (EWS) родительского элемента (ряда), к которому принадлежит этот элемент.</span><span class="sxs-lookup"><span data-stu-id="db779-274">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="db779-275">Однако в iOS и Android seriesId возвращает идентификатор REST родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="db779-275">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>

      <span data-ttu-id="db779-276">**Note**: идентификатор, возвращаемый свойством seriesId, совпадает с идентификатором элемента веб-служб Exchange.</span><span class="sxs-lookup"><span data-stu-id="db779-276">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="db779-277">Свойство seriesId не совпадает с идентификаторами Outlook, используемыми в REST API Outlook.</span><span class="sxs-lookup"><span data-stu-id="db779-277">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="db779-278">Прежде чем совершать вызовы REST API, используя это значение, его необходимо преобразовать с помощью Office.context.mailbox.convertToRestId.</span><span class="sxs-lookup"><span data-stu-id="db779-278">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="db779-279">Дополнительные сведения см. в статье [Использование REST API Outlook из надстройки Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span><span class="sxs-lookup"><span data-stu-id="db779-279">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="db779-280">.</span><span class="sxs-lookup"><span data-stu-id="db779-280"></span></span>

      <span data-ttu-id="db779-281">Свойство seriesId возвращает значение NULL для элементов, не имеющих родительских элементов, таких как отдельные встречи, элементы ряда или приглашения на собрание, и возвращает значение undefine для любых других элементов, которые не являются приглашениями на собрания.</span><span class="sxs-lookup"><span data-stu-id="db779-281">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>

      <span data-ttu-id="db779-282">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="db779-282">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="db779-283">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="db779-283">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="db779-284">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: "создание" или "чтение"</span><span class="sxs-lookup"><span data-stu-id="db779-284">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      #### <a name="examples"></a><span data-ttu-id="db779-285">Примеры</span><span class="sxs-lookup"><span data-stu-id="db779-285">Examples</span></span>

      ```javascript
      var seriesId = Office.context.mailbox.item.seriesId;

      // The seriesId property returns null for items that do
      // not have parent items (such as single appointments,
      // series items, or meeting requests) and returns
      // undefined for messages that are not meeting requests.
      var isSeriesInstance = (seriesId != null);
      console.log("SeriesId is " + seriesId 
          + " and isSeriesInstance is " + isSeriesInstance);
      ```
    name: seriesId
    fullName: seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string