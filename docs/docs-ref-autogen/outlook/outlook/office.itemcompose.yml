### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.ItemCompose:interface'
    summary: |-
      <span data-ttu-id="812fa-101">Режим создания объекта [Office. Context. Mailbox. Item](xref:outlook!Office.Item:interface)</span><span class="sxs-lookup"><span data-stu-id="812fa-101">The compose mode of [Office.context.mailbox.item](xref:outlook!Office.Item:interface)</span></span><!-- --><span data-ttu-id="812fa-102">.</span><span class="sxs-lookup"><span data-stu-id="812fa-102"></span></span>

      <span data-ttu-id="812fa-103">**Важно!** это внутренний объект Outlook, который не предоставляется напрямую через существующие интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="812fa-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="812fa-104">Этот режим следует рассматривать как режим Office. Context. Mailbox. Item.</span><span class="sxs-lookup"><span data-stu-id="812fa-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="812fa-105">Для получения дополнительных сведений обратитесь к странице [объектной модели](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item) .</span><span class="sxs-lookup"><span data-stu-id="812fa-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item) page for more information.</span></span>
    name: Office.ItemCompose
    fullName: Office.ItemCompose
    langs:
      - typeScript
    type: interface
    extends:
      - 'outlook!Office.Item:interface'
    package: outlook!
    children:
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async:member(1)'
      - 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async:member(2)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#close:member(1)'
      - 'outlook!Office.ItemCompose#getAttachmentsAsync:member(1)'
      - 'outlook!Office.ItemCompose#getAttachmentsAsync:member(2)'
      - 'outlook!Office.ItemCompose#getInitializationContextAsync:member(1)'
      - 'outlook!Office.ItemCompose#getInitializationContextAsync:member(2)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#saveAsync:member(1)'
      - 'outlook!Office.ItemCompose#saveAsync:member(2)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#subject:member'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-106">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-106">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="812fa-107">Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-107">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="812fa-108">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-108">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-109">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-110">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-110">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-111">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-111">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-112">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-112">**Errors**:</span></span>

      - <span data-ttu-id="812fa-113">Аттачментсизиксцеедед: вложение больше, чем разрешено.</span><span class="sxs-lookup"><span data-stu-id="812fa-113">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="812fa-114">Филетипенотсуппортед: вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="812fa-114">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="812fa-115">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-115">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "<span data-ttu-id=\"812fa-116\">Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-116\">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id=\"812fa-117\">Максимальная длина\_— 2048 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-117\">The maximum length is 2048 characters.</span></span>"
          type:
            - string
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-118\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-118\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-119\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-119\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="812fa-120">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-120">Optional.</span></span> <span data-ttu-id="812fa-121">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-121">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-122">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-122">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="812fa-123">isInline: при значении true указывает, что вложение будет отображаться встроенным в тексте сообщения и не должно отображаться в списке вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-123">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
        - id: callback
          description: '<span data-ttu-id="812fa-124">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-124">Optional.</span></span> <span data-ttu-id="812fa-125">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-125">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-126">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-126">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-127">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-127">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-128">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-128">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="812fa-129">Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-129">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="812fa-130">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-130">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-131">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-131">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-132">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-132">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-133">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-133">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-134">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-134">**Errors**:</span></span>

      - <span data-ttu-id="812fa-135">Аттачментсизиксцеедед: вложение больше, чем разрешено.</span><span class="sxs-lookup"><span data-stu-id="812fa-135">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="812fa-136">Филетипенотсуппортед: вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="812fa-136">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="812fa-137">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-137">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: "<span data-ttu-id=\"812fa-138\">Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-138\">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id=\"812fa-139\">Максимальная длина\_— 2048 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-139\">The maximum length is 2048 characters.</span></span>"
          type:
            - string
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-140\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-140\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-141\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-141\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="812fa-142">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-142">Optional.</span></span> <span data-ttu-id="812fa-143">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-143">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-144">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-144">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-145">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-145">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async:member(1)'
    summary: |-
      <span data-ttu-id="812fa-146">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-146">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="812fa-147">Метод addFileAttachmentFromBase64Async передает файл из кодировки Base64 и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-147">The addFileAttachmentFromBase64Async method uploads the file from the base64 encoding and attaches it to the item in the compose form.</span></span> <span data-ttu-id="812fa-148">Этот метод возвращает идентификатор вложения в объекте asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-148">This method returns the attachment identifier in the asyncResult.value object.</span></span>

      <span data-ttu-id="812fa-149">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-149">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-150">**Note**: Если вы используете API URL-адреса данных (например, реадасдатаурл), вам нужно удалить префикс URL-адреса данных, а затем отправить остальную строку в этот API.</span><span class="sxs-lookup"><span data-stu-id="812fa-150">**Note**: If you're using a data URL API (e.g., readAsDataURL), you need to strip out the data URL prefix then send the rest of the string to this API.</span></span> <span data-ttu-id="812fa-151">Например, если полная строка представлена`data:image/svg+xml;base64,<rest of base64 string>`</span><span class="sxs-lookup"><span data-stu-id="812fa-151">For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`</span></span><!-- --><span data-ttu-id="812fa-152">, Remove`data:image/svg+xml;base64,`</span><span class="sxs-lookup"><span data-stu-id="812fa-152">, remove `data:image/svg+xml;base64,`</span></span><!-- --><span data-ttu-id="812fa-153">.</span><span class="sxs-lookup"><span data-stu-id="812fa-153"></span></span>

      <span data-ttu-id="812fa-154">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-154">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-155">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-155">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-156">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-156">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-157">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-157">**Errors**:</span></span>

      - <span data-ttu-id="812fa-158">Аттачментсизиксцеедед: вложение больше, чем разрешено.</span><span class="sxs-lookup"><span data-stu-id="812fa-158">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="812fa-159">Филетипенотсуппортед: вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="812fa-159">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="812fa-160">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-160">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    isPreview: true
    name: 'addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)'
    fullName: 'addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: '<span data-ttu-id="812fa-161">Содержимое изображения или файла в кодировке Base64, которое добавляется в сообщение электронной почты или событие.</span><span class="sxs-lookup"><span data-stu-id="812fa-161">The base64 encoded content of an image or file to be added to an email or event.</span></span>'
          type:
            - string
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-162\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-162\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-163\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-163\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="812fa-164">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-164">Optional.</span></span> <span data-ttu-id="812fa-165">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-165">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-166">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-166">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="812fa-167">isInline: при значении true указывает, что вложение будет отображаться встроенным в тексте сообщения и не должно отображаться в списке вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-167">isInline: If true, indicates that the attachment will be shown inline in the message body and should not be displayed in the attachment list.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~0:complex'
        - id: callback
          description: '<span data-ttu-id="812fa-168">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-168">Optional.</span></span> <span data-ttu-id="812fa-169">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-169">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-170">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-170">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-171">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-171">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~1:complex'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async:member(2)'
    summary: |-
      <span data-ttu-id="812fa-172">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-172">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="812fa-173">Метод addFileAttachmentFromBase64Async передает файл из кодировки Base64 и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-173">The addFileAttachmentFromBase64Async method uploads the file from the base64 encoding and attaches it to the item in the compose form.</span></span> <span data-ttu-id="812fa-174">Этот метод возвращает идентификатор вложения в объекте asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-174">This method returns the attachment identifier in the asyncResult.value object.</span></span>

      <span data-ttu-id="812fa-175">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-175">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-176">**Note**: Если вы используете API URL-адреса данных (например, реадасдатаурл), вам нужно удалить префикс URL-адреса данных, а затем отправить остальную строку в этот API.</span><span class="sxs-lookup"><span data-stu-id="812fa-176">**Note**: If you're using a data URL API (e.g., readAsDataURL), you need to strip out the data URL prefix then send the rest of the string to this API.</span></span> <span data-ttu-id="812fa-177">Например, если полная строка представлена`data:image/svg+xml;base64,<rest of base64 string>`</span><span class="sxs-lookup"><span data-stu-id="812fa-177">For example, if the full string is represented by `data:image/svg+xml;base64,<rest of base64 string>`</span></span><!-- --><span data-ttu-id="812fa-178">, Remove`data:image/svg+xml;base64,`</span><span class="sxs-lookup"><span data-stu-id="812fa-178">, remove `data:image/svg+xml;base64,`</span></span><!-- --><span data-ttu-id="812fa-179">.</span><span class="sxs-lookup"><span data-stu-id="812fa-179"></span></span>

      <span data-ttu-id="812fa-180">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-180">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-181">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-181">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-182">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-182">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-183">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-183">**Errors**:</span></span>

      - <span data-ttu-id="812fa-184">Аттачментсизиксцеедед: вложение больше, чем разрешено.</span><span class="sxs-lookup"><span data-stu-id="812fa-184">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="812fa-185">Филетипенотсуппортед: вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="812fa-185">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="812fa-186">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-186">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    isPreview: true
    name: 'addFileAttachmentFromBase64Async(base64File, attachmentName, callback)'
    fullName: 'addFileAttachmentFromBase64Async(base64File, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: '<span data-ttu-id="812fa-187">Содержимое изображения или файла в кодировке Base64, которое добавляется в сообщение электронной почты или событие.</span><span class="sxs-lookup"><span data-stu-id="812fa-187">The base64 encoded content of an image or file to be added to an email or event.</span></span>'
          type:
            - string
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-188\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-188\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-189\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-189\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="812fa-190">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-190">Optional.</span></span> <span data-ttu-id="812fa-191">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-191">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-192">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-192">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-193">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-193">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~2:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-194">Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-194">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="812fa-195">Метод addItemAttachmentAsync присоединяет элемент с указанным идентификатором Exchange к элементу в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-195">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="812fa-196">Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-196">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="812fa-197">При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-197">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="812fa-198">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-198">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-199">Если ваша надстройка Office работает в Outlook в Интернете, метод addItemAttachmentAsync может присоединять элементы к элементам, отличным от редактируемого элемента; Однако это не поддерживается и не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="812fa-199">If your Office add-in is running in Outlook on the web, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="812fa-200">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-200">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-201">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-201">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-202">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-202">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-203">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-203">**Errors**:</span></span>

      - <span data-ttu-id="812fa-204">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-204">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "<span data-ttu-id=\"812fa-205\">Идентификатор Exchange для вкладываемого элемента.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-205\">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id=\"812fa-206\">Максимальная длина\_— 100 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-206\">The maximum length is 100 characters.</span></span>"
          type:
            - any
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-207\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-207\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-208\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-208\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="812fa-209">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-209">Optional.</span></span> <span data-ttu-id="812fa-210">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-210">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-211">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-211">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-212">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-212">Optional.</span></span> <span data-ttu-id="812fa-213">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-213">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-214">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-214">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-215">Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-215">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-216">Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-216">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="812fa-217">Метод addItemAttachmentAsync присоединяет элемент с указанным идентификатором Exchange к элементу в форме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-217">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="812fa-218">Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-218">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="812fa-219">При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-219">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="812fa-220">Идентификатор можно последовательно использовать с методом removeAttachmentAsync для удаления вложения, добавленного во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-220">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="812fa-221">Если ваша надстройка Office работает в Outlook в Интернете, метод addItemAttachmentAsync может присоединять элементы к элементам, отличным от редактируемого элемента; Однако это не поддерживается и не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="812fa-221">If your Office add-in is running in Outlook on the web, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="812fa-222">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-222">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-223">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-223">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-224">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-224">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-225">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-225">**Errors**:</span></span>

      - <span data-ttu-id="812fa-226">NumberOfAttachmentsExceeded: сообщение или встреча имеют слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="812fa-226">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: "<span data-ttu-id=\"812fa-227\">Идентификатор Exchange для вкладываемого элемента.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-227\">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id=\"812fa-228\">Максимальная длина\_— 100 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-228\">The maximum length is 100 characters.</span></span>"
          type:
            - any
        - id: attachmentName
          description: "<span data-ttu-id=\"812fa-229\">Имя вложения, которое отображается при передаче вложения.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-229\">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id=\"812fa-230\">Максимальная длина\_— 255 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-230\">The maximum length is 255 characters.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="812fa-231">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-231">Optional.</span></span> <span data-ttu-id="812fa-232">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-232">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-233">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="812fa-233">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="812fa-234">Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="812fa-234">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#close:member(1)'
    summary: |-
      <span data-ttu-id="812fa-235">Закрывает текущий элемент, который составляется</span><span class="sxs-lookup"><span data-stu-id="812fa-235">Closes the current item that is being composed</span></span>

      <span data-ttu-id="812fa-236">Поведение метода Close зависит от текущего состояния составного элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-236">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="812fa-237">Если элемент содержит несохраненные изменения, клиент предлагает пользователю сохранить, удалить или закрыть действие.</span><span class="sxs-lookup"><span data-stu-id="812fa-237">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>

      <span data-ttu-id="812fa-238">В клиенте Outlook для настольных ПК, если сообщение является встроенным ответом, метод Close не оказывает никакого действия.</span><span class="sxs-lookup"><span data-stu-id="812fa-238">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>

      <span data-ttu-id="812fa-239">**Примечание**: в Outlook в Интернете, если элемент является встречей и ранее сохранялся с помощью saveAsync, пользователю предлагается сохранить, удалить или отменить действия даже в том случае, если после последнего сохранения элемента не было внесено никаких изменений.</span><span class="sxs-lookup"><span data-stu-id="812fa-239">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>

      <span data-ttu-id="812fa-240">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-240">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-241">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ограниченный</span><span class="sxs-lookup"><span data-stu-id="812fa-241">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="812fa-242">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-242">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'outlook!Office.ItemCompose#getAttachmentsAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-243">Получает вложения элемента в виде массива.</span><span class="sxs-lookup"><span data-stu-id="812fa-243">Gets the item's attachments as an array.</span></span>

      <span data-ttu-id="812fa-244">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-244">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-245">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-245">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-246">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-246">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    isPreview: true
    name: 'getAttachmentsAsync(options, callback)'
    fullName: 'getAttachmentsAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentsAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="812fa-247">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-247">Optional.</span></span> <span data-ttu-id="812fa-248">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-248">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-249">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-249">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-250">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-250">Optional.</span></span> <span data-ttu-id="812fa-251">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-251">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-252">Если происходит сбой вызова, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-252">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getAttachmentsAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#getAttachmentsAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-253">Получает вложения элемента в виде массива.</span><span class="sxs-lookup"><span data-stu-id="812fa-253">Gets the item's attachments as an array.</span></span>

      <span data-ttu-id="812fa-254">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-254">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-255">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-255">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-256">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-256">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    isPreview: true
    name: getAttachmentsAsync(callback)
    fullName: getAttachmentsAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentsAsync(callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="812fa-257">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-257">Optional.</span></span> <span data-ttu-id="812fa-258">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-258">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-259">Если происходит сбой вызова, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-259">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getAttachmentsAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getInitializationContextAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-260">Получает данные инициализации, передаваемые при активации надстройки сообщением с действиями.</span><span class="sxs-lookup"><span data-stu-id="812fa-260">Gets initialization data passed when the add-in is activated by an actionable message.</span></span>

      <span data-ttu-id="812fa-261">**Примечание**: Этот метод поддерживается только Outlook 2016 или более поздней версии в Windows ("нажми и работай" версий больше 16.0.8413.1000) и Outlook в Интернете для Office 365.</span><span class="sxs-lookup"><span data-stu-id="812fa-261">**Note**: This method is only supported by Outlook 2016 or later on Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="812fa-262">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-262">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-263">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-263">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-264">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-264">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-265">Дополнительные сведения о [сообщениях с действиями](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="812fa-265">More information on [actionable messages](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="812fa-266">.</span><span class="sxs-lookup"><span data-stu-id="812fa-266"></span></span>
    isPreview: true
    name: 'getInitializationContextAsync(options, callback)'
    fullName: 'getInitializationContextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="812fa-267">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-267">Optional.</span></span> <span data-ttu-id="812fa-268">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-268">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-269">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-269">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-270">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-270">Optional.</span></span> <span data-ttu-id="812fa-271">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-271">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-272">При успешном выполнении данные инициализации предоставляются в свойстве asyncResult. Value в виде String.</span><span class="sxs-lookup"><span data-stu-id="812fa-272">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="812fa-273">Если контекст инициализации отсутствует, объект asyncResult будет содержать объект Error со свойством Code, равным 9020, а свойству name присвоено значение Женерикреспонсиррор.</span><span class="sxs-lookup"><span data-stu-id="812fa-273">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getInitializationContextAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#getInitializationContextAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-274">Получает данные инициализации, передаваемые при активации надстройки сообщением с действиями.</span><span class="sxs-lookup"><span data-stu-id="812fa-274">Gets initialization data passed when the add-in is activated by an actionable message.</span></span>

      <span data-ttu-id="812fa-275">**Примечание**: Этот метод поддерживается только Outlook 2016 или более поздней версии в Windows ("нажми и работай" версий больше 16.0.8413.1000) и Outlook в Интернете для Office 365.</span><span class="sxs-lookup"><span data-stu-id="812fa-275">**Note**: This method is only supported by Outlook 2016 or later on Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="812fa-276">\[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-276">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-277">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-277">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-278">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-278">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-279">Дополнительные сведения о [сообщениях с действиями](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="812fa-279">More information on [actionable messages](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="812fa-280">.</span><span class="sxs-lookup"><span data-stu-id="812fa-280"></span></span>
    isPreview: true
    name: getInitializationContextAsync(callback)
    fullName: getInitializationContextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="812fa-281">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-281">Optional.</span></span> <span data-ttu-id="812fa-282">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-282">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-283">При успешном выполнении данные инициализации предоставляются в свойстве asyncResult. Value в виде String.</span><span class="sxs-lookup"><span data-stu-id="812fa-283">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="812fa-284">Если контекст инициализации отсутствует, объект asyncResult будет содержать объект Error со свойством Code, равным 9020, а свойству name присвоено значение Женерикреспонсиррор.</span><span class="sxs-lookup"><span data-stu-id="812fa-284">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getInitializationContextAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-285">Асинхронно возвращает данные, выбранные в теме или тексте сообщения.</span><span class="sxs-lookup"><span data-stu-id="812fa-285">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="812fa-286">Если выделенный фрагмент отсутствует, но курсор находится в тексте или теме, метод возвращает значение NULL для выбранных данных.</span><span class="sxs-lookup"><span data-stu-id="812fa-286">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="812fa-287">Если выбраны не текст и не тема, метод возвращает ошибку InvalidSelection.</span><span class="sxs-lookup"><span data-stu-id="812fa-287">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="812fa-288">Для доступа к выбранным данным из метода обратного вызова следует вызвать asyncResult.value.data.</span><span class="sxs-lookup"><span data-stu-id="812fa-288">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="812fa-289">Чтобы получить доступ к исходному свойству, из которого берется выделенный фрагмент, вызовите метод asyncResult. Value. "\", который будет представлять собой основной текст или тему.</span><span class="sxs-lookup"><span data-stu-id="812fa-289">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="812fa-290">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-290">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-291">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-291">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-292">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-292">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: '<span data-ttu-id="812fa-293">Выбранные данные в виде строки с форматом, который определяет параметр coercionType.</span><span class="sxs-lookup"><span data-stu-id="812fa-293">The selected data as a string with format determined by coercionType.</span></span>'
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="812fa-294">Запрашивает формат данных.</span><span class="sxs-lookup"><span data-stu-id="812fa-294">Requests a format for the data.</span></span> <span data-ttu-id="812fa-295">Если текст, метод возвращает обычный текст в виде строки, удаляя все присутствующие HTML-теги.</span><span class="sxs-lookup"><span data-stu-id="812fa-295">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="812fa-296">Если задано значение HTML, метод возвращает выделенный текст (обычный текст или HTML).</span><span class="sxs-lookup"><span data-stu-id="812fa-296">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="812fa-297">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-297">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-298">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-298">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-299">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-299">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-300">Асинхронно возвращает данные, выбранные в теме или тексте сообщения.</span><span class="sxs-lookup"><span data-stu-id="812fa-300">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="812fa-301">Если выделенный фрагмент отсутствует, но курсор находится в тексте или теме, метод возвращает значение NULL для выбранных данных.</span><span class="sxs-lookup"><span data-stu-id="812fa-301">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="812fa-302">Если выбраны не текст и не тема, метод возвращает ошибку InvalidSelection.</span><span class="sxs-lookup"><span data-stu-id="812fa-302">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="812fa-303">Для доступа к выбранным данным из метода обратного вызова следует вызвать asyncResult.value.data.</span><span class="sxs-lookup"><span data-stu-id="812fa-303">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="812fa-304">Чтобы получить доступ к исходному свойству, из которого берется выделенный фрагмент, вызовите метод asyncResult. Value. "\", который будет представлять собой основной текст или тему.</span><span class="sxs-lookup"><span data-stu-id="812fa-304">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="812fa-305">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-305">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-306">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-306">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-307">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-307">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: '<span data-ttu-id="812fa-308">Выбранные данные в виде строки с форматом, который определяет параметр coercionType.</span><span class="sxs-lookup"><span data-stu-id="812fa-308">The selected data as a string with format determined by coercionType.</span></span>'
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="812fa-p140">Запрашивает формат данных. Если задано значение Text, метод возвращает обычный текст как строку, удаляя все имеющиеся HTML-теги. Если задано значение HTML, метод возвращает выделенный текст (обычный текст или HTML).</span><span class="sxs-lookup"><span data-stu-id="812fa-p140">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="812fa-312">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-312">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-313">Удаляет вложение из сообщения или встречи.</span><span class="sxs-lookup"><span data-stu-id="812fa-313">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="812fa-314">Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-314">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="812fa-315">Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-315">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="812fa-316">В Outlook в Интернете и мобильных устройствах идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-316">In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="812fa-317">Сеанс переходит к моменту, когда пользователь закрывает приложение, или если пользователь начинает создание встроенной формы, затем извлекает форму, чтобы продолжить работу в отдельном окне.</span><span class="sxs-lookup"><span data-stu-id="812fa-317">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="812fa-318">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-318">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-319">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-319">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-320">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-320">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-321">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-321">**Errors**:</span></span>

      - <span data-ttu-id="812fa-322">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-322">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="812fa-323">Идентификатор удаляемого вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-323">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="812fa-324">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-324">Optional.</span></span> <span data-ttu-id="812fa-325">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-325">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-326">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-326">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-327">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-327">Optional.</span></span> <span data-ttu-id="812fa-328">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-328">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-329">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-329">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-330">Удаляет вложение из сообщения или встречи.</span><span class="sxs-lookup"><span data-stu-id="812fa-330">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="812fa-331">Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-331">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="812fa-332">Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-332">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="812fa-333">В Outlook в Интернете и мобильных устройствах идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="812fa-333">In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="812fa-334">Сеанс переходит к моменту, когда пользователь закрывает приложение, или если пользователь начинает создание встроенной формы, затем извлекает форму, чтобы продолжить работу в отдельном окне.</span><span class="sxs-lookup"><span data-stu-id="812fa-334">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="812fa-335">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-335">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-336">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-336">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-337">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-337">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-338">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-338">**Errors**:</span></span>

      - <span data-ttu-id="812fa-339">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-339">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="812fa-340">Идентификатор удаляемого вложения.</span><span class="sxs-lookup"><span data-stu-id="812fa-340">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="812fa-341">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-341">Optional.</span></span> <span data-ttu-id="812fa-342">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-342">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-343">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-343">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#saveAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-344">Асинхронно сохраняет элемент.</span><span class="sxs-lookup"><span data-stu-id="812fa-344">Asynchronously saves an item.</span></span>

      <span data-ttu-id="812fa-345">При вызове этот метод сохраняет текущее сообщение в виде черновика и возвращает идентификатор элемента с помощью метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-345">When invoked, this method saves the current message as a draft and returns the item id via the callback method.</span></span> <span data-ttu-id="812fa-346">В Outlook в Интернете или Outlook в интерактивном режиме элемент сохраняется на сервере.</span><span class="sxs-lookup"><span data-stu-id="812fa-346">In Outlook on the web or Outlook in online mode, the item is saved to the server.</span></span> <span data-ttu-id="812fa-347">В Outlook в режиме кэширования этот элемент сохраняется в локальном кэше.</span><span class="sxs-lookup"><span data-stu-id="812fa-347">In Outlook in cached mode, the item is saved to the local cache.</span></span>

      <span data-ttu-id="812fa-348">Так как для встреч не задано состояние черновиков, то при вызове saveAsync для встречи в режиме создания элемент будет сохранен как обычная встреча в календаре пользователя.</span><span class="sxs-lookup"><span data-stu-id="812fa-348">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="812fa-349">Приглашения для новых встреч, которые еще не были сохранены, не будут отправляться.</span><span class="sxs-lookup"><span data-stu-id="812fa-349">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="812fa-350">При сохранении существующей встречи будет отправлено обновление добавленных или удаленных участников.</span><span class="sxs-lookup"><span data-stu-id="812fa-350">Saving an existing appointment will send an update to added or removed attendees.</span></span>

      <span data-ttu-id="812fa-351">**Note**: Если надстройка вызывает saveAsync для элемента в режиме создания, чтобы получить идентификатор itemId для использования с EWS или REST API, помните, что в режиме кэширования может потребоваться некоторое время, прежде чем элемент будет фактически синхронизирован с сервером.</span><span class="sxs-lookup"><span data-stu-id="812fa-351">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="812fa-352">Пока элемент не будет синхронизирован, использование itemId возвратит ошибку.</span><span class="sxs-lookup"><span data-stu-id="812fa-352">Until the item is synced, using the itemId will return an error.</span></span>

      <span data-ttu-id="812fa-353">**Note**: следующие клиенты имеют различные действия для saveAsync в режиме создания:</span><span class="sxs-lookup"><span data-stu-id="812fa-353">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>

      - <span data-ttu-id="812fa-354">Outlook в Mac не поддерживает сохранение собраний.</span><span class="sxs-lookup"><span data-stu-id="812fa-354">Outlook on Mac does not support saving a meeting.</span></span> <span data-ttu-id="812fa-355">Метод saveAsync завершается с ошибкой при вызове из собрания в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-355">The saveAsync method fails when called from a meeting in compose mode.</span></span> <span data-ttu-id="812fa-356">Просмотреть [не удается сохранить собрание в виде черновика в Outlook для Mac с помощью API Office JS](https://support.microsoft.com/help/4505745) для обхода.</span><span class="sxs-lookup"><span data-stu-id="812fa-356">See [Cannot save a meeting as a draft in Outlook for Mac by using Office JS API](https://support.microsoft.com/help/4505745) for a workaround.</span></span>

      - <span data-ttu-id="812fa-357">Outlook в Интернете всегда отправляет приглашение или обновление при вызове saveAsync для встречи в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-357">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>

      <span data-ttu-id="812fa-358">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-358">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-359">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-359">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-360">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-360">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-361">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-361">**Errors**:</span></span>

      - <span data-ttu-id="812fa-362">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-362">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="812fa-363">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-363">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-364">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-364">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="812fa-365">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-365">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-366">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-366">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#saveAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#saveAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-367">Асинхронно сохраняет элемент.</span><span class="sxs-lookup"><span data-stu-id="812fa-367">Asynchronously saves an item.</span></span>

      <span data-ttu-id="812fa-368">При вызове этот метод сохраняет текущее сообщение в виде черновика и возвращает идентификатор элемента с помощью метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-368">When invoked, this method saves the current message as a draft and returns the item id via the callback method.</span></span> <span data-ttu-id="812fa-369">В Outlook в Интернете или Outlook в интерактивном режиме элемент сохраняется на сервере.</span><span class="sxs-lookup"><span data-stu-id="812fa-369">In Outlook on the web or Outlook in online mode, the item is saved to the server.</span></span> <span data-ttu-id="812fa-370">В Outlook в режиме кэширования этот элемент сохраняется в локальном кэше.</span><span class="sxs-lookup"><span data-stu-id="812fa-370">In Outlook in cached mode, the item is saved to the local cache.</span></span>

      <span data-ttu-id="812fa-371">Так как для встреч не задано состояние черновиков, то при вызове saveAsync для встречи в режиме создания элемент будет сохранен как обычная встреча в календаре пользователя.</span><span class="sxs-lookup"><span data-stu-id="812fa-371">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="812fa-372">Приглашения для новых встреч, которые еще не были сохранены, не будут отправляться.</span><span class="sxs-lookup"><span data-stu-id="812fa-372">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="812fa-373">При сохранении существующей встречи будет отправлено обновление добавленных или удаленных участников.</span><span class="sxs-lookup"><span data-stu-id="812fa-373">Saving an existing appointment will send an update to added or removed attendees.</span></span>

      <span data-ttu-id="812fa-374">**Note**: Если надстройка вызывает saveAsync для элемента в режиме создания, чтобы получить идентификатор itemId для использования с EWS или REST API, помните, что в режиме кэширования может потребоваться некоторое время, прежде чем элемент будет фактически синхронизирован с сервером.</span><span class="sxs-lookup"><span data-stu-id="812fa-374">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="812fa-375">Пока элемент не будет синхронизирован, использование itemId возвратит ошибку.</span><span class="sxs-lookup"><span data-stu-id="812fa-375">Until the item is synced, using the itemId will return an error.</span></span>

      <span data-ttu-id="812fa-376">**Note**: следующие клиенты имеют различные действия для saveAsync в режиме создания:</span><span class="sxs-lookup"><span data-stu-id="812fa-376">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>

      - <span data-ttu-id="812fa-377">Outlook в Mac не поддерживает сохранение собраний.</span><span class="sxs-lookup"><span data-stu-id="812fa-377">Outlook on Mac does not support saving a meeting.</span></span> <span data-ttu-id="812fa-378">Метод saveAsync завершается с ошибкой при вызове из собрания в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-378">The saveAsync method fails when called from a meeting in compose mode.</span></span> <span data-ttu-id="812fa-379">Просмотреть [не удается сохранить собрание в виде черновика в Outlook для Mac с помощью API Office JS](https://support.microsoft.com/help/4505745) для обхода.</span><span class="sxs-lookup"><span data-stu-id="812fa-379">See [Cannot save a meeting as a draft in Outlook for Mac by using Office JS API](https://support.microsoft.com/help/4505745) for a workaround.</span></span>

      - <span data-ttu-id="812fa-380">Outlook в Интернете всегда отправляет приглашение или обновление при вызове saveAsync для встречи в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="812fa-380">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>

      <span data-ttu-id="812fa-381">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-381">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-382">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-382">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-383">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-383">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-384">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-384">**Errors**:</span></span>

      - <span data-ttu-id="812fa-385">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-385">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="812fa-386">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-386">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="812fa-387">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="812fa-387">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#saveAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
    summary: |-
      <span data-ttu-id="812fa-388">Асинхронно вставляет данные в текст или тему сообщения.</span><span class="sxs-lookup"><span data-stu-id="812fa-388">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="812fa-389">Метод setSelectedDataAsync Вставляет указанную строку в позицию курсора в теме или тексте элемента, или, если текст выбран в редакторе, он заменяет выделенный текст.</span><span class="sxs-lookup"><span data-stu-id="812fa-389">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="812fa-390">Если курсор не находится в поле Body или subject, возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="812fa-390">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="812fa-391">После вставки курсор помещается в конец вставленного содержимого.</span><span class="sxs-lookup"><span data-stu-id="812fa-391">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="812fa-392">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-392">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-393">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-393">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-394">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-394">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-395">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-395">**Errors**:</span></span>

      - <span data-ttu-id="812fa-396">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-396">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"812fa-397\">Вставляемые данные.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-397\">The data to be inserted.</span></span> <span data-ttu-id=\"812fa-398\">Объем данных не должен превышать 1\_000\_000 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-398\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"812fa-399\">Если передано больше 1\_000\_000 символов, вызывается исключение ArgumentOutOfRange.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-399\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="812fa-400">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-400">Optional.</span></span> <span data-ttu-id="812fa-401">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="812fa-401">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="812fa-402">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="812fa-402">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="812fa-403">coercionType: Если текст, текущий стиль применяется в Outlook в Интернете и на настольных клиентах.</span><span class="sxs-lookup"><span data-stu-id="812fa-403">coercionType: If text, the current style is applied in Outlook on the web and desktop clients.</span></span> <span data-ttu-id="812fa-404">Если поле представляет собой редактор HTML, вставляются только текстовые данные, даже если они имеют формат HTML.</span><span class="sxs-lookup"><span data-stu-id="812fa-404">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id="812fa-405">Если HTML и поле поддерживает HTML (тема не используется), текущий стиль применяется в Outlook в Интернете, а в Outlook для настольных компьютеров применяется стиль по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="812fa-405">If html and the field supports HTML (the subject doesn''t), the current style is applied in Outlook on the web and the default style is applied in Outlook on desktop clients.</span></span> <span data-ttu-id="812fa-406">Если поле является текстовым полем, возвращается ошибка Инвалиддатаформат.</span><span class="sxs-lookup"><span data-stu-id="812fa-406">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id="812fa-407">Если параметр coercionType не задан, результат зависит от поля. Если поле содержит HTML, используется HTML. Если поле текстовое, используется обычный текст.</span><span class="sxs-lookup"><span data-stu-id="812fa-407">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
        - id: callback
          description: '<span data-ttu-id="812fa-408">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-408">Optional.</span></span> <span data-ttu-id="812fa-409">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-409">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
    summary: |-
      <span data-ttu-id="812fa-410">Асинхронно вставляет данные в текст или тему сообщения.</span><span class="sxs-lookup"><span data-stu-id="812fa-410">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="812fa-411">Метод setSelectedDataAsync Вставляет указанную строку в позицию курсора в теме или тексте элемента, или, если текст выбран в редакторе, он заменяет выделенный текст.</span><span class="sxs-lookup"><span data-stu-id="812fa-411">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="812fa-412">Если курсор не находится в поле Body или subject, возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="812fa-412">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="812fa-413">После вставки курсор помещается в конец вставленного содержимого.</span><span class="sxs-lookup"><span data-stu-id="812fa-413">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="812fa-414">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-414">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-415">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="812fa-415">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="812fa-416">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-416">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="812fa-417">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="812fa-417">**Errors**:</span></span>

      - <span data-ttu-id="812fa-418">Инвалидаттачментид: идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="812fa-418">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"812fa-419\">Вставляемые данные.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-419\">The data to be inserted.</span></span> <span data-ttu-id=\"812fa-420\">Объем данных не должен превышать 1\_000\_000 символов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-420\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"812fa-421\">Если передано больше 1\_000\_000 символов, вызывается исключение ArgumentOutOfRange.</span><span class=\"sxs-lookup\"><span data-stu-id=\"812fa-421\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="812fa-422">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="812fa-422">Optional.</span></span> <span data-ttu-id="812fa-423">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="812fa-423">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#subject:member'
    summary: |-
      <span data-ttu-id="812fa-424">Получает или задает описание, которое отображается в поле темы элемента.</span><span class="sxs-lookup"><span data-stu-id="812fa-424">Gets or sets the description that appears in the subject field of an item.</span></span>

      <span data-ttu-id="812fa-425">Свойство Subject Возвращает или задает всю тему элемента, как это было отправлено сервером электронной почты.</span><span class="sxs-lookup"><span data-stu-id="812fa-425">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>

      <span data-ttu-id="812fa-426">Свойство Subject возвращает объект subject, предоставляющий методы для получения и задания темы.</span><span class="sxs-lookup"><span data-stu-id="812fa-426">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>

      <span data-ttu-id="812fa-427">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="812fa-427">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="812fa-428">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="812fa-428">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="812fa-429">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="812fa-429">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - 'outlook!Office.Subject:interface'
references:
  - uid: 'outlook!Office.Item:interface'
    name: Item
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
    name: 'Office.AsyncContextOptions & { isInline: boolean }'
    fullName: 'Office.AsyncContextOptions & { isInline: boolean }'
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & { isInline: boolean }'
        fullName: ' & { isInline: boolean }'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~0:complex'
    name: 'Office.AsyncContextOptions & { isInline: boolean }'
    fullName: 'Office.AsyncContextOptions & { isInline: boolean }'
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & { isInline: boolean }'
        fullName: ' & { isInline: boolean }'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentFromBase64Async~2:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#getAttachmentsAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.AttachmentDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.AttachmentDetails:interface'
        name: AttachmentDetails
        fullName: Office.AttachmentDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.ItemCompose#getAttachmentsAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.AttachmentDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.AttachmentDetails:interface'
        name: AttachmentDetails
        fullName: Office.AttachmentDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.ItemCompose#getInitializationContextAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#getInitializationContextAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#saveAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#saveAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject:interface'
    name: Subject