### YamlMime:UniversalReference
items:
  - uid: outlook.Office.EnhancedLocation
    summary: |-
      Представляет набор расположений в встрече.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    isPreview: true
    name: Office.EnhancedLocation
    fullName: Office.EnhancedLocation
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.EnhancedLocation.addAsync
      - outlook.Office.EnhancedLocation.addAsync_1
      - outlook.Office.EnhancedLocation.getAsync
      - outlook.Office.EnhancedLocation.getAsync_1
      - outlook.Office.EnhancedLocation.removeAsync
      - outlook.Office.EnhancedLocation.removeAsync_1
  - uid: outlook.Office.EnhancedLocation.addAsync
    summary: |-
      Добавляет в набор расположений, связанных с встречей.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadWriteItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание

      **Ошибки**:

      - Инвалидформатеррор: недопустимый формат указанного объекта данных.
    isPreview: true
    name: 'addAsync(locationIdentifiers, options, callback)'
    fullName: 'addAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResultStatus) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, добавляемые в текущий список расположений.'
          type:
            - 'LocationIdentifier[]'
        - id: options
          description: 'Необязательно. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult. Проверьте `status` свойство AsyncResult, чтобы определить, успешно ли выполнен вызов.'
          type:
            - '(asyncResult: Office.AsyncResultStatus) => void'
  - uid: outlook.Office.EnhancedLocation.addAsync_1
    summary: |-
      Добавляет в набор расположений, связанных с встречей.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadWriteItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание

      **Ошибки**:

      - Инвалидформатеррор: недопустимый формат указанного объекта данных.

      #### <a name="examples"></a>Примеры

      ```javascript
      var locations = [
          {
              "id": "Contoso",
              "type": Office.MailboxEnums.LocationType.Custom
          }
      ];
      Office.context.mailbox.item.enhancedLocation.addAsync(locations);
      ```
    isPreview: true
    name: 'addAsync(locationIdentifiers, callback)'
    fullName: 'addAsync(locationIdentifiers, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(locationIdentifiers: LocationIdentifier[], callback?: (asyncResult: Office.AsyncResultStatus) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, добавляемые в текущий список расположений.'
          type:
            - 'LocationIdentifier[]'
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult. Проверьте `status` свойство AsyncResult, чтобы определить, успешно ли выполнен вызов.'
          type:
            - '(asyncResult: Office.AsyncResultStatus) => void'
  - uid: outlook.Office.EnhancedLocation.getAsync
    summary: |-
      Получает набор расположений, связанных с встречей.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<LocationDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Необязательно. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<LocationDetails[]>) => void'
  - uid: outlook.Office.EnhancedLocation.getAsync_1
    summary: |-
      Получает набор расположений, связанных с встречей.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.context.mailbox.item.enhancedLocation.getAsync(callbackFunction);

      function callbackFunction(asyncResult) {
          asyncResult.value.forEach(function (place) {
              console.log("Display name: " + place.displayName);
              console.log("Type: " + place.locationIdentifier.type);
              if (place.locationIdentifier.type === Office.MailboxEnums.LocationType.Room) {
                  console.log("Email address: " + place.emailAddress);
              }
          });
      }
      ```
    isPreview: true
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback?: (asyncResult: Office.AsyncResult<LocationDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<LocationDetails[]>) => void'
  - uid: outlook.Office.EnhancedLocation.removeAsync
    summary: |-
      Удаляет набор расположений, связанных с встречей.

      Если имеется несколько расположений с одинаковым именем, все соответствующие расположения удаляются, даже если они были указаны в Локатионидентифиерс.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadWriteItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание
    isPreview: true
    name: 'removeAsync(locationIdentifiers, options, callback)'
    fullName: 'removeAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResultStatus) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, которые необходимо удалить из текущего списка расположений.'
          type:
            - 'LocationIdentifier[]'
        - id: options
          description: 'Необязательно. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult. Проверьте `status` свойство AsyncResult, чтобы определить, успешно ли выполнен вызов.'
          type:
            - '(asyncResult: Office.AsyncResultStatus) => void'
  - uid: outlook.Office.EnhancedLocation.removeAsync_1
    summary: |-
      Удаляет набор расположений, связанных с встречей.

      Если имеется несколько расположений с одинаковым именем, все соответствующие расположения удаляются, даже если они были указаны в Локатионидентифиерс.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadWriteItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: создание

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.context.mailbox.item.enhancedLocation.getAsync(callbackFunction);

      function callbackFunction(asyncResult) {
          asyncResult.value.forEach(function (currentValue) {
              Office.context.mailbox.item.enhancedLocation.removeAsync([currentValue.locationIdentifier]);
          });
      }
      ```
    isPreview: true
    name: 'removeAsync(locationIdentifiers, callback)'
    fullName: 'removeAsync(locationIdentifiers, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(locationIdentifiers: LocationIdentifier[], callback?: (asyncResult: Office.AsyncResultStatus) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, которые необходимо удалить из текущего списка расположений.'
          type:
            - 'LocationIdentifier[]'
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult. Проверьте `status` свойство AsyncResult, чтобы определить, успешно ли выполнен вызов.'
          type:
            - '(asyncResult: Office.AsyncResultStatus) => void'