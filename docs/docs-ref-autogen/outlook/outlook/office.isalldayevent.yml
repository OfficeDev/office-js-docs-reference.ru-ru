### YamlMime:TSType
name: Office.IsAllDayEvent
uid: outlook!Office.IsAllDayEvent:interface
package: outlook!
fullName: Office.IsAllDayEvent
summary: >-
  Предоставляет методы получения и набора состояния события на весь день собрания в Outlook надстройки.


  \[[Набор API: предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Применимый Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Compose
isPreview: true
isDeprecated: false
type: interface
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.IsAllDayEvent#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Получает значение boolean, указывающее, является ли событие событием весь день или нет.


    \[[Набор API: предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Compose
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: По завершению метода функция, переданная в параметре, называется `callback` с одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.IsAllDayEvent#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: >-
    Получает значение boolean, указывающее, является ли событие событием весь день или нет.


    \[[Набор API: предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.isAllDayEvent.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("Is this an all-day event? " + asyncResult.value);
      } else {
        console.log("Failed to get if this is an all-day event. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
    parameters:
    - id: callback
      description: По завершению метода функция, переданная в параметре, называется `callback` с одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(isAllDayEvent, options, callback)
  uid: outlook!Office.IsAllDayEvent#setAsync:member(1)
  package: outlook!
  fullName: setAsync(isAllDayEvent, options, callback)
  summary: >-
    Задает состояние события в течение всего дня для встречи.


    \[[Набор API: предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    Если встреча помечена как событие на весь день: - Время запуска и окончания будет отмечено как 12:00 (как и в Outlook пользовательском интерфейсе). Время начала возвращается в 12:00, а на следующий день — в 12:00.


    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.isAllDayEvent.setAsync(true, function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Failed) {
        console.log("Failed to set all-day event: " + JSON.stringify(asyncResult.error));
      } else {
        console.log("Appointment set to all-day event.");
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(isAllDayEvent: boolean, options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: isAllDayEvent
      description: значение boolean для набора состояния события на весь день.
      type: boolean
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(isAllDayEvent, callback)
  uid: outlook!Office.IsAllDayEvent#setAsync:member(2)
  package: outlook!
  fullName: setAsync(isAllDayEvent, callback)
  summary: >-
    Задает состояние события в течение всего дня для встречи.


    \[[Набор API: предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    Если встреча помечена как событие на весь день: - Время запуска и окончания будет отмечено как 12:00 (как и в Outlook пользовательском интерфейсе). Время начала возвращается в 12:00, а на следующий день — в 12:00.


    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Compose
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(isAllDayEvent: boolean, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: isAllDayEvent
      description: значение boolean для набора состояния события на весь день.
      type: boolean
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 5dd65b4465e3798854f7b0a3680cd3754c80de63
  ms.sourcegitcommit: fc08f53e68f6acec0b6de81691ac5920f3974ed4
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/21/2021
  ms.locfileid: "52590246"
