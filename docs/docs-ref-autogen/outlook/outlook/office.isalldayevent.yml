### YamlMime:TSType
name: Office.IsAllDayEvent
uid: outlook!Office.IsAllDayEvent:interface
package: outlook!
fullName: Office.IsAllDayEvent
summary: >-
  Предоставляет методы для получения и задания состояния события "целый день" собрания в надстройке Outlook.


  \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


  **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание
isPreview: true
isDeprecated: false
type: interface
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.IsAllDayEvent#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Получает логическое значение, указывающее, является ли событие ежедневным или нет.


    \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.IsAllDayEvent#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: >-
    Получает логическое значение, указывающее, является ли событие ежедневным или нет.


    \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.isAllDayEvent.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("Is this an all-day event? " + asyncResult.value);
      } else {
        console.log("Failed to get if this is an all-day event. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
    parameters:
    - id: callback
      description: После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;boolean&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(isAllDayEvent, options, callback)
  uid: outlook!Office.IsAllDayEvent#setAsync:member(1)
  package: outlook!
  fullName: setAsync(isAllDayEvent, options, callback)
  summary: >-
    Задает состояние события "целый день" для встречи.


    \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    Если встреча помечена как событие на целый день: начальное и конечное время будут помечены как 12:00 AM (как в пользовательском интерфейсе Outlook). Время начала будет возвращать 12:00 AM и End, что будет 12:00 на следующий день.


    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadWriteItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.isAllDayEvent.setAsync(true, function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Failed) {
        console.log("Failed to set all-day event: " + JSON.stringify(asyncResult.error));
      } else {
        console.log("Appointment set to all-day event.");
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(isAllDayEvent: boolean, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: isAllDayEvent
      description: Логическое значение для задания состояния события "целый день".
      type: boolean
    - id: options
      description: 'Необязательный атрибут. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный атрибут. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра, `asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: d205b00d3f27936ce4a869fde98d28cc35d6e83b
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49210972"
