### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.IsAllDayEvent:interface'
    summary: |-
      Предоставляет методы для получения и задания состояния события "целый день" собрания в надстройке Outlook.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: создание
    isPreview: true
    name: Office.IsAllDayEvent
    fullName: Office.IsAllDayEvent
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
    summary: |-
      Получает логическое значение, указывающее, является ли событие ежедневным или нет.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: создание
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
    summary: |-
      Получает логическое значение, указывающее, является ли событие ежедневным или нет.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: создание

      #### <a name="examples"></a>Примеры

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/calendar-properties-apis.yaml
      Office.context.mailbox.item.isAllDayEvent.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Is this an all-day event? " + asyncResult.value);
        } else {
          console.log("Failed to get if this is an all-day event. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
    summary: |-
      Задает состояние события "целый день" для встречи.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      Если встреча помечена как событие на целый день: начальное и конечное время будут помечены как 12:00 AM (как в пользовательском интерфейсе Outlook). Время начала будет возвращать 12:00 AM и End, что будет 12:00 на следующий день.

      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadWriteItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: создание
    isPreview: true
    name: 'setAsync(isAllDayEvent, options, callback)'
    fullName: 'setAsync(isAllDayEvent, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: Логическое значение для задания состояния события "целый день".
          type:
            - boolean
        - id: options
          description: 'Необязательный параметр. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Необязательный параметр. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра,`asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
    summary: |-
      Задает состояние события "целый день" для встречи.

      \[[Набор API: предварительный просмотр почтового ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      Если встреча помечена как событие на целый день: начальное и конечное время будут помечены как 12:00 AM (как в пользовательском интерфейсе Outlook). Время начала будет возвращать 12:00 AM и End, что будет 12:00 на следующий день.

      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadWriteItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: создание

      #### <a name="examples"></a>Примеры

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/calendar-properties-apis.yaml
      Office.context.mailbox.item.isAllDayEvent.setAsync(true, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Failed) {
          console.log("Failed to set all-day event: " + JSON.stringify(asyncResult.error));
        } else {
          console.log("Appointment set to all-day event.");
        }
      });
      ```
    isPreview: true
    name: 'setAsync(isAllDayEvent, callback)'
    fullName: 'setAsync(isAllDayEvent, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: Логическое значение для задания состояния события "целый день".
          type:
            - boolean
        - id: callback
          description: 'Необязательный параметр. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра,`asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void