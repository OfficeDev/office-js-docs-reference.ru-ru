### YamlMime:TSType
name: Office.InternetHeaders
uid: outlook!Office.InternetHeaders:interface
package: outlook!
fullName: Office.InternetHeaders
summary: >-
  Объект `InternetHeaders` представляет настраиваемые интернет-заготки, которые сохраняются после того, как элемент сообщения покидает Exchange и преобразуется в сообщение MIME. Эти заготки хранятся в качестве x-headers в сообщении MIME.


  Интернет-заготки хранятся в качестве пар ключей и значений на основе каждого элемента.


  **Примечание.** Этот объект предназначен для настройки и получения настраиваемой загонки элемента сообщения. Дополнительные дополнительные сообщения см. в [статью Get and set internet headers on a message in an Outlook add-in](https://docs.microsoft.com/office/dev/add-ins/outlook/internet-headers)<!-- -->.


  \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **Рекомендации**


  В настоящее время интернет-заготки являются конечным ресурсом в почтовом ящике пользователя. Когда квота исчерпана, вы не сможете создать в этом почтовом ящике больше интернет-заголовок, что может привести к неожиданному поведению клиентов, которые полагаются на это, чтобы функционировать.


  При создании надстройки в интернете при создании надстройки применяются следующие рекомендации.


  - Создайте минимальное количество необходимых загодеров.


  - Заглавные имена, чтобы можно было повторно использовать и обновлять их значения позже. Таким образом, избегайте именования заглавных имен в переменной (например, на основе ввода пользователя, timestamp и т.д.).


  **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAsync(names, options, callback)
  uid: outlook!Office.InternetHeaders#getAsync:member(1)
  package: outlook!
  fullName: getAsync(names, options, callback)
  summary: >-
    С учетом массива имен интернет-загона этот метод возвращает словарь, содержащий эти интернет-загоны и их значения. Если надстройка запрашивает недоступный x-header, этот x-header не будет возвращен в результатах.


    **Примечание.** Этот метод предназначен для возврата значений настраиваемого загона, заданной с помощью `setAsync` метода.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/70-mime-headers/manage-custom-internet-headers-message-compose.yaml

    Office.context.mailbox.item.internetHeaders.getAsync(
      ["x-preferred-fruit", "x-preferred-vegetable", "x-best-vegetable", "x-nonexistent-header"],
      function (asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Selected headers: " + JSON.stringify(asyncResult.value));
        } else {
          console.log("Error getting selected headers: " + JSON.stringify(asyncResult.error));
        }
      }
    );

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(names: string[], options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: Имена возвращаемого интернет-загона.
      type: string[]
    - id: options
      description: 'Объект литеральный, содержащий одно или несколько следующих свойств: `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(names, callback)
  uid: outlook!Office.InternetHeaders#getAsync:member(2)
  package: outlook!
  fullName: getAsync(names, callback)
  summary: >-
    С учетом массива имен интернет-загона этот метод возвращает словарь, содержащий эти интернет-загоны и их значения. Если надстройка запрашивает недоступный x-header, этот x-header не будет возвращен в результатах.


    **Примечание.** Этот метод предназначен для возврата значений настраиваемого загона, заданной с помощью `setAsync` метода.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(names: string[], callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: Имена возвращаемого интернет-загона.
      type: string[]
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(names, options, callback)
  uid: outlook!Office.InternetHeaders#removeAsync:member(1)
  package: outlook!
  fullName: removeAsync(names, options, callback)
  summary: >-
    С учетом массива имен интернет-загона этот метод удаляет указанные заглавные главы из коллекции загона интернета.


    **Примечание.** Этот метод предназначен для удаления настраиваемого загона, заданной с помощью `setAsync` метода.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/70-mime-headers/manage-custom-internet-headers-message-compose.yaml

    Office.context.mailbox.item.internetHeaders.removeAsync(
      ["x-best-vegetable", "x-nonexistent-header"],
      function (asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully removed selected headers");
        } else {
          console.log("Error removing selected headers: " + JSON.stringify(asyncResult.error));
        }
      }
    );

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeAsync(names: string[], options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: Имена удаляемого интернет-загона.
      type: string[]
    - id: options
      description: 'Объект литеральный, содержащий одно или несколько следующих свойств: `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(names, callback)
  uid: outlook!Office.InternetHeaders#removeAsync:member(2)
  package: outlook!
  fullName: removeAsync(names, callback)
  summary: >-
    С учетом массива имен интернет-загона этот метод удаляет указанные заглавные главы из коллекции загона интернета.


    **Примечание.** Этот метод предназначен для удаления настраиваемого загона, заданной с помощью `setAsync` метода.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeAsync(names: string[], callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: Имена удаляемого интернет-загона.
      type: string[]
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(headers, options, callback)
  uid: outlook!Office.InternetHeaders#setAsync:member(1)
  package: outlook!
  fullName: setAsync(headers, options, callback)
  summary: >-
    Задает указанные интернет-заготки к указанным значениям.


    Метод создает новый загодер, если указанное заглавное заглавное значение еще не существует; в противном случае существующее значение заменяется `setAsync` новым значением.


    **Примечание.** Этот метод предназначен для настройки значений настраиваемого загона.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/70-mime-headers/manage-custom-internet-headers-message-compose.yaml

    Office.context.mailbox.item.internetHeaders.setAsync(
      { "x-preferred-fruit": "orange", "x-preferred-vegetable": "broccoli", "x-best-vegetable": "spinach" },
      function (asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully set headers");
        } else {
          console.log("Error setting headers: " + JSON.stringify(asyncResult.error));
        }
      }

    );

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(headers: Object, options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: headers
      description: Имена и соответствующие значения заочная. Должен быть объектом словаря с ключами именами интернет-заготчиков и значениями значений в загонах Интернета.
      type: Object
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. После завершения метода функция, переданная в параметре, называется с одним параметром `callback` типа Office.AsyncResult. Все обнаруженные ошибки будут указаны в свойстве `asyncResult.error`.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(headers, callback)
  uid: outlook!Office.InternetHeaders#setAsync:member(2)
  package: outlook!
  fullName: setAsync(headers, callback)
  summary: >-
    Задает указанные интернет-заготки к указанным значениям.


    Метод создает новый загодер, если указанное заглавное заглавное значение еще не существует; в противном случае существующее значение заменяется `setAsync` новым значением.


    **Примечание.** Этот метод предназначен для настройки значений настраиваемого загона.


    \[[Набор API: почтовый ящик 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(headers: Object, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: headers
      description: Имена и соответствующие значения заочная. Должен быть объектом словаря с ключами именами интернет-заготчиков и значениями значений в загонах Интернета.
      type: Object
    - id: callback
      description: Необязательно. После завершения метода функция, переданная в параметре, называется с одним параметром `callback` типа Office.AsyncResult. Все обнаруженные ошибки будут указаны в свойстве `asyncResult.error`.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 6ba238f66d05b6745bab14bb17211773ca9d46b7
  ms.sourcegitcommit: d0f7e3d564e90cdff464157440c36ad19fa526f0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/09/2021
  ms.locfileid: "51660122"
