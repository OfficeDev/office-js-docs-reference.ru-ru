### YamlMime:TSType
name: Office.SessionData
uid: outlook!Office.SessionData:interface
package: outlook!
fullName: Office.SessionData
summary: >-
  Предоставляет методы управления данными сеанса элемента.


  \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
isPreview: true
isDeprecated: false
type: interface
methods:
- name: clearAsync(options, callback)
  uid: outlook!Office.SessionData#clearAsync:member(1)
  package: outlook!
  fullName: clearAsync(options, callback)
  summary: >-
    Очищает все пары ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/session-data-apis.yaml

    Office.context.mailbox.item.sessionData.clearAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("sessionData.clearAsync succeeded");
      } else {
        console.log("Failed to clear sessionData. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'clearAsync(options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: clearAsync(callback)
  uid: outlook!Office.SessionData#clearAsync:member(2)
  package: outlook!
  fullName: clearAsync(callback)
  summary: >-
    Очищает все пары ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'clearAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAllAsync(callback)
  uid: outlook!Office.SessionData#getAllAsync:member(1)
  package: outlook!
  fullName: getAllAsync(callback)
  summary: >-
    Получает все пары ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/session-data-apis.yaml

    Office.context.mailbox.item.sessionData.getAllAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("The sessionData is " + JSON.stringify(asyncResult.value));
      } else {
        console.log("Failed to get all sessionData. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAllAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: callback
      description: По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(name, callback)
  uid: outlook!Office.SessionData#getAsync:member(1)
  package: outlook!
  fullName: getAsync(name, callback)
  summary: >-
    Получает значение данных сеанса указанного ключа.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/session-data-apis.yaml

    Office.context.mailbox.item.sessionData.getAsync(
      "Date",
      function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("The sessionData value is " + JSON.stringify(asyncResult.value));
      } else {
        console.log("Failed to get sessionData. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(name: string, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: name
      description: Ключ данных сеанса.
      type: string
    - id: callback
      description: По завершению метода функция, переданная в параметре, называется `callback` с одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(name, options, callback)
  uid: outlook!Office.SessionData#removeAsync:member(1)
  package: outlook!
  fullName: removeAsync(name, options, callback)
  summary: >-
    Удаляет пару ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/session-data-apis.yaml

    Office.context.mailbox.item.sessionData.removeAsync(
      "Date",
      function callback(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("sessionData.removeAsync succeeded");
        } else {
          console.log("Failed to remove sessionData. Error: " + JSON.stringify(asyncResult.error));
        }
      }
    );

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'removeAsync(name: string, options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: name
      description: Ключ данных сеанса.
      type: string
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(name, callback)
  uid: outlook!Office.SessionData#removeAsync:member(2)
  package: outlook!
  fullName: removeAsync(name, callback)
  summary: >-
    Удаляет пару ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'removeAsync(name: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: name
      description: Ключ данных сеанса.
      type: string
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром, `asyncResult`<!-- -->, который `Office.AsyncResult` является объектом.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(name, value, options, callback)
  uid: outlook!Office.SessionData#setAsync:member(1)
  package: outlook!
  fullName: setAsync(name, value, options, callback)
  summary: >-
    Задает пару ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/session-data-apis.yaml

    Office.context.mailbox.item.sessionData.setAsync(
      "Date",
      "7/24/2020",
      function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("sessionData.setAsync succeeded");
      } else {
        console.log("Failed to set sessionData. Error: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(name: string, value: string, options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: name
      description: Ключ данных сеанса.
      type: string
    - id: value
      description: Значение данных сеанса в качестве строки.
      type: string
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ в методе вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(name, value, callback)
  uid: outlook!Office.SessionData#setAsync:member(2)
  package: outlook!
  fullName: setAsync(name, value, callback)
  summary: >-
    Задает пару ключ-значение данных сеанса.


    \[[Набор API: Предварительный просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(name: string, value: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: name
      description: Ключ данных сеанса.
      type: string
    - id: value
      description: Значение данных сеанса в качестве строки.
      type: string
    - id: callback
      description: Необязательно. По завершению метода функция, переданная в параметре, называется `callback` с одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ceb777bc1db86f25d9cf57d3cfa5db2f02a30c99
  ms.sourcegitcommit: d0f7e3d564e90cdff464157440c36ad19fa526f0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/09/2021
  ms.locfileid: "51660220"
