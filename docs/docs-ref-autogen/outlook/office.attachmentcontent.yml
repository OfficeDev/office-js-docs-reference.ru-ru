### YamlMime:UniversalReference
ms.openlocfilehash: b52c294c7c7b30390622fec52183f8d455e9060d
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/15/2019
ms.locfileid: "30054984"
items:
- uid: outlook.Office.AttachmentContent
  summary: >-
    Представляет содержимое вложения для элемента сообщения или встречи.


    \[[Набор API: предварительНый Просмотр почтовоГо ящика](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  isPreview: true
  name: Office.AttachmentContent
  fullName: Office.AttachmentContent
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.AttachmentContent.content
  - outlook.Office.AttachmentContent.format
- uid: outlook.Office.AttachmentContent.content
  summary: Содержимое вложения в виде строки.
  isPreview: true
  name: content
  fullName: content
  langs:
  - typeScript
  type: property
  syntax:
    content: 'content: string;'
    return:
      type:
      - string
- uid: outlook.Office.AttachmentContent.format
  summary: >-
    Формат строки, используемый для содержимого вложения.


    Для вложений файлов форматирование представляет собой строку в кодировке Base64.


    Для вложений элементов, представляющих сообщения, форматирование представляет собой строку, представляющую форматированный EML-файл.


    Для вложений элементов, представляющих элементы календаря, форматирование представляет собой строку, представляющую файл iCalendar.


    Для облачных вложений форматирование является строкой URL-адреса.
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'format: MailboxEnums.AttachmentContentFormat;'
    return:
      type:
      - MailboxEnums.AttachmentContentFormat
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nvar item = Office.context.mailbox.item;\nvar listOfAttachments = [];\nitem.getAttachmentsAsync(callback);\n\nfunction callback(result) {\n    if (result.value.length > 0) {\n        for (i = 0 ; i < result.value.length ; i++) {\n            var options = {asyncContext: {type: result.value[i].attachmentType}};\n            getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);\n        }\n    }\n}\n\nfunction handleAttachmentsCallback(result) {\n    // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.\n    if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {\n        // Handle file attachment.\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {\n        // Handle email item attachment.\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {\n        // Handle .icalender attachment.\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {\n        // Handle cloud attachment.\n    } else {\n        // Handle attachment formats that are not supported.\n    }\n}\n```"
