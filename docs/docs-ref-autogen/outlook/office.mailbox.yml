### YamlMime:UniversalReference
ms.openlocfilehash: 463e5f54d82f1aa621429c23ad5735f22873c2a3
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458357"
items:
- uid: outlook.Office.Mailbox
  summary: >-
    Предоставляет для Microsoft Outlook и Microsoft Outlook в Интернете доступ к объектной модели надстройки Outlook.


    Пространства имен:


    - diagnostics. Предоставляет надстройке Outlook диагностические сведения.


    - item. Предоставляет методы и свойства для доступа к сообщению или встрече в надстройке Outlook.


    - userProfile. Предоставляет сведения о пользователе в надстройке Outlook.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restricted</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: Office.Mailbox
  fullName: outlook.Office.Mailbox
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.Mailbox.addHandlerAsync
  - outlook.Office.Mailbox.convertToEwsId
  - outlook.Office.Mailbox.convertToLocalClientTime
  - outlook.Office.Mailbox.convertToRestId
  - outlook.Office.Mailbox.convertToUtcClientTime
  - outlook.Office.Mailbox.diagnostics
  - outlook.Office.Mailbox.displayAppointmentForm
  - outlook.Office.Mailbox.displayMessageForm
  - outlook.Office.Mailbox.displayNewAppointmentForm
  - outlook.Office.Mailbox.displayNewMessageForm
  - outlook.Office.Mailbox.ewsUrl
  - outlook.Office.Mailbox.getCallbackTokenAsync
  - outlook.Office.Mailbox.getUserIdentityTokenAsync
  - outlook.Office.Mailbox.item
  - outlook.Office.Mailbox.makeEwsRequestAsync
  - outlook.Office.Mailbox.restUrl
  - outlook.Office.Mailbox.userProfile
- uid: outlook.Office.Mailbox.addHandlerAsync
  summary: >-
    Добавляет обработчик для поддерживаемого события.


    В настоящее время, поддерживаемые типы событий, `Office.EventType.ItemChanged` и `Office.EventType.OfficeThemeChanged` <!-- -->.


    \[[Набор API-Интерфейсов: почтовый ящик с частотой 1,5](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    Office.initialize = function (reason) {
        $(document).ready(function () {
            Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, loadNewItem, function (result) {
            if (result.status === Office.AsyncResultStatus.Failed) {
                    // Handle error
                }
            });
        });
    };


    function loadNewItem(eventArgs) {
        // Load the properties of the newly selected item
        loadProps(Office.context.mailbox.item);
    };

    ```
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: outlook.Office.Mailbox.addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (type: EventType) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Событие, которое должно вызвать обработчик.
      type:
      - Office.EventType
    - id: handler
      description: Функция для обработки событий. Функции должны принимать один параметр, который является объектом литерала. Свойство type на параметр будет соответствовать параметру eventType, переданной в addHandlerAsync.
      type:
      - '(type: EventType) => void'
    - id: options
      description: Необязательный параметр. Предоставляет возможность сохранения данных контекста любого типа, без изменений, для использования в функции обратного вызова.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Необязательный параметр. После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: outlook.Office.Mailbox.convertToEwsId
  summary: >-
    Преобразовывает идентификатор элемента из формата REST в формат EWS.


    Формат идентификаторов, извлекаемых через API REST (такие как API Почты Outlook или Microsoft Graph), отличается от формата веб-служб Exchange (EWS). Метод convertToEwsId преобразует идентификатор отформатированный REST в нужный формат для веб-служб Exchange.


    Примечание. Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API-Интерфейсов: почтовый ящик 1.3](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restricted</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>

    ####Примеры


    ```javascript

    // Get an item's ID from a REST API

    var restId = 'AAMkAGVlOTZjNTM3LW...';


    // Treat restId as coming from the v2.0 version of the Outlook Mail API

    var ewsId = Office.context.mailbox.convertToEwsId(restId, Office.MailboxEnums.RestVersion.v2_0);

    ```
  name: convertToEwsId(itemId, restVersion)
  fullName: outlook.Office.Mailbox.convertToEwsId
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToEwsId(itemId: string, restVersion: Office.MailboxEnums.RestVersion): string;'
    return:
      type:
      - string
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор элемента в формате для API-интерфейсы REST Outlook.
      type:
      - string
    - id: restVersion
      description: Значение, определяющее версию REST API для Outlook, которая используется для извлечения идентификатора элемента.
      type:
      - outlook.Office.MailboxEnums.RestVersion
- uid: outlook.Office.Mailbox.convertToLocalClientTime
  summary: >-
    Получает словарь, содержащий сведения о локальном времени клиента.


    В случае дат и времени в почтовом приложении для Outlook или Outlook Web App могут использоваться разные часовые пояса. Outlook использует часовой пояс клиентского компьютера. Outlook Web App использует часовой пояс, заданный в Центре администрирования Exchange (EAC). Значения даты и времени должны обрабатываться так, чтобы значения в пользовательском интерфейсе всегда согласовывались с часовым поясом, ожидаемым пользователем.


    Если почтовое приложение выполняется в Outlook, метод convertToLocalClientTime возвратит объект словаря со значениями, заданными для часового пояса клиентского компьютера. Если почтовое приложение выполняется в Outlook Web App, метод convertToLocalClientTime возвратит объект словаря со значениям, заданными для часового пояса в Центре администрирования Exchange.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: convertToLocalClientTime(timeValue)
  fullName: outlook.Office.Mailbox.convertToLocalClientTime
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
    return:
      type:
      - LocalClientTime
      description: ''
    parameters:
    - id: timeValue
      description: Объект Date.
      type:
      - Date
- uid: outlook.Office.Mailbox.convertToRestId
  summary: >-
    Преобразовывает идентификатор элемента в формате EWS в формат REST.


    Примечание. Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API-Интерфейсов: почтовый ящик 1.3](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restricted</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>


    Элемент извлекается с помощью веб-служб Exchange или через свойство itemId идентификаторы используйте отличная от формата, используемого в API-интерфейсы REST (например, [API почты Outlook](https://docs.microsoft.com/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations) или [Microsoft Graph](http://graph.microsoft.io/)<!-- -->. Метод convertToRestId преобразует идентификатор формата веб-служб Exchange в нужный формат для REST.

    #### <a name="examples"></a>Примеры


    ```javascript

    // Get the currently selected item's ID

    var ewsId = Office.context.mailbox.item.itemId;


    // Convert to a REST ID for the v2.0 version of the Outlook Mail API

    var restId = Office.context.mailbox.convertToRestId(ewsId, Office.MailboxEnums.RestVersion.v2_0);

    ```
  name: convertToRestId(itemId, restVersion)
  fullName: outlook.Office.Mailbox.convertToRestId
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRestId(itemId: string, restVersion: Office.MailboxEnums.RestVersion): string;'
    return:
      type:
      - string
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор элемента в формате EWS
      type:
      - string
    - id: restVersion
      description: Значение, определяющее версию REST API для Outlook, с которой будет использоваться преобразованный идентификатор.
      type:
      - outlook.Office.MailboxEnums.RestVersion
- uid: outlook.Office.Mailbox.convertToUtcClientTime
  summary: >-
    Получает объект Date из словаря, содержащего сведения о времени.


    Метод convertToUtcClientTime преобразует словарь, содержащий локальную дату и время, в объект Date с правильными значениями локальной даты и времени.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: convertToUtcClientTime(input)
  fullName: outlook.Office.Mailbox.convertToUtcClientTime
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
    return:
      type:
      - Date
      description: Объект Date со временем в формате UTC.
    parameters:
    - id: input
      description: Значение локального времени для преобразования.
      type:
      - LocalClientTime
- uid: outlook.Office.Mailbox.diagnostics
  summary: >-
    Предоставляет надстройке Outlook диагностические сведения.


    Содержит следующие элементы:


    - Имя узла (string): строку, представляющую имя ведущего приложения. Он иметь одно из следующих значений: Outlook, Mac Outlook, OutlookIOS или OutlookWebApp.


    - hostVersion (string): строку, которая представляет версию ведущего приложения или на сервере Exchange. Если надстройка почты выполняется на настольных компьютеров клиента Outlook или Outlook для iOS, свойство hostVersion Возвращает версию ведущего приложения Outlook. В Outlook Web App свойство возвращает версии сервера Exchange Server. Например, строка 15.0.468.0.


    - OWAView (MailboxEnums.OWAView или строки): enum (или строковый литерал), который представляет текущего представления Outlook Web App. Если Outlook Web App — не ведущее приложение, при получении доступа к этому свойству будет выдаваться значение undefined. Outlook Web App включает три представления (OneColumn - выводились, если узкий экрана, TwoColumns - выводились, если широкой, экрана и ThreeColumns - выводились, если ширину экрана), которые соответствуют ширине экрана и окна и число столбцов который может отображаться.


    Дополнительные сведения, в разделе [Office.Diagnostics](xref:outlook.Office.Diagnostics)<!-- -->.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: diagnostics
  fullName: outlook.Office.Mailbox.diagnostics
  langs:
  - typeScript
  type: property
  syntax:
    content: 'diagnostics: Office.Diagnostics;'
    return:
      type:
      - outlook.Office.Diagnostics
- uid: outlook.Office.Mailbox.displayAppointmentForm
  summary: >-
    Отображает имеющуюся встречу из календаря.


    Метод displayAppointmentForm открывает существующую встречу в календаре в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.


    В Outlook для Mac с помощью этого метода можно отобразить одну встречу, которая не является частью повторяющегося ряда, или основную встречу такого ряда, но не экземпляр из него, так как в Outlook для Mac невозможно получить доступ к свойствам экземпляра повторяющегося ряда (в том числе к идентификатору элемента).


    В Outlook Web App этот метод открывает указанную форму, только если текст формы содержит символы размером не более 32 КБ.


    Если указанный идентификатор элемента не определяет существующую встречу, на клиентском компьютере или устройстве открывается пустая страница, и сообщение об ошибке не возвращается.


    Примечание. Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: displayAppointmentForm(itemId)
  fullName: outlook.Office.Mailbox.displayAppointmentForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayAppointmentForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор веб-служб Exchange для существующей встречи в календаре.
      type:
      - string
- uid: outlook.Office.Mailbox.displayMessageForm
  summary: >-
    Отображает имеющееся сообщение.


    Метод displayMessageForm открывает существующее сообщение в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.


    В Outlook Web App этот метод открывает указанную форму, только если текст формы содержит символы размером не более 32 КБ.


    Если указанный идентификатор элемента не определяет существующее сообщение, окно на клиентском компьютере не открывается и сообщение об ошибке не возвращается.


    Не используйте метод displayMessageForm с параметром itemId, который представляет собой встречу. Используйте метод displayAppointmentForm, чтобы отобразить существующую встречу, а метод displayNewAppointmentForm — для отображения формы создания встречи.


    Примечание. Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  name: displayMessageForm(itemId)
  fullName: outlook.Office.Mailbox.displayMessageForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayMessageForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор веб-служб Exchange для существующего сообщения.
      type:
      - string
- uid: outlook.Office.Mailbox.displayNewAppointmentForm
  summary: >-
    Отображает форму для создания новой встречи в календаре.


    Метод displayNewAppointmentForm открывает форму, которая позволяет пользователю создать встречу или собрание. Если параметры заданы, поля формы встречи автоматически заполняются значениями этих параметров.


    В Outlook Web App и Outlook Web App для устройств этот метод всегда отображает форму с полем участников. Если вы не укажете участников в качестве входных аргументов, метод отображает форму с кнопкой Сохранить. Если вы укажете участников, форма будет включать участников и кнопку Отправить.


    В расширенном клиенте Outlook и Outlook RT Если указать любой человек или ресурсы в requiredAttendees, optionalAttendees или параметр ресурсы, этот метод отображает форму собрания с кнопкой "Отправить". Если не указать получателей, этот метод отображает форме встречи с сохранением &amp; кнопку Закрыть.


    Если параметры превышают указанные ограничения размера или если указано неизвестное имя параметра, вызывается исключение.


    Примечание. Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Read</td></tr></table>

    ####Примеры


    ```javascript

    var start = new Date();

    var end = new Date();

    end.setHours(start.getHours() + 1);


    Office.context.mailbox.displayNewAppointmentForm(

    {
        requiredAttendees: ['bob@contoso.com'],
        optionalAttendees: ['sam@contoso.com'],
        start: start,
        end: end,
        location: 'Home',
        resources: ['projector@contoso.com'],
        subject: 'meeting',
        body: 'Hello World!'
    });

    ```
  name: displayNewAppointmentForm(parameters)
  fullName: outlook.Office.Mailbox.displayNewAppointmentForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: parameters
      description: AppointmentForm описание новой встречи. Все свойства являются необязательными.
      type:
      - AppointmentForm
- uid: outlook.Office.Mailbox.displayNewMessageForm
  summary: >-
    Отображает форму для создания сообщения.


    Метод displayNewMessageForm открывает форму, позволяющую пользователю создать новое сообщение. Если параметры заданы, поля формы сообщения автоматически заполняются их содержимым.


    Если параметры превышают указанные ограничения размера или если указано неизвестное имя параметра, вызывается исключение.


    \[[Набор API-Интерфейсов: почтовый ящик 1.6](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Read</td></tr></table>

    ####Примеры


    ```javascript

    Office.context.mailbox.displayNewMessageForm(

    {
        toRecipients: Office.context.mailbox.item.to, // Copy the To line from current item
        ccRecipients: ['sam@contoso.com'],
        subject: 'Outlook add-ins are cool!',
        htmlBody: 'Hello <b>World</b>!<br/><img src="cid:image.png"></i>',
        attachments: [
        {
            type: 'file',
            name: 'image.png',
            url: 'http://contoso.com/image.png',
            isInline: true
        }
        ]
    });

    ```
  name: displayNewMessageForm(parameters)
  fullName: outlook.Office.Mailbox.displayNewMessageForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayNewMessageForm(parameters: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: parameters
      description: >-
        Словарь, содержащий все значения следует реализовать в пользователя в форме создания. Все параметры являются необязательными.


        toRecipients: массив строк, содержащий адреса электронной почты или массив, содержащий объект [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) для каждого из получателей в строке. Массив может включать не более 100 записей.


        ccRecipients: массив строк, содержащий адреса электронной почты или массив, содержащий объект [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) для каждого из получателей в строке копия. Массив может включать не более 100 записей.


        bccRecipients: массив строк, содержащий адреса электронной почты или массив, содержащий объект [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) для каждого из получателей в строке скрытой копии. Массив может включать не более 100 записей.


        Тема: строка, содержащая тему сообщения. Максимальное количество символов в строке — 255.


        параметр htmlBody: для HTML-текста сообщения. Максимальный размер содержимого сообщения — 32 КБ.


        вложения: массив объектов JSON, файл или элемент вложения.


        Attachments.Type: Указывает тип вложения. Должен быть файла для файла вложения или элемента для вложения элемента.


        Attachments.Name: строка, содержащая название вложения, до 255 знаков.


        Attachments.URL: использовать, только если установлен тип файлов. Универсальный код ресурса (URI) расположения файла.


        attachments.isInline: использовать, только если установлен тип файлов. Если значение true, указывает, что вложения будут показаны встроенные в теле сообщения и не должно отображаться в списке вложения.


        attachments.itemId: использовать, только если установлен тип для элемента. Идентификатор элемента веб-служб Exchange существующего сообщения электронной почты, которые необходимо присоединить к новое сообщение. Это строка длиной до 100 символов.
      type:
      - any
- uid: outlook.Office.Mailbox.ewsUrl
  summary: >-
    Получает URL-адрес конечной точки веб-служб Exchange (EWS) для этой учетной записи электронной почты. Только в режиме чтения.


    Ваше приложение должно иметь разрешение ReadItem, указанное в его манифесте вызов члена ewsUrl в режиме чтения.


    В режиме, необходимо вызвать метод saveAsync, прежде чем использовать член ewsUrl сообщения. Ваше приложение должно иметь разрешения ReadWriteItem для вызова метода saveAsync.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>


    Значение ewsUrl может использоваться с удаленной службе выполнять вызовы веб-служб Exchange для почтового ящика пользователя. Например, можно создать удаленную службу для [получения вложений из выбранного элемента](https://docs.microsoft.com/outlook/add-ins/get-attachments-of-an-outlook-item)<!-- -->.


    Примечание. Этот элемент не поддерживается в Outlook для iOS или Outlook для Android.
  name: ewsUrl
  fullName: outlook.Office.Mailbox.ewsUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ewsUrl: string;'
    return:
      type:
      - string
- uid: outlook.Office.Mailbox.getCallbackTokenAsync
  summary: >-
    Возвращает строку, содержащую маркер, который используется для вызова интерфейсов REST API или веб-служб Exchange.


    Метод getCallbackTokenAsync совершает асинхронный вызов, чтобы получить непрозрачный маркер с сервера Exchange Server, на котором размещен почтовый ящик пользователя. Время существования маркера обратного вызова составляет 5 минут.


    *Маркеры REST*


    При запросе маркер REST (options.isRest = true), полученный маркер не будет работать для проверки подлинности вызовов веб-служб Exchange. Маркер будет ограничен в область будет доступ только для чтения для текущего элемента и его вложения оговорено надстройки разрешение на ReadWriteMailbox в его манифесте. Если разрешение ReadWriteMailbox указан, результирующий маркер предоставляет доступ на чтение/запись почты, календарь и контакты, включая возможность отправлять почту.


    Надстройки следует использовать свойство restUrl для определения правильный URL-адрес для использования при выполнении вызовов API-Интерфейс REST.


    *Маркеры EWS*


    При запросе маркера веб-служб Exchange (options.isRest = false), полученный маркер не будет работать для проверки подлинности вызовов API-Интерфейс REST. Маркер будет ограничен в области, чтобы доступ к текущего элемента.


    Надстройки следует использовать свойство ewsUrl для определения правильный URL-адрес для использования при выполнении вызовов веб-служб Exchange.


    Примечание. Рекомендуем сделать так, чтобы по мере возможности надстройки использовали интерфейсы REST API, а не веб-службы Exchange.


    \[[Набор API-Интерфейсов: почтовый ящик с частотой 1,5](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание и чтение</td></tr></table>


    В дополнение к подписи этот метод имеет следующие подписи:


    `getCallbackTokenAsync(callback: (result: AsyncResult<string>) => void): void;`


    `getCallbackTokenAsync(callback: (result: AsyncResult<string>) => void, userContext?: any): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    function getCallbackToken() {
        var options = {
            isRest: true,
            asyncContext: { message: 'Hello World!' }
        };

        Office.context.mailbox.getCallbackTokenAsync(options, cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```

    ```javascript

    function getCallbackToken() {
        Office.context.mailbox.getCallbackTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getCallbackTokenAsync(options, callback)
  fullName: outlook.Office.Mailbox.getCallbackTokenAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCallbackTokenAsync(options: Office.AsyncContextOptions & { isRest?: boolean }, callback: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. isRest: Определяет, если маркер, предоставленный будет использоваться для API-интерфейсы REST Outlook или веб-служб Exchange. Значение по умолчанию — False. asyncContext: любые данные о состоянии, которое передается для асинхронного метода.'
      type:
      - 'Office.AsyncContextOptions & { isRest?: boolean }'
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. Маркер указывается в виде строки в свойстве asyncResult.value.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: outlook.Office.Mailbox.getUserIdentityTokenAsync
  summary: >-
    Получает маркер, идентифицирующий пользователя и надстройку Office.


    Маркер указывается в виде строки в свойстве asyncResult.value.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание и чтение</td></tr></table>


    Метод getUserIdentityTokenAsync возвращает маркер, который можно использовать для идентификации и [проверки подлинности надстройки и пользователя с помощью системы сторонних производителей](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->.

    #### <a name="examples"></a>Примеры


    ```javascript

    function getIdentityToken() {
        Office.context.mailbox.getUserIdentityTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getUserIdentityTokenAsync(callback, userContext)
  fullName: outlook.Office.Mailbox.getUserIdentityTokenAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUserIdentityTokenAsync(callback: (result: AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. Маркер указывается в виде строки в свойстве asyncResult.value.
      type:
      - '(result: AsyncResult<string>) => void'
    - id: userContext
      description: Необязательный параметр. Данные о состоянии, передаваемые в асинхронный метод.\|
      type:
      - any
- uid: outlook.Office.Mailbox.item
  summary: 'Элемент почтового ящика. В зависимости от контекста, в котором надстройки открывается элемент может быть любого количества типов. Если вы хотите просмотреть IntelliSense для определенного типа, необходимо привести этот элемент, чтобы одно из следующих действий: `ItemCompose` <!-- -->, `ItemRead` <!-- -->, `MessageCompose` <!-- -->, `MessageRead` <!-- -->, `AppointmentCompose` <!-- -->,`AppointmentRead`'
  name: item
  fullName: outlook.Office.Mailbox.item
  langs:
  - typeScript
  type: property
  syntax:
    content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
    return:
      type:
      - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
- uid: outlook.Office.Mailbox.makeEwsRequestAsync
  summary: >-
    Выполняет асинхронный запрос к службе веб-служб Exchange (EWS) на сервере Exchange, на котором размещен почтовый ящик пользователя.


    В таких случаях надстроек следует использовать API-интерфейсы REST к почтового ящика пользователя.


    Метод makeEwsRequestAsync отправляет запрос EWS от имени надстройки в Exchange.


    С помощью метода makeEwsRequestAsync невозможно запрашивать элементы, связанные с папкой.


    В запросе XML должна быть указана кодировка UTF-8. &lt;версия ?xml = «1.0» кодировка = «utf-8»?&gt;


    Добавьте в должен иметь разрешение ReadWriteMailbox использовать метод makeEwsRequestAsync. Сведения об использовании ReadWriteMailbox разрешений и операций веб-служб Exchange, которые могут вызывать с помощью метода makeEwsRequestAsync содержатся в разделе [разрешения укажите для надстройки доступ к почте для почтового ящика пользователя](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->.


    Результат XML вызова EWS указывается в виде строки в свойстве asyncResult.value. Если размер результата превышает 1 МБ, возвращается сообщение об ошибке.


    Примечание: Этот метод не поддерживается в следующих сценариях:


    - В Outlook для операций ввода-вывода или Outlook для Android.


    - Когда надстройки загружается в почтовом ящике Gmail.


    Примечание: Администратор сервера должен установить для параметра OAuthAuthentication значение true в каталоге Client Access Server EWS, чтобы метод makeEwsRequestAsync мог выполнять запросы EWS.


    *Различия версий*


    При использовании метода makeEwsRequestAsync в почтовых приложениях, которые выполняются в Outlook версии ниже 15.0.4535.1004, следует указывать кодировку ISO-8859-1.


    `<?xml version="1.0" encoding="iso-8859-1"?>`


    Значение кодировки не нужно указывать, если почтовое приложение выполняется в Outlook в Интернете. Чтобы определить, выполняется ли приложение в Outlook или Outlook в Интернете, используйте свойство mailbox.diagnostics.hostName. Используемую версию Outlook можно определить с помощью свойства mailbox.diagnostics.hostVersion.


    \[[Набор API-Интерфейсов: почтовый ящик 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteMailbox</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание и чтение</td></tr></table>

    ####Примеры


    ```javascript

    function getSubjectRequest(id) {
        // Return a GetItem operation request for the subject of the specified item.
        var request =
            '<?xml version="1.0" encoding="utf-8"?>' +
            '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' +
            '               xmlns:xsd="http://www.w3.org/2001/XMLSchema"' +
            '               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"' +
            '               xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types">' +
            '  <soap:Header>' +
            '    <RequestServerVersion Version="Exchange2013" xmlns="http://schemas.microsoft.com/exchange/services/2006/types" soap:mustUnderstand="0" />' +
            '  </soap:Header>' +
            '  <soap:Body>' +
            '    <GetItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">' +
            '      <ItemShape>' +
            '        <t:BaseShape>IdOnly</t:BaseShape>' +
            '        <t:AdditionalProperties>' +
            '            <t:FieldURI FieldURI="item:Subject"/>' +
            '        </t:AdditionalProperties>' +
            '      </ItemShape>' +
            '      <ItemIds><t:ItemId Id="' + id + '"/></ItemIds>' +
            '    </GetItem>' +
            '  </soap:Body>' +
            '</soap:Envelope>';

        return request;
    }


    function sendRequest() {
        // Create a local variable that contains the mailbox.
        Office.context.mailbox.makeEwsRequestAsync(
            getSubjectRequest(mailbox.item.itemId), callback);
    }


    function callback(asyncResult)  {
        var result = asyncResult.value;
        var context = asyncResult.asyncContext;

        // Process the returned response here.
    }

    ```
  name: makeEwsRequestAsync(data, callback, userContext)
  fullName: outlook.Office.Mailbox.makeEwsRequestAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'makeEwsRequestAsync(data: any, callback: (result: AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Запрос EWS.
      type:
      - any
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. `value` Свойства результата приведен XML-код запроса веб-служб Exchange, в виде строки. Если результат превышает 1 МБ по размеру, возвращается сообщение об ошибке.
      type:
      - '(result: AsyncResult<string>) => void'
    - id: userContext
      description: Необязательный параметр. Данные о состоянии, передаваемые в асинхронный метод.
      type:
      - any
- uid: outlook.Office.Mailbox.restUrl
  summary: >-
    Возвращает URL-адрес конечной точки REST для этой учетной записи электронной почты.


    Ваше приложение должно иметь разрешение ReadItem, указанное в его манифесте вызов члена restUrl в режиме чтения.


    В режиме, необходимо вызвать метод saveAsync, прежде чем использовать член restUrl сообщения. Ваше приложение должно иметь разрешения ReadWriteItem для вызова метода saveAsync.


    \[[Набор API-Интерфейсов: почтовый ящик с частотой 1,5](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>


    Значение restUrl может использоваться для выполнения вызовов [API -Интерфейс REST](https://docs.microsoft.com/outlook/rest/) для почтового ящика пользователя.
  name: restUrl
  fullName: outlook.Office.Mailbox.restUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'restUrl: string;'
    return:
      type:
      - string
- uid: outlook.Office.Mailbox.userProfile
  summary: >-
    Сведения о пользователе, связанный с почтовым ящиком. Включает тип своей учетной записи, отображает имя, адресов электронной почты и часового пояса.


    Дополнительные сведения, в разделе [Office.UserProfile](xref:outlook.Office.UserProfile)
  name: userProfile
  fullName: outlook.Office.Mailbox.userProfile
  langs:
  - typeScript
  type: property
  syntax:
    content: 'userProfile: Office.UserProfile;'
    return:
      type:
      - outlook.Office.UserProfile
