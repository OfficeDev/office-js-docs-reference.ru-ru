### YamlMime:UniversalReference
ms.openlocfilehash: 8f991d5de45173caa82eae89577981b2293ddf0d
ms.sourcegitcommit: 4bbd18c863a4140ad456b859f9c0309e153e10b2
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/02/2018
ms.locfileid: "25915943"
items:
- uid: outlook.Office.InternetHeaders
  summary: >-
    Объект InternetHeaders представляет свойства, которые будут сохранены после элемента покидает Exchange и преобразуются в сообщения MIME. Эти свойства сохраняются как x заголовков в сообщения MIME.


    InternetHeaders хранятся в виде пар "ключ значение" на основе каждого элемента.


    \[[Набор API-Интерфейсов: Просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>
  isPreview: true
  name: Office.InternetHeaders
  fullName: outlook.Office.InternetHeaders
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.InternetHeaders.getAsync
  - outlook.Office.InternetHeaders.removeAsync
  - outlook.Office.InternetHeaders.setAsync
- uid: outlook.Office.InternetHeaders.getAsync
  summary: >-
    Получает массив имен заголовков Интернета, этот метод возвращает словарь, содержащий эти заголовках Интернета и их значения. Если надстройка запрашивает x заголовка, который не поддерживается, x заголовка не будет возвращен в результатах.


    \[[Набор API-Интерфейсов: Просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: "<table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>\n\n<tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr></table>\n\nВ дополнение к подписи этот метод также имеет следующую подпись:\n\n`getAsync(names: string[], callback: (result: AsyncResult<Office.InternetHeaders>) => void): void;`\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nOffice.context.mailbox.item.internetHeaders.getAsync([\"header1\", \"header2\"], callback); \n\nfunction callback(asyncResult) { \n    var dictionary = asyncResult.value; \n    var header1_value = dictionary[\"header1\"]; \n}\n```"
  isPreview: true
  name: getAsync(names, options, callback)
  fullName: outlook.Office.InternetHeaders.getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.InternetHeaders>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: names
      description: Имена в заголовках Интернета которого требуется получить.
      type:
      - string[]
    - id: options
      description: 'Необязательно указывать. Литерал объекта, который содержит один или несколько из следующих свойств: asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Необязательно указывать. После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с одним параметра asyncResult, который является объектом Office.AsyncResult.
      type:
      - '(result: AsyncResult<Office.InternetHeaders>) => void'
- uid: outlook.Office.InternetHeaders.removeAsync
  summary: >-
    Учитывая массив имен заголовков Интернета, этот метод удаляет из коллекции заголовков internet указанного заголовки.


    \[[Набор API-Интерфейсов: Просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>


    В дополнение к подписи этот метод также имеет следующую подпись:


    `removeAsync(names: string[], callback: (result: AsyncResult<Office.Body>) => void): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    Office.context.mailbox.item.internetHeaders.removeAsync(["header1", "header2"]);

    ```
  isPreview: true
  name: removeAsync(names, options, callback)
  fullName: outlook.Office.InternetHeaders.removeAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.InternetHeaders>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: names
      description: Имена в заголовках Интернета требуется удалить.
      type:
      - string[]
    - id: options
      description: 'Необязательно указывать. Литерал объекта, который содержит один или несколько из следующих свойств: asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Необязательно указывать. После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с одним параметра asyncResult, который является объектом Office.AsyncResult.
      type:
      - '(result: AsyncResult<Office.InternetHeaders>) => void'
- uid: outlook.Office.InternetHeaders.setAsync
  summary: >-
    Устанавливает указанный заголовках Интернета для указанного значения.


    Метод setAsync создает новый заголовок, если указанный заголовок еще не существует; в противном случае существующее значение заменяется новое значение.


    \[[Набор API-Интерфейсов: Просмотр почтовых ящиков](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимые режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    В дополнение к подписи этот метод также имеет следующие цифровые подписи.


    `setAsync(headers: string, callback: (result: AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    Office.context.mailbox.item.internetHeaders.setAsync({"header1": "value1", "header2": "value2"});

    ```
  isPreview: true
  name: setAsync(headers, options, callback)
  fullName: outlook.Office.InternetHeaders.setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(headers: Object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: headers
      description: Имена и соответствующие значения заголовков должно быть задано. Должна быть объекта dictionary с ключами сейчас имена заголовках Интернета и значения, которые значения в заголовках Интернета.
      type:
      - Object
    - id: options
      description: 'Необязательно указывать. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Необязательно указывать. После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. Все обнаруженные ошибки будут предоставляться в свойство asyncResult.error.
      type:
      - '(result: AsyncResult<void>) => void'
