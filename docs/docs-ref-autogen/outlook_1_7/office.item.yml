### YamlMime:UniversalReference
ms.openlocfilehash: bab25cd7f9bf03548b2adaea1fb7921018933f57
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055460"
items:
- uid: Outlook_1_7.Office.Item
  summary: >-
    <span data-ttu-id="d6973-101">Пространство имен элемента используется для доступа к выбранному в данный момент сообщению, приглашению на собрание или встрече.</span><span class="sxs-lookup"><span data-stu-id="d6973-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="d6973-102">Тип элемента можно определить с помощью `itemType` свойства.</span><span class="sxs-lookup"><span data-stu-id="d6973-102">You can determine the type of the item by using the `itemType` property.</span></span>


    <span data-ttu-id="d6973-103">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-104">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-105">С ограничениями</span><span class="sxs-lookup"><span data-stu-id="d6973-105">Restricted</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-106">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-107">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-107">Compose or read</span></span></td></tr></table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.Item.addHandlerAsync
  - Outlook_1_7.Office.Item.addHandlerAsync_1
  - Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync_1
  - Outlook_1_7.Office.Item.body
  - Outlook_1_7.Office.Item.itemType
  - Outlook_1_7.Office.Item.notificationMessages
  - Outlook_1_7.Office.Item.seriesId
- uid: Outlook_1_7.Office.Item.addHandlerAsync
  summary: >-
    <span data-ttu-id="d6973-108">Добавляет обработчик для поддерживаемого события.</span><span class="sxs-lookup"><span data-stu-id="d6973-108">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="d6973-109">В настоящее время поддерживаются типы `Office.EventType.AppointmentTimeChanged` <!-- -->событий `Office.EventType.RecipientsChanged` <!-- -->, и `Office.EventType.RecurrenceChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6973-109">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="d6973-110">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-110">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-111">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-111">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-112">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-112">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-113">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-113">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-114">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-114">Compose or read</span></span></td></tr></table>


    <span data-ttu-id="d6973-115">Кроме этой подписи, метод также имеет следующую сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="d6973-115">In addition to this signature, the method also has the following signature:</span></span>


    `addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="d6973-116">Событие, которое должно вызвать обработчик.</span><span class="sxs-lookup"><span data-stu-id="d6973-116">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="d6973-117">Функция для обработки события.</span><span class="sxs-lookup"><span data-stu-id="d6973-117">The function to handle the event.</span></span> <span data-ttu-id="d6973-118">Функция должна принимать один параметр, который является литералом объекта.</span><span class="sxs-lookup"><span data-stu-id="d6973-118">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="d6973-119">Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="d6973-119">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="d6973-120">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-120">Optional.</span></span> <span data-ttu-id="d6973-121">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="d6973-121">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="d6973-122">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6973-122">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="d6973-123">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-123">Optional.</span></span> <span data-ttu-id="d6973-124">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="d6973-124">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="d6973-125">Добавляет обработчик для поддерживаемого события.</span><span class="sxs-lookup"><span data-stu-id="d6973-125">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="d6973-126">В настоящее время поддерживаются типы `Office.EventType.AppointmentTimeChanged` <!-- -->событий `Office.EventType.RecipientsChanged` <!-- -->, и `Office.EventType.RecurrenceChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6973-126">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="d6973-127">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-127">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-128">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-128">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-129">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-129">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-130">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-130">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-131">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-131">Compose or read</span></span></td></tr></table><span data-ttu-id="d6973-132">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="d6973-132">

    #### Examples</span></span>


    ```javascript

    function myHandlerFunction(eventarg) {
        if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
            var attachment = eventarg.attachmentDetails;
            console.log("Event Fired and Attachment Added!");
            getAttachmentContentAsync(attachment.id, options, callback);
        }
    }


    Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="d6973-133">Событие, которое должно вызвать обработчик.</span><span class="sxs-lookup"><span data-stu-id="d6973-133">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="d6973-134">Функция для обработки события.</span><span class="sxs-lookup"><span data-stu-id="d6973-134">The function to handle the event.</span></span> <span data-ttu-id="d6973-135">Функция должна принимать один параметр, который является литералом объекта.</span><span class="sxs-lookup"><span data-stu-id="d6973-135">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="d6973-136">Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="d6973-136">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="d6973-137">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-137">Optional.</span></span> <span data-ttu-id="d6973-138">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="d6973-138">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="d6973-139">Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="d6973-139">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="d6973-p107">Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента. Этот метод возвращает объект CustomProperties при обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, характерным для текущего элемента и текущей надстройки. Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.</span><span class="sxs-lookup"><span data-stu-id="d6973-p107">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="d6973-p108">Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult.value. Этот объект позволяет получить, задать и удалить настраиваемые свойства из элемента, а также сохранить изменения, внесенные в настраиваемое свойство, на сервере.</span><span class="sxs-lookup"><span data-stu-id="d6973-p108">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="d6973-145">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-145">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-146">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-146">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-147">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-147">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-148">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-148">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-149">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-149">Compose or read</span></span></td></tr></table><span data-ttu-id="d6973-150">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="d6973-150">

    #### Examples</span></span>


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="d6973-151">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="d6973-151">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="d6973-152">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-152">Optional.</span></span> <span data-ttu-id="d6973-153">Разработчики могут указать любой объект, к которому необходимо получить доступ, в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6973-153">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="d6973-154">Доступ к этому объекту можно получить с помощью свойства asyncResult. asyncContext в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6973-154">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_7.Office.Item.removeHandlerAsync
  summary: >-
    <span data-ttu-id="d6973-155">Удаляет обработчиков для поддерживаемого типа события.</span><span class="sxs-lookup"><span data-stu-id="d6973-155">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="d6973-156">В настоящее время поддерживаются типы `Office.EventType.AppointmentTimeChanged` <!-- -->событий `Office.EventType.RecipientsChanged` <!-- -->, и `Office.EventType.RecurrenceChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6973-156">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="d6973-157">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-157">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-158">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-158">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-159">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-159">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-160">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-160">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-161">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-161">Compose or read</span></span></td></tr></table>


    <span data-ttu-id="d6973-162">Кроме этой подписи, метод также имеет следующую сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="d6973-162">In addition to this signature, the method also has the following signature:</span></span>


    `removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="d6973-163">Событие, которое должно отменить обработчик.</span><span class="sxs-lookup"><span data-stu-id="d6973-163">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="d6973-164">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-164">Optional.</span></span> <span data-ttu-id="d6973-165">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="d6973-165">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="d6973-166">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="d6973-166">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="d6973-167">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-167">Optional.</span></span> <span data-ttu-id="d6973-168">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="d6973-168">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="d6973-169">Удаляет обработчиков для поддерживаемого типа события.</span><span class="sxs-lookup"><span data-stu-id="d6973-169">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="d6973-170">В настоящее время поддерживаются типы `Office.EventType.AppointmentTimeChanged` <!-- -->событий `Office.EventType.RecipientsChanged` <!-- -->, и `Office.EventType.RecurrenceChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6973-170">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="d6973-171">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-171">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-172">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-172">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-173">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-173">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-174">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-174">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-175">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-175">Compose or read</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="d6973-176">Событие, которое должно отменить обработчик.</span><span class="sxs-lookup"><span data-stu-id="d6973-176">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="d6973-177">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="d6973-177">Optional.</span></span> <span data-ttu-id="d6973-178">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="d6973-178">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.body
  summary: >-
    <span data-ttu-id="d6973-179">Получает объект, предоставляющий методы для работы с основным текстом элемента.</span><span class="sxs-lookup"><span data-stu-id="d6973-179">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="d6973-180">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-180">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-181">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-181">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-182">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-182">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-183">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-183">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-184">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-184">Compose or read</span></span></td></tr></table><span data-ttu-id="d6973-185">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="d6973-185">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_7.Office.Item.itemType
  summary: >-
    <span data-ttu-id="d6973-186">Получает тип элемента, который представляет экземпляр.</span><span class="sxs-lookup"><span data-stu-id="d6973-186">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="d6973-187">Свойство itemType возвращает одно из значений перечисления ItemType, которое указывает, является ли экземпляр объекта item сообщением или собранием.</span><span class="sxs-lookup"><span data-stu-id="d6973-187">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="d6973-188">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-188">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-189">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-189">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-190">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-190">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-191">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-191">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-192">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-192">Compose or read</span></span></td></tr></table><span data-ttu-id="d6973-193">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="d6973-193">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_7.Office.Item.notificationMessages
  summary: >-
    <span data-ttu-id="d6973-194">Получает сообщения уведомления для элемента.</span><span class="sxs-lookup"><span data-stu-id="d6973-194">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="d6973-195">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-195">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="d6973-196">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="d6973-196">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="d6973-197">ReadItem</span><span class="sxs-lookup"><span data-stu-id="d6973-197">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="d6973-198">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="d6973-198">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="d6973-199">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="d6973-199">Compose or read</span></span></td></tr></table><span data-ttu-id="d6973-200">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="d6973-200">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_7.Office.Item.seriesId
  summary: >-
    <span data-ttu-id="d6973-201">Получает идентификатор серии, к которой относится экземпляр.</span><span class="sxs-lookup"><span data-stu-id="d6973-201">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="d6973-202">В OWA и Outlook seriesId возвращает идентификатор веб-служб Exchange (EWS) родительского элемента (ряда), к которому принадлежит этот элемент.</span><span class="sxs-lookup"><span data-stu-id="d6973-202">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="d6973-203">Однако в iOS и Android seriesId возвращает идентификатор REST родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="d6973-203">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="d6973-204">**Note**: идентификатор, возвращаемый свойством seriesId, совпадает с идентификатором элемента веб-служб Exchange.</span><span class="sxs-lookup"><span data-stu-id="d6973-204">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="d6973-205">Свойство seriesId не совпадает с идентификаторами Outlook, используемыми в REST API Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6973-205">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="d6973-206">Прежде чем совершать вызовы REST API, используя это значение, его необходимо преобразовать с помощью Office.context.mailbox.convertToRestId.</span><span class="sxs-lookup"><span data-stu-id="d6973-206">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="d6973-207">Дополнительные сведения см<!-- -->. в статье [Использование REST API Outlook из надстройки Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api).</span><span class="sxs-lookup"><span data-stu-id="d6973-207">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span></span>


    <span data-ttu-id="d6973-208">Свойство seriesId возвращает значение NULL для элементов, не имеющих родительских элементов, таких как отдельные встречи, элементы ряда или приглашения на собрание, и возвращает значение undefine для любых других элементов, которые не являются приглашениями на собрания.</span><span class="sxs-lookup"><span data-stu-id="d6973-208">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="d6973-209">\[[Набор API: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6973-209">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table><tr><td>[<span data-ttu-id=\"d6973-210\">Минимальный уровень разрешений</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6973-210\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"d6973-211\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6973-211\">ReadItem</span></span></td></tr>\n\n<tr><td>[<span data-ttu-id=\"d6973-212\">Применимый режим Outlook</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6973-212\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"d6973-213\">Создание или чтение</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6973-213\">Compose or read</span></span></td></tr></table><span data-ttu-id=\"d6973-214\">\n####Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6973-214\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
