### YamlMime:UniversalReference
items:
  - uid: word.Word.Section
    summary: |-
      <span data-ttu-id="59180-101">Представляет раздел в документе Word.</span><span class="sxs-lookup"><span data-stu-id="59180-101">Represents a section in a Word document.</span></span>

      <span data-ttu-id="59180-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Section
    fullName: Word.Section
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.Section.body
      - word.Word.Section.context
      - word.Word.Section.getFooter
      - word.Word.Section.getFooter_1
      - word.Word.Section.getHeader
      - word.Word.Section.getHeader_1
      - word.Word.Section.load
      - word.Word.Section.load_1
      - word.Word.Section.load_2
      - word.Word.Section.set
      - word.Word.Section.set_1
      - word.Word.Section.toJSON
      - word.Word.Section.track
      - word.Word.Section.untrack
  - uid: word.Word.Section.body
    summary: |-
      <span data-ttu-id="59180-103">Возвращает объект Body раздела.</span><span class="sxs-lookup"><span data-stu-id="59180-103">Gets the body object of the section.</span></span> <span data-ttu-id="59180-104">Сюда не входят метаданные верхнего и нижнего колонтитулов, а также другие метаданные разделов.</span><span class="sxs-lookup"><span data-stu-id="59180-104">This does not include the header/footer and other section metadata.</span></span> <span data-ttu-id="59180-105">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="59180-105">Read-only.</span></span>

      <span data-ttu-id="59180-106">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-106">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly body: Word.Body;'
      return:
        type:
          - word.Word.Body
  - uid: word.Word.Section.context
    summary: '<span data-ttu-id="59180-107">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="59180-107">The request context associated with the object.</span></span> <span data-ttu-id="59180-108">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="59180-108">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.Section.getFooter
    summary: |-
      <span data-ttu-id="59180-109">Возвращает один из нижних колонтитулов раздела.</span><span class="sxs-lookup"><span data-stu-id="59180-109">Gets one of the section's footers.</span></span>

      <span data-ttu-id="59180-110">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFooter(type)
    fullName: getFooter(type)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFooter(type: Word.HeaderFooterType): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59180-111">Примеры</span><span class="sxs-lookup"><span data-stu-id="59180-111">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            context.document.sections.getFirst().getFooter("Primary")
              .insertParagraph("This is a footer", "End");

            await context.sync();
          });
          ```
      parameters:
        - id: type
          description: '<span data-ttu-id="59180-112">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="59180-112">Required.</span></span> <span data-ttu-id="59180-113">Тип нижнего колонтитула, который необходимо возвратить.</span><span class="sxs-lookup"><span data-stu-id="59180-113">The type of footer to return.</span></span> <span data-ttu-id="59180-114">Это значение может быть: "Primary", "FirstPage" или "Евенпажес".</span><span class="sxs-lookup"><span data-stu-id="59180-114">This value can be: ''Primary'', ''FirstPage'', or ''EvenPages''.</span></span>'
          type:
            - word.Word.HeaderFooterType
  - uid: word.Word.Section.getFooter_1
    summary: |-
      <span data-ttu-id="59180-115">Возвращает один из нижних колонтитулов раздела.</span><span class="sxs-lookup"><span data-stu-id="59180-115">Gets one of the section's footers.</span></span>

      <span data-ttu-id="59180-116">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFooter(typeString)
    fullName: getFooter(typeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFooter(typeString: "Primary" | "FirstPage" | "EvenPages"): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59180-117">Примеры</span><span class="sxs-lookup"><span data-stu-id="59180-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy sectionsCollection object.
              var mySections = context.document.sections;
              
              // Queue a commmand to load the sections.
              context.load(mySections, 'body/style');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  // Create a proxy object the primary footer of the first section. 
                  // Note that the footer is a body object.
                  var myFooter = mySections.items[0].getFooter("primary");
                  
                  // Queue a command to insert text at the end of the footer.
                  myFooter.insertText("This is a footer.", Word.InsertLocation.end);
                  
                  // Queue a command to wrap the header in a content control.
                  myFooter.insertContentControl();
                                        
                  // Synchronize the document state by executing the queued commands, 
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log("Added a footer to the first section.");
                  });                    
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: typeString
          description: '<span data-ttu-id="59180-118">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="59180-118">Required.</span></span> <span data-ttu-id="59180-119">Тип нижнего колонтитула, который необходимо возвратить.</span><span class="sxs-lookup"><span data-stu-id="59180-119">The type of footer to return.</span></span> <span data-ttu-id="59180-120">Это значение может быть: "Primary", "FirstPage" или "Евенпажес".</span><span class="sxs-lookup"><span data-stu-id="59180-120">This value can be: ''Primary'', ''FirstPage'', or ''EvenPages''.</span></span>'
          type:
            - '"Primary" | "FirstPage" | "EvenPages"'
  - uid: word.Word.Section.getHeader
    summary: |-
      <span data-ttu-id="59180-121">Возвращает один из верхних колонтитулов раздела.</span><span class="sxs-lookup"><span data-stu-id="59180-121">Gets one of the section's headers.</span></span>

      <span data-ttu-id="59180-122">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-122">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHeader(type)
    fullName: getHeader(type)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeader(type: Word.HeaderFooterType): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59180-123">Примеры</span><span class="sxs-lookup"><span data-stu-id="59180-123">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            context.document.sections.getFirst().getHeader("Primary")
              .insertParagraph("This is a header", "End");

            await context.sync();
          });
          ```
      parameters:
        - id: type
          description: '<span data-ttu-id="59180-124">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="59180-124">Required.</span></span> <span data-ttu-id="59180-125">Тип колонтитула, который необходимо возвратить.</span><span class="sxs-lookup"><span data-stu-id="59180-125">The type of header to return.</span></span> <span data-ttu-id="59180-126">Это значение может быть: "Primary", "FirstPage" или "Евенпажес".</span><span class="sxs-lookup"><span data-stu-id="59180-126">This value can be: ''Primary'', ''FirstPage'', or ''EvenPages''.</span></span>'
          type:
            - word.Word.HeaderFooterType
  - uid: word.Word.Section.getHeader_1
    summary: |-
      <span data-ttu-id="59180-127">Возвращает один из верхних колонтитулов раздела.</span><span class="sxs-lookup"><span data-stu-id="59180-127">Gets one of the section's headers.</span></span>

      <span data-ttu-id="59180-128">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59180-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHeader(typeString)
    fullName: getHeader(typeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeader(typeString: "Primary" | "FirstPage" | "EvenPages"): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59180-129">Примеры</span><span class="sxs-lookup"><span data-stu-id="59180-129">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy sectionsCollection object.
              var mySections = context.document.sections;
              
              // Queue a commmand to load the sections.
              context.load(mySections, 'body/style');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  // Create a proxy object the primary header of the first section. 
                  // Note that the header is a body object.
                  var myHeader = mySections.items[0].getHeader("primary");
                  
                  // Queue a command to insert text at the end of the header.
                  myHeader.insertText("This is a header.", Word.InsertLocation.end);
                  
                  // Queue a command to wrap the header in a content control.
                  myHeader.insertContentControl();
                                        
                  // Synchronize the document state by executing the queued commands, 
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log("Added a header to the first section.");
                  });                    
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: typeString
          description: '<span data-ttu-id="59180-130">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="59180-130">Required.</span></span> <span data-ttu-id="59180-131">Тип колонтитула, который необходимо возвратить.</span><span class="sxs-lookup"><span data-stu-id="59180-131">The type of header to return.</span></span> <span data-ttu-id="59180-132">Это значение может быть: "Primary", "FirstPage" или "Евенпажес".</span><span class="sxs-lookup"><span data-stu-id="59180-132">This value can be: ''Primary'', ''FirstPage'', or ''EvenPages''.</span></span>'
          type:
            - '"Primary" | "FirstPage" | "EvenPages"'
  - uid: word.Word.Section.load
    summary: <span data-ttu-id="59180-133">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59180-134">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="59180-134">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="59180-135">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="59180-135">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="59180-136">`load(option?: string | string[]): Word.Section`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="59180-136">`load(option?: string | string[]): Word.Section` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="59180-137">`load(option?: { select?: string; expand?: string; }): Word.Section`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="59180-137">`load(option?: { select?: string; expand?: string; }): Word.Section` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="59180-138">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Section`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="59180-138">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Section` - Only available on collection types.</span></span> <span data-ttu-id="59180-139">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="59180-139">It is similar to the preceding signature.</span></span> <span data-ttu-id="59180-140">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="59180-140">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="59180-141">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="59180-141">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="59180-142">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="59180-142">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SectionLoadOptions): Word.Section;'
      return:
        type:
          - word.Word.Section
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.SectionLoadOptions
  - uid: word.Word.Section.load_1
    summary: <span data-ttu-id="59180-143">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59180-144">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="59180-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Section;'
      return:
        type:
          - word.Word.Section
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="59180-145">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="59180-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word.Word.Section.load_2
    summary: <span data-ttu-id="59180-146">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59180-147">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="59180-147">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Section;'
      return:
        type:
          - word.Word.Section
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="59180-148">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="59180-148">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Section.set
    summary: '<span data-ttu-id="59180-149">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="59180-150">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="59180-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="59180-151">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="59180-151">This method has the following additional signature:</span></span>

      `set(properties: Word.Section): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SectionUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="59180-152">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="59180-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SectionUpdateData
        - id: options
          description: '<span data-ttu-id="59180-153">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="59180-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.Section.set_1
    summary: '<span data-ttu-id="59180-154">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Section): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.Section
  - uid: word.Word.Section.toJSON
    summary: '<span data-ttu-id="59180-155">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="59180-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="59180-156">.</span><span class="sxs-lookup"><span data-stu-id="59180-156"></span></span> <span data-ttu-id="59180-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="59180-157"></span></span><!-- --><span data-ttu-id="59180-158">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. Section — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.SectionData`</span><span class="sxs-lookup"><span data-stu-id="59180-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Section object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SectionData`</span></span><!-- --><span data-ttu-id="59180-159">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SectionData;'
      return:
        type:
          - word.Word.Interfaces.SectionData
        description: ''
  - uid: word.Word.Section.track
    summary: '<span data-ttu-id="59180-160">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="59180-160">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="59180-161">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="59180-161">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="59180-162">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="59180-162">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Section;'
      return:
        type:
          - word.Word.Section
        description: ''
  - uid: word.Word.Section.untrack
    summary: '<span data-ttu-id="59180-163">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="59180-163">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="59180-164">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="59180-164">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="59180-165">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="59180-165">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="59180-166">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="59180-166">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Section;'
      return:
        type:
          - word.Word.Section
        description: ''