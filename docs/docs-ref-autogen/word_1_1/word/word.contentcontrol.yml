### YamlMime:UniversalReference
items:
  - uid: 'word!Word.ContentControl:class'
    summary: "<span data-ttu-id=\"7e613-p101\">Представляет элемент управления содержимым. Элементы управления содержимым\_— это связанные и, возможно, помеченные фрагменты документа, выполняющие роль контейнеров для определенных типов содержимого. Отдельные элементы управления содержимым могут содержать изображения, таблицы или абзацы форматированного текста. На данный момент поддерживаются только элементы управления содержимым \"форматированный текст\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e613-p101\">Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.</span></span>\n\n<span data-ttu-id=\"7e613-105\">\\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e613-105\">\\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \\]</span></span>"
    name: Word.ContentControl
    fullName: Word.ContentControl
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.ContentControl#appearance:member'
      - 'word!Word.ContentControl#cannotDelete:member'
      - 'word!Word.ContentControl#cannotEdit:member'
      - 'word!Word.ContentControl#clear:member(1)'
      - 'word!Word.ContentControl#color:member'
      - 'word!Word.ContentControl#contentControls:member'
      - 'word!Word.ContentControl#context:member'
      - 'word!Word.ContentControl#delete:member(1)'
      - 'word!Word.ContentControl#font:member'
      - 'word!Word.ContentControl#getHtml:member(1)'
      - 'word!Word.ContentControl#getOoxml:member(1)'
      - 'word!Word.ContentControl#id:member'
      - 'word!Word.ContentControl#inlinePictures:member'
      - 'word!Word.ContentControl#insertBreak:member(1)'
      - 'word!Word.ContentControl#insertBreak:member(2)'
      - 'word!Word.ContentControl#insertFileFromBase64:member(1)'
      - 'word!Word.ContentControl#insertFileFromBase64:member(2)'
      - 'word!Word.ContentControl#insertHtml:member(1)'
      - 'word!Word.ContentControl#insertHtml:member(2)'
      - 'word!Word.ContentControl#insertOoxml:member(1)'
      - 'word!Word.ContentControl#insertOoxml:member(2)'
      - 'word!Word.ContentControl#insertParagraph:member(1)'
      - 'word!Word.ContentControl#insertParagraph:member(2)'
      - 'word!Word.ContentControl#insertText:member(1)'
      - 'word!Word.ContentControl#insertText:member(2)'
      - 'word!Word.ContentControl#load:member(1)'
      - 'word!Word.ContentControl#load:member(2)'
      - 'word!Word.ContentControl#load:member(3)'
      - 'word!Word.ContentControl#paragraphs:member'
      - 'word!Word.ContentControl#parentContentControl:member'
      - 'word!Word.ContentControl#placeholderText:member'
      - 'word!Word.ContentControl#removeWhenEdited:member'
      - 'word!Word.ContentControl#search:member(1)'
      - 'word!Word.ContentControl#select:member(1)'
      - 'word!Word.ContentControl#select:member(2)'
      - 'word!Word.ContentControl#set:member(1)'
      - 'word!Word.ContentControl#set:member(2)'
      - 'word!Word.ContentControl#style:member'
      - 'word!Word.ContentControl#tag:member'
      - 'word!Word.ContentControl#text:member'
      - 'word!Word.ContentControl#title:member'
      - 'word!Word.ContentControl#toJSON:member(1)'
      - 'word!Word.ContentControl#track:member(1)'
      - 'word!Word.ContentControl#type:member'
      - 'word!Word.ContentControl#untrack:member(1)'
  - uid: 'word!Word.ContentControl#appearance:member'
    summary: |-
      <span data-ttu-id="7e613-106">Получает или задает внешний вид элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-106">Gets or sets the appearance of the content control.</span></span> <span data-ttu-id="7e613-107">Возможные значения: "BoundingBox", "Tags" или "Hidden".</span><span class="sxs-lookup"><span data-stu-id="7e613-107">The value can be 'BoundingBox', 'Tags', or 'Hidden'.</span></span>

      <span data-ttu-id="7e613-108">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: appearance
    fullName: appearance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
      return:
        type:
          - 'word!Word.ContentControl#appearance~0:complex'
  - uid: 'word!Word.ContentControl#cannotDelete:member'
    summary: |-
      <span data-ttu-id="7e613-109">Возвращает или задает значение, указывающее, может ли пользователь удалить элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-109">Gets or sets a value that indicates whether the user can delete the content control.</span></span> <span data-ttu-id="7e613-110">Является взаимоисключающим со свойством removeWhenEdited.</span><span class="sxs-lookup"><span data-stu-id="7e613-110">Mutually exclusive with removeWhenEdited.</span></span>

      <span data-ttu-id="7e613-111">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotDelete
    fullName: cannotDelete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotDelete: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#cannotEdit:member'
    summary: |-
      <span data-ttu-id="7e613-112">Возвращает или задает значение, указывающее, может ли пользователь изменять содержимое элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-112">Gets or sets a value that indicates whether the user can edit the contents of the content control.</span></span>

      <span data-ttu-id="7e613-113">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotEdit
    fullName: cannotEdit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotEdit: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#clear:member(1)'
    summary: |-
      <span data-ttu-id="7e613-114">Очищает содержимое элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-114">Clears the contents of the content control.</span></span> <span data-ttu-id="7e613-115">Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="7e613-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="7e613-116">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-117">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to clear the contents of the first content control.
                      contentControls.items[0].clear();
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#color:member'
    summary: |-
      <span data-ttu-id="7e613-118">Возвращает или задает цвет элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-118">Gets or sets the color of the content control.</span></span> <span data-ttu-id="7e613-119">Цвет задается в\#формате "RRGGBB" или с помощью имени цвета.</span><span class="sxs-lookup"><span data-stu-id="7e613-119">Color is specified in '\#RRGGBB' format or by using the color name.</span></span>

      <span data-ttu-id="7e613-120">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#contentControls:member'
    summary: |-
      <span data-ttu-id="7e613-121">Получает коллекцию объектов элементов управления содержимым в элементе управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-121">Gets the collection of content control objects in the content control.</span></span> <span data-ttu-id="7e613-122">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-122">Read-only.</span></span>

      <span data-ttu-id="7e613-123">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.ContentControl#context:member'
    summary: '<span data-ttu-id="7e613-124">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="7e613-124">The request context associated with the object.</span></span> <span data-ttu-id="7e613-125">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7e613-125">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.ContentControl#delete:member(1)'
    summary: |-
      <span data-ttu-id="7e613-126">Удаляет элемент управления содержимым и его содержимое.</span><span class="sxs-lookup"><span data-stu-id="7e613-126">Deletes the content control and its content.</span></span> <span data-ttu-id="7e613-127">Если свойство keepContent имеет значение true, содержимое не будет удалено.</span><span class="sxs-lookup"><span data-stu-id="7e613-127">If keepContent is set to true, the content is not deleted.</span></span>

      <span data-ttu-id="7e613-128">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete(keepContent)
    fullName: delete(keepContent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(keepContent: boolean): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-129">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-129">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to delete the first content control. The
                      // contents will remain in the document.
                      contentControls.items[0].delete(true);
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: keepContent
          description: '<span data-ttu-id="7e613-130">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-130">Required.</span></span> <span data-ttu-id="7e613-131">Указывает, следует ли удалить содержимое вместе с элементом управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-131">Indicates whether the content should be deleted with the content control.</span></span> <span data-ttu-id="7e613-132">Если свойству keepContent задано значение true, содержимое не удаляется.</span><span class="sxs-lookup"><span data-stu-id="7e613-132">If keepContent is set to true, the content is not deleted.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.ContentControl#font:member'
    summary: |-
      <span data-ttu-id="7e613-133">Получает текстовый формат элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-133">Gets the text format of the content control.</span></span> <span data-ttu-id="7e613-134">Используйте это свойство для получения и установки имени, размера, цвета и других свойств шрифта.</span><span class="sxs-lookup"><span data-stu-id="7e613-134">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="7e613-135">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-135">Read-only.</span></span>

      <span data-ttu-id="7e613-136">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.ContentControl#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="7e613-137">Возвращает HTML-представление объекта элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-137">Gets an HTML representation of the content control object.</span></span> <span data-ttu-id="7e613-138">При отображении на веб-странице или в средстве просмотра HTML форматирование будет близким, но не точным, соответствующим для форматирования документа.</span><span class="sxs-lookup"><span data-stu-id="7e613-138">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="7e613-139">Этот метод не возвращает точно такой же HTML-код для одного и того же документа на различных платформах (Windows, Mac, Word для Интернета и т. д.).</span><span class="sxs-lookup"><span data-stu-id="7e613-139">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="7e613-140">Если вам нужна точная точность или согласованность на различных платформах `ContentControl.getOoxml()` , используйте и преобразуйте возвращенный XML в HTML.</span><span class="sxs-lookup"><span data-stu-id="7e613-140">If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="7e613-141">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.ContentControl#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-142">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-142">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');
              
              // Queue a command to load the tag property for all of content controls. 
              context.load(contentControlsWithTag, 'tag');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the HTML contents of the first content control.
                      var html = contentControlsWithTag.items[0].getHtml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control HTML: ' + html.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="7e613-143">Возвращает OOXML-представление объекта элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-143">Gets the Office Open XML (OOXML) representation of the content control object.</span></span>

      <span data-ttu-id="7e613-144">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.ContentControl#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-145">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-145">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the OOXML contents of the first content control.
                      var ooxml = contentControls.items[0].getOoxml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control OOXML: ' + ooxml.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#id:member'
    summary: |-
      <span data-ttu-id="7e613-146">Возвращает целое число, представляющее собой идентификатор элемента управления контентом.</span><span class="sxs-lookup"><span data-stu-id="7e613-146">Gets an integer that represents the content control identifier.</span></span> <span data-ttu-id="7e613-147">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-147">Read-only.</span></span>

      <span data-ttu-id="7e613-148">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.ContentControl#inlinePictures:member'
    summary: |-
      <span data-ttu-id="7e613-149">Получает коллекцию объектов inlinePicture в элементе управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-149">Gets the collection of inlinePicture objects in the content control.</span></span> <span data-ttu-id="7e613-150">Коллекция не содержит плавающие рисунки.</span><span class="sxs-lookup"><span data-stu-id="7e613-150">The collection does not include floating images.</span></span> <span data-ttu-id="7e613-151">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-151">Read-only.</span></span>

      <span data-ttu-id="7e613-152">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-152">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.ContentControl#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="7e613-153">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="7e613-153">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="7e613-154">Этот метод не может использоваться с элементами управления содержимым "Ричтексттабле", "Ричтексттаблеров" и "Ричтексттаблецелл".</span><span class="sxs-lookup"><span data-stu-id="7e613-154">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="7e613-155">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-155">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="7e613-156">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-156">Required.</span></span> <span data-ttu-id="7e613-157">Тип разрыва.</span><span class="sxs-lookup"><span data-stu-id="7e613-157">Type of break.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: '<span data-ttu-id="7e613-158">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-158">Required.</span></span> <span data-ttu-id="7e613-159">Возможные значения: "Start", "End", "Before" и "After".</span><span class="sxs-lookup"><span data-stu-id="7e613-159">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="7e613-160">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="7e613-160">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="7e613-161">Этот метод не может использоваться с элементами управления содержимым "Ричтексттабле", "Ричтексттаблеров" и "Ричтексттаблецелл".</span><span class="sxs-lookup"><span data-stu-id="7e613-161">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="7e613-162">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-162">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-163">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-163">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of content controls. 
              context.load(contentControls, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion. We now will have 
              // access to the content control collection.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a page break after the first content control. 
                      contentControls.items[0].insertBreak('page', "After");
                      
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion. 
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a page break after the first content control.');    
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="7e613-164">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-164">Required.</span></span> <span data-ttu-id="7e613-165">Тип разрыва.</span><span class="sxs-lookup"><span data-stu-id="7e613-165">Type of break.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="7e613-166">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-166">Required.</span></span> <span data-ttu-id="7e613-167">Возможные значения: "Start", "End", "Before" и "After".</span><span class="sxs-lookup"><span data-stu-id="7e613-167">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="7e613-168">Вставляет документ в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-168">Inserts a document into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-169">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-169">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="7e613-170">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-170">Required.</span></span> <span data-ttu-id="7e613-171">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="7e613-171">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="7e613-172">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-172">Required.</span></span> <span data-ttu-id="7e613-173">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-173">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-174">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-174">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="7e613-175">Вставляет документ в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-175">Inserts a document into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-176">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-176">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="7e613-177">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-177">Required.</span></span> <span data-ttu-id="7e613-178">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="7e613-178">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="7e613-179">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-179">Required.</span></span> <span data-ttu-id="7e613-180">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-180">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-181">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-181">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="7e613-182">Вставляет HTML-код в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-182">Inserts HTML into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-183">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-183">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="7e613-184">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-184">Required.</span></span> <span data-ttu-id="7e613-185">HTML-код, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-185">The HTML to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="7e613-186">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-186">Required.</span></span> <span data-ttu-id="7e613-187">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-187">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-188">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-188">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="7e613-189">Вставляет HTML-код в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-189">Inserts HTML into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-190">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-190">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-191">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-191">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put HTML into the contents of the first content control.
                      contentControls.items[0].insertHtml(
                          '<strong>HTML content inserted into the content control.</strong>',
                          'Start');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted HTML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="7e613-192">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-192">Required.</span></span> <span data-ttu-id="7e613-193">HTML-код, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-193">The HTML to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="7e613-194">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-194">Required.</span></span> <span data-ttu-id="7e613-195">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-195">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-196">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-196">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="7e613-197">Вставляет OOXML в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-197">Inserts OOXML into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-198">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-198">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="7e613-199">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-199">Required.</span></span> <span data-ttu-id="7e613-200">OOXML, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-200">The OOXML to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="7e613-201">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-201">Required.</span></span> <span data-ttu-id="7e613-202">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-202">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-203">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-203">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="7e613-204">Вставляет OOXML в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-204">Inserts OOXML into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-205">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-205">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-206">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-206">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put OOXML into the contents of the first content control.
                      contentControls.items[0].insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", "End");
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted OOXML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="7e613-207">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-207">Required.</span></span> <span data-ttu-id="7e613-208">OOXML, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-208">The OOXML to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="7e613-209">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-209">Required.</span></span> <span data-ttu-id="7e613-210">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-210">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-211">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-211">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="7e613-212">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-212">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="7e613-213">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-213">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="7e613-214">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-214">Required.</span></span> <span data-ttu-id="7e613-215">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="7e613-215">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="7e613-216">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-216">Required.</span></span> <span data-ttu-id="7e613-217">Возможные значения: "Start", "End", "Before" и "After".</span><span class="sxs-lookup"><span data-stu-id="7e613-217">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="7e613-218">"Before" и "After" не могут использоваться с элементами управления содержимым "Ричтексттабле", "Ричтексттаблеров" и "Ричтексттаблецелл".</span><span class="sxs-lookup"><span data-stu-id="7e613-218">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="7e613-219">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-219">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="7e613-220">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-220">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-221">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-221">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a paragraph after the first content control. 
                      contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a paragraph after the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="7e613-222">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-222">Required.</span></span> <span data-ttu-id="7e613-223">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="7e613-223">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="7e613-224">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-224">Required.</span></span> <span data-ttu-id="7e613-225">Возможные значения: "Start", "End", "Before" и "After".</span><span class="sxs-lookup"><span data-stu-id="7e613-225">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="7e613-226">"Before" и "After" не могут использоваться с элементами управления содержимым "Ричтексттабле", "Ричтексттаблеров" и "Ричтексттаблецелл".</span><span class="sxs-lookup"><span data-stu-id="7e613-226">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertText:member(1)'
    summary: |-
      <span data-ttu-id="7e613-227">Вставляет текст в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-227">Inserts text into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-228">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-228">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: '<span data-ttu-id="7e613-229">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-229">Required.</span></span> <span data-ttu-id="7e613-230">Текст, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-230">The text to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="7e613-231">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-231">Required.</span></span> <span data-ttu-id="7e613-232">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-232">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-233">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-233">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertText:member(2)'
    summary: |-
      <span data-ttu-id="7e613-234">Вставляет текст в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="7e613-234">Inserts text into the content control at the specified location.</span></span>

      <span data-ttu-id="7e613-235">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-235">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-236">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-236">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to replace text in the first content control. 
                      contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Replaced text in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how to use the insertText method.
          // https://aka.ms/sillystorywordaddin
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="7e613-237">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-237">Required.</span></span> <span data-ttu-id="7e613-238">Текст, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-238">The text to be inserted in to the content control.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="7e613-239">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-239">Required.</span></span> <span data-ttu-id="7e613-240">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="7e613-240">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-241">"Replace" нельзя использовать с элементами управления содержимым "Ричтексттабле" и "Ричтексттаблеров".</span><span class="sxs-lookup"><span data-stu-id="7e613-241">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#load:member(1)'
    summary: <span data-ttu-id="7e613-242">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-242">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7e613-243">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="7e613-243">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7e613-244">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="7e613-244">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7e613-245">`load(option?: string | string[]): Word.ContentControl`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e613-245">`load(option?: string | string[]): Word.ContentControl` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7e613-246">`load(option?: { select?: string; expand?: string; }): Word.ContentControl`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e613-246">`load(option?: { select?: string; expand?: string; }): Word.ContentControl` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7e613-247">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="7e613-247">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl` - Only available on collection types.</span></span> <span data-ttu-id="7e613-248">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="7e613-248">It is similar to the preceding signature.</span></span> <span data-ttu-id="7e613-249">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7e613-249">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7e613-250">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="7e613-250">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7e613-251">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="7e613-251">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="7e613-252">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-252">Examples</span></span>

      ```javascript
      // Load all of the content control properties
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Create a proxy object for the content controls collection.
          var contentControls = context.document.contentControls;
          
          // Queue a command to load the id property for all of the content controls. 
          context.load(contentControls, 'id');
           
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              if (contentControls.items.length === 0) {
                  console.log('No content control found.');
              }
              else {
                  // Queue a command to load the properties on the first content control. 
                  contentControls.items[0].load(  'appearance,' +
                                                  'cannotDelete,' +
                                                  'cannotEdit,' +
                                                  'id,' +
                                                  'placeHolderText,' +
                                                  'removeWhenEdited,' +
                                                  'title,' +
                                                  'text,' +
                                                  'type,' +
                                                  'style,' +
                                                  'tag,' +
                                                  'font/size,' +
                                                  'font/name,' +
                                                  'font/color');             
              
                  // Synchronize the document state by executing the queued commands, 
                  // and return a promise to indicate task completion.
                  return context.sync()
                      .then(function () {
                          console.log('Property values of the first content control:' + 
                              '   ----- appearance: ' + contentControls.items[0].appearance + 
                              '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                              '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                              '   ----- color: ' + contentControls.items[0].color +
                              '   ----- id: ' + contentControls.items[0].id +
                              '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                              '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                              '   ----- title: ' + contentControls.items[0].title +
                              '   ----- text: ' + contentControls.items[0].text +
                              '   ----- type: ' + contentControls.items[0].type +
                              '   ----- style: ' + contentControls.items[0].style +
                              '   ----- tag: ' + contentControls.items[0].tag +
                              '   ----- font size: ' + contentControls.items[0].font.size +
                              '   ----- font name: ' + contentControls.items[0].font.name +
                              '   ----- font color: ' + contentControls.items[0].font.color);
                  });
              }
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ContentControlLoadOptions:interface'
  - uid: 'word!Word.ContentControl#load:member(2)'
    summary: <span data-ttu-id="7e613-253">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-253">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7e613-254">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7e613-254">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="7e613-255">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e613-255">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'word!Word.ContentControl#load:member(3)'
    summary: <span data-ttu-id="7e613-256">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-256">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7e613-257">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7e613-257">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7e613-258">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7e613-258">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.ContentControl#paragraphs:member'
    summary: |-
      <span data-ttu-id="7e613-259">Получает коллекцию объектов абзацев в элементе управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-259">Get the collection of paragraph objects in the content control.</span></span> <span data-ttu-id="7e613-260">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-260">Read-only.</span></span>

      <span data-ttu-id="7e613-261">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-261">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.ContentControl#parentContentControl:member'
    summary: |-
      <span data-ttu-id="7e613-262">Получает элемент управления содержимым, содержащий элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-262">Gets the content control that contains the content control.</span></span> <span data-ttu-id="7e613-263">Выдает ошибку, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="7e613-263">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="7e613-264">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-264">Read-only.</span></span>

      <span data-ttu-id="7e613-265">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-265">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.ContentControl#placeholderText:member'
    summary: |-
      <span data-ttu-id="7e613-266">Возвращает или задает замещающий текст элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-266">Gets or sets the placeholder text of the content control.</span></span> <span data-ttu-id="7e613-267">Если элемент управления содержимым пуст, отображается затемненный текст.</span><span class="sxs-lookup"><span data-stu-id="7e613-267">Dimmed text will be displayed when the content control is empty.</span></span>

      <span data-ttu-id="7e613-268">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-268">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: placeholderText
    fullName: placeholderText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholderText: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#removeWhenEdited:member'
    summary: |-
      <span data-ttu-id="7e613-269">Возвращает или задает значение, указывающее, удаляется ли элемент управления содержимым после изменения.</span><span class="sxs-lookup"><span data-stu-id="7e613-269">Gets or sets a value that indicates whether the content control is removed after it is edited.</span></span> <span data-ttu-id="7e613-270">Является взаимоисключающим со свойством cannotDelete.</span><span class="sxs-lookup"><span data-stu-id="7e613-270">Mutually exclusive with cannotDelete.</span></span>

      <span data-ttu-id="7e613-271">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-271">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: removeWhenEdited
    fullName: removeWhenEdited
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeWhenEdited: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#search:member(1)'
    summary: |-
      <span data-ttu-id="7e613-272">Выполняет поиск с указанным SearchOptions в области объекта элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-272">Performs a search with the specified SearchOptions on the scope of the content control object.</span></span> <span data-ttu-id="7e613-273">Результат поиска — это коллекция объектов диапазона.</span><span class="sxs-lookup"><span data-stu-id="7e613-273">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="7e613-274">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-275">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-275">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to select the first content control.
                      contentControls.items[0].select();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Selected the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="7e613-276">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-276">Required.</span></span> <span data-ttu-id="7e613-277">Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="7e613-277">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="7e613-278">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="7e613-278">Optional.</span></span> <span data-ttu-id="7e613-279">Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="7e613-279">Options for the search.</span></span>
          type:
            - 'word!Word.ContentControl#search~0:complex'
  - uid: 'word!Word.ContentControl#select:member(1)'
    summary: |-
      <span data-ttu-id="7e613-280">Выбирает элемент управления контентом.</span><span class="sxs-lookup"><span data-stu-id="7e613-280">Selects the content control.</span></span> <span data-ttu-id="7e613-281">При этом Word переходит к выделенному фрагменту.</span><span class="sxs-lookup"><span data-stu-id="7e613-281">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="7e613-282">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-282">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="7e613-283">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-283">Optional.</span></span> <span data-ttu-id="7e613-284">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="7e613-284">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-285">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="7e613-285">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.ContentControl#select:member(2)'
    summary: |-
      <span data-ttu-id="7e613-286">Выбирает элемент управления контентом.</span><span class="sxs-lookup"><span data-stu-id="7e613-286">Selects the content control.</span></span> <span data-ttu-id="7e613-287">При этом Word переходит к выделенному фрагменту.</span><span class="sxs-lookup"><span data-stu-id="7e613-287">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="7e613-288">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-288">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="7e613-289">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="7e613-289">Optional.</span></span> <span data-ttu-id="7e613-290">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="7e613-290">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="7e613-291">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="7e613-291">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.ContentControl#set:member(1)'
    summary: '<span data-ttu-id="7e613-292">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-292">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7e613-293">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="7e613-293">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="7e613-294">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="7e613-294">This method has the following additional signature:</span></span>

      `set(properties: Word.ContentControl): void`

      #### <a name="examples"></a><span data-ttu-id="7e613-295">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-295">Examples</span></span>

      ```typescript
      // Adds title and colors to odd and even content controls and changes their appearance.
      await Word.run(async (context) => {
        // Gets the complete sentence (as range) associated with the insertion point.
        let evenContentControls = context.document.contentControls.getByTag("even");
        let oddContentControls = context.document.contentControls.getByTag("odd");
        evenContentControls.load("length");
        oddContentControls.load("length");

        await context.sync();

        for (let i = 0; i < evenContentControls.items.length; i++) {
          // Change a few properties and append a paragraph
          evenContentControls.items[i].set({
            color: "red",
            title: "Odd ContentControl #" + (i + 1),
            appearance: "Tags"
          });
          evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
        }

        for (let j = 0; j < oddContentControls.items.length; j++) {
          // Change a few properties and append a paragraph
          oddContentControls.items[j].set({
            color: "green",
            title: "Even ContentControl #" + (j + 1),
            appearance: "Tags"
          });
          oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
        }

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="7e613-296">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="7e613-296">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'word!Word.Interfaces.ContentControlUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="7e613-297">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-297">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.ContentControl#set:member(2)'
    summary: '<span data-ttu-id="7e613-298">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-298">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.ContentControl): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.ContentControl:class'
  - uid: 'word!Word.ContentControl#style:member'
    summary: |-
      <span data-ttu-id="7e613-299">Получает или задает имя стиля для элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-299">Gets or sets the style name for the content control.</span></span> <span data-ttu-id="7e613-300">Используйте это свойство для пользовательских стилей и локализованных имен стилей.</span><span class="sxs-lookup"><span data-stu-id="7e613-300">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="7e613-301">Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="7e613-301">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="7e613-302">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-302">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#tag:member'
    summary: |-
      <span data-ttu-id="7e613-303">Возвращает или задает тег для определения элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-303">Gets or sets a tag to identify a content control.</span></span>

      <span data-ttu-id="7e613-304">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-304">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tag
    fullName: tag
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tag: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7e613-305">Примеры</span><span class="sxs-lookup"><span data-stu-id="7e613-305">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy range object for the current selection.
              var range = context.document.getSelection();
              
              // Queue a command to create the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = 'Customer-Address';
              myContentControl.title = ' has t';
              myContentControl.style = 'Heading 2';
              myContentControl.insertText('One Microsoft Way, Redmond, WA 98052', 'Replace');
              myContentControl.cannotEdit = true;
              
              // Queue a command to load the id property for the content control you created.
              context.load(myContentControl, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Created content control with id: ' + myContentControl.id);
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          // Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // Don't need any properties; just wrap each paragraph with a content control.

            await context.sync();

            for (let i = 0; i < paragraphs.items.length; i++) {
              let contentControl = paragraphs.items[i].insertContentControl();
              // For even, tag "even".
              if (i % 2 === 0) {
                contentControl.tag = "even";
              } else {
                contentControl.tag = "odd";
              }
            }
            console.log("Content controls inserted: " + paragraphs.items.length);

            await context.sync();
          });
          ```
  - uid: 'word!Word.ContentControl#text:member'
    summary: |-
      <span data-ttu-id="7e613-306">Возвращает текст элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-306">Gets the text of the content control.</span></span> <span data-ttu-id="7e613-307">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-307">Read-only.</span></span>

      <span data-ttu-id="7e613-308">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-308">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#title:member'
    summary: |-
      <span data-ttu-id="7e613-309">Получает или задает заголовок для элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-309">Gets or sets the title for a content control.</span></span>

      <span data-ttu-id="7e613-310">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-310">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#toJSON:member(1)'
    summary: '<span data-ttu-id="7e613-311">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7e613-311">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7e613-312">.</span><span class="sxs-lookup"><span data-stu-id="7e613-312"></span></span> <span data-ttu-id="7e613-313">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7e613-313"></span></span><!-- --><span data-ttu-id="7e613-314">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. ContentControl — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.ContentControlData`</span><span class="sxs-lookup"><span data-stu-id="7e613-314">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.ContentControl object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlData`</span></span><!-- --><span data-ttu-id="7e613-315">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-315">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlData;'
      return:
        type:
          - 'word!Word.Interfaces.ContentControlData:interface'
        description: ''
  - uid: 'word!Word.ContentControl#track:member(1)'
    summary: '<span data-ttu-id="7e613-316">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="7e613-316">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="7e613-317">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="7e613-317">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="7e613-318">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="7e613-318">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
  - uid: 'word!Word.ContentControl#type:member'
    summary: |-
      <span data-ttu-id="7e613-319">Получает тип элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="7e613-319">Gets the content control type.</span></span> <span data-ttu-id="7e613-320">На данный момент поддерживаются только элементы управления содержимым в формате RTF.</span><span class="sxs-lookup"><span data-stu-id="7e613-320">Only rich text content controls are supported currently.</span></span> <span data-ttu-id="7e613-321">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e613-321">Read-only.</span></span>

      <span data-ttu-id="7e613-322">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e613-322">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
      return:
        type:
          - 'word!Word.ContentControl#type~0:complex'
  - uid: 'word!Word.ContentControl#untrack:member(1)'
    summary: '<span data-ttu-id="7e613-323">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="7e613-323">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="7e613-324">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="7e613-324">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="7e613-325">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="7e613-325">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="7e613-326">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="7e613-326">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControl#appearance~0:complex'
    name: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
    fullName: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
    spec.typeScript:
      - uid: 'word!Word.ContentControlAppearance:enum'
        name: Word.ContentControlAppearance
        fullName: Word.ContentControlAppearance
      - name: ' | "BoundingBox" | "Tags" | "Hidden"'
        fullName: ' | "BoundingBox" | "Tags" | "Hidden"'
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.ContentControl#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.ContentControl#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Interfaces.ContentControlLoadOptions:interface'
    name: Word.Interfaces.ContentControlLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.ContentControl#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ContentControlUpdateData:interface'
    name: Interfaces.ContentControlUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.ContentControlData:interface'
    name: Word.Interfaces.ContentControlData
  - uid: 'word!Word.ContentControl#type~0:complex'
    name: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
    fullName: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
    spec.typeScript:
      - uid: 'word!Word.ContentControlType:enum'
        name: Word.ContentControlType
        fullName: Word.ContentControlType
      - name: ' | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"'
        fullName: ' | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"'