### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Font:class'
    summary: |-
      Представляет шрифт.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.Font
    fullName: Word.Font
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Font#bold:member'
      - 'word!Word.Font#color:member'
      - 'word!Word.Font#context:member'
      - 'word!Word.Font#doubleStrikeThrough:member'
      - 'word!Word.Font#highlightColor:member'
      - 'word!Word.Font#italic:member'
      - 'word!Word.Font#load:member(1)'
      - 'word!Word.Font#load:member(2)'
      - 'word!Word.Font#load:member(3)'
      - 'word!Word.Font#name:member'
      - 'word!Word.Font#set:member(1)'
      - 'word!Word.Font#set:member(2)'
      - 'word!Word.Font#size:member'
      - 'word!Word.Font#strikeThrough:member'
      - 'word!Word.Font#subscript:member'
      - 'word!Word.Font#superscript:member'
      - 'word!Word.Font#toJSON:member(1)'
      - 'word!Word.Font#track:member(1)'
      - 'word!Word.Font#underline:member'
      - 'word!Word.Font#untrack:member(1)'
  - uid: 'word!Word.Font#bold:member'
    summary: |-
      Возвращает или задает значение, указывающее, является ли шрифт полужирным. Задайте значение true, чтобы отформатировать шрифт как полужирный, в противном случае — задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Bold format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to make the current selection bold.
              selection.font.bold = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection is now bold.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#color:member'
    summary: |-
      Возвращает или задает цвет для указанного шрифта. Вы можете указать значение в \# формате "RRGGBB" или имя цвета.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Change the font color
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the font color of the current selection.
              selection.font.color = 'blue';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font color of the selection has been changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Font#doubleStrikeThrough:member'
    summary: |-
      Получает или задает значение, указывающее, имеет ли шрифт двойное зачеркивание. Задайте значение true, чтобы использовать двойное зачеркивание, в противном случае задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: doubleStrikeThrough
    fullName: doubleStrikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doubleStrikeThrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#highlightColor:member'
    summary: |-
      Получает или задает цвет выделения. Чтобы задать его, используйте значение либо в \# формате "RRGGBB", либо в имени цвета. Чтобы удалить цвет выделения, задайте для него значение null. Возвращаемый цвет выделения может быть указан в \# формате "RRGGBB", пустой строке для смешанных цветов выделения или NULL без цвета выделения. * Note * *: на рабочем столе Office для Windows доступны только цвета выделения по умолчанию. Это "желтый", "Травяный", "бирюзовый", "розовый", "голубой", "красный", "Даркблуе", "голубой", "зеленый", "Сиреневый", "Даркред", "", "серый", "Лигхтграй" и "Black" Когда надстройка работает в Office для настольных ПК, любой другой цвет при применении к шрифту преобразуется в ближайший цвет.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: highlightColor
    fullName: highlightColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Highlight selected text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to highlight the current selection.
              selection.font.highlightColor = '#FFFF00'; // Yellow

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection has been highlighted.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#italic:member'
    summary: |-
      Возвращает или задает значение, указывающее, является ли шрифт курсивным. Задайте значение true, если шрифт является курсивом, в противном случае — задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.FontLoadOptions): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: options
          description: 'Предоставляет параметры, для которых загружается свойства объекта.'
          type:
            - 'word!Word.Interfaces.FontLoadOptions:interface'
  - uid: 'word!Word.Font#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'word!Word.Font#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Font;
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.Font#name:member'
    summary: |-
      Получает или задает значение, представляющее имя шрифта.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Change the font name
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font name.
              selection.font.name = 'Arial';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font name has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#set:member(1)'
    summary: 'Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.'
    remarks: |-
      Этот метод имеет следующую дополнительную подпись:

      `set(properties: Word.Font): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.'
          type:
            - 'word!Word.Interfaces.FontUpdateData:interface'
        - id: options
          description: 'Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.'
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Font#set:member(2)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Font): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Font:class'
  - uid: 'word!Word.Font#size:member'
    summary: |-
      Получает или задает значение, представляющее размер шрифта в пунктах.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Change the font size
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font size.
              selection.font.size = 20;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font size has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#strikeThrough:member'
    summary: |-
      Получает или задает значение, указывающее, имеет ли шрифт зачеркивание. Задайте значение true, если зачеркивание используется, в противном случае — задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: strikeThrough
    fullName: strikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikeThrough: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Strike format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to strikethrough the font of the current selection.
              selection.font.strikeThrough = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has a strikethrough.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#subscript:member'
    summary: |-
      Возвращает или задает значение, указывающее, является ли шрифт подстрочным. Задайте значение true, если шрифт является подстрочным, в противном случае — задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: subscript
    fullName: subscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#superscript:member'
    summary: |-
      Возвращает или задает значение, указывающее, является ли шрифт надстрочным. Задайте значение true, если шрифт является надстрочным, в противном случае — задайте значение false.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: superscript
    fullName: superscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'superscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#toJSON:member(1)'
    summary: 'Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. Font — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.FontData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.FontData;'
      return:
        type:
          - 'word!Word.Interfaces.FontData:interface'
        description: ''
  - uid: 'word!Word.Font#track:member(1)'
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращенной записью для`context.trackedObjects.add(thisObject)`<!-- -->. Если вы используете этот объект во время `.sync` вызовов и вне последовательного выполнения пакета ". Run", а затем получите ошибку "инвалидобжектпас" при настройке свойства или вызове метода для объекта, необходимо добавить объект в коллекцию отслеживаемых объектов при первом создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
  - uid: 'word!Word.Font#underline:member'
    summary: |-
      Возвращает или задает значение, указывающее тип подчеркивания шрифта. "None", если шрифт не является подчеркиванием.

      \[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
      return:
        type:
          - 'word!Word.Font#underline~0:complex'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          // Underline format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to underline the current selection.
              selection.font.underline = Word.UnderlineType.single;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has an underline style.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#untrack:member(1)'
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращенной для`context.trackedObjects.remove(thisObject)`<!-- -->. Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Вам потребуется позвонить, `context.sync()` прежде чем будет применен выпуск памяти.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Interfaces.FontLoadOptions:interface'
    name: Word.Interfaces.FontLoadOptions
  - uid: 'word!Word.Interfaces.FontUpdateData:interface'
    name: Interfaces.FontUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.FontData:interface'
    name: Word.Interfaces.FontData
  - uid: 'word!Word.Font#underline~0:complex'
    name: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    fullName: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    spec.typeScript:
      - uid: 'word!Word.UnderlineType:enum'
        name: Word.UnderlineType
        fullName: Word.UnderlineType
      - name: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'
        fullName: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'