### YamlMime:UniversalReference
ms.openlocfilehash: e77795fd0d7a958fb55235128bfbcce69d2033f0
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/17/2018
ms.locfileid: "25591654"
items:
- uid: Outlook_1_4.Office.Time
  summary: >-
    Объект Time возвращается как свойство встречи start или end в режиме создания.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>
  name: Office.Time
  fullName: Outlook_1_4.Office.Time
  langs:
  - typeScript
  type: interface
  package: Outlook_1_4
  children:
  - Outlook_1_4.Office.Time.getAsync
  - Outlook_1_4.Office.Time.setAsync
- uid: Outlook_1_4.Office.Time.getAsync
  summary: >-
    Получает время начала или окончания встречи.


    Дата и время указываются в виде объекта Date в свойстве asyncResult.value. Значение приводится в формате UTC. Время в формате UTC можно преобразовать в локальное время клиента с помощью метода convertToLocalClientTime.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>


    В дополнение к основной подписи этот метод также имеет подписи:


    `getAsync(callback: (result: AsyncResult) => void): void;`
  name: getAsync(options, callback)
  fullName: Outlook_1_4.Office.Time.getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: AsyncResult) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с одним параметром тип AsyncResult.
      type:
      - '(result: AsyncResult) => void'
- uid: Outlook_1_4.Office.Time.setAsync
  summary: >-
    Задает время начала или окончания встречи.


    Если для свойства start вызывается метод setAsync, свойство end будет настроено для поддержки предварительно заданной продолжительности встречи. Если для свойства end вызывается метод setAsync, продолжительность встречи будет расширена до нового времени окончания.


    Время необходимо указать в формате UTC. Правильное время в формате UTC можно получить с помощью метода convertToUtcClientTime.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    <tr><td>Errors</td><td>InvalidEndTime - время окончания встречи предшествует времени начала встречи.</td></tr></table>


    В дополнение к основной подписи этот метод также имеет эти подписи:


    `setAsync(dateTime: Date): void;`


    `setAsync(dateTime: Date, options: Office.AsyncContextOptions): void;`


    `setAsync(dateTime: Date, callback: (result: AsyncResult) => void): void;`
  name: setAsync(dateTime, options, callback)
  fullName: Outlook_1_4.Office.Time.setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Объект даты и времени в формате UTC.
      type:
      - Date
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с одним параметром тип AsyncResult. Если параметру возникает ошибка даты и времени, свойство asyncResult.error будет содержать код ошибки.
      type:
      - '(result: AsyncResult) => void'
