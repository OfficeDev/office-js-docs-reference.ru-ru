### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recipients:interface'
    summary: '<span data-ttu-id="56d17-101">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-101">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>'
    remarks: |-
      <span data-ttu-id="56d17-102">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="56d17-102">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="56d17-103">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-103">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: Office.Recipients
    fullName: Office.Recipients
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recipients#addAsync:member(1)'
      - 'outlook!Office.Recipients#addAsync:member(2)'
      - 'outlook!Office.Recipients#getAsync:member(1)'
      - 'outlook!Office.Recipients#getAsync:member(2)'
      - 'outlook!Office.Recipients#setAsync:member(1)'
      - 'outlook!Office.Recipients#setAsync:member(2)'
  - uid: 'outlook!Office.Recipients#addAsync:member(1)'
    summary: |-
      <span data-ttu-id="56d17-104">Добавляет список получателей к существующим получателям для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-104">Adds a recipient list to the existing recipients for an appointment or message.</span></span>

      <span data-ttu-id="56d17-105">Параметр Recipients может быть массивом из одного из следующих вариантов:</span><span class="sxs-lookup"><span data-stu-id="56d17-105">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="56d17-106">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="56d17-106">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="56d17-107">Объекты свойства emailuser</span><span class="sxs-lookup"><span data-stu-id="56d17-107">EmailUser objects</span></span>

      - <span data-ttu-id="56d17-108">Объекты EmailAddressDetails</span><span class="sxs-lookup"><span data-stu-id="56d17-108">EmailAddressDetails objects</span></span>

      <span data-ttu-id="56d17-109">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-110">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="56d17-110">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="56d17-111">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-111">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="56d17-112">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="56d17-112">**Errors**:</span></span>

      - <span data-ttu-id="56d17-113">НумберофреЦипиентсексцеедед: количество получателей превысило 100 записей.</span><span class="sxs-lookup"><span data-stu-id="56d17-113">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>
    name: 'addAsync(recipients, options, callback)'
    fullName: 'addAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="56d17-114">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-114">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="56d17-115">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="56d17-115">Optional.</span></span> <span data-ttu-id="56d17-116">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="56d17-116">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="56d17-117">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="56d17-117">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="56d17-118">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="56d17-118">Optional.</span></span> <span data-ttu-id="56d17-119">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-119">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-120">Если добавить получателей не удастся, свойство asyncResult. Error будет содержать код ошибки.</span><span class="sxs-lookup"><span data-stu-id="56d17-120">If adding the recipients fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~1:complex'
  - uid: 'outlook!Office.Recipients#addAsync:member(2)'
    summary: |-
      <span data-ttu-id="56d17-121">Добавляет список получателей к существующим получателям для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-121">Adds a recipient list to the existing recipients for an appointment or message.</span></span>

      <span data-ttu-id="56d17-122">Параметр Recipients может быть массивом из одного из следующих вариантов:</span><span class="sxs-lookup"><span data-stu-id="56d17-122">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="56d17-123">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="56d17-123">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="56d17-124">Объекты [Office. свойства emailuser](xref:outlook!Office.EmailUser:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-124">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="56d17-125">Объекты [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-125">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="56d17-126">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-126">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-127">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="56d17-127">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="56d17-128">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-128">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="56d17-129">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="56d17-129">**Errors**:</span></span>

      - <span data-ttu-id="56d17-130">НумберофреЦипиентсексцеедед: количество получателей превысило 100 записей.</span><span class="sxs-lookup"><span data-stu-id="56d17-130">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>

      #### <a name="examples"></a><span data-ttu-id="56d17-131">Примеры</span><span class="sxs-lookup"><span data-stu-id="56d17-131">Examples</span></span>

      ```javascript
      // The following example creates an array of EmailUser objects
      // and adds them to the To recipients of the message.
      var newRecipients = [
          {
              "displayName": "Allie Bellew",
              "emailAddress": "allieb@contoso.com"
          },
          {
              "displayName": "Alex Darrow",
              "emailAddress": "alexd@contoso.com"
          }
      ];

      Office.context.mailbox.item.to.addAsync(newRecipients, function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Recipients added");
          }
      });
      ```
    name: 'addAsync(recipients, callback)'
    fullName: 'addAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="56d17-132">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-132">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="56d17-133">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="56d17-133">Optional.</span></span> <span data-ttu-id="56d17-134">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-134">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-135">Если добавить получателей не удастся, свойство asyncResult. Error будет содержать код ошибки.</span><span class="sxs-lookup"><span data-stu-id="56d17-135">If adding the recipients fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~3:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(1)'
    summary: |-
      <span data-ttu-id="56d17-136">Возвращает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-136">Gets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="56d17-137">По завершении вызова свойство asyncResult. Value будет содержать массив объектов [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) .</span><span class="sxs-lookup"><span data-stu-id="56d17-137">When the call completes, the asyncResult.value property will contain an array of [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.</span></span>

      <span data-ttu-id="56d17-138">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-138">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-139">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="56d17-139">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="56d17-140">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-140">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="56d17-141">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="56d17-141">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="56d17-142">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="56d17-142">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="56d17-143">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-143">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-144">`value` Свойство Result представляет собой массив объектов EmailAddressDetails.</span><span class="sxs-lookup"><span data-stu-id="56d17-144">The `value` property of the result is an array of EmailAddressDetails objects.</span></span>'
          type:
            - 'outlook!Office.Recipients#getAsync~0:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(2)'
    summary: |-
      <span data-ttu-id="56d17-145">Возвращает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-145">Gets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="56d17-146">По завершении вызова свойство asyncResult. Value будет содержать массив объектов [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) .</span><span class="sxs-lookup"><span data-stu-id="56d17-146">When the call completes, the asyncResult.value property will contain an array of [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.</span></span>

      <span data-ttu-id="56d17-147">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-147">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-148">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="56d17-148">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="56d17-149">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-149">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="56d17-150">Примеры</span><span class="sxs-lookup"><span data-stu-id="56d17-150">Examples</span></span>

      ```javascript
      // The following example gets the optional attendees of a meeting.
      Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              var msg = "";
              result.value.forEach(function(recip, index) {
                  msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
              });
              console.log(msg);
          }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="56d17-151">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-151">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-152">`value` Свойство Result представляет собой массив объектов EmailAddressDetails.</span><span class="sxs-lookup"><span data-stu-id="56d17-152">The `value` property of the result is an array of EmailAddressDetails objects.</span></span>'
          type:
            - 'outlook!Office.Recipients#getAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(1)'
    summary: |-
      <span data-ttu-id="56d17-153">Задает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-153">Sets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="56d17-154">Метод setAsync перезаписывает текущий список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-154">The setAsync method overwrites the current recipient list.</span></span>

      <span data-ttu-id="56d17-155">Параметр Recipients может быть массивом из одного из следующих вариантов:</span><span class="sxs-lookup"><span data-stu-id="56d17-155">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="56d17-156">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="56d17-156">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="56d17-157">Объекты [Office. свойства emailuser](xref:outlook!Office.EmailUser:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-157">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="56d17-158">Объекты [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-158">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="56d17-159">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-159">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-160">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="56d17-160">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="56d17-161">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-161">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="56d17-162">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="56d17-162">**Errors**:</span></span>

      - <span data-ttu-id="56d17-163">НумберофреЦипиентсексцеедед: количество получателей превысило 100 записей.</span><span class="sxs-lookup"><span data-stu-id="56d17-163">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>
    name: 'setAsync(recipients, options, callback)'
    fullName: 'setAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="56d17-164">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-164">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="56d17-165">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="56d17-165">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="56d17-166">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="56d17-166">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="56d17-167">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-167">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-168">Если при настройке получателей возникает ошибка, свойство asyncResult. Error будет содержать код, указывающий на ошибки, произошедшие при добавлении данных.</span><span class="sxs-lookup"><span data-stu-id="56d17-168">If setting the recipients fails the asyncResult.error property will contain a code that indicates any error that occurred while adding the data.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(2)'
    summary: |-
      <span data-ttu-id="56d17-169">Задает список получателей для встречи или сообщения.</span><span class="sxs-lookup"><span data-stu-id="56d17-169">Sets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="56d17-170">Метод setAsync перезаписывает текущий список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-170">The setAsync method overwrites the current recipient list.</span></span>

      <span data-ttu-id="56d17-171">Параметр Recipients может быть массивом из одного из следующих вариантов:</span><span class="sxs-lookup"><span data-stu-id="56d17-171">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="56d17-172">строки, содержащие электронные адреса SMTP;</span><span class="sxs-lookup"><span data-stu-id="56d17-172">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="56d17-173">Объекты [Office. свойства emailuser](xref:outlook!Office.EmailUser:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-173">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="56d17-174">Объекты [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface)</span><span class="sxs-lookup"><span data-stu-id="56d17-174">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="56d17-175">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56d17-175">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="56d17-176">\*\* [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="56d17-176">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="56d17-177">\*\* [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook\*\*: создание</span><span class="sxs-lookup"><span data-stu-id="56d17-177">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="56d17-178">**Ошибки**:</span><span class="sxs-lookup"><span data-stu-id="56d17-178">**Errors**:</span></span>

      - <span data-ttu-id="56d17-179">НумберофреЦипиентсексцеедед: количество получателей превысило 100 записей.</span><span class="sxs-lookup"><span data-stu-id="56d17-179">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>

      #### <a name="examples"></a><span data-ttu-id="56d17-180">Примеры</span><span class="sxs-lookup"><span data-stu-id="56d17-180">Examples</span></span>

      ```javascript
      // The following example creates an array of EmailUser objects and
      // replaces the CC recipients of the message with the array.
      var newRecipients = [
          {
              "displayName": "Allie Bellew",
              "emailAddress": "allieb@contoso.com"
          },
          {
              "displayName": "Alex Darrow",
              "emailAddress": "alexd@contoso.com"
          }
      ];

      Office.context.mailbox.item.cc.setAsync(newRecipients, function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Recipients overwritten");
          }
      });
      ```
    name: 'setAsync(recipients, callback)'
    fullName: 'setAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="56d17-181">Получатели, которых нужно добавить в список получателей.</span><span class="sxs-lookup"><span data-stu-id="56d17-181">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="56d17-182">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="56d17-182">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="56d17-183">Если при настройке получателей возникает ошибка, свойство asyncResult. Error будет содержать код, указывающий на ошибки, произошедшие при добавлении данных.</span><span class="sxs-lookup"><span data-stu-id="56d17-183">If setting the recipients fails the asyncResult.error property will contain a code that indicates any error that occurred while adding the data.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~3:complex'
references:
  - uid: 'outlook!Office.Recipients#addAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Recipients#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#addAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#addAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#setAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#setAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void