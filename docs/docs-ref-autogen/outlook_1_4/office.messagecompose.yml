### YamlMime:UniversalReference
ms.openlocfilehash: b40e98a5dfe1890f3d6e3db74fa30bcd1c7f9406
ms.sourcegitcommit: 5c1011d5e46e007fd1f7f620d4dff74356dcd029
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 03/01/2019
ms.locfileid: "30359025"
items:
- uid: Outlook_1_4.Office.MessageCompose
  summary: >-
    <span data-ttu-id="45f3c-101">Режим создания сообщения для [Office. Context. Mailbox. Item](xref:Outlook_1_4.Office.Item)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="45f3c-101">The message compose mode of [Office.context.mailbox.item](xref:Outlook_1_4.Office.Item)<!-- -->.</span></span>


    <span data-ttu-id="45f3c-102">**Важно!** это внутренний объект Outlook, который не предоставляется напрямую через существующие интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="45f3c-102">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="45f3c-103">Этот режим следует рассматривать как режим Office. Context. Mailbox. Item.</span><span class="sxs-lookup"><span data-stu-id="45f3c-103">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="45f3c-104">Для получения дополнительных сведений обратитесь к странице [объектНой модели](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.4/office.context.mailbox.item) .</span><span class="sxs-lookup"><span data-stu-id="45f3c-104">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.4/office.context.mailbox.item) page for more information.</span></span>
  name: Office.MessageCompose
  fullName: Office.MessageCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  - 'ItemCompose '
  package: Outlook_1_4
  children:
  - Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync
  - Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync_1
  - Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync
  - Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync_1
  - Outlook_1_4.Office.MessageCompose.close
  - Outlook_1_4.Office.MessageCompose.getSelectedDataAsync
  - Outlook_1_4.Office.MessageCompose.getSelectedDataAsync_1
  - Outlook_1_4.Office.MessageCompose.loadCustomPropertiesAsync
  - Outlook_1_4.Office.MessageCompose.removeAttachmentAsync
  - Outlook_1_4.Office.MessageCompose.removeAttachmentAsync_1
  - Outlook_1_4.Office.MessageCompose.saveAsync
  - Outlook_1_4.Office.MessageCompose.saveAsync_1
  - Outlook_1_4.Office.MessageCompose.setSelectedDataAsync
  - Outlook_1_4.Office.MessageCompose.setSelectedDataAsync_1
  - Outlook_1_4.Office.MessageCompose.bcc
  - Outlook_1_4.Office.MessageCompose.body
  - Outlook_1_4.Office.MessageCompose.cc
  - Outlook_1_4.Office.MessageCompose.conversationId
  - Outlook_1_4.Office.MessageCompose.itemType
  - Outlook_1_4.Office.MessageCompose.notificationMessages
  - Outlook_1_4.Office.MessageCompose.subject
  - Outlook_1_4.Office.MessageCompose.to
- uid: Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync
  summary: >-
    <span data-ttu-id="45f3c-105">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-105">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="45f3c-106">Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-106">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="45f3c-107">Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-107">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="45f3c-108">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-108">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-109">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-109">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-110">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-110">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-111">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-111">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-112">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-112">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-113">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-113">Errors</span></span></td><td><span data-ttu-id="45f3c-114">Аттачментсизиксцеедед — вложение превышает разрешенное.</span><span class="sxs-lookup"><span data-stu-id="45f3c-114">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="45f3c-115">Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="45f3c-115">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="45f3c-116">NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-116">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="45f3c-117">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-117">

    #### Examples</span></span>


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```

    ```javascript

    // The following example adds an image file as an inline attachment and

    // references the attachment in the message body.

    Office.context.mailbox.item.addFileAttachmentAsync(
        "http://i.imgur.com/WJXklif.png",
        "cute_bird.png",
        {
            isInline: true
        },
        function (asyncResult) {
            Office.context.mailbox.item.body.setAsync(
                "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                {
                    "coercionType": "html"
                },
                function (asyncResult) {
                    // Do something here.
                });
        });
    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="45f3c-p102">Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p102">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="45f3c-p103">Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p103">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="45f3c-122">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-122">Optional.</span></span> <span data-ttu-id="45f3c-123">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="45f3c-123">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="45f3c-124">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-124">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="45f3c-125">isInline: при значении true указывает, что вложение будет отображаться встроенным в тексте сообщения и не должно отображаться в списке вложений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-125">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
      type:
      - 'Office.AsyncContextOptions & { isInline: boolean }'
    - id: callback
      description: <span data-ttu-id="45f3c-126">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-126">Optional.</span></span> <span data-ttu-id="45f3c-127">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-127">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-128">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="45f3c-128">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="45f3c-129">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f3c-129">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync_1
  summary: >-
    <span data-ttu-id="45f3c-130">Добавляет файл в сообщение или встречу в качестве вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-130">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="45f3c-131">Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-131">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="45f3c-132">Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-132">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="45f3c-133">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-133">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-134">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-134">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-135">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-135">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-136">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-136">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-137">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-137">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-138">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-138">Errors</span></span></td><td><span data-ttu-id="45f3c-139">Аттачментсизиксцеедед — вложение превышает разрешенное.</span><span class="sxs-lookup"><span data-stu-id="45f3c-139">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="45f3c-140">Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</span><span class="sxs-lookup"><span data-stu-id="45f3c-140">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="45f3c-141">NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-141">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="45f3c-p106">Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p106">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="45f3c-p107">Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p107">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="45f3c-146">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-146">Optional.</span></span> <span data-ttu-id="45f3c-147">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-147">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-148">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="45f3c-148">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="45f3c-149">Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f3c-149">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync
  summary: >-
    <span data-ttu-id="45f3c-150">Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-150">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="45f3c-p109">Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p109">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="45f3c-154">Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-154">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="45f3c-155">Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="45f3c-155">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="45f3c-156">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-156">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-157">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-157">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-158">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-158">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-159">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-159">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-160">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-160">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-161">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-161">Errors</span></span></td><td><span data-ttu-id="45f3c-162">NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-162">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="45f3c-163">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-163">

    #### Examples</span></span>


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="45f3c-p110">Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p110">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="45f3c-p111">Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p111">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="45f3c-168">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-168">Optional.</span></span> <span data-ttu-id="45f3c-169">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="45f3c-169">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="45f3c-170">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-170">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="45f3c-171">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-171">Optional.</span></span> <span data-ttu-id="45f3c-172">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-172">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-173">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="45f3c-173">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="45f3c-174">Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f3c-174">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync_1
  summary: >-
    <span data-ttu-id="45f3c-175">Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-175">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="45f3c-p114">Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p114">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="45f3c-179">Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-179">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="45f3c-180">Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="45f3c-180">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="45f3c-181">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-181">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-182">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-182">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-183">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-183">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-184">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-184">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-185">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-185">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-186">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-186">Errors</span></span></td><td><span data-ttu-id="45f3c-187">NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-187">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="45f3c-p115">Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p115">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="45f3c-p116">Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p116">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="45f3c-192">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-192">Optional.</span></span> <span data-ttu-id="45f3c-193">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-193">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-194">В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="45f3c-194">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="45f3c-195">Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.</span><span class="sxs-lookup"><span data-stu-id="45f3c-195">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.close
  summary: >-
    <span data-ttu-id="45f3c-196">ЗаКрывает текущий элемент, который составляется</span><span class="sxs-lookup"><span data-stu-id="45f3c-196">Closes the current item that is being composed</span></span>


    <span data-ttu-id="45f3c-197">Поведение метода Close зависит от текущего состояния составного элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-197">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="45f3c-198">Если элемент содержит несохраненные изменения, клиент предлагает пользователю сохранить, удалить или закрыть действие.</span><span class="sxs-lookup"><span data-stu-id="45f3c-198">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>


    <span data-ttu-id="45f3c-199">Если в клиенте Outlook для настольных ПК сообщение представляет собой ответ в тексте, метод close не приносит результатов.</span><span class="sxs-lookup"><span data-stu-id="45f3c-199">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>


    <span data-ttu-id="45f3c-200">**Примечание**: в Outlook в Интернете, если элемент является встречей и ранее сохранялся с помощью saveAsync, пользователю предлагается сохранить, удалить или отменить действия даже в том случае, если после последнего сохранения элемента не было внесено никаких изменений.</span><span class="sxs-lookup"><span data-stu-id="45f3c-200">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>


    <span data-ttu-id="45f3c-201">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-201">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-202">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-202">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-203">С ограничениями</span><span class="sxs-lookup"><span data-stu-id="45f3c-203">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-204">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-204">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-205">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-205">Message Compose</span></span></td></tr> </table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_4.Office.MessageCompose.getSelectedDataAsync
  summary: >-
    <span data-ttu-id="45f3c-206">Асинхронно возвращает данные, выбранные в теме или тексте сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-206">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="45f3c-p119">Если выделенный фрагмент отсутствует, но курсор находится в тексте или теме, метод возвращает значение NULL для выбранных данных. Если выбраны не текст и не тема, метод возвращает ошибку InvalidSelection.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p119">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data. If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="45f3c-p120">Чтобы получить доступ к выбранным данным из метода обратного вызова, вызовите asyncResult.value.data. Для доступа к исходному свойству, на основе которого созданы выбранные данные, вызовите параметр asyncResult.value.sourceProperty, который может иметь значение body или subject.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p120">To access the selected data from the callback method, call asyncResult.value.data. To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="45f3c-211">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-211">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-212">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-212">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-213">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-213">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-214">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-214">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-215">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-215">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-216">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-216">

    #### Examples</span></span>


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="45f3c-217">Выбранные данные в виде строки с форматом, определенным в параметре coercionType.</span><span class="sxs-lookup"><span data-stu-id="45f3c-217">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="45f3c-218">ЗаПрашивает формат данных.</span><span class="sxs-lookup"><span data-stu-id="45f3c-218">Requests a format for the data.</span></span> <span data-ttu-id="45f3c-219">Если текст, метод возвращает обычный текст в виде строки, удаляя все присутствующие HTML-теги.</span><span class="sxs-lookup"><span data-stu-id="45f3c-219">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="45f3c-220">В случае HTML метод возвращает выделенный текст, если он является обычным текстом или HTML-кодом.</span><span class="sxs-lookup"><span data-stu-id="45f3c-220">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: options
      description: '<span data-ttu-id="45f3c-221">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="45f3c-221">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="45f3c-222">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-222">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="45f3c-223">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-223">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: Outlook_1_4.Office.MessageCompose.getSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="45f3c-224">Асинхронно возвращает данные, выбранные в теме или тексте сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-224">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="45f3c-p123">Если выделенный фрагмент отсутствует, но курсор находится в тексте или теме, метод возвращает значение NULL для выбранных данных. Если выбраны не текст и не тема, метод возвращает ошибку InvalidSelection.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p123">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data. If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="45f3c-p124">Чтобы получить доступ к выбранным данным из метода обратного вызова, вызовите asyncResult.value.data. Для доступа к исходному свойству, на основе которого созданы выбранные данные, вызовите параметр asyncResult.value.sourceProperty, который может иметь значение body или subject.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p124">To access the selected data from the callback method, call asyncResult.value.data. To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="45f3c-229">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-229">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-230">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-230">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-231">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-231">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-232">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-232">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-233">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-233">Message Compose</span></span></td></tr> </table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="45f3c-234">Выбранные данные в виде строки с форматом, определенным в параметре coercionType.</span><span class="sxs-lookup"><span data-stu-id="45f3c-234">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="45f3c-235">ЗаПрашивает формат данных.</span><span class="sxs-lookup"><span data-stu-id="45f3c-235">Requests a format for the data.</span></span> <span data-ttu-id="45f3c-236">Если текст, метод возвращает обычный текст в виде строки, удаляя все присутствующие HTML-теги.</span><span class="sxs-lookup"><span data-stu-id="45f3c-236">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="45f3c-237">В случае HTML метод возвращает выделенный текст, если он является обычным текстом или HTML-кодом.</span><span class="sxs-lookup"><span data-stu-id="45f3c-237">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: callback
      description: <span data-ttu-id="45f3c-238">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-238">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: Outlook_1_4.Office.MessageCompose.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="45f3c-239">Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-239">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="45f3c-p126">Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента. Этот метод возвращает объект CustomProperties при обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, характерным для текущего элемента и текущей надстройки. Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p126">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="45f3c-p127">Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult.value. Этот объект позволяет получить, задать и удалить настраиваемые свойства из элемента, а также сохранить изменения, внесенные в настраиваемое свойство, на сервере.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p127">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="45f3c-245">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-245">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-246">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-246">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-247">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-247">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-248">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-248">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-249">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-249">Message Compose</span></span></td></tr> </table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="45f3c-250">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-250">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="45f3c-251">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-251">Optional.</span></span> <span data-ttu-id="45f3c-252">Разработчики могут указать любой объект, к которому необходимо получить доступ, в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-252">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="45f3c-253">Доступ к этому объекту можно получить с помощью свойства asyncResult. asyncContext в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-253">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_4.Office.MessageCompose.removeAttachmentAsync
  summary: >-
    <span data-ttu-id="45f3c-254">Удаляет вложение из сообщения или встречи.</span><span class="sxs-lookup"><span data-stu-id="45f3c-254">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="45f3c-255">Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-255">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="45f3c-256">Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-256">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="45f3c-257">В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-257">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="45f3c-258">Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.</span><span class="sxs-lookup"><span data-stu-id="45f3c-258">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="45f3c-259">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-259">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-260">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-260">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-261">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-261">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-262">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-262">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-263">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-263">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-264">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-264">Errors</span></span></td><td><span data-ttu-id="45f3c-265">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-265">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="45f3c-266">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-266">

    #### Examples</span></span>


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="45f3c-267">Идентификатор удаляемого вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-267">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="45f3c-268">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-268">Optional.</span></span> <span data-ttu-id="45f3c-269">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="45f3c-269">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="45f3c-270">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-270">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="45f3c-271">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-271">Optional.</span></span> <span data-ttu-id="45f3c-272">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-272">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-273">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="45f3c-273">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.MessageCompose.removeAttachmentAsync_1
  summary: >-
    <span data-ttu-id="45f3c-274">Удаляет вложение из сообщения или встречи.</span><span class="sxs-lookup"><span data-stu-id="45f3c-274">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="45f3c-275">Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-275">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="45f3c-276">Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-276">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="45f3c-277">В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса.</span><span class="sxs-lookup"><span data-stu-id="45f3c-277">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="45f3c-278">Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.</span><span class="sxs-lookup"><span data-stu-id="45f3c-278">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="45f3c-279">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-279">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-280">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-280">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-281">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-281">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-282">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-282">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-283">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-283">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-284">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-284">Errors</span></span></td><td><span data-ttu-id="45f3c-285">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-285">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="45f3c-286">Идентификатор удаляемого вложения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-286">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="45f3c-287">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-287">Optional.</span></span> <span data-ttu-id="45f3c-288">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-288">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="45f3c-289">Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.</span><span class="sxs-lookup"><span data-stu-id="45f3c-289">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.MessageCompose.saveAsync
  summary: >-
    <span data-ttu-id="45f3c-290">Асинхронно сохраняет элемент.</span><span class="sxs-lookup"><span data-stu-id="45f3c-290">Asynchronously saves an item.</span></span>


    <span data-ttu-id="45f3c-p134">При вызове этот метод сохраняет текущее сообщение в виде черновика и возвращает идентификатор элемента с помощью метода обратного вызова. В Outlook Web App или интерактивном режиме Outlook этот элемент сохраняется на сервере. В Outlook в режиме кэширования этот элемент сохраняется в локальном кэше.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p134">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="45f3c-294">Так как для встреч не задано состояние черновиков, то при вызове saveAsync для встречи в режиме создания элемент будет сохранен как обычная встреча в календаре пользователя.</span><span class="sxs-lookup"><span data-stu-id="45f3c-294">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="45f3c-295">Приглашения для новых встреч, которые еще не были сохранены, не будут отправляться.</span><span class="sxs-lookup"><span data-stu-id="45f3c-295">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="45f3c-296">При сохранении существующей встречи будет отправлено обновление добавленных или удаленных участников.</span><span class="sxs-lookup"><span data-stu-id="45f3c-296">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="45f3c-297">**Note**: Если надстройка вызывает saveAsync для элемента в режиме создания, чтобы получить идентификатор itemId для использования с EWS или REST API, помните, что в режиме кэширования может потребоваться некоторое время, прежде чем элемент будет фактически синхронизирован с сервером.</span><span class="sxs-lookup"><span data-stu-id="45f3c-297">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="45f3c-298">Пока элемент не будет синхронизирован, использование itemId возвратит ошибку.</span><span class="sxs-lookup"><span data-stu-id="45f3c-298">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="45f3c-299">**Note**: следующие клиенты имеют различные действия для saveAsync в режиме создания:</span><span class="sxs-lookup"><span data-stu-id="45f3c-299">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="45f3c-300">Mac Outlook не поддерживает saveAsync на собрании в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-300">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="45f3c-301">При вызове saveAsync на собрании в Mac Outlook будет возвращена ошибка.</span><span class="sxs-lookup"><span data-stu-id="45f3c-301">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="45f3c-302">Outlook в Интернете всегда отправляет приглашение или обновление при вызове saveAsync для встречи в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-302">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="45f3c-303">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-303">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="45f3c-304">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-304">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-305">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-305">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-306">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-306">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-307">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-307">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-308">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-308">Errors</span></span></td><td><span data-ttu-id="45f3c-309">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-309">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="45f3c-310">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class="sxs-lookup"><span data-stu-id="45f3c-310">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="45f3c-311">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="45f3c-311">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="45f3c-312">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-312">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.saveAsync_1
  summary: >-
    <span data-ttu-id="45f3c-313">Асинхронно сохраняет элемент.</span><span class="sxs-lookup"><span data-stu-id="45f3c-313">Asynchronously saves an item.</span></span>


    <span data-ttu-id="45f3c-p139">При вызове этот метод сохраняет текущее сообщение в виде черновика и возвращает идентификатор элемента с помощью метода обратного вызова. В Outlook Web App или интерактивном режиме Outlook этот элемент сохраняется на сервере. В Outlook в режиме кэширования этот элемент сохраняется в локальном кэше.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p139">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="45f3c-317">Так как для встреч не задано состояние черновиков, то при вызове saveAsync для встречи в режиме создания элемент будет сохранен как обычная встреча в календаре пользователя.</span><span class="sxs-lookup"><span data-stu-id="45f3c-317">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="45f3c-318">Приглашения для новых встреч, которые еще не были сохранены, не будут отправляться.</span><span class="sxs-lookup"><span data-stu-id="45f3c-318">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="45f3c-319">При сохранении существующей встречи будет отправлено обновление добавленных или удаленных участников.</span><span class="sxs-lookup"><span data-stu-id="45f3c-319">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="45f3c-320">**Note**: Если надстройка вызывает saveAsync для элемента в режиме создания, чтобы получить идентификатор itemId для использования с EWS или REST API, помните, что в режиме кэширования может потребоваться некоторое время, прежде чем элемент будет фактически синхронизирован с сервером.</span><span class="sxs-lookup"><span data-stu-id="45f3c-320">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="45f3c-321">Пока элемент не будет синхронизирован, использование itemId возвратит ошибку.</span><span class="sxs-lookup"><span data-stu-id="45f3c-321">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="45f3c-322">**Note**: следующие клиенты имеют различные действия для saveAsync в режиме создания:</span><span class="sxs-lookup"><span data-stu-id="45f3c-322">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="45f3c-323">Mac Outlook не поддерживает saveAsync на собрании в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-323">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="45f3c-324">При вызове saveAsync на собрании в Mac Outlook будет возвращена ошибка.</span><span class="sxs-lookup"><span data-stu-id="45f3c-324">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="45f3c-325">Outlook в Интернете всегда отправляет приглашение или обновление при вызове saveAsync для встречи в режиме создания.</span><span class="sxs-lookup"><span data-stu-id="45f3c-325">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="45f3c-326">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-326">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-327">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-327">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-328">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-328">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-329">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-329">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-330">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-330">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-331">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-331">Errors</span></span></td><td><span data-ttu-id="45f3c-332">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-332">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="45f3c-333">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-333">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="45f3c-334">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-334">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.MessageCompose.setSelectedDataAsync
  summary: >-
    <span data-ttu-id="45f3c-335">Асинхронно вставляет данные в текст или тему сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-335">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="45f3c-336">Метод setSelectedDataAsync Вставляет указанную строку в позицию курсора в теме или тексте элемента, или, если текст выбран в редакторе, он заменяет выделенный текст.</span><span class="sxs-lookup"><span data-stu-id="45f3c-336">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="45f3c-337">Если курсор не находится в поле Body или subject, возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="45f3c-337">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="45f3c-338">После вставки курсор помещается в конец вставленного содержимого.</span><span class="sxs-lookup"><span data-stu-id="45f3c-338">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="45f3c-339">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-339">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-340">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-340">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-341">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-341">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-342">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-342">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-343">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-343">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-344">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-344">Errors</span></span></td><td><span data-ttu-id="45f3c-345">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-345">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="45f3c-346">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-346">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="45f3c-p144">Вставляемые данные. Объем данных не должен превышать 1 000 000 символов. Если передано больше 1 000 000 символов, возвращается исключение ArgumentOutOfRange.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p144">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: options
      description: "<span data-ttu-id=\"45f3c-350\">Необязательное свойство.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-350\">Optional.</span></span> <span data-ttu-id=\"45f3c-351\">Объектный литерал, содержащий одно или несколько из указанных ниже свойств.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-351\">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id=\"45f3c-352\">asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-352\">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id=\"45f3c-353\">coercionType: в случае с текстом текущий стиль применяется в Outlook Web App и Outlook.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-353\">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id=\"45f3c-354\">Если поле представляет собой редактор HTML, вставляются только текстовые данные, даже если они имеют формат HTML.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-354\">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id=\"45f3c-355\">Если HTML и поле поддерживает HTML (тема не задана), текущий стиль применяется в Outlook Web App, а в Outlook применяется стиль по умолчанию.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-355\">If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id=\"45f3c-356\">Если поле является текстовым полем, возвращается ошибка Инвалиддатаформат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-356\">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id=\"45f3c-357\">Если параметр coercionType не задан, результат зависит от поля. Если поле содержит HTML, используется HTML. Если поле текстовое, используется обычный текст.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45f3c-357\">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>"
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: <span data-ttu-id="45f3c-358">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-358">Optional.</span></span> <span data-ttu-id="45f3c-359">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-359">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.MessageCompose.setSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="45f3c-360">Асинхронно вставляет данные в текст или тему сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-360">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="45f3c-361">Метод setSelectedDataAsync Вставляет указанную строку в позицию курсора в теме или тексте элемента, или, если текст выбран в редакторе, он заменяет выделенный текст.</span><span class="sxs-lookup"><span data-stu-id="45f3c-361">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="45f3c-362">Если курсор не находится в поле Body или subject, возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="45f3c-362">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="45f3c-363">После вставки курсор помещается в конец вставленного содержимого.</span><span class="sxs-lookup"><span data-stu-id="45f3c-363">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="45f3c-364">\[[Набор API: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-364">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-365">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-365">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-366">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-366">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-367">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-367">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-368">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-368">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="45f3c-369">Ошибки</span><span class="sxs-lookup"><span data-stu-id="45f3c-369">Errors</span></span></td><td><span data-ttu-id="45f3c-370">Инвалидаттачментид — идентификатор вложения не существует.</span><span class="sxs-lookup"><span data-stu-id="45f3c-370">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="45f3c-371">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-371">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="45f3c-p148">Вставляемые данные. Объем данных не должен превышать 1 000 000 символов. Если передано больше 1 000 000 символов, возвращается исключение ArgumentOutOfRange.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p148">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="45f3c-375">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="45f3c-375">Optional.</span></span> <span data-ttu-id="45f3c-376">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="45f3c-376">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.MessageCompose.bcc
  summary: >-
    <span data-ttu-id="45f3c-377">Получает объект, который предоставляет методы для получения или обновления получателей скрытой копии сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-377">Gets an object that provides methods to get or update the recipients on the Bcc (blind carbon copy) line of a message.</span></span>


    <span data-ttu-id="45f3c-378">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-378">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-379">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-379">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-380">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-380">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-381">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-381">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-382">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-382">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-383">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-383">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.bcc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfBccRecipients = asyncResult.value;
    }

    ```
  name: bcc
  fullName: bcc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bcc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_4.Office.MessageCompose.body
  summary: >-
    <span data-ttu-id="45f3c-384">Получает объект, предоставляющий методы для работы с основным текстом элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-384">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="45f3c-385">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-385">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-386">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-386">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-387">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-387">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-388">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-388">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-389">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-389">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-390">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-390">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_4.Office.MessageCompose.cc
  summary: >-
    <span data-ttu-id="45f3c-391">Предоставляет доступ к получателям копии сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-391">Provides access to the Cc (carbon copy) recipients of a message.</span></span> <span data-ttu-id="45f3c-392">Тип объекта и уровень доступа зависят от режима текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-392">The type of object and level of access depends on the mode of the current item.</span></span>


    <span data-ttu-id="45f3c-393">Свойство CC возвращает объект [Office. Recipients](xref:Outlook_1_4.Office.Recipients) , который предоставляет методы для получения или обновления получателей в строке "копия" сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-393">The cc property returns an [Office.Recipients](xref:Outlook_1_4.Office.Recipients) object that provides methods to get or update the recipients on the Cc line of the message.</span></span>


    <span data-ttu-id="45f3c-394">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-394">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-395">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-395">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-396">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-396">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-397">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-397">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-398">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-398">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-399">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-399">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.cc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfCcRecipients = asyncResult.value;
    }

    ```
  name: cc
  fullName: cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_4.Office.MessageCompose.conversationId
  summary: >-
    <span data-ttu-id="45f3c-400">Получает идентификатор разговора по электронной почте, содержащего конкретное сообщение.</span><span class="sxs-lookup"><span data-stu-id="45f3c-400">Gets an identifier for the email conversation that contains a particular message.</span></span>


    <span data-ttu-id="45f3c-p151">Вы можете получить целочисленное значение этого свойства, если ваше почтовое приложение активируется в формах просмотра или формах создания ответов. Если пользователь изменит тему ответа, после его отправки идентификатор беседы будет изменен, и полученное ранее значение будет недействительным.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p151">You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.</span></span>


    <span data-ttu-id="45f3c-p152">Это свойство имеет значение NULL для нового элемента в форме создания. Если пользователь задаст тему и сохранит элемент, свойство conversationId вернет значение.</span><span class="sxs-lookup"><span data-stu-id="45f3c-p152">You get null for this property for a new item in a compose form. If the user sets a subject and saves the item, the conversationId property will return a value.</span></span>


    <span data-ttu-id="45f3c-405">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-405">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-406">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-406">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-407">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-407">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-408">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-408">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-409">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-409">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-410">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-410">

    #### Examples</span></span>


    ```javascript

    var conversationId = Office.context.mailbox.item.conversationId;

    console.log("conversationId: " + conversationId);

    ```
  name: conversationId
  fullName: conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: Outlook_1_4.Office.MessageCompose.itemType
  summary: >-
    <span data-ttu-id="45f3c-411">Получает тип элемента, который представляет экземпляр.</span><span class="sxs-lookup"><span data-stu-id="45f3c-411">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="45f3c-412">Свойство itemType возвращает одно из значений перечисления ItemType, которое указывает, является ли экземпляр объекта item сообщением или собранием.</span><span class="sxs-lookup"><span data-stu-id="45f3c-412">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="45f3c-413">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-413">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-414">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-414">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-415">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-415">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-416">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-416">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-417">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-417">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-418">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-418">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_4.Office.MessageCompose.notificationMessages
  summary: >-
    <span data-ttu-id="45f3c-419">Получает сообщения уведомления для элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-419">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="45f3c-420">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-420">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-421">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-421">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-422">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-422">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-423">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-423">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-424">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-424">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-425">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-425">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_4.Office.MessageCompose.subject
  summary: >-
    <span data-ttu-id="45f3c-426">Получает или задает описание, которое отображается в поле темы элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-426">Gets or sets the description that appears in the subject field of an item.</span></span>


    <span data-ttu-id="45f3c-427">Свойство subject получает или задает всю тему элемента для отправки с почтового сервера.</span><span class="sxs-lookup"><span data-stu-id="45f3c-427">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>


    <span data-ttu-id="45f3c-428">Свойство subject возвращает объект Subject, который предоставляет методы для получения и задания темы.</span><span class="sxs-lookup"><span data-stu-id="45f3c-428">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>


    <span data-ttu-id="45f3c-429">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-429">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-430">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-430">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-431">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-431">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-432">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-432">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-433">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-433">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-434">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-434">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
- uid: Outlook_1_4.Office.MessageCompose.to
  summary: >-
    <span data-ttu-id="45f3c-435">Предоставляет доступ к получателям, указанным в строке Кому сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-435">Provides access to the recipients on the To line of a message.</span></span> <span data-ttu-id="45f3c-436">Тип объекта и уровень доступа зависят от режима текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="45f3c-436">The type of object and level of access depends on the mode of the current item.</span></span>


    <span data-ttu-id="45f3c-437">Свойство to возвращает объект Recipients, который предоставляет методы для получения или обновления получателей в строке "Кому" сообщения.</span><span class="sxs-lookup"><span data-stu-id="45f3c-437">The to property returns a Recipients object that provides methods to get or update the recipients on the To line of the message.</span></span>


    <span data-ttu-id="45f3c-438">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45f3c-438">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="45f3c-439">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="45f3c-439">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="45f3c-440">ReadItem</span><span class="sxs-lookup"><span data-stu-id="45f3c-440">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="45f3c-441">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="45f3c-441">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="45f3c-442">Создание сообщения</span><span class="sxs-lookup"><span data-stu-id="45f3c-442">Message Compose</span></span></td></tr> </table><span data-ttu-id="45f3c-443">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="45f3c-443">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.to.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfToRecipients = asyncResult.value;
    }

    ```
  name: to
  fullName: to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: Recipients;'
    return:
      type:
      - Recipients
