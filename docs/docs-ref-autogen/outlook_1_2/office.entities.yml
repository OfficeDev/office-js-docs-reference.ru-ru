### YamlMime:UniversalReference
items:
  - uid: Outlook_1_2.Office.Entities
    summary: |-
      <span data-ttu-id="25820-101">Представляет коллекцию объектов, обнаруженных в электронном сообщении или сведениях о встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-101">Represents a collection of entities found in an email message or appointment.</span></span> <span data-ttu-id="25820-102">Только в режиме чтения.</span><span class="sxs-lookup"><span data-stu-id="25820-102">Read mode only.</span></span>

      <span data-ttu-id="25820-103">Объект Entities является контейнером для массивов сущностей, возвращаемых методами GetObject и getEntitiesByType, когда элемент (сообщение электронной почты или встреча) содержит одну или несколько сущностей, обнаруженных сервером.</span><span class="sxs-lookup"><span data-stu-id="25820-103">The Entities object is a container for the entity arrays returned by the getEntities and getEntitiesByType methods when the item (either an email message or an appointment) contains one or more entities that have been found by the server.</span></span> <span data-ttu-id="25820-104">Эти сущности можно использовать в коде, чтобы предоставить дополнительные контекстные сведения (например, отобразить адрес на карте или открыть приложение для набора телефонного номера, обнаруженного в элементе).</span><span class="sxs-lookup"><span data-stu-id="25820-104">You can use these entities in your code to provide additional context information to the viewer, such as a map to an address found in the item, or to open a dialer for a phone number found in the item.</span></span>

      <span data-ttu-id="25820-105">Если в элементе нет сущностей типа, указанного в свойстве, это свойство возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="25820-105">If no entities of the type specified in the property are present in the item, the property associated with that entity is null.</span></span> <span data-ttu-id="25820-106">Например, если сообщение содержит почтовый адрес и номер телефона, свойства addresses и phoneNumbers будут содержать данные, а остальные свойства вернут значение null.</span><span class="sxs-lookup"><span data-stu-id="25820-106">For example, if a message contains a street address and a phone number, the addresses property and phoneNumbers property would contain information, and the other properties would be null.</span></span>

      <span data-ttu-id="25820-107">Чтобы строка распознавалась как адрес, она должна содержать почтовый адрес в США с такими элементами, как номер дома, название улицы, город, штат и почтовый индекс.</span><span class="sxs-lookup"><span data-stu-id="25820-107">To be recognized as an address, the string must contain a United States postal address that has at least a subset of the elements of a street number, street name, city, state, and zip code.</span></span>

      <span data-ttu-id="25820-108">Чтобы строка распознавалась как номер телефона, она должна содержать номер телефона в формате, принятом в Северной Америке.</span><span class="sxs-lookup"><span data-stu-id="25820-108">To be recognized as a phone number, the string must contain a North American phone number format.</span></span>

      <span data-ttu-id="25820-p104">Распознавание сущностей опирается на встроенное распознавание языка, основанное на компьютерном осмыслении больших объемов данных. Распознавание сущности является недетерминированным, и успех иногда зависит от конкретного контекста в элементе.</span><span class="sxs-lookup"><span data-stu-id="25820-p104">Entity recognition relies on natural language recognition that is based on machine learning of large amounts of data. The recognition of an entity is non-deterministic and success sometimes relies on the particular context in the item.</span></span>

      <span data-ttu-id="25820-111">Если массивы свойств возвращаются методом getEntitiesByType, только свойство для указанной сущности содержит данные; остальные свойства содержат значение null.</span><span class="sxs-lookup"><span data-stu-id="25820-111">When the property arrays are returned by the getEntitiesByType method, only the property for the specified entity contains data; all other properties are null.</span></span>

      <span data-ttu-id="25820-112">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="25820-112">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="25820-113">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="25820-113">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="25820-114">ReadItem</span><span class="sxs-lookup"><span data-stu-id="25820-114">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="25820-115">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="25820-115">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="25820-116">Чтение</span><span class="sxs-lookup"><span data-stu-id="25820-116">Read</span></span></td></tr> </table>'
    name: Office.Entities
    fullName: Office.Entities
    langs:
      - typeScript
    type: interface
    package: Outlook_1_2
    children:
      - Outlook_1_2.Office.Entities.addresses
      - Outlook_1_2.Office.Entities.contacts
      - Outlook_1_2.Office.Entities.emailAddresses
      - Outlook_1_2.Office.Entities.meetingSuggestions
      - Outlook_1_2.Office.Entities.phoneNumbers
      - Outlook_1_2.Office.Entities.taskSuggestions
      - Outlook_1_2.Office.Entities.urls
  - uid: Outlook_1_2.Office.Entities.addresses
    summary: '<span data-ttu-id="25820-117">Получает физические (почтовые) адреса, обнаруженные в сообщении электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-117">Gets the physical addresses (street or mailing addresses) found in an email message or appointment.</span></span>'
    name: addresses
    fullName: addresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addresses: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-118">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
          ```
  - uid: Outlook_1_2.Office.Entities.contacts
    summary: '<span data-ttu-id="25820-119">Получает контакты, обнаруженные в адресе электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-119">Gets the contacts found in an email address or appointment.</span></span>'
    name: contacts
    fullName: contacts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contacts: Contact[];'
      return:
        type:
          - 'Contact[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-120">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-120">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var contacts = item.getEntitiesByType(Office.MailboxEnums.EntityType.Contact);
          ```
  - uid: Outlook_1_2.Office.Entities.emailAddresses
    summary: '<span data-ttu-id="25820-121">Получает адреса электронной почты, обнаруженные в сообщении электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-121">Gets the email addresses found in an email message or appointment.</span></span>'
    name: emailAddresses
    fullName: emailAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'emailAddresses: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-122">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-122">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var emailAddresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.EmailAddress);
          ```
  - uid: Outlook_1_2.Office.Entities.meetingSuggestions
    summary: '<span data-ttu-id="25820-123">Получает предложения о собраниях, обнаруженные в сообщении электронной почты.</span><span class="sxs-lookup"><span data-stu-id="25820-123">Gets the meeting suggestions found in an email message.</span></span>'
    name: meetingSuggestions
    fullName: meetingSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'meetingSuggestions: MeetingSuggestion[];'
      return:
        type:
          - 'MeetingSuggestion[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-124">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var meetingSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.MeetingSuggestion);
          ```
  - uid: Outlook_1_2.Office.Entities.phoneNumbers
    summary: '<span data-ttu-id="25820-125">Получает номера телефона, обнаруженные в сообщении электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-125">Gets the phone numbers found in an email message or appointment.</span></span>'
    name: phoneNumbers
    fullName: phoneNumbers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'phoneNumbers: PhoneNumber[];'
      return:
        type:
          - 'PhoneNumber[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-126">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-126">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var phoneNumbers = item.getEntitiesByType(Office.MailboxEnums.EntityType.PhoneNumber);
          ```
  - uid: Outlook_1_2.Office.Entities.taskSuggestions
    summary: '<span data-ttu-id="25820-127">Получает предложения задач, обнаруженные в сообщении электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-127">Gets the task suggestions found in an email message or appointment.</span></span>'
    name: taskSuggestions
    fullName: taskSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'taskSuggestions: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-128">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-128">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var taskSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.TaskSuggestion);
          ```
  - uid: Outlook_1_2.Office.Entities.urls
    summary: '<span data-ttu-id="25820-129">Получает URL-адреса в Интернете, присутствующие в сообщении электронной почты или встрече.</span><span class="sxs-lookup"><span data-stu-id="25820-129">Gets the Internet URLs present in an email message or appointment.</span></span>'
    name: urls
    fullName: urls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'urls: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="25820-130">Примеры</span><span class="sxs-lookup"><span data-stu-id="25820-130">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var urls = item.getEntitiesByType(Office.MailboxEnums.EntityType.Url);
          ```