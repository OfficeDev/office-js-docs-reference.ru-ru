### YamlMime:UniversalReference
ms.openlocfilehash: 6cf060fe12d7772cc7a2e525f75c5a90898bfe08
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097111"
items:
- uid: Outlook_1_2.Office.Mailbox
  summary: >-
    Предоставляет для Microsoft Outlook и Microsoft Outlook в Интернете доступ к объектной модели надстройки Outlook.


    Пространства имен


    - diagnostics. Предоставляет надстройке Outlook диагностические сведения.


    - item. Предоставляет методы и свойства для доступа к сообщению или встрече в надстройке Outlook.


    - userProfile. Предоставляет сведения о пользователе в надстройке Outlook.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>С ограничениями</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  name: Office.Mailbox
  fullName: Office.Mailbox
  langs:
  - typeScript
  type: interface
  package: Outlook_1_2
  children:
  - Outlook_1_2.Office.Mailbox.convertToLocalClientTime
  - Outlook_1_2.Office.Mailbox.convertToUtcClientTime
  - Outlook_1_2.Office.Mailbox.displayAppointmentForm
  - Outlook_1_2.Office.Mailbox.displayMessageForm
  - Outlook_1_2.Office.Mailbox.displayNewAppointmentForm
  - Outlook_1_2.Office.Mailbox.getUserIdentityTokenAsync
  - Outlook_1_2.Office.Mailbox.getUserIdentityTokenAsync_1
  - Outlook_1_2.Office.Mailbox.makeEwsRequestAsync
  - Outlook_1_2.Office.Mailbox.makeEwsRequestAsync_1
  - Outlook_1_2.Office.Mailbox.diagnostics
  - Outlook_1_2.Office.Mailbox.ewsUrl
  - Outlook_1_2.Office.Mailbox.item
  - Outlook_1_2.Office.Mailbox.userProfile
- uid: Outlook_1_2.Office.Mailbox.convertToLocalClientTime
  summary: >-
    Получает словарь, содержащий сведения о локальном времени клиента.


    В случае дат и времени в почтовом приложении для Outlook или Outlook Web App могут использоваться разные часовые пояса. Outlook использует часовой пояс клиентского компьютера. Outlook Web App использует часовой пояс, заданный в Центре администрирования Exchange (EAC). Значения даты и времени должны обрабатываться так, чтобы значения в пользовательском интерфейсе всегда согласовывались с часовым поясом, ожидаемым пользователем.


    Если почтовое приложение выполняется в Outlook, метод convertToLocalClientTime возвратит объект словаря со значениями, заданными для часового пояса клиентского компьютера. Если почтовое приложение выполняется в Outlook Web App, метод convertToLocalClientTime возвратит объект словаря со значениям, заданными для часового пояса в Центре администрирования Exchange.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  name: convertToLocalClientTime(timeValue)
  fullName: convertToLocalClientTime(timeValue)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
    return:
      type:
      - LocalClientTime
      description: ''
    parameters:
    - id: timeValue
      description: Объект Date.
      type:
      - Date
- uid: Outlook_1_2.Office.Mailbox.convertToUtcClientTime
  summary: >-
    Получает объект Date из словаря, содержащего сведения о времени.


    Метод convertToUtcClientTime преобразует словарь, содержащий локальную дату и время, в объект Date с правильными значениями локальной даты и времени.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  name: convertToUtcClientTime(input)
  fullName: convertToUtcClientTime(input)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
    return:
      type:
      - Date
      description: Объект Date со временем в формате UTC.
    parameters:
    - id: input
      description: Значение локального времени для преобразования.
      type:
      - LocalClientTime
- uid: Outlook_1_2.Office.Mailbox.displayAppointmentForm
  summary: >-
    Отображает имеющуюся встречу из календаря.


    Метод displayAppointmentForm открывает существующую встречу в календаре в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.


    В Outlook для Mac с помощью этого метода можно отобразить одну встречу, которая не является частью повторяющегося ряда, или основную встречу такого ряда, но не экземпляр из него, так как в Outlook для Mac невозможно получить доступ к свойствам экземпляра повторяющегося ряда (в том числе к идентификатору элемента).


    В Outlook Web App этот метод открывает указанную форму, только если текст формы содержит символы размером не более 32 КБ.


    Если указанный идентификатор элемента не определяет существующую встречу, на клиентском компьютере или устройстве открывается пустая страница, и сообщение об ошибке не возвращается.


    **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>

    ####Примеры


    ```javascript

    Office.context.mailbox.displayAppointmentForm(appointmentId);

    ```
  name: displayAppointmentForm(itemId)
  fullName: displayAppointmentForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayAppointmentForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор веб-служб Exchange для существующей встречи в календаре.
      type:
      - string
- uid: Outlook_1_2.Office.Mailbox.displayMessageForm
  summary: >-
    Отображает имеющееся сообщение.


    Метод displayMessageForm открывает существующее сообщение в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.


    В Outlook Web App этот метод открывает указанную форму, только если текст формы содержит символы размером не более 32 КБ.


    Если указанный идентификатор элемента не определяет существующее сообщение, окно на клиентском компьютере не открывается и сообщение об ошибке не возвращается.


    Не используйте метод displayMessageForm с параметром itemId, который представляет собой встречу. Используйте метод displayAppointmentForm, чтобы отобразить существующую встречу, а метод displayNewAppointmentForm — для отображения формы создания встречи.


    **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>

    ####Примеры


    ```javascript

    Office.context.mailbox.displayMessageForm(messageId);

    ```
  name: displayMessageForm(itemId)
  fullName: displayMessageForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayMessageForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор веб-служб Exchange для существующего сообщения.
      type:
      - string
- uid: Outlook_1_2.Office.Mailbox.displayNewAppointmentForm
  summary: >-
    Отображает форму для создания новой встречи в календаре.


    Метод displayNewAppointmentForm открывает форму, которая позволяет пользователю создать встречу или собрание. Если параметры заданы, поля формы встречи автоматически заполняются значениями этих параметров.


    В Outlook Web App и Outlook Web App для устройств этот метод всегда отображает форму с полем участников. Если вы не укажете участников в качестве входных аргументов, метод отображает форму с кнопкой Сохранить. Если вы укажете участников, форма будет включать участников и кнопку Отправить.


    В расширенном клиенте Outlook и Outlook RT при указании участников или ресурсов в параметре requiredAttendees, optionalAttendees или Resources в этом методе отображается форма собрания с кнопкой Отправить. Если не указать получателей, этот метод отображает форму встречи с кнопкой Сохранить &amp; закрыть.


    Если параметры превышают указанные ограничения размера или если указано неизвестное имя параметра, вызывается исключение.


    **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Чтение</td></tr> </table>

    ####Примеры


    ```javascript

    var start = new Date();

    var end = new Date();

    end.setHours(start.getHours() + 1);


    Office.context.mailbox.displayNewAppointmentForm(

    {
        requiredAttendees: ['bob@contoso.com'],
        optionalAttendees: ['sam@contoso.com'],
        start: start,
        end: end,
        location: 'Home',
        resources: ['projector@contoso.com'],
        subject: 'meeting',
        body: 'Hello World!'
    });

    ```
  name: displayNewAppointmentForm(parameters)
  fullName: displayNewAppointmentForm(parameters)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: parameters
      description: Аппоинтментформ, описывающий новую встречу. Все свойства являются необязательными.
      type:
      - AppointmentForm
- uid: Outlook_1_2.Office.Mailbox.getUserIdentityTokenAsync
  summary: >-
    Получает маркер, идентифицирующий пользователя и надстройку Office.


    Маркер указывается в виде строки в свойстве asyncResult.value.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>


    Метод getUserIdentityTokenAsync возвращает маркер, который можно использовать для идентификации и [проверки подлинности надстройки и пользователя в сторонней системе](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->.
  name: getUserIdentityTokenAsync(callback, userContext)
  fullName: getUserIdentityTokenAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUserIdentityTokenAsync(callback: (result: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Маркер указывается в виде строки в свойстве `asyncResult.value`. Если возникла ошибка, то `asyncResult.error` свойства и `asyncResult.diagnostics` могут содержать дополнительные сведения.
      type:
      - '(result: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Необязательное свойство. Данные о состоянии, передаваемые в асинхронный метод.\|
      type:
      - any
- uid: Outlook_1_2.Office.Mailbox.getUserIdentityTokenAsync_1
  summary: >-
    Получает маркер, идентифицирующий пользователя и надстройку Office.


    Маркер указывается в виде строки в свойстве asyncResult.value.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>


    Метод getUserIdentityTokenAsync возвращает маркер, который можно использовать для идентификации и [проверки подлинности надстройки и пользователя в сторонней системе](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->.

    #### <a name="examples"></a>Примеры


    ```javascript

    function getIdentityToken() {
        Office.context.mailbox.getUserIdentityTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getUserIdentityTokenAsync(callback)
  fullName: getUserIdentityTokenAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUserIdentityTokenAsync(callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Маркер указывается в виде строки в свойстве `asyncResult.value`. Если возникла ошибка, то `asyncResult.error` свойства и `asyncResult.diagnostics` могут содержать дополнительные сведения.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.Mailbox.makeEwsRequestAsync
  summary: >-
    Выполняет асинхронный запрос к службе веб-служб Exchange (EWS) на сервере Exchange, на котором размещается почтовый ящик пользователя.


    В таких случаях надстройка должна использовать REST API для доступа к почтовому ящику пользователя.


    Метод makeEwsRequestAsync отправляет запрос EWS от имени надстройки в Exchange.


    С помощью метода makeEwsRequestAsync невозможно запрашивать элементы, связанные с папкой.


    В запросе XML должна быть указана кодировка UTF-8. &lt;<!-- -->_Км_ксмл Version = "1.0" Encoding = "UTF – 8"?<!-- -->&gt;


    Надстройка должна иметь разрешение ReadWriteMailbox на использование метода makeEwsRequestAsync. Для получения сведений об использовании разрешения ReadWriteMailbox и операций EWS, которые можно вызывать с помощью метода makeEwsRequestAsync, обратитесь к разделу [Определение разрешений для](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->почтового ящика пользователя по почтовым надстройкам.


    Результат XML вызова EWS указывается в виде строки в свойстве asyncResult.value. Если размер результата превышает 1 МБ, возвращается сообщение об ошибке.


    **Примечание**: Этот метод не поддерживается в следующих сценариях:


    - В Outlook для iOS или Outlook для Android.


    - Когда надстройка загружается в почтовый ящик Gmail.


    **Note**: администратор сервера должен установить для OAuthAuthentication значение true в каталоге Client Access Server EWS, чтобы разрешить методу makeEwsRequestAsync выполнять запросы EWS.


    *Различия версий*


    При использовании метода makeEwsRequestAsync в почтовых приложениях, которые выполняются в Outlook версии ниже 15.0.4535.1004, следует указывать кодировку ISO-8859-1.


    `<?xml version="1.0" encoding="iso-8859-1"?>`


    Значение кодировки не нужно указывать, если почтовое приложение выполняется в Outlook в Интернете. Чтобы определить, выполняется ли приложение в Outlook или Outlook в Интернете, используйте свойство mailbox.diagnostics.hostName. Используемую версию Outlook можно определить с помощью свойства mailbox.diagnostics.hostVersion.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteMailbox</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  name: makeEwsRequestAsync(data, callback, userContext)
  fullName: makeEwsRequestAsync(data, callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'makeEwsRequestAsync(data: any, callback: (result: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Запрос EWS.
      type:
      - any
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. `value` Свойство Result представляет собой XML-код запроса EWS, предоставленный в виде строки. Если размер результата превышает 1 МБ, возвращается сообщение об ошибке.
      type:
      - '(result: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Необязательное свойство. Данные о состоянии, передаваемые в асинхронный метод.
      type:
      - any
- uid: Outlook_1_2.Office.Mailbox.makeEwsRequestAsync_1
  summary: >-
    Выполняет асинхронный запрос к службе веб-служб Exchange (EWS) на сервере Exchange, на котором размещается почтовый ящик пользователя.


    В таких случаях надстройка должна использовать REST API для доступа к почтовому ящику пользователя.


    Метод makeEwsRequestAsync отправляет запрос EWS от имени надстройки в Exchange.


    С помощью метода makeEwsRequestAsync невозможно запрашивать элементы, связанные с папкой.


    В запросе XML должна быть указана кодировка UTF-8. &lt;<!-- -->_Км_ксмл Version = "1.0" Encoding = "UTF – 8"?<!-- -->&gt;


    Надстройка должна иметь разрешение ReadWriteMailbox на использование метода makeEwsRequestAsync. Для получения сведений об использовании разрешения ReadWriteMailbox и операций EWS, которые можно вызывать с помощью метода makeEwsRequestAsync, обратитесь к разделу [Определение разрешений для](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->почтового ящика пользователя по почтовым надстройкам.


    Результат XML вызова EWS указывается в виде строки в свойстве asyncResult.value. Если размер результата превышает 1 МБ, возвращается сообщение об ошибке.


    **Примечание**: Этот метод не поддерживается в следующих сценариях:


    - В Outlook для iOS или Outlook для Android.


    - Когда надстройка загружается в почтовый ящик Gmail.


    **Note**: администратор сервера должен установить для OAuthAuthentication значение true в каталоге Client Access Server EWS, чтобы разрешить методу makeEwsRequestAsync выполнять запросы EWS.


    *Различия версий*


    При использовании метода makeEwsRequestAsync в почтовых приложениях, которые выполняются в Outlook версии ниже 15.0.4535.1004, следует указывать кодировку ISO-8859-1.


    `<?xml version="1.0" encoding="iso-8859-1"?>`


    Значение кодировки не нужно указывать, если почтовое приложение выполняется в Outlook в Интернете. Чтобы определить, выполняется ли приложение в Outlook или Outlook в Интернете, используйте свойство mailbox.diagnostics.hostName. Используемую версию Outlook можно определить с помощью свойства mailbox.diagnostics.hostVersion.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteMailbox</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>

    ####Примеры


    ```javascript

    function getSubjectRequest(id) {
        // Return a GetItem operation request for the subject of the specified item.
        var request =
            '<?xml version="1.0" encoding="utf-8"?>' +
            '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' +
            '               xmlns:xsd="http://www.w3.org/2001/XMLSchema"' +
            '               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"' +
            '               xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types">' +
            '  <soap:Header>' +
            '    <RequestServerVersion Version="Exchange2013" xmlns="http://schemas.microsoft.com/exchange/services/2006/types" soap:mustUnderstand="0" />' +
            '  </soap:Header>' +
            '  <soap:Body>' +
            '    <GetItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">' +
            '      <ItemShape>' +
            '        <t:BaseShape>IdOnly</t:BaseShape>' +
            '        <t:AdditionalProperties>' +
            '            <t:FieldURI FieldURI="item:Subject"/>' +
            '        </t:AdditionalProperties>' +
            '      </ItemShape>' +
            '      <ItemIds><t:ItemId Id="' + id + '"/></ItemIds>' +
            '    </GetItem>' +
            '  </soap:Body>' +
            '</soap:Envelope>';

        return request;
    }


    function sendRequest() {
        // Create a local variable that contains the mailbox.
        Office.context.mailbox.makeEwsRequestAsync(
            getSubjectRequest(mailbox.item.itemId), callback);
    }


    function callback(asyncResult)  {
        var result = asyncResult.value;
        var context = asyncResult.asyncContext;

        // Process the returned response here.
    }

    ```
  name: makeEwsRequestAsync(data, callback)
  fullName: makeEwsRequestAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'makeEwsRequestAsync(data: any, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Запрос EWS.
      type:
      - any
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. `value` Свойство Result представляет собой XML-код запроса EWS, предоставленный в виде строки. Если размер результата превышает 1 МБ, возвращается сообщение об ошибке.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.Mailbox.diagnostics
  summary: >-
    Предоставляет надстройке Outlook диагностические сведения.


    Содержит следующие элементы:


    - hostName (строка): строка, представляющая имя ведущего приложения. Это одно из следующих значений: Outlook, Mac Outlook, Аутлукиос или OutlookWebApp.


    - hostVersion (строка): строка, представляющая версию ведущего приложения или сервера Exchange Server. Если почтовые надстройки работают в клиенте Outlook для настольных компьютеров или Outlook для iOS, свойство hostVersion Возвращает версию ведущего приложения, Outlook. В Outlook Web App свойство возвращает версию сервера Exchange. Примером является строка 15.0.468.0.


    - OWAView (MailboxEnums. OWAView или String): перечисление (или строковый литерал), представляющее текущее представление Outlook Web App. Если Outlook Web App — не ведущее приложение, при получении доступа к этому свойству будет выдаваться значение undefined. В Outlook Web App есть три представления (OneColumn — отображаются, когда экран сужается, TwoColumns — отображается, когда экран шире, и ThreeColumns отображается, когда экран размещается в ширину), что соответствует ширине экрана и окна, а также по числу столбцов для отображения.


    Дополнительные сведения находятся в разделе [Office. Diagnostics](xref:Outlook_1_2.Office.Diagnostics)<!-- -->.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>
  name: diagnostics
  fullName: diagnostics
  langs:
  - typeScript
  type: property
  syntax:
    content: 'diagnostics: Diagnostics;'
    return:
      type:
      - Diagnostics
- uid: Outlook_1_2.Office.Mailbox.ewsUrl
  summary: >-
    Получает URL-адрес конечной точки веб-служб Exchange (EWS) для этой учетной записи электронной почты. Только в режиме чтения.


    У вашего приложения должно быть разрешение ReadItem, указанное в его манифесте, для вызова члена ewsUrl в режиме чтения.


    В режиме создания необходимо вызвать метод saveAsync, прежде чем можно будет использовать элемент ewsUrl. У вашего приложения должны быть разрешения ReadWriteItem для вызова метода saveAsync.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание или чтение</td></tr> </table>


    Удаленная служба может использовать значение ewsUrl для выполнения вызовов EWS в почтовый ящик пользователя. Например, вы можете создать удаленную службу для [получения вложений из выбранного элемента](https://docs.microsoft.com/outlook/add-ins/get-attachments-of-an-outlook-item)<!-- -->.


    **Примечание**: этот элемент не поддерживается в Outlook для iOS или Outlook для Android.
  name: ewsUrl
  fullName: ewsUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ewsUrl: string;'
    return:
      type:
      - string
- uid: Outlook_1_2.Office.Mailbox.item
  summary: Элемент почтового ящика. В зависимости от контекста, в котором открытая надстройка, элемент может иметь любое количество типов. Если вы хотите увидеть IntelliSense только для определенного типа, необходимо привести этот элемент к одному из следующих `ItemCompose` <!-- -->:, `ItemRead` <!-- -->, `MessageCompose` <!-- -->, `MessageRead` <!-- --> `AppointmentCompose` <!-- -->,,`AppointmentRead`
  name: item
  fullName: item
  langs:
  - typeScript
  type: property
  syntax:
    content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
    return:
      type:
      - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
- uid: Outlook_1_2.Office.Mailbox.userProfile
  summary: >-
    Сведения о пользователе, связанном с почтовым ящиком. К ним относятся тип учетной записи, отображаемое имя, адрес электронной почты и часовой пояс.


    Дополнительные сведения находятся в [пакете Office. UserProfile](xref:Outlook_1_2.Office.UserProfile)
  name: userProfile
  fullName: userProfile
  langs:
  - typeScript
  type: property
  syntax:
    content: 'userProfile: UserProfile;'
    return:
      type:
      - UserProfile
