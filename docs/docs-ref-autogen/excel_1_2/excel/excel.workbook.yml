### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Workbook:class'
    summary: |-
      <span data-ttu-id="79b05-101">Workbook — это объект верхнего уровня, содержащий связанные объекты книг, такие как листы, таблицы, диапазоны и т. д. Чтобы узнать больше об объектной модели книги, читайте [работу с книгами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)</span><span class="sxs-lookup"><span data-stu-id="79b05-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc. To learn more about the workbook object model, read [Work with workbooks using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)</span></span><!-- --><span data-ttu-id="79b05-102">.</span><span class="sxs-lookup"><span data-stu-id="79b05-102"></span></span>

      <span data-ttu-id="79b05-103">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Workbook#application:member'
      - 'excel!Excel.Workbook#bindings:member'
      - 'excel!Excel.Workbook#context:member'
      - 'excel!Excel.Workbook#functions:member'
      - 'excel!Excel.Workbook#getSelectedRange:member(1)'
      - 'excel!Excel.Workbook#load:member(1)'
      - 'excel!Excel.Workbook#load:member(2)'
      - 'excel!Excel.Workbook#load:member(3)'
      - 'excel!Excel.Workbook#names:member'
      - 'excel!Excel.Workbook#onSelectionChanged:member'
      - 'excel!Excel.Workbook#set:member(1)'
      - 'excel!Excel.Workbook#set:member(2)'
      - 'excel!Excel.Workbook#tables:member'
      - 'excel!Excel.Workbook#toJSON:member(1)'
      - 'excel!Excel.Workbook#worksheets:member'
  - uid: 'excel!Excel.Workbook#application:member'
    summary: |-
      <span data-ttu-id="79b05-104">Представляет экземпляр приложения Excel, который содержит эту книгу.</span><span class="sxs-lookup"><span data-stu-id="79b05-104">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="79b05-105">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-105">Read-only.</span></span>

      <span data-ttu-id="79b05-106">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Workbook#bindings:member'
    summary: |-
      <span data-ttu-id="79b05-107">Представляет коллекцию привязок, включенных в книгу.</span><span class="sxs-lookup"><span data-stu-id="79b05-107">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="79b05-108">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-108">Read-only.</span></span>

      <span data-ttu-id="79b05-109">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
  - uid: 'excel!Excel.Workbook#context:member'
    summary: '<span data-ttu-id="79b05-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="79b05-110">The request context associated with the object.</span></span> <span data-ttu-id="79b05-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="79b05-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Workbook#functions:member'
    summary: |-
      <span data-ttu-id="79b05-112">Представляет коллекцию функций листа, которые можно использовать для вычислений.</span><span class="sxs-lookup"><span data-stu-id="79b05-112">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="79b05-113">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-113">Read-only.</span></span>

      <span data-ttu-id="79b05-114">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-114">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - 'excel!Excel.Functions:class'
  - uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    summary: |-
      <span data-ttu-id="79b05-115">Получает текущий выделенный диапазон из книги.</span><span class="sxs-lookup"><span data-stu-id="79b05-115">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="79b05-116">Если выбрано несколько диапазонов, этот метод выдаст ошибку.</span><span class="sxs-lookup"><span data-stu-id="79b05-116">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="79b05-117">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="79b05-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="79b05-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Workbook#load:member(1)'
    summary: <span data-ttu-id="79b05-119">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="79b05-120">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="79b05-120">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="79b05-121">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="79b05-121">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="79b05-122">`load(option?: string | string[]): Excel.Workbook`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="79b05-122">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="79b05-123">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="79b05-123">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="79b05-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="79b05-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="79b05-125">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="79b05-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="79b05-126">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="79b05-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="79b05-127">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="79b05-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="79b05-128">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="79b05-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
  - uid: 'excel!Excel.Workbook#load:member(2)'
    summary: <span data-ttu-id="79b05-129">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="79b05-130">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="79b05-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="79b05-131">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="79b05-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Workbook#load:member(3)'
    summary: <span data-ttu-id="79b05-132">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="79b05-133">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="79b05-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="79b05-134">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="79b05-134">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Workbook#names:member'
    summary: |-
      <span data-ttu-id="79b05-135">Представляет коллекцию именованных элементов в книге (именованные диапазоны и константы).</span><span class="sxs-lookup"><span data-stu-id="79b05-135">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="79b05-136">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-136">Read-only.</span></span>

      <span data-ttu-id="79b05-137">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-137">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
  - uid: 'excel!Excel.Workbook#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="79b05-138">Происходит при изменении выбора в документе.</span><span class="sxs-lookup"><span data-stu-id="79b05-138">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="79b05-139">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-139">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Workbook#set:member(1)'
    summary: '<span data-ttu-id="79b05-140">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-140">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="79b05-141">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="79b05-141">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="79b05-142">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="79b05-142">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="79b05-143">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="79b05-143">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="79b05-144">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-144">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Workbook#set:member(2)'
    summary: '<span data-ttu-id="79b05-145">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-145">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Workbook:class'
  - uid: 'excel!Excel.Workbook#tables:member'
    summary: |-
      <span data-ttu-id="79b05-146">Представляет коллекцию таблиц, сопоставленных с книгой.</span><span class="sxs-lookup"><span data-stu-id="79b05-146">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="79b05-147">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-147">Read-only.</span></span>

      <span data-ttu-id="79b05-148">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
  - uid: 'excel!Excel.Workbook#toJSON:member(1)'
    summary: '<span data-ttu-id="79b05-149">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="79b05-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="79b05-150">.</span><span class="sxs-lookup"><span data-stu-id="79b05-150"></span></span> <span data-ttu-id="79b05-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="79b05-151"></span></span><!-- --><span data-ttu-id="79b05-152">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Workbook — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="79b05-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="79b05-153">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="79b05-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookData:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#worksheets:member'
    summary: |-
      <span data-ttu-id="79b05-154">Представляет коллекцию листов, сопоставленных с книгой.</span><span class="sxs-lookup"><span data-stu-id="79b05-154">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="79b05-155">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="79b05-155">Read-only.</span></span>

      <span data-ttu-id="79b05-156">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79b05-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Functions:class'
    name: Excel.Functions
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Workbook:class'
    name: Excel.Workbook
  - uid: 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
    name: Excel.Interfaces.WorkbookLoadOptions
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.Workbook#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SelectionChangedEventArgs:interface'
        name: Excel.SelectionChangedEventArgs
        fullName: Excel.SelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
    name: Interfaces.WorkbookUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.Interfaces.WorkbookData:interface'
    name: Excel.Interfaces.WorkbookData
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection