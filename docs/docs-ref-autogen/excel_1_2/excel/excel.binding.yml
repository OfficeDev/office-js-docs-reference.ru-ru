### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Binding:class'
    summary: |-
      <span data-ttu-id="7b786-101">Представляет привязку Office.js, которая определена в книге.</span><span class="sxs-lookup"><span data-stu-id="7b786-101">Represents an Office.js binding that is defined in the workbook.</span></span>

      <span data-ttu-id="7b786-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Binding
    fullName: Excel.Binding
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Binding#context:member'
      - 'excel!Excel.Binding#getRange:member(1)'
      - 'excel!Excel.Binding#getTable:member(1)'
      - 'excel!Excel.Binding#getText:member(1)'
      - 'excel!Excel.Binding#id:member'
      - 'excel!Excel.Binding#load:member(1)'
      - 'excel!Excel.Binding#load:member(2)'
      - 'excel!Excel.Binding#load:member(3)'
      - 'excel!Excel.Binding#onDataChanged:member'
      - 'excel!Excel.Binding#onSelectionChanged:member'
      - 'excel!Excel.Binding#toJSON:member(1)'
      - 'excel!Excel.Binding#type:member'
  - uid: 'excel!Excel.Binding#context:member'
    summary: '<span data-ttu-id="7b786-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="7b786-103">The request context associated with the object.</span></span> <span data-ttu-id="7b786-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7b786-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Binding#getRange:member(1)'
    summary: |-
      <span data-ttu-id="7b786-105">Возвращает представленный привязкой диапазон.</span><span class="sxs-lookup"><span data-stu-id="7b786-105">Returns the range represented by the binding.</span></span> <span data-ttu-id="7b786-106">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="7b786-106">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="7b786-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b786-108">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b786-108">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var range = binding.getRange();
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getTable:member(1)'
    summary: |-
      <span data-ttu-id="7b786-109">Возвращает представленную привязкой таблицу.</span><span class="sxs-lookup"><span data-stu-id="7b786-109">Returns the table represented by the binding.</span></span> <span data-ttu-id="7b786-110">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="7b786-110">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="7b786-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTable()
    fullName: getTable()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTable(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b786-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b786-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var table = binding.getTable();
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getText:member(1)'
    summary: |-
      <span data-ttu-id="7b786-113">Возвращает представленный привязкой текст.</span><span class="sxs-lookup"><span data-stu-id="7b786-113">Returns the text represented by the binding.</span></span> <span data-ttu-id="7b786-114">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="7b786-114">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="7b786-115">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'excel!Excel.Binding#getText~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b786-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b786-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var text = binding.getText();
              binding.load('text');
              return ctx.sync().then(function() {
                  console.log(text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#id:member'
    summary: |-
      <span data-ttu-id="7b786-117">Представляет идентификатор привязки.</span><span class="sxs-lookup"><span data-stu-id="7b786-117">Represents binding identifier.</span></span> <span data-ttu-id="7b786-118">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7b786-118">Read-only.</span></span>

      <span data-ttu-id="7b786-119">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Binding#load:member(1)'
    summary: <span data-ttu-id="7b786-120">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7b786-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7b786-121">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="7b786-121">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7b786-122">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="7b786-122">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7b786-123">`load(option?: string | string[]): Excel.Binding`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7b786-123">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7b786-124">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7b786-124">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7b786-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="7b786-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="7b786-126">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="7b786-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="7b786-127">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7b786-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7b786-128">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="7b786-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7b786-129">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="7b786-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.BindingLoadOptions:interface'
  - uid: 'excel!Excel.Binding#load:member(2)'
    summary: <span data-ttu-id="7b786-130">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7b786-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7b786-131">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7b786-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b786-132">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b786-132">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              binding.load('type');
              return ctx.sync().then(function() {
                  console.log(binding.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="7b786-133">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7b786-133">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Binding#load:member(3)'
    summary: <span data-ttu-id="7b786-134">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7b786-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7b786-135">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7b786-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7b786-136">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7b786-136">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Binding#onDataChanged:member'
    summary: |-
      <span data-ttu-id="7b786-137">Возникает при изменении данных или форматирования в привязке.</span><span class="sxs-lookup"><span data-stu-id="7b786-137">Occurs when data or formatting within the binding is changed.</span></span>

      <span data-ttu-id="7b786-138">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-138">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDataChanged
    fullName: onDataChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Binding#onDataChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b786-139">Примеры</span><span class="sxs-lookup"><span data-stu-id="7b786-139">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");    
              const salesTable = sheet.tables.getItem("SalesTable");
              const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), "Table", "SalesByQuarter");
              salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);

              console.log("The data changed handler is registered.");

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Binding#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="7b786-140">Возникает при изменении выбранного содержимого в привязке.</span><span class="sxs-lookup"><span data-stu-id="7b786-140">Occurs when the selected content in the binding is changed.</span></span>

      <span data-ttu-id="7b786-141">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-141">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Binding#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Binding#toJSON:member(1)'
    summary: '<span data-ttu-id="7b786-142">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7b786-142">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7b786-143">.</span><span class="sxs-lookup"><span data-stu-id="7b786-143"></span></span> <span data-ttu-id="7b786-144">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7b786-144"></span></span><!-- --><span data-ttu-id="7b786-145">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Binding является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.BindingData`</span><span class="sxs-lookup"><span data-stu-id="7b786-145">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`</span></span><!-- --><span data-ttu-id="7b786-146">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="7b786-146">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingData:interface'
        description: ''
  - uid: 'excel!Excel.Binding#type:member'
    summary: |-
      <span data-ttu-id="7b786-147">Возвращает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7b786-147">Returns the type of the binding.</span></span> <span data-ttu-id="7b786-148">Дополнительные сведения см. в статье Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="7b786-148">See Excel.BindingType for details.</span></span> <span data-ttu-id="7b786-149">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7b786-149">Read-only.</span></span>

      <span data-ttu-id="7b786-150">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b786-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
      return:
        type:
          - 'excel!Excel.Binding#type~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Binding#getText~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.Interfaces.BindingLoadOptions:interface'
    name: Excel.Interfaces.BindingLoadOptions
  - uid: 'excel!Excel.Binding#onDataChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.BindingDataChangedEventArgs:interface'
        name: Excel.BindingDataChangedEventArgs
        fullName: Excel.BindingDataChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Binding#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.BindingSelectionChangedEventArgs:interface'
        name: Excel.BindingSelectionChangedEventArgs
        fullName: Excel.BindingSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.BindingData:interface'
    name: Excel.Interfaces.BindingData
  - uid: 'excel!Excel.Binding#type~0:complex'
    name: Excel.BindingType | "Range" | "Table" | "Text"
    fullName: Excel.BindingType | "Range" | "Table" | "Text"
    spec.typeScript:
      - uid: 'excel!Excel.BindingType:enum'
        name: Excel.BindingType
        fullName: Excel.BindingType
      - name: ' | "Range" | "Table" | "Text"'
        fullName: ' | "Range" | "Table" | "Text"'