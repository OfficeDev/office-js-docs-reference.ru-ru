### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Table:class'
    summary: |-
      <span data-ttu-id="0ce35-101">Представляет таблицу Excel.</span><span class="sxs-lookup"><span data-stu-id="0ce35-101">Represents an Excel table.</span></span> <span data-ttu-id="0ce35-102">Чтобы узнать больше об объектной модели таблиц, прочтите [работу с таблицами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span><span class="sxs-lookup"><span data-stu-id="0ce35-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="0ce35-103">.</span><span class="sxs-lookup"><span data-stu-id="0ce35-103"></span></span>

      <span data-ttu-id="0ce35-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Table#clearFilters:member(1)'
      - 'excel!Excel.Table#columns:member'
      - 'excel!Excel.Table#context:member'
      - 'excel!Excel.Table#convertToRange:member(1)'
      - 'excel!Excel.Table#delete:member(1)'
      - 'excel!Excel.Table#getDataBodyRange:member(1)'
      - 'excel!Excel.Table#getHeaderRowRange:member(1)'
      - 'excel!Excel.Table#getRange:member(1)'
      - 'excel!Excel.Table#getTotalRowRange:member(1)'
      - 'excel!Excel.Table#highlightFirstColumn:member'
      - 'excel!Excel.Table#highlightLastColumn:member'
      - 'excel!Excel.Table#id:member'
      - 'excel!Excel.Table#load:member(1)'
      - 'excel!Excel.Table#load:member(2)'
      - 'excel!Excel.Table#load:member(3)'
      - 'excel!Excel.Table#name:member'
      - 'excel!Excel.Table#onChanged:member'
      - 'excel!Excel.Table#onSelectionChanged:member'
      - 'excel!Excel.Table#reapplyFilters:member(1)'
      - 'excel!Excel.Table#rows:member'
      - 'excel!Excel.Table#set:member(1)'
      - 'excel!Excel.Table#set:member(2)'
      - 'excel!Excel.Table#showBandedColumns:member'
      - 'excel!Excel.Table#showBandedRows:member'
      - 'excel!Excel.Table#showFilterButton:member'
      - 'excel!Excel.Table#showHeaders:member'
      - 'excel!Excel.Table#showTotals:member'
      - 'excel!Excel.Table#sort:member'
      - 'excel!Excel.Table#style:member'
      - 'excel!Excel.Table#toJSON:member(1)'
      - 'excel!Excel.Table#worksheet:member'
  - uid: 'excel!Excel.Table#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-105">Удаляет все фильтры, примененные к таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-105">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="0ce35-106">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-106">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#columns:member'
    summary: |-
      <span data-ttu-id="0ce35-107">Представляет коллекцию всех столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-107">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="0ce35-108">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-108">Read-only.</span></span>

      <span data-ttu-id="0ce35-109">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
  - uid: 'excel!Excel.Table#context:member'
    summary: '<span data-ttu-id="0ce35-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="0ce35-110">The request context associated with the object.</span></span> <span data-ttu-id="0ce35-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="0ce35-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Table#convertToRange:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-112">Преобразовывает таблицу в обычный диапазон ячеек.</span><span class="sxs-lookup"><span data-stu-id="0ce35-112">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="0ce35-113">Все данные сохраняются.</span><span class="sxs-lookup"><span data-stu-id="0ce35-113">All data is preserved.</span></span>

      <span data-ttu-id="0ce35-114">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-114">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-115">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#delete:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-116">Удаляет таблицу.</span><span class="sxs-lookup"><span data-stu-id="0ce35-116">Deletes the table.</span></span>

      <span data-ttu-id="0ce35-117">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-119">Получает объект диапазона, связанный с основными данными таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-119">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="0ce35-120">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-121">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getHeaderRowRange:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-122">Получает объект диапазона, связанный со строкой заголовков таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-122">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="0ce35-123">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-124">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getRange:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-125">Получает объект диапазона, связанный со всей таблицей.</span><span class="sxs-lookup"><span data-stu-id="0ce35-125">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="0ce35-126">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-127">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-127">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getTotalRowRange:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-128">Получает объект диапазона, связанный со строкой итогов таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-128">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="0ce35-129">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-130">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#highlightFirstColumn:member'
    summary: |-
      <span data-ttu-id="0ce35-131">Указывает, содержит ли первый столбец специальное форматирование.</span><span class="sxs-lookup"><span data-stu-id="0ce35-131">Indicates whether the first column contains special formatting.</span></span>

      <span data-ttu-id="0ce35-132">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-132">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightFirstColumn
    fullName: highlightFirstColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightFirstColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#highlightLastColumn:member'
    summary: |-
      <span data-ttu-id="0ce35-133">Указывает, содержит ли последний столбец специальное форматирование.</span><span class="sxs-lookup"><span data-stu-id="0ce35-133">Indicates whether the last column contains special formatting.</span></span>

      <span data-ttu-id="0ce35-134">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-134">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightLastColumn
    fullName: highlightLastColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightLastColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#id:member'
    summary: |-
      <span data-ttu-id="0ce35-p105">Возвращает значение, однозначно идентифицирующее таблицу в данной книге. Значение идентификатора остается прежним, даже если переименовать таблицу. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-p105">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="0ce35-138">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#load:member(1)'
    summary: <span data-ttu-id="0ce35-139">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ce35-140">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0ce35-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="0ce35-141">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-141">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableLoadOptions:interface'
  - uid: 'excel!Excel.Table#load:member(2)'
    summary: <span data-ttu-id="0ce35-142">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ce35-143">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0ce35-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-144">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-144">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="0ce35-145">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0ce35-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Table#load:member(3)'
    summary: <span data-ttu-id="0ce35-146">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ce35-147">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0ce35-147">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0ce35-148">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0ce35-148">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Table#name:member'
    summary: |-
      <span data-ttu-id="0ce35-149">Имя таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-149">Name of the table.</span></span>

      <span data-ttu-id="0ce35-150">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#onChanged:member'
    summary: |-
      <span data-ttu-id="0ce35-151">Происходит при изменении данных в ячейках в определенной таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-151">Occurs when data in cells changes on a specific table.</span></span>

      <span data-ttu-id="0ce35-152">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-152">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-153">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-153">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="0ce35-154">Возникает при изменении выбора в определенной таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-154">Occurs when the selection changes on a specific table.</span></span>

      <span data-ttu-id="0ce35-155">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-155">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onSelectionChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ce35-156">Примеры</span><span class="sxs-lookup"><span data-stu-id="0ce35-156">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onSelectionChanged.add(onSelectionChange);

              await context.sync();
              console.log("A handler has been registered for table onSelectionChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#reapplyFilters:member(1)'
    summary: |-
      <span data-ttu-id="0ce35-157">Повторно применяет все текущие фильтры к таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-157">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="0ce35-158">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-158">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#rows:member'
    summary: |-
      <span data-ttu-id="0ce35-159">Представляет коллекцию всех строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="0ce35-159">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="0ce35-160">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-160">Read-only.</span></span>

      <span data-ttu-id="0ce35-161">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
  - uid: 'excel!Excel.Table#set:member(1)'
    summary: '<span data-ttu-id="0ce35-162">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-162">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0ce35-163">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="0ce35-163">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="0ce35-164">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="0ce35-164">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="0ce35-165">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="0ce35-165">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="0ce35-166">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-166">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Table#set:member(2)'
    summary: '<span data-ttu-id="0ce35-167">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-167">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Table:class'
  - uid: 'excel!Excel.Table#showBandedColumns:member'
    summary: |-
      <span data-ttu-id="0ce35-168">Указывает, чередуется ли форматирование четных и нечетных столбцов для более удобного просмотра таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-168">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="0ce35-169">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-169">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedColumns
    fullName: showBandedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedColumns: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showBandedRows:member'
    summary: |-
      <span data-ttu-id="0ce35-170">Указывает, чередуется ли форматирование четных и нечетных строк для более удобного просмотра таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-170">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="0ce35-171">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-171">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedRows
    fullName: showBandedRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedRows: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showFilterButton:member'
    summary: |-
      <span data-ttu-id="0ce35-p111">Указывает, видны ли кнопки фильтрации в верхней части заголовков столбцов. Это свойство можно использовать, только если таблица содержит строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="0ce35-p111">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>

      <span data-ttu-id="0ce35-174">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-174">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showFilterButton
    fullName: showFilterButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showFilterButton: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showHeaders:member'
    summary: |-
      <span data-ttu-id="0ce35-175">Указывает, отображается ли строка заголовков.</span><span class="sxs-lookup"><span data-stu-id="0ce35-175">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="0ce35-176">Можно задать это значение, чтобы отобразить или скрыть строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="0ce35-176">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="0ce35-177">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-177">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showTotals:member'
    summary: |-
      <span data-ttu-id="0ce35-178">Указывает, отображается ли строка итогов.</span><span class="sxs-lookup"><span data-stu-id="0ce35-178">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="0ce35-179">Можно задать это значение, чтобы отобразить или скрыть строку итогов.</span><span class="sxs-lookup"><span data-stu-id="0ce35-179">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="0ce35-180">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-180">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#sort:member'
    summary: |-
      <span data-ttu-id="0ce35-181">Представляет сортировку для таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-181">Represents the sorting for the table.</span></span> <span data-ttu-id="0ce35-182">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-182">Read-only.</span></span>

      <span data-ttu-id="0ce35-183">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-183">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
  - uid: 'excel!Excel.Table#style:member'
    summary: |-
      <span data-ttu-id="0ce35-184">Постоянное значение, представляющее стиль таблицы.</span><span class="sxs-lookup"><span data-stu-id="0ce35-184">Constant value that represents the Table style.</span></span> <span data-ttu-id="0ce35-185">Возможные значения: "TableStyleLight1", "TableStyleLight21", "TableStyleMedium1", "TableStyleMedium28", "TableStyleStyleDark1" и "TableStyleStyleDark11".</span><span class="sxs-lookup"><span data-stu-id="0ce35-185">Possible values are: "TableStyleLight1" through "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleStyleDark1" through "TableStyleStyleDark11".</span></span> <span data-ttu-id="0ce35-186">Также можно указать настраиваемый пользовательский стиль, имеющийся в книге.</span><span class="sxs-lookup"><span data-stu-id="0ce35-186">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="0ce35-187">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-187">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="0ce35-188">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0ce35-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0ce35-189">.</span><span class="sxs-lookup"><span data-stu-id="0ce35-189"></span></span> <span data-ttu-id="0ce35-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0ce35-190"></span></span><!-- --><span data-ttu-id="0ce35-191">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Table является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="0ce35-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="0ce35-192">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="0ce35-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableData:interface'
        description: ''
  - uid: 'excel!Excel.Table#worksheet:member'
    summary: |-
      <span data-ttu-id="0ce35-193">Лист, содержащий текущую таблицу.</span><span class="sxs-lookup"><span data-stu-id="0ce35-193">The worksheet containing the current table.</span></span> <span data-ttu-id="0ce35-194">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0ce35-194">Read-only.</span></span>

      <span data-ttu-id="0ce35-195">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ce35-195">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Interfaces.TableLoadOptions:interface'
    name: Excel.Interfaces.TableLoadOptions
  - uid: 'excel!Excel.Table#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableChangedEventArgs:interface'
        name: Excel.TableChangedEventArgs
        fullName: Excel.TableChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Table#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableSelectionChangedEventArgs:interface'
        name: Excel.TableSelectionChangedEventArgs
        fullName: Excel.TableSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableData:interface'
    name: Excel.Interfaces.TableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet