### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartSeries
    summary: |-
      <span data-ttu-id="e4115-101">Представляет ряд в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="e4115-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="e4115-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartSeries.chartType
      - excel.Excel.ChartSeries.context
      - excel.Excel.ChartSeries.delete
      - excel.Excel.ChartSeries.doughnutHoleSize
      - excel.Excel.ChartSeries.filtered
      - excel.Excel.ChartSeries.format
      - excel.Excel.ChartSeries.gapWidth
      - excel.Excel.ChartSeries.hasDataLabels
      - excel.Excel.ChartSeries.load
      - excel.Excel.ChartSeries.load_1
      - excel.Excel.ChartSeries.load_2
      - excel.Excel.ChartSeries.markerBackgroundColor
      - excel.Excel.ChartSeries.markerForegroundColor
      - excel.Excel.ChartSeries.markerSize
      - excel.Excel.ChartSeries.markerStyle
      - excel.Excel.ChartSeries.name
      - excel.Excel.ChartSeries.plotOrder
      - excel.Excel.ChartSeries.points
      - excel.Excel.ChartSeries.set
      - excel.Excel.ChartSeries.set_1
      - excel.Excel.ChartSeries.setBubbleSizes
      - excel.Excel.ChartSeries.setValues
      - excel.Excel.ChartSeries.setXAxisValues
      - excel.Excel.ChartSeries.showShadow
      - excel.Excel.ChartSeries.smooth
      - excel.Excel.ChartSeries.toJSON
      - excel.Excel.ChartSeries.trendlines
  - uid: excel.Excel.ChartSeries.chartType
    summary: |-
      <span data-ttu-id="e4115-103">Представляет тип диаграммы для ряда.</span><span class="sxs-lookup"><span data-stu-id="e4115-103">Represents the chart type of a series.</span></span> <span data-ttu-id="e4115-104">Дополнительные сведения см. в статье Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="e4115-104">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="e4115-105">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel.Excel.ChartSeries.context
    summary: '<span data-ttu-id="e4115-106">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="e4115-106">The request context associated with the object.</span></span> <span data-ttu-id="e4115-107">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e4115-107">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartSeries.delete
    summary: |-
      <span data-ttu-id="e4115-108">Удаляет ряд диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-108">Deletes the chart series.</span></span>

      <span data-ttu-id="e4115-109">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-109">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      <span data-ttu-id="e4115-111">Представляет размер отверстия ряда кольцевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-111">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="e4115-112">Допустимо только в doughnutExploded и кольцевых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="e4115-112">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="e4115-113">Создает исключение недопустимого аргумента на недопустимых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="e4115-113">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="e4115-114">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.filtered
    summary: |-
      <span data-ttu-id="e4115-115">Логическое значение, которое указывает, фильтруется ли ряд.</span><span class="sxs-lookup"><span data-stu-id="e4115-115">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="e4115-116">Неприменимо для поверхностных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="e4115-116">Not applicable for surface charts.</span></span>

      <span data-ttu-id="e4115-117">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.format
    summary: |-
      <span data-ttu-id="e4115-118">Представляет форматирование ряда диаграммы, включая формат заливки и линий.</span><span class="sxs-lookup"><span data-stu-id="e4115-118">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="e4115-119">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e4115-119">Read-only.</span></span>

      <span data-ttu-id="e4115-120">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel.Excel.ChartSeries.gapWidth
    summary: |-
      <span data-ttu-id="e4115-121">Представляет ширину разрывов рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-121">Represents the gap width of a chart series.</span></span> <span data-ttu-id="e4115-122">Допустимы только на линейчатых диаграммах и гистограммах, а также определенных классах линий и круговых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="e4115-122">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="e4115-123">Создает исключение недопустимого аргумента на недопустимых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="e4115-123">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="e4115-124">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-124">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.hasDataLabels
    summary: |-
      <span data-ttu-id="e4115-125">Логическое значение, которое указывает, имеют ли ряды метки данных.</span><span class="sxs-lookup"><span data-stu-id="e4115-125">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="e4115-126">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.load
    summary: <span data-ttu-id="e4115-127">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e4115-128">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e4115-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e4115-129">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="e4115-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e4115-130">`load(option?: string | string[]): Excel.ChartSeries`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e4115-130">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e4115-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e4115-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e4115-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="e4115-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="e4115-133">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="e4115-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="e4115-134">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e4115-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e4115-135">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="e4115-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e4115-136">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="e4115-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel.Excel.ChartSeries.load_1
    summary: <span data-ttu-id="e4115-137">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e4115-138">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e4115-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-139">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-139">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e4115-140">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e4115-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartSeries.load_2
    summary: <span data-ttu-id="e4115-141">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e4115-142">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e4115-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e4115-143">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e4115-143">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      <span data-ttu-id="e4115-144">Представляет цвет фона маркеров для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-144">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="e4115-145">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-145">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-146">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerForegroundColor
    summary: |-
      <span data-ttu-id="e4115-147">Представляет цвет переднего плана для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-147">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="e4115-148">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-148">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-149">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-149">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerSize
    summary: |-
      <span data-ttu-id="e4115-150">Представляет размер маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-150">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="e4115-151">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-151">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-152">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-152">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerStyle
    summary: |-
      <span data-ttu-id="e4115-153">Представляет стиль маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-153">Represents marker style of a chart series.</span></span> <span data-ttu-id="e4115-154">Дополнительные сведения см. в статье Excel. Чартмаркерстиле.</span><span class="sxs-lookup"><span data-stu-id="e4115-154">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="e4115-155">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-155">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-156">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-156">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.name
    summary: |-
      <span data-ttu-id="e4115-157">Представляет имя ряда в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="e4115-157">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="e4115-158">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartSeries.plotOrder
    summary: |-
      <span data-ttu-id="e4115-159">Представляет порядок построения рядов диаграммы в группе диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-159">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="e4115-160">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-160">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.points
    summary: |-
      <span data-ttu-id="e4115-161">Представляет коллекцию всех точек в ряду.</span><span class="sxs-lookup"><span data-stu-id="e4115-161">Represents a collection of all points in the series.</span></span> <span data-ttu-id="e4115-162">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e4115-162">Read-only.</span></span>

      <span data-ttu-id="e4115-163">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel.Excel.ChartSeries.set
    summary: '<span data-ttu-id="e4115-164">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-164">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e4115-165">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="e4115-165">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e4115-166">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="e4115-166">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e4115-167">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e4115-167">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: '<span data-ttu-id="e4115-168">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e4115-168">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartSeries.set_1
    summary: '<span data-ttu-id="e4115-169">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-169">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel.Excel.ChartSeries.setBubbleSizes
    summary: |-
      <span data-ttu-id="e4115-170">Задает размеры пузырьков для ряда диаграммы.</span><span class="sxs-lookup"><span data-stu-id="e4115-170">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="e4115-171">Применяется только для пузырьковых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="e4115-171">Only works for bubble charts.</span></span>

      <span data-ttu-id="e4115-172">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="e4115-173">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="e4115-173">The Range object corresponding to the source data.</span></span>'
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setValues
    summary: |-
      <span data-ttu-id="e4115-174">Задает значения для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="e4115-174">Set values for a chart series.</span></span> <span data-ttu-id="e4115-175">Для точечной диаграммы это соответствует значениям оси Y.</span><span class="sxs-lookup"><span data-stu-id="e4115-175">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="e4115-176">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-176">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e4115-177">Примеры</span><span class="sxs-lookup"><span data-stu-id="e4115-177">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="e4115-178">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="e4115-178">The Range object corresponding to the source data.</span></span>'
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setXAxisValues
    summary: |-
      <span data-ttu-id="e4115-179">Задает значения оси X для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="e4115-179">Set values of X axis for a chart series.</span></span> <span data-ttu-id="e4115-180">Применяется только для точечных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="e4115-180">Only works for scatter charts.</span></span>

      <span data-ttu-id="e4115-181">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-181">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: '<span data-ttu-id="e4115-182">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="e4115-182">The Range object corresponding to the source data.</span></span>'
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.showShadow
    summary: |-
      <span data-ttu-id="e4115-183">Логическое значение, указывающее, есть ли у ряда теневая копия.</span><span class="sxs-lookup"><span data-stu-id="e4115-183">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="e4115-184">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-184">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.smooth
    summary: |-
      <span data-ttu-id="e4115-185">Логическое значение, которое указывает, является ли ряд плавным. </span><span class="sxs-lookup"><span data-stu-id="e4115-185">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="e4115-186">Применяется только к графикам и точечным диаграммам.</span><span class="sxs-lookup"><span data-stu-id="e4115-186">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="e4115-187">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-187">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.toJSON
    summary: '<span data-ttu-id="e4115-188">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e4115-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e4115-189">.</span><span class="sxs-lookup"><span data-stu-id="e4115-189"></span></span> <span data-ttu-id="e4115-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e4115-190"></span></span><!-- --><span data-ttu-id="e4115-191">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ChartSeries — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="e4115-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="e4115-192">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e4115-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel.Excel.ChartSeries.trendlines
    summary: |-
      <span data-ttu-id="e4115-193">Представляет коллекцию линий тренда в ряду.</span><span class="sxs-lookup"><span data-stu-id="e4115-193">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="e4115-194">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e4115-194">Read-only.</span></span>

      <span data-ttu-id="e4115-195">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e4115-195">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection