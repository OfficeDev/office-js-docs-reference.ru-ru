### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorkbookProtection:class'
    summary: |-
      <span data-ttu-id="0632e-101">Представляет защиту объекта книги.</span><span class="sxs-lookup"><span data-stu-id="0632e-101">Represents the protection of a workbook object.</span></span>

      <span data-ttu-id="0632e-102">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0632e-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorkbookProtection#context:member'
      - 'excel!Excel.WorkbookProtection#load:member(1)'
      - 'excel!Excel.WorkbookProtection#load:member(2)'
      - 'excel!Excel.WorkbookProtection#load:member(3)'
      - 'excel!Excel.WorkbookProtection#protect:member(1)'
      - 'excel!Excel.WorkbookProtection#protected:member'
      - 'excel!Excel.WorkbookProtection#toJSON:member(1)'
      - 'excel!Excel.WorkbookProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorkbookProtection#context:member'
    summary: '<span data-ttu-id="0632e-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="0632e-103">The request context associated with the object.</span></span> <span data-ttu-id="0632e-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="0632e-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorkbookProtection#load:member(1)'
    summary: <span data-ttu-id="0632e-105">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0632e-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0632e-106">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="0632e-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="0632e-107">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="0632e-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0632e-108">`load(option?: string | string[]): Excel.WorkbookProtection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0632e-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0632e-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0632e-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0632e-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="0632e-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="0632e-111">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="0632e-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="0632e-112">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="0632e-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0632e-113">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="0632e-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0632e-114">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="0632e-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorkbookProtection#load:member(2)'
    summary: <span data-ttu-id="0632e-115">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0632e-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0632e-116">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0632e-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="0632e-117">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0632e-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorkbookProtection#load:member(3)'
    summary: <span data-ttu-id="0632e-118">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0632e-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0632e-119">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0632e-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0632e-120">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0632e-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.WorkbookProtection#protect:member(1)'
    summary: |-
      <span data-ttu-id="0632e-121">Защищает книгу.</span><span class="sxs-lookup"><span data-stu-id="0632e-121">Protects a workbook.</span></span> <span data-ttu-id="0632e-122">Выдает ошибку, если книга защищена.</span><span class="sxs-lookup"><span data-stu-id="0632e-122">Fails if the workbook has been protected.</span></span>

      <span data-ttu-id="0632e-123">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0632e-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0632e-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="0632e-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="0632e-125">пароль для защиты книги.</span><span class="sxs-lookup"><span data-stu-id="0632e-125">workbook protection password.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorkbookProtection#protected:member'
    summary: |-
      <span data-ttu-id="0632e-126">Указывает, защищена ли книга.</span><span class="sxs-lookup"><span data-stu-id="0632e-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="0632e-127">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0632e-127">Read-Only.</span></span>

      <span data-ttu-id="0632e-128">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0632e-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorkbookProtection#toJSON:member(1)'
    summary: '<span data-ttu-id="0632e-129">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0632e-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0632e-130">.</span><span class="sxs-lookup"><span data-stu-id="0632e-130"></span></span> <span data-ttu-id="0632e-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0632e-131"></span></span><!-- --><span data-ttu-id="0632e-132">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Воркбукпротектион — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="0632e-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="0632e-133">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="0632e-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorkbookProtection#unprotect:member(1)'
    summary: |-
      <span data-ttu-id="0632e-134">Снимает защиту с книги.</span><span class="sxs-lookup"><span data-stu-id="0632e-134">Unprotects a workbook.</span></span>

      <span data-ttu-id="0632e-135">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0632e-135">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0632e-136">Примеры</span><span class="sxs-lookup"><span data-stu-id="0632e-136">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="0632e-137">пароль для защиты книги.</span><span class="sxs-lookup"><span data-stu-id="0632e-137">workbook protection password.</span></span>
          type:
            - string
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorkbookProtection:class'
    name: Excel.WorkbookProtection
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
    name: Excel.Interfaces.WorkbookProtectionData