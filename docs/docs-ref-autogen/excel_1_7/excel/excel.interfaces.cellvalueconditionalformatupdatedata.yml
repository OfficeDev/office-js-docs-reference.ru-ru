### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.CellValueConditionalFormatUpdateData:interface'
    summary: 'Интерфейс для обновления данных объекта Целлвалуекондитионалформат, используемый в`cellValueConditionalFormat.set({ ... })`<!-- -->.'
    name: Excel.Interfaces.CellValueConditionalFormatUpdateData
    fullName: Excel.Interfaces.CellValueConditionalFormatUpdateData
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.CellValueConditionalFormatUpdateData#format:member'
      - 'excel!Excel.Interfaces.CellValueConditionalFormatUpdateData#rule:member'
  - uid: 'excel!Excel.Interfaces.CellValueConditionalFormatUpdateData#format:member'
    summary: |-
      Возвращает объект Format, который инкапсулирует шрифты условного форматирования, заливки, границы и другие свойства.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format?: Excel.Interfaces.ConditionalRangeFormatUpdateData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFormatUpdateData:interface'
  - uid: 'excel!Excel.Interfaces.CellValueConditionalFormatUpdateData#rule:member'
    summary: |-
      Представляет объект Rule в этом условном форматировании.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule?: Excel.ConditionalCellValueRule;'
      return:
        type:
          - 'excel!Excel.ConditionalCellValueRule:interface'
references:
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFormatUpdateData:interface'
    name: Excel.Interfaces.ConditionalRangeFormatUpdateData
  - uid: 'excel!Excel.ConditionalCellValueRule:interface'
    name: Excel.ConditionalCellValueRule