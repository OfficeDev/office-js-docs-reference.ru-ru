### YamlMime:TSType
name: Excel.Application
uid: excel!Excel.Application:class
package: excel!
fullName: Excel.Application
summary: >-
  Представляет приложение Excel, которое управляет книгой.


  \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: calculationMode
  uid: excel!Excel.Application#calculationMode:member
  package: excel!
  fullName: calculationMode
  summary: >-
    Возвращает режим вычисления, используемый в книге, как это определено константами в `Excel.CalculationMode`<!-- -->. Возможные значения: `Automatic`<!-- -->, где Excel контролирует пересчет; `AutomaticExceptTables`<!-- -->, где Excel контролирует пересчет, но игнорирует изменения в таблицах; `Manual`<!-- -->, где вычисление делается, когда пользователь запрашивает его.


    \[[Набор API: ExcelApi 1.1 для получения, 1.8 для набора](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type: <xref uid="excel!Excel.CalculationMode:enum" /> | "Automatic" | "AutomaticExceptTables" | "Manual"
- name: context
  uid: excel!Excel.Application#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
methods:
- name: calculate(calculationType)
  uid: excel!Excel.Application#calculate:member(1)
  package: excel!
  fullName: calculate(calculationType)
  summary: >-
    Пересчитывает данные во всех открытых в текущий момент книгах Excel.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    parameters:
    - id: calculationType
      description: Определяет тип расчета, который нужно использовать. Подробные `Excel.CalculationType` сведения см. в материале.
      type: <xref uid="excel!Excel.CalculationType:enum" />
    return:
      type: void
      description: ''
- name: calculate(calculationTypeString)
  uid: excel!Excel.Application#calculate:member(2)
  package: excel!
  fullName: calculate(calculationTypeString)
  summary: >-
    Пересчитывает данные во всех открытых в текущий момент книгах Excel.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    parameters:
    - id: calculationTypeString
      description: Определяет тип расчета, который нужно использовать. Подробные `Excel.CalculationType` сведения см. в материале.
      type: "\"Recalculate\" | \"Full\" | \"FullRebuild\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.Application#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых необходимо загрузить свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.ApplicationLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Application#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Application#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Application;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` является запятой, которая указывает свойства для загрузки, и является строкой, запятой, которая указывает свойства навигации для `propertyNamesAndPaths.expand` загрузки.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Application#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Задает несколько свойств объекта одновременно. Можно передать либо обычный объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Excel.Application): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, структурированными изоморфно, с свойствами объекта, на который вызван метод.
      type: <xref uid="excel!Excel.Interfaces.ApplicationUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавления ошибок, если объект свойств пытается установить любые свойства только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Application#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Задает несколько свойств на объекте одновременно на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Application): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Application:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Application#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект Excel.Application является объектом API, метод возвращает простой объект `toJSON` JavaScript (введите как `Excel.Interfaces.ApplicationData`<!-- -->), содержащий неглубокие копии любых загруженных свойств ребенка из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ApplicationData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 20d16a73605fe36bfb8ce9043f82f8001a776812
  ms.sourcegitcommit: ce09743deb2fc2a879cd63f96c8ff11ec84a42b2
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 04/02/2021
  ms.locfileid: "51515352"
