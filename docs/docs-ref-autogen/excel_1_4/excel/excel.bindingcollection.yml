### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.BindingCollection:class'
    summary: |-
      <span data-ttu-id="22d57-101">Представляет коллекцию всех объектов привязки, включенных в книгу.</span><span class="sxs-lookup"><span data-stu-id="22d57-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="22d57-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.BindingCollection#add:member(1)'
      - 'excel!Excel.BindingCollection#add:member(2)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(1)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(2)'
      - 'excel!Excel.BindingCollection#context:member'
      - 'excel!Excel.BindingCollection#count:member'
      - 'excel!Excel.BindingCollection#getCount:member(1)'
      - 'excel!Excel.BindingCollection#getItem:member(1)'
      - 'excel!Excel.BindingCollection#getItemAt:member(1)'
      - 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.BindingCollection#items:member'
      - 'excel!Excel.BindingCollection#load:member(1)'
      - 'excel!Excel.BindingCollection#load:member(2)'
      - 'excel!Excel.BindingCollection#load:member(3)'
      - 'excel!Excel.BindingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.BindingCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="22d57-103">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="22d57-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="22d57-104">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="22d57-p101">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="22d57-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~0:complex'
        - id: bindingType
          description: <span data-ttu-id="22d57-108">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-108">Type of binding.</span></span> <span data-ttu-id="22d57-109">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-109">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="22d57-110">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-110">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#add:member(2)'
    summary: |-
      <span data-ttu-id="22d57-111">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="22d57-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="22d57-112">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="22d57-p103">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="22d57-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~1:complex'
        - id: bindingTypeString
          description: <span data-ttu-id="22d57-116">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-116">Type of binding.</span></span> <span data-ttu-id="22d57-117">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="22d57-118">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-118">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    summary: |-
      <span data-ttu-id="22d57-119">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="22d57-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="22d57-120">Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="22d57-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="22d57-121">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: '<span data-ttu-id="22d57-122">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="22d57-122">Name from which to create binding.</span></span>'
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="22d57-123">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-123">Type of binding.</span></span> <span data-ttu-id="22d57-124">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-124">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="22d57-125">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-125">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
    summary: |-
      <span data-ttu-id="22d57-126">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="22d57-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="22d57-127">Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="22d57-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="22d57-128">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: '<span data-ttu-id="22d57-129">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="22d57-129">Name from which to create binding.</span></span>'
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="22d57-130">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-130">Type of binding.</span></span> <span data-ttu-id="22d57-131">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="22d57-132">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-132">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    summary: |-
      <span data-ttu-id="22d57-133">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="22d57-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="22d57-134">Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="22d57-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="22d57-135">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="22d57-136">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-136">Type of binding.</span></span> <span data-ttu-id="22d57-137">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-137">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="22d57-138">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-138">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(2)'
    summary: |-
      <span data-ttu-id="22d57-139">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="22d57-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="22d57-140">Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="22d57-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="22d57-141">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="22d57-142">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-142">Type of binding.</span></span> <span data-ttu-id="22d57-143">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="22d57-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="22d57-144">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-144">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#context:member'
    summary: '<span data-ttu-id="22d57-145">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="22d57-145">The request context associated with the object.</span></span> <span data-ttu-id="22d57-146">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="22d57-146">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.BindingCollection#count:member'
    summary: |-
      <span data-ttu-id="22d57-147">Возвращает число привязок в коллекции.</span><span class="sxs-lookup"><span data-stu-id="22d57-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="22d57-148">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="22d57-148">Read-only.</span></span>

      <span data-ttu-id="22d57-149">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.BindingCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="22d57-150">Получает количество привязок в коллекции.</span><span class="sxs-lookup"><span data-stu-id="22d57-150">Gets the number of bindings in the collection.</span></span>

      <span data-ttu-id="22d57-151">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.BindingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.BindingCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="22d57-152">Возвращает объект привязки по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="22d57-152">Gets a binding object by ID.</span></span>

      <span data-ttu-id="22d57-153">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="22d57-154">Примеры</span><span class="sxs-lookup"><span data-stu-id="22d57-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="22d57-155">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="22d57-156">Возвращает объект привязки с учетом его положения в массиве элементов.</span><span class="sxs-lookup"><span data-stu-id="22d57-156">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="22d57-157">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="22d57-158">Примеры</span><span class="sxs-lookup"><span data-stu-id="22d57-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="22d57-159">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="22d57-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="22d57-160">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="22d57-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="22d57-161">Получает объект привязки по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="22d57-161">Gets a binding object by ID.</span></span> <span data-ttu-id="22d57-162">Если объект привязки не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="22d57-162">If the binding object does not exist, will return a null object.</span></span>

      <span data-ttu-id="22d57-163">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="22d57-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="22d57-164">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="22d57-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#items:member'
    summary: <span data-ttu-id="22d57-165">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="22d57-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'excel!Excel.BindingCollection#items~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(1)'
    summary: <span data-ttu-id="22d57-166">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="22d57-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="22d57-167">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="22d57-167">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="22d57-168">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="22d57-168">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.BindingCollection#load~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(2)'
    summary: <span data-ttu-id="22d57-169">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="22d57-169">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="22d57-170">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="22d57-170">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="22d57-171">Примеры</span><span class="sxs-lookup"><span data-stu-id="22d57-171">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="22d57-172">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="22d57-172">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.BindingCollection#load:member(3)'
    summary: <span data-ttu-id="22d57-173">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="22d57-173">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="22d57-174">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="22d57-174">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="22d57-175">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="22d57-175">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.BindingCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="22d57-176">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="22d57-176">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="22d57-177">.</span><span class="sxs-lookup"><span data-stu-id="22d57-177"></span></span> <span data-ttu-id="22d57-178">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="22d57-178"></span></span><!-- --><span data-ttu-id="22d57-179">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.BindingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="22d57-179">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="22d57-180">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="22d57-180">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.BindingCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.BindingType:enum'
    name: Excel.BindingType
  - uid: 'excel!Excel.BindingCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.BindingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.BindingCollection#items~0:complex'
    name: 'Excel.Binding[]'
    fullName: 'Excel.Binding[]'
    spec.typeScript:
      - uid: 'excel!Excel.Binding:class'
        name: Excel.Binding
        fullName: Excel.Binding
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.BindingCollection#load~0:complex'
    name: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.BindingCollectionLoadOptions:interface'
        name: Excel.Interfaces.BindingCollectionLoadOptions
        fullName: Excel.Interfaces.BindingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.BindingCollectionData:interface'
    name: Excel.Interfaces.BindingCollectionData