### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Workbook:class'
    summary: |-
      Workbook — это объект верхнего уровня, содержащий связанные объекты книг, такие как листы, таблицы, диапазоны и т. д. Чтобы узнать больше об объектной модели книги, читайте [работу с книгами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Workbook#application:member'
      - 'excel!Excel.Workbook#bindings:member'
      - 'excel!Excel.Workbook#context:member'
      - 'excel!Excel.Workbook#functions:member'
      - 'excel!Excel.Workbook#getSelectedRange:member(1)'
      - 'excel!Excel.Workbook#load:member(1)'
      - 'excel!Excel.Workbook#load:member(2)'
      - 'excel!Excel.Workbook#load:member(3)'
      - 'excel!Excel.Workbook#names:member'
      - 'excel!Excel.Workbook#onSelectionChanged:member'
      - 'excel!Excel.Workbook#pivotTables:member'
      - 'excel!Excel.Workbook#set:member(1)'
      - 'excel!Excel.Workbook#set:member(2)'
      - 'excel!Excel.Workbook#settings:member'
      - 'excel!Excel.Workbook#tables:member'
      - 'excel!Excel.Workbook#toJSON:member(1)'
      - 'excel!Excel.Workbook#worksheets:member'
  - uid: 'excel!Excel.Workbook#application:member'
    summary: |-
      Представляет экземпляр приложения Excel, который содержит эту книгу. Только для чтения.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Workbook#bindings:member'
    summary: |-
      Представляет коллекцию привязок, включенных в книгу. Только для чтения.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
  - uid: 'excel!Excel.Workbook#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Workbook#functions:member'
    summary: |-
      Представляет коллекцию функций листа, которые можно использовать для вычислений. Только для чтения.

      \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - 'excel!Excel.Functions:class'
  - uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    summary: |-
      Получает текущий выделенный диапазон из книги. Если выбрано несколько диапазонов, этот метод выдаст ошибку.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Workbook#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: options
          description: 'Предоставляет параметры, для которых загружается свойства объекта.'
          type:
            - 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
  - uid: 'excel!Excel.Workbook#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Workbook#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Workbook;
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Workbook#names:member'
    summary: |-
      Представляет коллекцию именованных элементов в книге (именованные диапазоны и константы). Только для чтения.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
  - uid: 'excel!Excel.Workbook#onSelectionChanged:member'
    summary: |-
      Происходит при изменении выбора в документе.

      \[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Workbook#pivotTables:member'
    summary: |-
      Представляет коллекцию сводных таблиц, сопоставленных с книгой. Только для чтения.

      \[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
  - uid: 'excel!Excel.Workbook#set:member(1)'
    summary: 'Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.'
    remarks: |-
      Этот метод имеет следующую дополнительную подпись:

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.'
          type:
            - 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
        - id: options
          description: 'Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Workbook#set:member(2)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Workbook:class'
  - uid: 'excel!Excel.Workbook#settings:member'
    summary: |-
      Представляет коллекцию параметров, сопоставленных с книгой. Только для чтения.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
  - uid: 'excel!Excel.Workbook#tables:member'
    summary: |-
      Представляет коллекцию таблиц, сопоставленных с книгой. Только для чтения.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
  - uid: 'excel!Excel.Workbook#toJSON:member(1)'
    summary: 'Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Workbook — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.WorkbookData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookData:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#worksheets:member'
    summary: |-
      Представляет коллекцию листов, сопоставленных с книгой. Только для чтения.

      \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Functions:class'
    name: Excel.Functions
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Workbook:class'
    name: Excel.Workbook
  - uid: 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
    name: Excel.Interfaces.WorkbookLoadOptions
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.Workbook#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SelectionChangedEventArgs:interface'
        name: Excel.SelectionChangedEventArgs
        fullName: Excel.SelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
    name: Interfaces.WorkbookUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SettingCollection:class'
    name: Excel.SettingCollection
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.Interfaces.WorkbookData:interface'
    name: Excel.Interfaces.WorkbookData
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection