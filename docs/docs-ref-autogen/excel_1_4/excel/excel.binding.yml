### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Binding
    summary: |-
      <span data-ttu-id="57ca2-101">Представляет привязку Office.js, которая определена в книге.</span><span class="sxs-lookup"><span data-stu-id="57ca2-101">Represents an Office.js binding that is defined in the workbook.</span></span>

      <span data-ttu-id="57ca2-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Binding
    fullName: Excel.Binding
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Binding.context
      - excel.Excel.Binding.delete
      - excel.Excel.Binding.getRange
      - excel.Excel.Binding.getTable
      - excel.Excel.Binding.getText
      - excel.Excel.Binding.id
      - excel.Excel.Binding.load
      - excel.Excel.Binding.load_1
      - excel.Excel.Binding.load_2
      - excel.Excel.Binding.onDataChanged
      - excel.Excel.Binding.onSelectionChanged
      - excel.Excel.Binding.toJSON
      - excel.Excel.Binding.type
  - uid: excel.Excel.Binding.context
    summary: '<span data-ttu-id="57ca2-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="57ca2-103">The request context associated with the object.</span></span> <span data-ttu-id="57ca2-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="57ca2-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Binding.delete
    summary: |-
      <span data-ttu-id="57ca2-105">Удаляет привязку.</span><span class="sxs-lookup"><span data-stu-id="57ca2-105">Deletes the binding.</span></span>

      <span data-ttu-id="57ca2-106">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-106">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Binding.getRange
    summary: |-
      <span data-ttu-id="57ca2-107">Возвращает представленный привязкой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57ca2-107">Returns the range represented by the binding.</span></span> <span data-ttu-id="57ca2-108">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="57ca2-108">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="57ca2-109">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57ca2-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="57ca2-110">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var range = binding.getRange();
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.getTable
    summary: |-
      <span data-ttu-id="57ca2-111">Возвращает представленную привязкой таблицу.</span><span class="sxs-lookup"><span data-stu-id="57ca2-111">Returns the table represented by the binding.</span></span> <span data-ttu-id="57ca2-112">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="57ca2-112">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="57ca2-113">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTable()
    fullName: getTable()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTable(): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57ca2-114">Примеры</span><span class="sxs-lookup"><span data-stu-id="57ca2-114">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var table = binding.getTable();
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.getText
    summary: |-
      <span data-ttu-id="57ca2-115">Возвращает представленный привязкой текст.</span><span class="sxs-lookup"><span data-stu-id="57ca2-115">Returns the text represented by the binding.</span></span> <span data-ttu-id="57ca2-116">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="57ca2-116">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="57ca2-117">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57ca2-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="57ca2-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var text = binding.getText();
              binding.load('text');
              return ctx.sync().then(function() {
                  console.log(text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.id
    summary: |-
      <span data-ttu-id="57ca2-119">Представляет идентификатор привязки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-119">Represents binding identifier.</span></span> <span data-ttu-id="57ca2-120">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57ca2-120">Read-only.</span></span>

      <span data-ttu-id="57ca2-121">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Binding.load
    summary: <span data-ttu-id="57ca2-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57ca2-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57ca2-123">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="57ca2-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="57ca2-124">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="57ca2-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="57ca2-125">`load(option?: string | string[]): Excel.Binding`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-125">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="57ca2-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="57ca2-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="57ca2-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="57ca2-128">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="57ca2-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="57ca2-129">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="57ca2-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="57ca2-130">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="57ca2-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="57ca2-131">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="57ca2-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.BindingLoadOptions
  - uid: excel.Excel.Binding.load_1
    summary: <span data-ttu-id="57ca2-132">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57ca2-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57ca2-133">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="57ca2-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57ca2-134">Примеры</span><span class="sxs-lookup"><span data-stu-id="57ca2-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              binding.load('type');
              return ctx.sync().then(function() {
                  console.log(binding.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="57ca2-135">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Binding.load_2
    summary: <span data-ttu-id="57ca2-136">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57ca2-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57ca2-137">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="57ca2-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="57ca2-138">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-138">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Binding.onDataChanged
    summary: |-
      <span data-ttu-id="57ca2-139">Возникает при изменении данных или форматирования в привязке.</span><span class="sxs-lookup"><span data-stu-id="57ca2-139">Occurs when data or formatting within the binding is changed.</span></span>

      <span data-ttu-id="57ca2-140">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-140">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDataChanged
    fullName: onDataChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57ca2-141">Примеры</span><span class="sxs-lookup"><span data-stu-id="57ca2-141">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");    
              const salesTable = sheet.tables.getItem("SalesTable");
              const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), "Table", "SalesByQuarter");
              salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);

              console.log("The data changed handler is registered.");

              await context.sync();
          });
          ```
  - uid: excel.Excel.Binding.onSelectionChanged
    summary: |-
      <span data-ttu-id="57ca2-142">Возникает при изменении выбранного содержимого в привязке.</span><span class="sxs-lookup"><span data-stu-id="57ca2-142">Occurs when the selected content in the binding is changed.</span></span>

      <span data-ttu-id="57ca2-143">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-143">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
  - uid: excel.Excel.Binding.toJSON
    summary: '<span data-ttu-id="57ca2-144">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="57ca2-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="57ca2-145">.</span><span class="sxs-lookup"><span data-stu-id="57ca2-145"></span></span> <span data-ttu-id="57ca2-146">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="57ca2-146"></span></span><!-- --><span data-ttu-id="57ca2-147">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Binding является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.BindingData`</span><span class="sxs-lookup"><span data-stu-id="57ca2-147">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`</span></span><!-- --><span data-ttu-id="57ca2-148">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="57ca2-148">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingData
        description: ''
  - uid: excel.Excel.Binding.type
    summary: |-
      <span data-ttu-id="57ca2-149">Возвращает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="57ca2-149">Returns the type of the binding.</span></span> <span data-ttu-id="57ca2-150">Дополнительные сведения см. в статье Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="57ca2-150">See Excel.BindingType for details.</span></span> <span data-ttu-id="57ca2-151">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57ca2-151">Read-only.</span></span>

      <span data-ttu-id="57ca2-152">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57ca2-152">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
      return:
        type:
          - Excel.BindingType | "Range" | "Table" | "Text"