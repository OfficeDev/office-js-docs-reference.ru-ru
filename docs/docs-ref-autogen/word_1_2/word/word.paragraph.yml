### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Paragraph:class'
    summary: |-
      <span data-ttu-id="c49b4-101">Представляет один абзац в выделении, диапазоне, элементе управления содержимым или тексте документа.</span><span class="sxs-lookup"><span data-stu-id="c49b4-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="c49b4-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Paragraph#alignment:member'
      - 'word!Word.Paragraph#clear:member(1)'
      - 'word!Word.Paragraph#contentControls:member'
      - 'word!Word.Paragraph#context:member'
      - 'word!Word.Paragraph#delete:member(1)'
      - 'word!Word.Paragraph#firstLineIndent:member'
      - 'word!Word.Paragraph#font:member'
      - 'word!Word.Paragraph#getHtml:member(1)'
      - 'word!Word.Paragraph#getOoxml:member(1)'
      - 'word!Word.Paragraph#inlinePictures:member'
      - 'word!Word.Paragraph#insertBreak:member(1)'
      - 'word!Word.Paragraph#insertBreak:member(2)'
      - 'word!Word.Paragraph#insertContentControl:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(2)'
      - 'word!Word.Paragraph#insertHtml:member(1)'
      - 'word!Word.Paragraph#insertHtml:member(2)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Paragraph#insertOoxml:member(1)'
      - 'word!Word.Paragraph#insertOoxml:member(2)'
      - 'word!Word.Paragraph#insertParagraph:member(1)'
      - 'word!Word.Paragraph#insertParagraph:member(2)'
      - 'word!Word.Paragraph#insertText:member(1)'
      - 'word!Word.Paragraph#insertText:member(2)'
      - 'word!Word.Paragraph#leftIndent:member'
      - 'word!Word.Paragraph#lineSpacing:member'
      - 'word!Word.Paragraph#lineUnitAfter:member'
      - 'word!Word.Paragraph#lineUnitBefore:member'
      - 'word!Word.Paragraph#load:member(1)'
      - 'word!Word.Paragraph#load:member(2)'
      - 'word!Word.Paragraph#load:member(3)'
      - 'word!Word.Paragraph#outlineLevel:member'
      - 'word!Word.Paragraph#parentContentControl:member'
      - 'word!Word.Paragraph#rightIndent:member'
      - 'word!Word.Paragraph#search:member(1)'
      - 'word!Word.Paragraph#select:member(1)'
      - 'word!Word.Paragraph#select:member(2)'
      - 'word!Word.Paragraph#set:member(1)'
      - 'word!Word.Paragraph#set:member(2)'
      - 'word!Word.Paragraph#spaceAfter:member'
      - 'word!Word.Paragraph#spaceBefore:member'
      - 'word!Word.Paragraph#style:member'
      - 'word!Word.Paragraph#text:member'
      - 'word!Word.Paragraph#toJSON:member(1)'
      - 'word!Word.Paragraph#track:member(1)'
      - 'word!Word.Paragraph#untrack:member(1)'
  - uid: 'word!Word.Paragraph#alignment:member'
    summary: |-
      <span data-ttu-id="c49b4-103">Возвращает или задает выравнивание для абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="c49b4-104">Возможные значения: left, centered, right и justified.</span><span class="sxs-lookup"><span data-stu-id="c49b4-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="c49b4-105">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Paragraph#alignment~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#clear:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-107">Очищает содержимое объекта абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-107">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="c49b4-108">Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="c49b4-108">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="c49b4-109">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-110">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#contentControls:member'
    summary: |-
      <span data-ttu-id="c49b4-111">Возвращает коллекцию объектов элементов управления содержимым в абзаце.</span><span class="sxs-lookup"><span data-stu-id="c49b4-111">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="c49b4-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-112">Read-only.</span></span>

      <span data-ttu-id="c49b4-113">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Paragraph#context:member'
    summary: '<span data-ttu-id="c49b4-114">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="c49b4-114">The request context associated with the object.</span></span> <span data-ttu-id="c49b4-115">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="c49b4-115">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Paragraph#delete:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-116">Удаляет абзац и его содержимое из документа.</span><span class="sxs-lookup"><span data-stu-id="c49b4-116">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="c49b4-117">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-117">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#firstLineIndent:member'
    summary: |-
      <span data-ttu-id="c49b4-p105">Возвращает или задает значение отступа первой строки или выступа в пунктах. Для установки отступа первой строки укажите положительное значение и используйте отрицательное значение, чтобы задать выступ.</span><span class="sxs-lookup"><span data-stu-id="c49b4-p105">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="c49b4-121">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#font:member'
    summary: |-
      <span data-ttu-id="c49b4-122">Возвращает формат текста абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-122">Gets the text format of the paragraph.</span></span> <span data-ttu-id="c49b4-123">Используйте это свойство для получения и задания имени, размера, цвета и других свойств шрифта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-123">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="c49b4-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-124">Read-only.</span></span>

      <span data-ttu-id="c49b4-125">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-125">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Paragraph#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-126">Возвращает HTML-представление объекта абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-126">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="c49b4-127">При отображении на веб-странице или в средстве просмотра HTML форматирование будет близким, но не точным, соответствующим формату документа.</span><span class="sxs-lookup"><span data-stu-id="c49b4-127">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="c49b4-128">Этот метод не возвращает точно такой же HTML-код для одного и того же документа на различных платформах (Windows, Mac и т. д.).</span><span class="sxs-lookup"><span data-stu-id="c49b4-128">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="c49b4-129">Если вам нужна точная точность или согласованность на различных платформах `Paragraph.getOoxml()` , используйте и преобразуйте возвращенный XML в HTML.</span><span class="sxs-lookup"><span data-stu-id="c49b4-129">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="c49b4-130">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-131">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-131">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-132">Возвращает OOXML-представление объекта абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-132">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="c49b4-133">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-134">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-134">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#inlinePictures:member'
    summary: |-
      <span data-ttu-id="c49b4-135">Получает коллекцию объектов коллекцию inlinepicture в абзаце.</span><span class="sxs-lookup"><span data-stu-id="c49b4-135">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="c49b4-136">Коллекция не содержит плавающие рисунки.</span><span class="sxs-lookup"><span data-stu-id="c49b4-136">The collection does not include floating images.</span></span> <span data-ttu-id="c49b4-137">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-137">Read-only.</span></span>

      <span data-ttu-id="c49b4-138">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Paragraph#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-139">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="c49b4-139">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="c49b4-140">Возможные значения insertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-140">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="c49b4-141">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-142">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-142">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: '<span data-ttu-id="c49b4-143">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-143">Required.</span></span> <span data-ttu-id="c49b4-144">Тип разрыва, который необходимо добавить в документ.</span><span class="sxs-lookup"><span data-stu-id="c49b4-144">The break type to add to the document.</span></span>'
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-145">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-145">Required.</span></span> <span data-ttu-id="c49b4-146">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-146">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-147">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="c49b4-147">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="c49b4-148">Возможные значения insertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-148">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="c49b4-149">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-149">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-150">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-150">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: '<span data-ttu-id="c49b4-151">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-151">Required.</span></span> <span data-ttu-id="c49b4-152">Тип разрыва, который необходимо добавить в документ.</span><span class="sxs-lookup"><span data-stu-id="c49b4-152">The break type to add to the document.</span></span>'
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-153">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-153">Required.</span></span> <span data-ttu-id="c49b4-154">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-154">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-155">Включает объект абзаца в элемент управления содержимым форматированного текста.</span><span class="sxs-lookup"><span data-stu-id="c49b4-155">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="c49b4-156">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-156">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-157">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-157">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-158">Вставляет документ в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-158">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-159">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-159">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-160">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-160">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="c49b4-161">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-161">Required.</span></span> <span data-ttu-id="c49b4-162">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="c49b4-162">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-163">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-163">Required.</span></span> <span data-ttu-id="c49b4-164">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-164">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-165">Вставляет документ в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-165">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-166">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-166">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-167">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="c49b4-168">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-168">Required.</span></span> <span data-ttu-id="c49b4-169">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="c49b4-169">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-170">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-170">Required.</span></span> <span data-ttu-id="c49b4-171">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-171">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-172">Вставляет HTML в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-172">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-173">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-173">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-174">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-174">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-175">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-175">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="c49b4-176">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-176">Required.</span></span> <span data-ttu-id="c49b4-177">HTML-код, который необходимо вставить в абзац.</span><span class="sxs-lookup"><span data-stu-id="c49b4-177">The HTML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-178">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-178">Required.</span></span> <span data-ttu-id="c49b4-179">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-179">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-180">Вставляет HTML в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-180">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-181">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-181">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-182">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-182">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="c49b4-183">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-183">Required.</span></span> <span data-ttu-id="c49b4-184">HTML-код, который необходимо вставить в абзац.</span><span class="sxs-lookup"><span data-stu-id="c49b4-184">The HTML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-185">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-185">Required.</span></span> <span data-ttu-id="c49b4-186">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-186">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-187">Вставляет рисунок в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-187">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-188">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-188">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-189">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-189">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-190">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-190">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="c49b4-191">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-191">Required.</span></span> <span data-ttu-id="c49b4-192">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="c49b4-192">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-193">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-193">Required.</span></span> <span data-ttu-id="c49b4-194">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-194">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-195">Вставляет рисунок в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-195">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-196">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-197">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="c49b4-198">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-198">Required.</span></span> <span data-ttu-id="c49b4-199">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="c49b4-199">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-200">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-200">Required.</span></span> <span data-ttu-id="c49b4-201">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-202">Вставляет OOXML в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-202">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-203">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-204">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="c49b4-205">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-205">Required.</span></span> <span data-ttu-id="c49b4-206">OOXML, который необходимо вставить в абзац.</span><span class="sxs-lookup"><span data-stu-id="c49b4-206">The OOXML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-207">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-207">Required.</span></span> <span data-ttu-id="c49b4-208">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-208">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-209">Вставляет OOXML в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-209">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-210">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-211">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="c49b4-212">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-212">Required.</span></span> <span data-ttu-id="c49b4-213">OOXML, который необходимо вставить в абзац.</span><span class="sxs-lookup"><span data-stu-id="c49b4-213">The OOXML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-214">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-214">Required.</span></span> <span data-ttu-id="c49b4-215">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-215">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-216">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-216">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-217">Возможные значения InsertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-217">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="c49b4-218">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-218">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-219">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-219">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="c49b4-220">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-220">Required.</span></span> <span data-ttu-id="c49b4-221">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="c49b4-221">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-222">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-222">Required.</span></span> <span data-ttu-id="c49b4-223">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-223">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-224">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-224">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-225">Возможные значения InsertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-225">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="c49b4-226">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="c49b4-227">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-227">Required.</span></span> <span data-ttu-id="c49b4-228">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="c49b4-228">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-229">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-229">Required.</span></span> <span data-ttu-id="c49b4-230">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="c49b4-230">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertText:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-231">Вставляет текст в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-231">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-232">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-232">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-233">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-233">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-234">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-234">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="c49b4-235">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-235">Required.</span></span> <span data-ttu-id="c49b4-236">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="c49b4-236">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="c49b4-237">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-237">Required.</span></span> <span data-ttu-id="c49b4-238">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-238">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertText:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-239">Вставляет текст в абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="c49b4-239">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="c49b4-240">Возможные значения insertLocation: Replace, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="c49b4-241">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: '<span data-ttu-id="c49b4-242">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-242">Required.</span></span> <span data-ttu-id="c49b4-243">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="c49b4-243">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="c49b4-244">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-244">Required.</span></span> <span data-ttu-id="c49b4-245">Возможные значения: Replace, Start или End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-245">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#leftIndent:member'
    summary: |-
      <span data-ttu-id="c49b4-246">Возвращает или задает значение отступа слева для абзаца (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="c49b4-246">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="c49b4-247">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-247">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-248">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-248">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineSpacing:member'
    summary: |-
      <span data-ttu-id="c49b4-249">Возвращает или задает междустрочный интервал для указанного абзаца (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="c49b4-249">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="c49b4-250">В пользовательском интерфейсе Word это значение делится на 12.</span><span class="sxs-lookup"><span data-stu-id="c49b4-250">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="c49b4-251">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-251">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-252">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-252">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineUnitAfter:member'
    summary: |-
      <span data-ttu-id="c49b4-253">Возвращает или задает расстояние от абзаца до абзаца (в линиях сетки).</span><span class="sxs-lookup"><span data-stu-id="c49b4-253">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="c49b4-254">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-254">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#lineUnitBefore:member'
    summary: |-
      <span data-ttu-id="c49b4-255">Возвращает или устанавливает междустрочный интервал до абзаца (в линиях сетки).</span><span class="sxs-lookup"><span data-stu-id="c49b4-255">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="c49b4-256">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-256">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#load:member(1)'
    summary: <span data-ttu-id="c49b4-257">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-257">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c49b4-258">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="c49b4-258">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c49b4-259">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="c49b4-259">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c49b4-260">`load(option?: string | string[]): Word.Paragraph`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c49b4-260">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c49b4-261">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c49b4-261">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c49b4-262">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="c49b4-262">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="c49b4-263">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="c49b4-263">It is similar to the preceding signature.</span></span> <span data-ttu-id="c49b4-264">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="c49b4-264">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c49b4-265">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="c49b4-265">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c49b4-266">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="c49b4-266">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'word!Word.Paragraph#load:member(2)'
    summary: <span data-ttu-id="c49b4-267">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-267">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c49b4-268">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="c49b4-268">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c49b4-269">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c49b4-269">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'word!Word.Paragraph#load:member(3)'
    summary: <span data-ttu-id="c49b4-270">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-270">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c49b4-271">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="c49b4-271">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c49b4-272">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c49b4-272">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Paragraph#outlineLevel:member'
    summary: |-
      <span data-ttu-id="c49b4-273">Возвращает или задает уровень структуры абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-273">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="c49b4-274">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#parentContentControl:member'
    summary: |-
      <span data-ttu-id="c49b4-275">Возвращает элемент управления содержимым, содержащий абзац.</span><span class="sxs-lookup"><span data-stu-id="c49b4-275">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="c49b4-276">Вызывается, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="c49b4-276">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="c49b4-277">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-277">Read-only.</span></span>

      <span data-ttu-id="c49b4-278">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-278">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#rightIndent:member'
    summary: |-
      <span data-ttu-id="c49b4-279">Возвращает или задает значение отступа справа для абзаца (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="c49b4-279">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="c49b4-280">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-280">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#search:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-281">Выполняет поиск с указанным SearchOptions в области объекта абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-281">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="c49b4-282">Результат поиска — это коллекция объектов диапазона.</span><span class="sxs-lookup"><span data-stu-id="c49b4-282">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="c49b4-283">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-283">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="c49b4-284">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-284">Required.</span></span> <span data-ttu-id="c49b4-285">Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="c49b4-285">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="c49b4-286">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="c49b4-286">Optional.</span></span> <span data-ttu-id="c49b4-287">Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="c49b4-287">Options for the search.</span></span>
          type:
            - 'word!Word.Paragraph#search~0:complex'
  - uid: 'word!Word.Paragraph#select:member(1)'
    summary: |-
      <span data-ttu-id="c49b4-288">Выбирает абзац и переходит к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="c49b4-288">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="c49b4-289">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-290">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-290">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="c49b4-291">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-291">Optional.</span></span> <span data-ttu-id="c49b4-292">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-292">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="c49b4-293">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="c49b4-293">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Paragraph#select:member(2)'
    summary: |-
      <span data-ttu-id="c49b4-294">Выбирает абзац и переходит к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="c49b4-294">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="c49b4-295">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-295">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="c49b4-296">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="c49b4-296">Optional.</span></span> <span data-ttu-id="c49b4-297">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="c49b4-297">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="c49b4-298">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="c49b4-298">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="c49b4-299">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-299">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c49b4-300">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="c49b4-300">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c49b4-301">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="c49b4-301">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="c49b4-302">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-302">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="c49b4-303">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="c49b4-303">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'word!Word.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="c49b4-304">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-304">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="c49b4-305">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-305">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Paragraph:class'
  - uid: 'word!Word.Paragraph#spaceAfter:member'
    summary: |-
      <span data-ttu-id="c49b4-306">Возвращает или задает междустрочный интервал после абзаца (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="c49b4-306">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="c49b4-307">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-307">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-308">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-308">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#spaceBefore:member'
    summary: |-
      <span data-ttu-id="c49b4-309">Возвращает или задает междустрочный интервал до абзаца (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="c49b4-309">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="c49b4-310">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-310">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#style:member'
    summary: |-
      <span data-ttu-id="c49b4-311">Получает или задает имя стиля для абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-311">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="c49b4-312">Используйте это свойство для пользовательских стилей и локализованных имен стилей.</span><span class="sxs-lookup"><span data-stu-id="c49b4-312">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="c49b4-313">Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="c49b4-313">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="c49b4-314">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-314">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Paragraph#text:member'
    summary: |-
      <span data-ttu-id="c49b4-315">Возвращает текст абзаца.</span><span class="sxs-lookup"><span data-stu-id="c49b4-315">Gets the text of the paragraph.</span></span> <span data-ttu-id="c49b4-316">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c49b4-316">Read-only.</span></span>

      <span data-ttu-id="c49b4-317">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c49b4-317">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c49b4-318">Примеры</span><span class="sxs-lookup"><span data-stu-id="c49b4-318">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: 'word!Word.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="c49b4-319">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c49b4-319">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c49b4-320">.</span><span class="sxs-lookup"><span data-stu-id="c49b4-320"></span></span> <span data-ttu-id="c49b4-321">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c49b4-321"></span></span><!-- --><span data-ttu-id="c49b4-322">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. абзац — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="c49b4-322">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="c49b4-323">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-323">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'word!Word.Paragraph#track:member(1)'
    summary: '<span data-ttu-id="c49b4-324">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="c49b4-324">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="c49b4-325">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="c49b4-325">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="c49b4-326">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="c49b4-326">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#untrack:member(1)'
    summary: '<span data-ttu-id="c49b4-327">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="c49b4-327">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="c49b4-328">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="c49b4-328">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="c49b4-329">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="c49b4-329">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="c49b4-330">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="c49b4-330">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Paragraph#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Paragraph#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.ParagraphLoadOptions:interface'
    name: Word.Interfaces.ParagraphLoadOptions
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Paragraph#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.ParagraphData:interface'
    name: Word.Interfaces.ParagraphData