### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Range:class'
    summary: |-
      <span data-ttu-id="be450-101">Представляет непрерывную область в документе.</span><span class="sxs-lookup"><span data-stu-id="be450-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="be450-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Range#clear:member(1)'
      - 'word!Word.Range#contentControls:member'
      - 'word!Word.Range#context:member'
      - 'word!Word.Range#delete:member(1)'
      - 'word!Word.Range#font:member'
      - 'word!Word.Range#getHtml:member(1)'
      - 'word!Word.Range#getOoxml:member(1)'
      - 'word!Word.Range#inlinePictures:member'
      - 'word!Word.Range#insertBreak:member(1)'
      - 'word!Word.Range#insertBreak:member(2)'
      - 'word!Word.Range#insertContentControl:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(2)'
      - 'word!Word.Range#insertHtml:member(1)'
      - 'word!Word.Range#insertHtml:member(2)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Range#insertOoxml:member(1)'
      - 'word!Word.Range#insertOoxml:member(2)'
      - 'word!Word.Range#insertParagraph:member(1)'
      - 'word!Word.Range#insertParagraph:member(2)'
      - 'word!Word.Range#insertText:member(1)'
      - 'word!Word.Range#insertText:member(2)'
      - 'word!Word.Range#load:member(1)'
      - 'word!Word.Range#load:member(2)'
      - 'word!Word.Range#load:member(3)'
      - 'word!Word.Range#paragraphs:member'
      - 'word!Word.Range#parentContentControl:member'
      - 'word!Word.Range#search:member(1)'
      - 'word!Word.Range#select:member(1)'
      - 'word!Word.Range#select:member(2)'
      - 'word!Word.Range#set:member(1)'
      - 'word!Word.Range#set:member(2)'
      - 'word!Word.Range#style:member'
      - 'word!Word.Range#text:member'
      - 'word!Word.Range#toJSON:member(1)'
      - 'word!Word.Range#track:member(1)'
      - 'word!Word.Range#untrack:member(1)'
  - uid: 'word!Word.Range#clear:member(1)'
    summary: |-
      <span data-ttu-id="be450-103">Очищает содержимое объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-103">Clears the contents of the range object.</span></span> <span data-ttu-id="be450-104">Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="be450-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="be450-105">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#contentControls:member'
    summary: |-
      <span data-ttu-id="be450-107">Получает коллекцию объектов элементов управления содержимым в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="be450-107">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="be450-108">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-108">Read-only.</span></span>

      <span data-ttu-id="be450-109">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Range#context:member'
    summary: '<span data-ttu-id="be450-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="be450-110">The request context associated with the object.</span></span> <span data-ttu-id="be450-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="be450-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Range#delete:member(1)'
    summary: |-
      <span data-ttu-id="be450-112">Удаляет диапазон и его содержимое из документа.</span><span class="sxs-lookup"><span data-stu-id="be450-112">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="be450-113">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-114">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#font:member'
    summary: |-
      <span data-ttu-id="be450-115">Возвращает формат текста диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-115">Gets the text format of the range.</span></span> <span data-ttu-id="be450-116">Используйте это свойство, чтобы получать и задавать имея, размер, цвет и другие свойства шрифта.</span><span class="sxs-lookup"><span data-stu-id="be450-116">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="be450-117">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-117">Read-only.</span></span>

      <span data-ttu-id="be450-118">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Range#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="be450-119">Возвращает HTML-представление объекта Range.</span><span class="sxs-lookup"><span data-stu-id="be450-119">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="be450-120">При отображении на веб-странице или в средстве просмотра HTML форматирование будет близким, но не точным, соответствующим для форматирования документа.</span><span class="sxs-lookup"><span data-stu-id="be450-120">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="be450-121">Этот метод не возвращает точно такой же HTML-код для одного и того же документа на различных платформах (Windows, Mac, Word для Интернета и т. д.).</span><span class="sxs-lookup"><span data-stu-id="be450-121">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="be450-122">Если вам нужна точная точность или согласованность на различных платформах `Range.getOoxml()` , используйте и преобразуйте возвращенный XML в HTML.</span><span class="sxs-lookup"><span data-stu-id="be450-122">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="be450-123">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="be450-125">Возвращает OOXML-представление объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-125">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="be450-126">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-127">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#inlinePictures:member'
    summary: |-
      <span data-ttu-id="be450-128">Возвращает коллекцию объектов встроенных рисунков в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="be450-128">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id="be450-129">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-129">Read-only.</span></span>

      <span data-ttu-id="be450-130">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-130">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Range#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="be450-131">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="be450-131">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="be450-132">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-132">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: '<span data-ttu-id="be450-133">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-133">Required.</span></span> <span data-ttu-id="be450-134">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="be450-134">The break type to add.</span></span>'
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: '<span data-ttu-id="be450-135">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-135">Required.</span></span> <span data-ttu-id="be450-136">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="be450-136">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="be450-137">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="be450-137">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="be450-138">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-139">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-139">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: '<span data-ttu-id="be450-140">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-140">Required.</span></span> <span data-ttu-id="be450-141">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="be450-141">The break type to add.</span></span>'
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="be450-142">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-142">Required.</span></span> <span data-ttu-id="be450-143">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="be450-143">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="be450-144">Включает объект диапазона в элемент управления содержимым форматированного текста.</span><span class="sxs-lookup"><span data-stu-id="be450-144">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="be450-145">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-145">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-146">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-146">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: 'word!Word.Range#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="be450-147">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-147">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="be450-148">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-149">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="be450-150">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-150">Required.</span></span> <span data-ttu-id="be450-151">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="be450-151">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-152">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-152">Required.</span></span> <span data-ttu-id="be450-153">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-153">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="be450-154">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-154">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="be450-155">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-155">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="be450-156">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-156">Required.</span></span> <span data-ttu-id="be450-157">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="be450-157">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-158">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-158">Required.</span></span> <span data-ttu-id="be450-159">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-159">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="be450-160">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-160">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="be450-161">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-161">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-162">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-162">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="be450-163">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-163">Required.</span></span> <span data-ttu-id="be450-164">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-164">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-165">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-165">Required.</span></span> <span data-ttu-id="be450-166">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-166">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="be450-167">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-167">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="be450-168">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-168">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="be450-169">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-169">Required.</span></span> <span data-ttu-id="be450-170">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-170">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-171">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-171">Required.</span></span> <span data-ttu-id="be450-172">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-172">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="be450-173">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-173">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="be450-174">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-174">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="be450-175">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-175">Required.</span></span> <span data-ttu-id="be450-176">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="be450-176">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-177">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-177">Required.</span></span> <span data-ttu-id="be450-178">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-178">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="be450-179">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-179">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="be450-180">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-180">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="be450-181">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-181">Required.</span></span> <span data-ttu-id="be450-182">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="be450-182">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-183">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-183">Required.</span></span> <span data-ttu-id="be450-184">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-184">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="be450-185">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-185">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="be450-186">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-187">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="be450-188">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="be450-188">Required.</span></span> <span data-ttu-id="be450-189">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="be450-189">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-190">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-190">Required.</span></span> <span data-ttu-id="be450-191">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-191">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="be450-192">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-192">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="be450-193">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="be450-194">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="be450-194">Required.</span></span> <span data-ttu-id="be450-195">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="be450-195">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-196">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-196">Required.</span></span> <span data-ttu-id="be450-197">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-197">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="be450-198">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-198">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="be450-199">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-199">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-200">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-200">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="be450-201">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-201">Required.</span></span> <span data-ttu-id="be450-202">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-202">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-203">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-203">Required.</span></span> <span data-ttu-id="be450-204">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="be450-204">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="be450-205">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-205">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="be450-206">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-206">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="be450-207">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-207">Required.</span></span> <span data-ttu-id="be450-208">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-208">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-209">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-209">Required.</span></span> <span data-ttu-id="be450-210">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="be450-210">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertText:member(1)'
    summary: |-
      <span data-ttu-id="be450-211">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-211">Inserts text at the specified location.</span></span>

      <span data-ttu-id="be450-212">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-212">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-213">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-213">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="be450-214">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-214">Required.</span></span> <span data-ttu-id="be450-215">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-215">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="be450-216">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-216">Required.</span></span> <span data-ttu-id="be450-217">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-217">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertText:member(2)'
    summary: |-
      <span data-ttu-id="be450-218">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="be450-218">Inserts text at the specified location.</span></span>

      <span data-ttu-id="be450-219">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: '<span data-ttu-id="be450-220">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-220">Required.</span></span> <span data-ttu-id="be450-221">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="be450-221">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="be450-222">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-222">Required.</span></span> <span data-ttu-id="be450-223">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="be450-223">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#load:member(1)'
    summary: <span data-ttu-id="be450-224">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-224">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be450-225">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="be450-225">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="be450-226">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="be450-226">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="be450-227">`load(option?: string | string[]): Word.Range`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="be450-227">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="be450-228">`load(option?: { select?: string; expand?: string; }): Word.Range`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="be450-228">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="be450-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="be450-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="be450-230">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="be450-230">It is similar to the preceding signature.</span></span> <span data-ttu-id="be450-231">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="be450-231">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="be450-232">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="be450-232">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="be450-233">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="be450-233">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.RangeLoadOptions:interface'
  - uid: 'word!Word.Range#load:member(2)'
    summary: <span data-ttu-id="be450-234">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be450-235">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="be450-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="be450-236">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="be450-236">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'word!Word.Range#load:member(3)'
    summary: <span data-ttu-id="be450-237">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-237">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be450-238">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="be450-238">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="be450-239">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="be450-239">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Range#paragraphs:member'
    summary: |-
      <span data-ttu-id="be450-240">Возвращает коллекцию объектов абзаца в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="be450-240">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="be450-241">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-241">Read-only.</span></span>

      <span data-ttu-id="be450-242">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-242">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.Range#parentContentControl:member'
    summary: |-
      <span data-ttu-id="be450-243">Возвращает элемент управления содержимым, содержащий диапазон.</span><span class="sxs-lookup"><span data-stu-id="be450-243">Gets the content control that contains the range.</span></span> <span data-ttu-id="be450-244">Выдает ошибку, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="be450-244">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="be450-245">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-245">Read-only.</span></span>

      <span data-ttu-id="be450-246">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-246">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#search:member(1)'
    summary: |-
      <span data-ttu-id="be450-247">Выполняет поиск с указанным SearchOptions в области объекта Range.</span><span class="sxs-lookup"><span data-stu-id="be450-247">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="be450-248">Результат поиска — это коллекция объектов диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-248">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="be450-249">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-249">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="be450-250">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="be450-250">Required.</span></span> <span data-ttu-id="be450-251">Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="be450-251">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="be450-252">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="be450-252">Optional.</span></span> <span data-ttu-id="be450-253">Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="be450-253">Options for the search.</span></span>
          type:
            - 'word!Word.Range#search~0:complex'
  - uid: 'word!Word.Range#select:member(1)'
    summary: |-
      <span data-ttu-id="be450-254">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="be450-254">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="be450-255">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be450-256">Примеры</span><span class="sxs-lookup"><span data-stu-id="be450-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="be450-257">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="be450-257">Optional.</span></span> <span data-ttu-id="be450-258">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="be450-258">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="be450-259">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="be450-259">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Range#select:member(2)'
    summary: |-
      <span data-ttu-id="be450-260">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="be450-260">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="be450-261">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-261">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="be450-262">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="be450-262">Optional.</span></span> <span data-ttu-id="be450-263">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="be450-263">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="be450-264">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="be450-264">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Range#set:member(1)'
    summary: '<span data-ttu-id="be450-265">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-265">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="be450-266">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="be450-266">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="be450-267">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="be450-267">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="be450-268">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="be450-268">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'word!Word.Interfaces.RangeUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="be450-269">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-269">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Range#set:member(2)'
    summary: '<span data-ttu-id="be450-270">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-270">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#style:member'
    summary: |-
      <span data-ttu-id="be450-271">Получает или задает имя стиля для диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-271">Gets or sets the style name for the range.</span></span> <span data-ttu-id="be450-272">Используйте это свойство для пользовательских стилей и локализованных имен стилей.</span><span class="sxs-lookup"><span data-stu-id="be450-272">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="be450-273">Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="be450-273">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="be450-274">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#text:member'
    summary: |-
      <span data-ttu-id="be450-275">Возвращает текст диапазона.</span><span class="sxs-lookup"><span data-stu-id="be450-275">Gets the text of the range.</span></span> <span data-ttu-id="be450-276">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="be450-276">Read-only.</span></span>

      <span data-ttu-id="be450-277">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be450-277">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#toJSON:member(1)'
    summary: '<span data-ttu-id="be450-278">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="be450-278">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="be450-279">.</span><span class="sxs-lookup"><span data-stu-id="be450-279"></span></span> <span data-ttu-id="be450-280">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="be450-280"></span></span><!-- --><span data-ttu-id="be450-281">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. Range — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="be450-281">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="be450-282">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-282">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - 'word!Word.Interfaces.RangeData:interface'
        description: ''
  - uid: 'word!Word.Range#track:member(1)'
    summary: '<span data-ttu-id="be450-283">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="be450-283">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="be450-284">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="be450-284">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="be450-285">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="be450-285">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
  - uid: 'word!Word.Range#untrack:member(1)'
    summary: '<span data-ttu-id="be450-286">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="be450-286">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="be450-287">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="be450-287">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="be450-288">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="be450-288">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="be450-289">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="be450-289">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Range#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.RangeLoadOptions:interface'
    name: Word.Interfaces.RangeLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Range#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.RangeUpdateData:interface'
    name: Interfaces.RangeUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.RangeData:interface'
    name: Word.Interfaces.RangeData