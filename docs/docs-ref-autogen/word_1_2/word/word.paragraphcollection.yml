### YamlMime:UniversalReference
items:
  - uid: word.Word.ParagraphCollection
    summary: |-
      <span data-ttu-id="3fc5e-101">Содержит коллекцию объектов [Word. абзаца](xref:word.Word.Paragraph) .</span><span class="sxs-lookup"><span data-stu-id="3fc5e-101">Contains a collection of [Word.Paragraph](xref:word.Word.Paragraph) objects.</span></span>

      <span data-ttu-id="3fc5e-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3fc5e-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ParagraphCollection
    fullName: Word.ParagraphCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.ParagraphCollection.context
      - word.Word.ParagraphCollection.items
      - word.Word.ParagraphCollection.load
      - word.Word.ParagraphCollection.load_1
      - word.Word.ParagraphCollection.load_2
      - word.Word.ParagraphCollection.toJSON
      - word.Word.ParagraphCollection.track
      - word.Word.ParagraphCollection.untrack
  - uid: word.Word.ParagraphCollection.context
    summary: '<span data-ttu-id="3fc5e-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-103">The request context associated with the object.</span></span> <span data-ttu-id="3fc5e-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.ParagraphCollection.items
    summary: <span data-ttu-id="3fc5e-105">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-105">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type:
          - 'Word.Paragraph[]'
  - uid: word.Word.ParagraphCollection.load
    summary: <span data-ttu-id="3fc5e-106">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3fc5e-107">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="3fc5e-107">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3fc5e-108">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="3fc5e-108">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3fc5e-109">`load(option?: string | string[]): Word.ParagraphCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-109">`load(option?: string | string[]): Word.ParagraphCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3fc5e-110">`load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-110">`load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3fc5e-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection` - Only available on collection types.</span></span> <span data-ttu-id="3fc5e-112">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="3fc5e-113">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3fc5e-114">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3fc5e-115">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="3fc5e-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="3fc5e-116">Examples</span></span>

      ```javascript
      // This example shows how to get the paragraphs in the Word document
      // along with their text and font size properties.
      // 
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a proxy object for the paragraphs collection.
          var paragraphs = context.document.body.paragraphs;

          // Queue a commmand to load the text and font properties.
          // It is best practice to always specify the property set. Otherwise, all properties are
          // returned in on the object.
          context.load(paragraphs, 'text, font/size');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {

          // Insert code that works with the paragraphs loaded by context.load().
          })
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.ParagraphCollection.load_1
    summary: <span data-ttu-id="3fc5e-117">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3fc5e-118">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="3fc5e-119">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word.Word.ParagraphCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: word.Word.ParagraphCollection.toJSON
    summary: '<span data-ttu-id="3fc5e-120">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3fc5e-120">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3fc5e-121">.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-121"></span></span> <span data-ttu-id="3fc5e-122">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3fc5e-122"></span></span><!-- --><span data-ttu-id="3fc5e-123">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Word.ParagraphCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.ParagraphCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3fc5e-123">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.ParagraphCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphCollectionData`</span></span><!-- --><span data-ttu-id="3fc5e-124">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-124">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type:
          - word.Word.Interfaces.ParagraphCollectionData
        description: ''
  - uid: word.Word.ParagraphCollection.track
    summary: '<span data-ttu-id="3fc5e-125">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-125">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="3fc5e-126">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="3fc5e-126">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="3fc5e-127">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-127">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
  - uid: word.Word.ParagraphCollection.untrack
    summary: '<span data-ttu-id="3fc5e-128">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-128">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="3fc5e-129">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="3fc5e-129">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="3fc5e-130">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="3fc5e-130">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="3fc5e-131">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="3fc5e-131">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''