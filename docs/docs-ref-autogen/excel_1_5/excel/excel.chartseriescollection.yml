### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    summary: |-
      <span data-ttu-id="58be8-101">Представляет коллекцию рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="58be8-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="58be8-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="58be8-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeriesCollection#context:member'
      - 'excel!Excel.ChartSeriesCollection#count:member'
      - 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
      - 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartSeriesCollection#items:member'
      - 'excel!Excel.ChartSeriesCollection#load:member(1)'
      - 'excel!Excel.ChartSeriesCollection#load:member(2)'
      - 'excel!Excel.ChartSeriesCollection#load:member(3)'
      - 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartSeriesCollection#context:member'
    summary: '<span data-ttu-id="58be8-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="58be8-103">The request context associated with the object.</span></span> <span data-ttu-id="58be8-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="58be8-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeriesCollection#count:member'
    summary: |-
      <span data-ttu-id="58be8-105">Возвращает число рядов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="58be8-105">Returns the number of series in the collection.</span></span> <span data-ttu-id="58be8-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="58be8-106">Read-only.</span></span>

      <span data-ttu-id="58be8-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="58be8-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="58be8-108">Возвращает количество рядов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="58be8-108">Returns the number of series in the collection.</span></span>

      <span data-ttu-id="58be8-109">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="58be8-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="58be8-110">Возвращает ряд в зависимости от его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="58be8-110">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="58be8-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="58be8-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="58be8-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="58be8-112">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="58be8-113">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="58be8-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="58be8-114">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="58be8-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#items:member'
    summary: <span data-ttu-id="58be8-115">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="58be8-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#items~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(1)'
    summary: <span data-ttu-id="58be8-116">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="58be8-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="58be8-117">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="58be8-117">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="58be8-118">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="58be8-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="58be8-119">`load(option?: string | string[]): Excel.ChartSeriesCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="58be8-119">`load(option?: string | string[]): Excel.ChartSeriesCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="58be8-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="58be8-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="58be8-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="58be8-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection` - Only available on collection types.</span></span> <span data-ttu-id="58be8-122">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="58be8-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="58be8-123">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="58be8-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="58be8-124">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="58be8-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="58be8-125">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="58be8-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartSeriesCollection#load~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(2)'
    summary: <span data-ttu-id="58be8-126">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="58be8-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="58be8-127">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="58be8-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="58be8-128">Примеры</span><span class="sxs-lookup"><span data-stu-id="58be8-128">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="58be8-129">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="58be8-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="58be8-130">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="58be8-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="58be8-131">.</span><span class="sxs-lookup"><span data-stu-id="58be8-131"></span></span> <span data-ttu-id="58be8-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="58be8-132"></span></span><!-- --><span data-ttu-id="58be8-133">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.ChartSeriesCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="58be8-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="58be8-134">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="58be8-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.ChartSeriesCollection#items~0:complex'
    name: 'Excel.ChartSeries[]'
    fullName: 'Excel.ChartSeries[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartSeries:class'
        name: Excel.ChartSeries
        fullName: Excel.ChartSeries
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.ChartSeriesCollection#load~0:complex'
    name: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartSeriesCollectionLoadOptions
        fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
    name: Excel.Interfaces.ChartSeriesCollectionData