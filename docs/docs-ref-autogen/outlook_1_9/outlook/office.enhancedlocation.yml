### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.EnhancedLocation:interface'
    summary: |-
      Представляет набор расположений в встрече.

      \[[Набор API: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений** :`ReadItem`

      **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook** : "создание" или "чтение"
    name: Office.EnhancedLocation
    fullName: Office.EnhancedLocation
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.EnhancedLocation#addAsync:member(1)'
      - 'outlook!Office.EnhancedLocation#getAsync:member(1)'
      - 'outlook!Office.EnhancedLocation#removeAsync:member(1)'
  - uid: 'outlook!Office.EnhancedLocation#addAsync:member(1)'
    summary: |-
      Добавляет в набор расположений, связанных с встречей.

      \[[Набор API: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений** :`ReadWriteItem`

      **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook** : создание

      **Ошибки** :

      - `InvalidFormatError`<!-- -->: Недопустимый формат указанного объекта данных.

      #### <a name="examples"></a>Примеры

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      var locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];
      Office.context.mailbox.item.enhancedLocation.addAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully added locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to add locations. Error message: ${result.error.message}`);
        }
      });
      ```
    name: 'addAsync(locationIdentifiers, options, callback)'
    fullName: 'addAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, добавляемые в текущий список расположений.'
          type:
            - 'outlook!Office.EnhancedLocation#addAsync~0:complex'
        - id: options
          description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Необязательное свойство. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра, `asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект. Проверьте `status` свойство, `asyncResult` чтобы определить, успешно ли выполнен вызов.'
          type:
            - 'outlook!Office.EnhancedLocation#addAsync~1:complex'
  - uid: 'outlook!Office.EnhancedLocation#getAsync:member(1)'
    summary: |-
      Получает набор расположений, связанных с встречей.

      \[[Набор API: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений** :`ReadItem`

      **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook** : "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      Office.context.mailbox.item.enhancedLocation.getAsync((result) => {
        if (result.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Failed to get locations. Error message: ${result.error.message}`);
          return;
        }
        var places = result.value;
        if (places && places.length > 0) {
          result.value.forEach(function(place) {
            console.log(`Location: ${place.displayName} (type: ${place.locationIdentifier.type})`);
            if (place.locationIdentifier.type === Office.MailboxEnums.LocationType.Room) {
              console.log("Email address: " + place.emailAddress);
            }
          });
        } else {
          console.log("There are no locations.");
        }
      });
      ```
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<LocationDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Необязательное свойство. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра, `asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект.'
          type:
            - 'outlook!Office.EnhancedLocation#getAsync~0:complex'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync:member(1)'
    summary: |-
      Удаляет набор расположений, связанных с встречей.

      Если имеется несколько расположений с одинаковым именем, все соответствующие расположения удаляются, даже если они были указаны в `locationIdentifiers`<!-- -->.

      \[[Набор API: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений** :`ReadWriteItem`

      **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook** : создание

      #### <a name="examples"></a>Примеры

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      var locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];
      Office.context.mailbox.item.enhancedLocation.removeAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully removed locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to remove locations. Error message: ${result.error.message}`);
        }
      });
      ```
    name: 'removeAsync(locationIdentifiers, options, callback)'
    fullName: 'removeAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Расположения, которые необходимо удалить из текущего списка расположений.'
          type:
            - 'outlook!Office.EnhancedLocation#removeAsync~0:complex'
        - id: options
          description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Необязательное свойство. После выполнения метода функция, переданная в `callback` параметр, вызывается с помощью одного параметра, `asyncResult`<!-- -->, представляющий собой `Office.AsyncResult` объект. Проверьте `status` свойство, `asyncResult` чтобы определить, успешно ли выполнен вызов.'
          type:
            - 'outlook!Office.EnhancedLocation#removeAsync~1:complex'
references:
  - uid: 'outlook!Office.EnhancedLocation#addAsync~0:complex'
    name: 'LocationIdentifier[]'
    fullName: 'Office.LocationIdentifier[]'
    spec.typeScript:
      - uid: 'outlook!Office.LocationIdentifier:interface'
        name: LocationIdentifier
        fullName: Office.LocationIdentifier
      - name: '[]'
        fullName: '[]'
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.EnhancedLocation#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.EnhancedLocation#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<LocationDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.LocationDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.LocationDetails:interface'
        name: LocationDetails
        fullName: Office.LocationDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync~0:complex'
    name: 'LocationIdentifier[]'
    fullName: 'Office.LocationIdentifier[]'
    spec.typeScript:
      - uid: 'outlook!Office.LocationIdentifier:interface'
        name: LocationIdentifier
        fullName: Office.LocationIdentifier
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void