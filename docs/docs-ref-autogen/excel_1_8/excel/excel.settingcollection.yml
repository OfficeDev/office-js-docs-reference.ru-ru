### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SettingCollection:class'
    summary: |-
      <span data-ttu-id="eeaa3-101">Представляет коллекцию объектов параметров, которые являются частью рабочей книги.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="eeaa3-102">Область ограничена для каждого файла и надстройки (область задач или контент).</span><span class="sxs-lookup"><span data-stu-id="eeaa3-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>

      <span data-ttu-id="eeaa3-103">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SettingCollection#add:member(1)'
      - 'excel!Excel.SettingCollection#context:member'
      - 'excel!Excel.SettingCollection#getCount:member(1)'
      - 'excel!Excel.SettingCollection#getItem:member(1)'
      - 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SettingCollection#items:member'
      - 'excel!Excel.SettingCollection#load:member(1)'
      - 'excel!Excel.SettingCollection#load:member(2)'
      - 'excel!Excel.SettingCollection#load:member(3)'
      - 'excel!Excel.SettingCollection#onSettingsChanged:member'
      - 'excel!Excel.SettingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.SettingCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="eeaa3-104">Задает или добавляет указанный параметр в книгу.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-104">Sets or adds the specified setting to the workbook.</span></span>

      <span data-ttu-id="eeaa3-105">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eeaa3-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="eeaa3-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="eeaa3-107">Ключ нового параметра.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-107">The Key of the new setting.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="eeaa3-108">Значение нового параметра.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-108">The Value for the new setting.</span></span>
          type:
            - 'excel!Excel.SettingCollection#add~0:complex'
  - uid: 'excel!Excel.SettingCollection#context:member'
    summary: '<span data-ttu-id="eeaa3-109">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-109">The request context associated with the object.</span></span> <span data-ttu-id="eeaa3-110">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-110">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SettingCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="eeaa3-111">Получает количество параметров в коллекции.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-111">Gets the number of Settings in the collection.</span></span>

      <span data-ttu-id="eeaa3-112">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SettingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SettingCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="eeaa3-113">Получает запись Setting по ключу.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-113">Gets a Setting entry via the key.</span></span>

      <span data-ttu-id="eeaa3-114">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="eeaa3-115">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-115">Key of the setting.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="eeaa3-116">Возвращает объект Setting по ключу.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-116">Gets a Setting entry via the key.</span></span> <span data-ttu-id="eeaa3-117">Если параметр не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-117">If the Setting does not exist, will return a null object.</span></span>

      <span data-ttu-id="eeaa3-118">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eeaa3-119">Примеры</span><span class="sxs-lookup"><span data-stu-id="eeaa3-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="eeaa3-120">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-120">The key of the setting.</span></span>
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#items:member'
    summary: <span data-ttu-id="eeaa3-121">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'excel!Excel.SettingCollection#items~0:complex'
  - uid: 'excel!Excel.SettingCollection#load:member(1)'
    summary: <span data-ttu-id="eeaa3-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eeaa3-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="eeaa3-124">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-124">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.SettingCollection#load~0:complex'
  - uid: 'excel!Excel.SettingCollection#load:member(2)'
    summary: <span data-ttu-id="eeaa3-125">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eeaa3-126">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="eeaa3-127">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SettingCollection#load:member(3)'
    summary: <span data-ttu-id="eeaa3-128">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eeaa3-129">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="eeaa3-130">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-130">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.SettingCollection#onSettingsChanged:member'
    summary: |-
      <span data-ttu-id="eeaa3-131">Возникает при изменении параметров в документе.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-131">Occurs when the Settings in the document are changed.</span></span>

      <span data-ttu-id="eeaa3-132">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eeaa3-132">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.SettingCollection#onSettingsChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eeaa3-133">Примеры</span><span class="sxs-lookup"><span data-stu-id="eeaa3-133">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: 'excel!Excel.SettingCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="eeaa3-134">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="eeaa3-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="eeaa3-135">.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-135"></span></span> <span data-ttu-id="eeaa3-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="eeaa3-136"></span></span><!-- --><span data-ttu-id="eeaa3-137">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SettingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="eeaa3-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="eeaa3-138">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="eeaa3-138">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.SettingCollection#add~0:complex'
    name: string | number | boolean | Date | Array<any> | any
    fullName: string | number | boolean | Date | Array<any> | any
    spec.typeScript:
      - name: 'string | number | boolean | '
        fullName: 'string | number | boolean | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <any> | any
        fullName: <any> | any
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SettingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SettingCollection#items~0:complex'
    name: 'Excel.Setting[]'
    fullName: 'Excel.Setting[]'
    spec.typeScript:
      - uid: 'excel!Excel.Setting:class'
        name: Excel.Setting
        fullName: Excel.Setting
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SettingCollection:class'
    name: Excel.SettingCollection
  - uid: 'excel!Excel.SettingCollection#load~0:complex'
    name: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.SettingCollectionLoadOptions:interface'
        name: Excel.Interfaces.SettingCollectionLoadOptions
        fullName: Excel.Interfaces.SettingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.SettingCollection#onSettingsChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SettingsChangedEventArgs:interface'
        name: Excel.SettingsChangedEventArgs
        fullName: Excel.SettingsChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.SettingCollectionData:interface'
    name: Excel.Interfaces.SettingCollectionData