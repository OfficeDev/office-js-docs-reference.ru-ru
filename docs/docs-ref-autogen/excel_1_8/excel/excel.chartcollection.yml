### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartCollection:class'
    summary: |-
      <span data-ttu-id="8b50a-101">Коллекция всех объектов диаграмм на листе.</span><span class="sxs-lookup"><span data-stu-id="8b50a-101">A collection of all the chart objects on a worksheet.</span></span>

      <span data-ttu-id="8b50a-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartCollection#add:member(1)'
      - 'excel!Excel.ChartCollection#add:member(2)'
      - 'excel!Excel.ChartCollection#context:member'
      - 'excel!Excel.ChartCollection#count:member'
      - 'excel!Excel.ChartCollection#getCount:member(1)'
      - 'excel!Excel.ChartCollection#getItem:member(1)'
      - 'excel!Excel.ChartCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.ChartCollection#items:member'
      - 'excel!Excel.ChartCollection#load:member(1)'
      - 'excel!Excel.ChartCollection#load:member(2)'
      - 'excel!Excel.ChartCollection#load:member(3)'
      - 'excel!Excel.ChartCollection#onActivated:member'
      - 'excel!Excel.ChartCollection#onAdded:member'
      - 'excel!Excel.ChartCollection#onDeactivated:member'
      - 'excel!Excel.ChartCollection#onDeleted:member'
      - 'excel!Excel.ChartCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="8b50a-103">Создает диаграмму.</span><span class="sxs-lookup"><span data-stu-id="8b50a-103">Creates a new chart.</span></span>

      <span data-ttu-id="8b50a-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-105">Examples</span></span>

          ```javascript
          // Add a chart of chartType "ColumnClustered" on worksheet "Charts" 
          // with sourceData from Range "A1:B4" and seriresBy is set to be "auto".
          Excel.run(function (ctx) { 
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName)
                  .getRange(rangeSelection);
              var chart = ctx.workbook.worksheets.getItem(sheetName)
                  .charts.add("ColumnClustered", range, "auto");    return ctx.sync().then(function() {
                      console.log("New Chart Added");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: type
          description: <span data-ttu-id="8b50a-106">Представляет тип диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-106">Represents the type of a chart.</span></span> <span data-ttu-id="8b50a-107">Дополнительные сведения см. в статье Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="8b50a-107">See Excel.ChartType for details.</span></span>
          type:
            - 'excel!Excel.ChartType:enum'
        - id: sourceData
          description: '<span data-ttu-id="8b50a-108">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="8b50a-108">The Range object corresponding to the source data.</span></span>'
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: <span data-ttu-id="8b50a-109">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="8b50a-109">Optional.</span></span> <span data-ttu-id="8b50a-110">Определяет способ использования столбцов или строк в качестве рядов данных на диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8b50a-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="8b50a-111">Дополнительные сведения см. в статье Excel. Чартсериесби.</span><span class="sxs-lookup"><span data-stu-id="8b50a-111">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.ChartCollection#add:member(2)'
    summary: |-
      <span data-ttu-id="8b50a-112">Создает диаграмму.</span><span class="sxs-lookup"><span data-stu-id="8b50a-112">Creates a new chart.</span></span>

      <span data-ttu-id="8b50a-113">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: typeString
          description: <span data-ttu-id="8b50a-114">Представляет тип диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-114">Represents the type of a chart.</span></span> <span data-ttu-id="8b50a-115">Дополнительные сведения см. в статье Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="8b50a-115">See Excel.ChartType for details.</span></span>
          type:
            - '"Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        - id: sourceData
          description: '<span data-ttu-id="8b50a-116">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="8b50a-116">The Range object corresponding to the source data.</span></span>'
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: <span data-ttu-id="8b50a-117">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="8b50a-117">Optional.</span></span> <span data-ttu-id="8b50a-118">Определяет способ использования столбцов или строк в качестве рядов данных на диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8b50a-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="8b50a-119">Дополнительные сведения см. в статье Excel. Чартсериесби.</span><span class="sxs-lookup"><span data-stu-id="8b50a-119">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.ChartCollection#context:member'
    summary: '<span data-ttu-id="8b50a-120">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="8b50a-120">The request context associated with the object.</span></span> <span data-ttu-id="8b50a-121">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="8b50a-121">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartCollection#count:member'
    summary: |-
      <span data-ttu-id="8b50a-122">Возвращает количество диаграмм на листе.</span><span class="sxs-lookup"><span data-stu-id="8b50a-122">Returns the number of charts in the worksheet.</span></span> <span data-ttu-id="8b50a-123">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8b50a-123">Read-only.</span></span>

      <span data-ttu-id="8b50a-124">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="8b50a-125">Возвращает количество диаграмм на листе.</span><span class="sxs-lookup"><span data-stu-id="8b50a-125">Returns the number of charts in the worksheet.</span></span>

      <span data-ttu-id="8b50a-126">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="8b50a-127">Возвращает диаграмму по ее имени.</span><span class="sxs-lookup"><span data-stu-id="8b50a-127">Gets a chart using its name.</span></span> <span data-ttu-id="8b50a-128">Если одно и то же имя принадлежит нескольким диаграммам, будет возвращена первая из них.</span><span class="sxs-lookup"><span data-stu-id="8b50a-128">If there are multiple charts with the same name, the first one will be returned.</span></span>

      <span data-ttu-id="8b50a-129">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-130">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chartname = 'Chart1';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartname);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var chartId = 'SampleChartId';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartId);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="8b50a-131">Имя получаемой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-131">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="8b50a-132">Возвращает диаграмму с учетом ее положения в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8b50a-132">Gets a chart based on its position in the collection.</span></span>

      <span data-ttu-id="8b50a-133">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-134">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="8b50a-135">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="8b50a-135">Index value of the object to be retrieved.</span></span> <span data-ttu-id="8b50a-136">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="8b50a-136">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="8b50a-137">Возвращает диаграмму по ее имени.</span><span class="sxs-lookup"><span data-stu-id="8b50a-137">Gets a chart using its name.</span></span> <span data-ttu-id="8b50a-138">Если одно и то же имя принадлежит нескольким диаграммам, будет возвращена первая из них.</span><span class="sxs-lookup"><span data-stu-id="8b50a-138">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="8b50a-139">Если диаграмма не существует, вернет пустой объект.</span><span class="sxs-lookup"><span data-stu-id="8b50a-139">If the chart does not exist, will return a null object.</span></span>

      <span data-ttu-id="8b50a-140">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8b50a-141">Имя получаемой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-141">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#items:member'
    summary: <span data-ttu-id="8b50a-142">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="8b50a-142">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'excel!Excel.ChartCollection#items~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(1)'
    summary: <span data-ttu-id="8b50a-143">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8b50a-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b50a-144">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="8b50a-144">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8b50a-145">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="8b50a-145">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8b50a-146">`load(option?: string | string[]): Excel.ChartCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8b50a-146">`load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8b50a-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8b50a-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8b50a-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="8b50a-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id="8b50a-149">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="8b50a-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="8b50a-150">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="8b50a-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8b50a-151">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="8b50a-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8b50a-152">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="8b50a-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartCollection#load~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(2)'
    summary: <span data-ttu-id="8b50a-153">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8b50a-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b50a-154">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8b50a-154">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-155">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-155">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < charts.items.length; i++)
                  {
                      console.log(charts.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of charts
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('count');
              return ctx.sync().then(function() {
                  console.log("charts: Count= " + charts.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8b50a-156">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8b50a-156">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartCollection#onActivated:member'
    summary: |-
      <span data-ttu-id="8b50a-157">Возникает при активации диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-157">Occurs when a chart is activated.</span></span>

      <span data-ttu-id="8b50a-158">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-158">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#onActivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-159">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-159">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The ID of the active chart is: " + event.chartId)
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartCollection#onAdded:member'
    summary: |-
      <span data-ttu-id="8b50a-160">Возникает при добавлении новой диаграммы на лист.</span><span class="sxs-lookup"><span data-stu-id="8b50a-160">Occurs when a new chart is added to the worksheet.</span></span>

      <span data-ttu-id="8b50a-161">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-161">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#onAdded~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-162">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-162">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onAdded.add(function (event) {
                  return Excel.run((context) => {
                      console.log("A chart has been added with ID: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartCollection#onDeactivated:member'
    summary: |-
      <span data-ttu-id="8b50a-163">Возникает при отключении диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-163">Occurs when a chart is deactivated.</span></span>

      <span data-ttu-id="8b50a-164">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-164">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#onDeactivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-165">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-165">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The chart with this ID was deactivated: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartCollection#onDeleted:member'
    summary: |-
      <span data-ttu-id="8b50a-166">Возникает при удалении диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8b50a-166">Occurs when a chart is deleted.</span></span>

      <span data-ttu-id="8b50a-167">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b50a-167">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#onDeleted~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b50a-168">Примеры</span><span class="sxs-lookup"><span data-stu-id="8b50a-168">Examples</span></span>

          ```javascript
          Excel.run(function (context){
              context.workbook.worksheets.getActiveWorksheet()
                  .charts.onDeleted.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The chart with this ID was deleted: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="8b50a-169">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8b50a-169">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8b50a-170">.</span><span class="sxs-lookup"><span data-stu-id="8b50a-170"></span></span> <span data-ttu-id="8b50a-171">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8b50a-171"></span></span><!-- --><span data-ttu-id="8b50a-172">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.ChartCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartCollectionData`</span><span class="sxs-lookup"><span data-stu-id="8b50a-172">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`</span></span><!-- --><span data-ttu-id="8b50a-173">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="8b50a-173">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.ChartType:enum'
    name: Excel.ChartType
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: Excel.ChartSeriesBy
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartCollection#items~0:complex'
    name: 'Excel.Chart[]'
    fullName: 'Excel.Chart[]'
    spec.typeScript:
      - uid: 'excel!Excel.Chart:class'
        name: Excel.Chart
        fullName: Excel.Chart
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartCollection:class'
    name: Excel.ChartCollection
  - uid: 'excel!Excel.ChartCollection#load~0:complex'
    name: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartCollectionLoadOptions
        fullName: Excel.Interfaces.ChartCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.ChartCollection#onActivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.ChartActivatedEventArgs:interface'
        name: Excel.ChartActivatedEventArgs
        fullName: Excel.ChartActivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.ChartCollection#onAdded~0:complex'
    name: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.ChartAddedEventArgs:interface'
        name: Excel.ChartAddedEventArgs
        fullName: Excel.ChartAddedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.ChartCollection#onDeactivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.ChartDeactivatedEventArgs:interface'
        name: Excel.ChartDeactivatedEventArgs
        fullName: Excel.ChartDeactivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.ChartCollection#onDeleted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.ChartDeletedEventArgs:interface'
        name: Excel.ChartDeletedEventArgs
        fullName: Excel.ChartDeletedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.ChartCollectionData:interface'
    name: Excel.Interfaces.ChartCollectionData