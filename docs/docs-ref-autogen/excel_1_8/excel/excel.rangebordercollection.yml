### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeBorderCollection
    summary: |-
      <span data-ttu-id="a1f9e-101">Представляет объекты границ, из которых состоит граница диапазона.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-101">Represents the border objects that make up the range border.</span></span>

      <span data-ttu-id="a1f9e-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a1f9e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeBorderCollection.context
      - excel.Excel.RangeBorderCollection.count
      - excel.Excel.RangeBorderCollection.getItem
      - excel.Excel.RangeBorderCollection.getItem_1
      - excel.Excel.RangeBorderCollection.getItemAt
      - excel.Excel.RangeBorderCollection.items
      - excel.Excel.RangeBorderCollection.load
      - excel.Excel.RangeBorderCollection.load_1
      - excel.Excel.RangeBorderCollection.load_2
      - excel.Excel.RangeBorderCollection.toJSON
  - uid: excel.Excel.RangeBorderCollection.context
    summary: '<span data-ttu-id="a1f9e-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-103">The request context associated with the object.</span></span> <span data-ttu-id="a1f9e-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeBorderCollection.count
    summary: |-
      <span data-ttu-id="a1f9e-105">Количество объектов границы в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-105">Number of border objects in the collection.</span></span> <span data-ttu-id="a1f9e-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-106">Read-only.</span></span>

      <span data-ttu-id="a1f9e-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a1f9e-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeBorderCollection.getItem
    summary: |-
      <span data-ttu-id="a1f9e-108">Возвращает объект границы по его имени.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-108">Gets a border object using its name.</span></span>

      <span data-ttu-id="a1f9e-109">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a1f9e-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a1f9e-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="a1f9e-110">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="a1f9e-111">Значение индекса получаемого объекта границы.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="a1f9e-112">Дополнительные сведения см. в статье Excel. Бордериндекс.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-112">See Excel.BorderIndex for details.</span></span>
          type:
            - excel.Excel.BorderIndex
  - uid: excel.Excel.RangeBorderCollection.getItem_1
    summary: |-
      <span data-ttu-id="a1f9e-113">Возвращает объект границы по его имени.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-113">Gets a border object using its name.</span></span>

      <span data-ttu-id="a1f9e-114">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a1f9e-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: ''
      parameters:
        - id: indexString
          description: <span data-ttu-id="a1f9e-115">Значение индекса получаемого объекта границы.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="a1f9e-116">Дополнительные сведения см. в статье Excel. Бордериндекс.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-116">See Excel.BorderIndex for details.</span></span>
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: excel.Excel.RangeBorderCollection.getItemAt
    summary: |-
      <span data-ttu-id="a1f9e-117">Возвращает объект границы по его индексу.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-117">Gets a border object using its index.</span></span>

      <span data-ttu-id="a1f9e-118">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a1f9e-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a1f9e-119">Примеры</span><span class="sxs-lookup"><span data-stu-id="a1f9e-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="a1f9e-120">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-120">Index value of the object to be retrieved.</span></span> <span data-ttu-id="a1f9e-121">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-121">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.RangeBorderCollection.items
    summary: <span data-ttu-id="a1f9e-122">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-122">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'Excel.RangeBorder[]'
  - uid: excel.Excel.RangeBorderCollection.load
    summary: <span data-ttu-id="a1f9e-123">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a1f9e-124">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="a1f9e-124">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a1f9e-125">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="a1f9e-125">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a1f9e-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a1f9e-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a1f9e-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="a1f9e-129">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="a1f9e-130">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a1f9e-131">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a1f9e-132">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.RangeBorderCollection.load_1
    summary: <span data-ttu-id="a1f9e-133">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a1f9e-134">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a1f9e-135">Примеры</span><span class="sxs-lookup"><span data-stu-id="a1f9e-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="a1f9e-136">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeBorderCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.RangeBorderCollection.toJSON
    summary: '<span data-ttu-id="a1f9e-137">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a1f9e-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a1f9e-138">.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-138"></span></span> <span data-ttu-id="a1f9e-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a1f9e-139"></span></span><!-- --><span data-ttu-id="a1f9e-140">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.RangeBorderCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.RangeBorderCollectionData`</span><span class="sxs-lookup"><span data-stu-id="a1f9e-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`</span></span><!-- --><span data-ttu-id="a1f9e-141">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1f9e-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeBorderCollectionData
        description: ''