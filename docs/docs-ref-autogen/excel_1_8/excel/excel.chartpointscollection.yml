### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartPointsCollection
    summary: |-
      <span data-ttu-id="660e2-101">Коллекция всех точек диаграммы в ряду внутри диаграммы.</span><span class="sxs-lookup"><span data-stu-id="660e2-101">A collection of all the chart points within a series inside a chart.</span></span>

      <span data-ttu-id="660e2-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="660e2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartPointsCollection
    fullName: Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartPointsCollection.context
      - excel.Excel.ChartPointsCollection.count
      - excel.Excel.ChartPointsCollection.getCount
      - excel.Excel.ChartPointsCollection.getItemAt
      - excel.Excel.ChartPointsCollection.items
      - excel.Excel.ChartPointsCollection.load
      - excel.Excel.ChartPointsCollection.load_1
      - excel.Excel.ChartPointsCollection.load_2
      - excel.Excel.ChartPointsCollection.toJSON
  - uid: excel.Excel.ChartPointsCollection.context
    summary: '<span data-ttu-id="660e2-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="660e2-103">The request context associated with the object.</span></span> <span data-ttu-id="660e2-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="660e2-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartPointsCollection.count
    summary: |-
      <span data-ttu-id="660e2-105">Возвращает количество точек диаграммы в ряду.</span><span class="sxs-lookup"><span data-stu-id="660e2-105">Returns the number of chart points in the series.</span></span> <span data-ttu-id="660e2-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="660e2-106">Read-only.</span></span>

      <span data-ttu-id="660e2-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="660e2-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartPointsCollection.getCount
    summary: |-
      <span data-ttu-id="660e2-108">Возвращает количество точек диаграммы в ряду.</span><span class="sxs-lookup"><span data-stu-id="660e2-108">Returns the number of chart points in the series.</span></span>

      <span data-ttu-id="660e2-109">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="660e2-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartPointsCollection.getItemAt
    summary: |-
      <span data-ttu-id="660e2-110">Получение точки на основании ее положения в ряду.</span><span class="sxs-lookup"><span data-stu-id="660e2-110">Retrieve a point based on its position within the series.</span></span>

      <span data-ttu-id="660e2-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="660e2-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - excel.Excel.ChartPoint
        description: |-


          #### <a name="examples"></a><span data-ttu-id="660e2-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="660e2-112">Examples</span></span>

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="660e2-113">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="660e2-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="660e2-114">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="660e2-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartPointsCollection.items
    summary: <span data-ttu-id="660e2-115">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="660e2-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'Excel.ChartPoint[]'
  - uid: excel.Excel.ChartPointsCollection.load
    summary: <span data-ttu-id="660e2-116">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="660e2-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="660e2-117">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="660e2-117">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="660e2-118">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="660e2-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="660e2-119">`load(option?: string | string[]): Excel.ChartPointsCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="660e2-119">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="660e2-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="660e2-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="660e2-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="660e2-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id="660e2-122">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="660e2-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="660e2-123">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="660e2-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="660e2-124">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="660e2-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="660e2-125">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="660e2-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartPointsCollection.load_1
    summary: <span data-ttu-id="660e2-126">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="660e2-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="660e2-127">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="660e2-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="660e2-128">Примеры</span><span class="sxs-lookup"><span data-stu-id="660e2-128">Examples</span></span>

          ```javascript
          // Get the names of points in the points collection
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('items');
              return ctx.sync().then(function() {
                  console.log("Points Collection loaded");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of points
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("points: Count= " + pointsCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="660e2-129">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="660e2-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartPointsCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.ChartPointsCollection.toJSON
    summary: '<span data-ttu-id="660e2-130">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="660e2-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="660e2-131">.</span><span class="sxs-lookup"><span data-stu-id="660e2-131"></span></span> <span data-ttu-id="660e2-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="660e2-132"></span></span><!-- --><span data-ttu-id="660e2-133">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.ChartPointsCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ChartPointsCollectionData`</span><span class="sxs-lookup"><span data-stu-id="660e2-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`</span></span><!-- --><span data-ttu-id="660e2-134">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="660e2-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartPointsCollectionData
        description: ''