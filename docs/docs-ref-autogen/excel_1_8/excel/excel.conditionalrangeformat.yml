### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFormat:class'
    summary: |-
      Объект Format, который инкапсулирует шрифт, заливку, границы и другие свойства диапазона условного форматирования.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ConditionalRangeFormat
    fullName: Excel.ConditionalRangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFormat#borders:member'
      - 'excel!Excel.ConditionalRangeFormat#context:member'
      - 'excel!Excel.ConditionalRangeFormat#fill:member'
      - 'excel!Excel.ConditionalRangeFormat#font:member'
      - 'excel!Excel.ConditionalRangeFormat#load:member(1)'
      - 'excel!Excel.ConditionalRangeFormat#load:member(2)'
      - 'excel!Excel.ConditionalRangeFormat#load:member(3)'
      - 'excel!Excel.ConditionalRangeFormat#numberFormat:member'
      - 'excel!Excel.ConditionalRangeFormat#set:member(1)'
      - 'excel!Excel.ConditionalRangeFormat#set:member(2)'
      - 'excel!Excel.ConditionalRangeFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeFormat#borders:member'
    summary: |-
      Коллекция объектов Border, которые применяются к общему диапазону условного форматирования. Только для чтения.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorderCollection:class'
  - uid: 'excel!Excel.ConditionalRangeFormat#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFormat#fill:member'
    summary: |-
      Возвращает объект Fill, определенный в общем диапазоне условного форматирования. Только для чтения.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ConditionalRangeFill;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
  - uid: 'excel!Excel.ConditionalRangeFormat#font:member'
    summary: |-
      Возвращает объект Font, определенный в общем диапазоне условного форматирования. Только для чтения.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
  - uid: 'excel!Excel.ConditionalRangeFormat#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): Excel.ConditionalRangeFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFormatLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFormat#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFormat#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ConditionalRangeFormat#numberFormat:member'
    summary: |-
      Представляет код числового формата Excel для заданного диапазона. Очищается, если передается значение null.

      \[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.ConditionalRangeFormat#set:member(1)'
    summary: 'Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.'
    remarks: |-
      Этот метод имеет следующую дополнительную подпись:

      `set(properties: Excel.ConditionalRangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.'
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFormatUpdateData:interface'
        - id: options
          description: 'Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFormat#set:member(2)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFormat:class'
  - uid: 'excel!Excel.ConditionalRangeFormat#toJSON:member(1)'
    summary: 'Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Кондитионалранжеформат — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ConditionalRangeFormatData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ConditionalRangeBorderCollection:class'
    name: Excel.ConditionalRangeBorderCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFill:class'
    name: Excel.ConditionalRangeFill
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    name: Excel.ConditionalRangeFont
  - uid: 'excel!Excel.ConditionalRangeFormat:class'
    name: Excel.ConditionalRangeFormat
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFormatLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFormatUpdateData:interface'
    name: Interfaces.ConditionalRangeFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFormatData:interface'
    name: Excel.Interfaces.ConditionalRangeFormatData