### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotTable
    summary: |-
      <span data-ttu-id="e5736-101">Представляет сводную таблицу Excel.</span><span class="sxs-lookup"><span data-stu-id="e5736-101">Represents an Excel PivotTable.</span></span>

      <span data-ttu-id="e5736-102">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.PivotTable.columnHierarchies
      - excel.Excel.PivotTable.context
      - excel.Excel.PivotTable.dataHierarchies
      - excel.Excel.PivotTable.delete
      - excel.Excel.PivotTable.filterHierarchies
      - excel.Excel.PivotTable.hierarchies
      - excel.Excel.PivotTable.id
      - excel.Excel.PivotTable.layout
      - excel.Excel.PivotTable.load
      - excel.Excel.PivotTable.load_1
      - excel.Excel.PivotTable.load_2
      - excel.Excel.PivotTable.name
      - excel.Excel.PivotTable.refresh
      - excel.Excel.PivotTable.rowHierarchies
      - excel.Excel.PivotTable.set
      - excel.Excel.PivotTable.set_1
      - excel.Excel.PivotTable.toJSON
      - excel.Excel.PivotTable.worksheet
  - uid: excel.Excel.PivotTable.columnHierarchies
    summary: |-
      <span data-ttu-id="e5736-103">Иерархии сводных столбцов сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-103">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="e5736-104">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5736-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="e5736-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.context
    summary: '<span data-ttu-id="e5736-106">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="e5736-106">The request context associated with the object.</span></span> <span data-ttu-id="e5736-107">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e5736-107">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.PivotTable.dataHierarchies
    summary: |-
      <span data-ttu-id="e5736-108">Иерархии сводных данных сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-108">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="e5736-109">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.DataPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5736-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="e5736-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.delete
    summary: |-
      <span data-ttu-id="e5736-111">Удаляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="e5736-111">Deletes the PivotTable.</span></span>

      <span data-ttu-id="e5736-112">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5736-113">Примеры</span><span class="sxs-lookup"><span data-stu-id="e5736-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.filterHierarchies
    summary: |-
      <span data-ttu-id="e5736-114">Иерархии сводных фильтров сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-114">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="e5736-115">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.FilterPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5736-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="e5736-116">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: excel.Excel.PivotTable.hierarchies
    summary: |-
      <span data-ttu-id="e5736-117">Иерархии сводного документа сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-117">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="e5736-118">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.PivotHierarchyCollection
  - uid: excel.Excel.PivotTable.id
    summary: |-
      <span data-ttu-id="e5736-119">Идентификатор сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-119">Id of the PivotTable.</span></span> <span data-ttu-id="e5736-120">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e5736-120">Read-only.</span></span>

      <span data-ttu-id="e5736-121">\[[Набор API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-121">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.layout
    summary: |-
      <span data-ttu-id="e5736-122">PivotLayout, описывающий макет и визуальную структуру сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-122">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="e5736-123">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e5736-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="e5736-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: excel.Excel.PivotTable.load
    summary: <span data-ttu-id="e5736-125">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5736-126">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e5736-126">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e5736-127">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="e5736-127">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e5736-128">`load(option?: string | string[]): Excel.PivotTable`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e5736-128">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e5736-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e5736-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e5736-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="e5736-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="e5736-131">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="e5736-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="e5736-132">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e5736-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e5736-133">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="e5736-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e5736-134">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="e5736-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotTableLoadOptions
  - uid: excel.Excel.PivotTable.load_1
    summary: <span data-ttu-id="e5736-135">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5736-136">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e5736-136">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e5736-137">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e5736-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotTable.load_2
    summary: <span data-ttu-id="e5736-138">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5736-139">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e5736-139">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e5736-140">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e5736-140">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotTable.name
    summary: |-
      <span data-ttu-id="e5736-141">Имя сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-141">Name of the PivotTable.</span></span>

      <span data-ttu-id="e5736-142">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-142">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.refresh
    summary: |-
      <span data-ttu-id="e5736-143">Обновляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="e5736-143">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="e5736-144">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PivotTable.rowHierarchies
    summary: |-
      <span data-ttu-id="e5736-145">Иерархии сводных строк сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="e5736-145">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="e5736-146">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
  - uid: excel.Excel.PivotTable.set
    summary: '<span data-ttu-id="e5736-147">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-147">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e5736-148">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="e5736-148">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e5736-149">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="e5736-149">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e5736-150">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e5736-150">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PivotTableUpdateData
        - id: options
          description: '<span data-ttu-id="e5736-151">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e5736-151">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotTable.set_1
    summary: '<span data-ttu-id="e5736-152">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-152">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotTable
  - uid: excel.Excel.PivotTable.toJSON
    summary: '<span data-ttu-id="e5736-153">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e5736-153">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e5736-154">.</span><span class="sxs-lookup"><span data-stu-id="e5736-154"></span></span> <span data-ttu-id="e5736-155">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e5736-155"></span></span><!-- --><span data-ttu-id="e5736-156">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. PivotTable является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="e5736-156">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="e5736-157">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e5736-157">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableData
        description: ''
  - uid: excel.Excel.PivotTable.worksheet
    summary: |-
      <span data-ttu-id="e5736-158">Лист, содержащий текущую сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="e5736-158">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="e5736-159">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5736-159">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet