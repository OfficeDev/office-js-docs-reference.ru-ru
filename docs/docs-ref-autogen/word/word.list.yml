### YamlMime:UniversalReference
ms.openlocfilehash: a00af68330cbcf8d0eeb2819529eb710e3d45d17
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/09/2018
ms.locfileid: "26235348"
items:
- uid: word.Word.List
  summary: >-
    Содержит коллекцию объектов [Word.Paragraph](xref:word.Word.Paragraph) .


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: Word.List
  fullName: Word.List
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.List.getLevelParagraphs
  - word.Word.List.getLevelString
  - word.Word.List.id
  - word.Word.List.insertParagraph
  - word.Word.List.levelExistences
  - word.Word.List.levelTypes
  - word.Word.List.load
  - word.Word.List.paragraphs
  - word.Word.List.setLevelAlignment
  - word.Word.List.setLevelBullet
  - word.Word.List.setLevelIndents
  - word.Word.List.setLevelNumbering
  - word.Word.List.setLevelStartingNumber
  - word.Word.List.toJSON
  - word.Word.List.track
  - word.Word.List.untrack
- uid: word.Word.List.getLevelParagraphs
  summary: >-
    Возвращает абзацы, обнаруженные на указанном уровне списка.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLevelParagraphs(level)
  fullName: getLevelParagraphs
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
- uid: word.Word.List.getLevelString
  summary: >-
    Возвращает маркер, номер или рисунок на указанном уровне в виде строки.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLevelString(level)
  fullName: getLevelString
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
- uid: word.Word.List.id
  summary: >-
    Получает идентификатор списка.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: word.Word.List.insertParagraph
  summary: >-
    Вставляет абзац в указанном расположении. Значение insertLocation может быть «Запуск», «End», «До» или «После».


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: Обязательный параметр. Текст абзаца, который необходимо вставить.
      type:
      - string
    - id: insertLocation
      description: Обязательно указывать. Значение может быть «Запуск», «End», «До» или «После».
      type:
      - Word.InsertLocation
- uid: word.Word.List.levelExistences
  summary: >-
    Проверяет наличие каждого из 9 уровней в списке. Значение true указывает, что уровень существует, то есть на этом уровне имеется по крайней мере один элемент списка. Только для чтения.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: levelExistences
  fullName: levelExistences
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly levelExistences: boolean[];'
    return:
      type:
      - boolean[]
- uid: word.Word.List.levelTypes
  summary: >-
    Получает все типы 9 уровня в списке. Каждый тип может быть «Маркер», «Номер» или «Рисунок». Только для чтения.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: levelTypes
  fullName: levelTypes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly levelTypes: Word.ListLevelType[];'
    return:
      type:
      - Word.ListLevelType[]
- uid: word.Word.List.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: { select?: string; expand?: string; }): Word.List`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.List`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: word.Word.List.paragraphs
  summary: >-
    Возвращает абзацы в списке. Только для чтения.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.List.setLevelAlignment
  summary: >-
    Задает выравнивание маркера, номера или рисунка на указанном уровне списка.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelAlignment(level, alignment)
  fullName: setLevelAlignment
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
    - id: alignment
      description: Обязательно указывать. Выравнивание уровня, который может быть «Left», «По центру» или «Right».
      type:
      - word.Word.Alignment
- uid: word.Word.List.setLevelBullet
  summary: >-
    Задает формат маркеров на указанном уровне списка. Если задан формат Custom, то параметр charCode является обязательным.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelBullet(level, listBullet, charCode, fontName)
  fullName: setLevelBullet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
    - id: listBullet
      description: Обязательно указывать. Маркер.
      type:
      - word.Word.ListBullet
    - id: charCode
      description: Необязательно указывать. Значение код знака маркера. Используется только в том случае, если маркер является «Custom».
      type:
      - number
    - id: fontName
      description: Необязательно указывать. Имя шрифта маркера. Используется только в том случае, если маркер является «Custom».
      type:
      - string
- uid: word.Word.List.setLevelIndents
  summary: >-
    Задает два отступа на указанном уровне списка.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelIndents(level, textIndent, bulletNumberPictureIndent)
  fullName: setLevelIndents
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
    - id: textIndent
      description: Обязательный. Отступ текста в точках. Это собой тоже самое, что и отступ слева для абзаца.
      type:
      - number
    - id: bulletNumberPictureIndent
      description: Обязательный. Относительный отступ (в точках) для маркера, номера или рисунка. Это тоже самое, что и отступ первой строки для абзаца.
      type:
      - number
- uid: word.Word.List.setLevelNumbering
  summary: >-
    Задает формат нумерации на указанном уровне списка.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelNumbering(level, listNumbering, formatString)
  fullName: setLevelNumbering
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: any[]): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
    - id: listNumbering
      description: Обязательно указывать. Порядковый номер формата.
      type:
      - word.Word.ListNumbering
    - id: formatString
      description: Необязательно указывать. Строка формат нумерации определен как массив строк и/или целых чисел. Каждое целое число — это уровень типа номера, который больше или равен к этому уровню. К примеру, массив \["(", уровень - 1, ".", уровня, "")"»\] можно определить format «(2.c)», где 2 — номер родительского элемента и c — номер элемента этот уровень.
      type:
      - any[]
- uid: word.Word.List.setLevelStartingNumber
  summary: >-
    Задает начальный номер на указанном уровне списка. Значение по умолчанию: 1.


    \[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: setLevelStartingNumber(level, startingNumber)
  fullName: setLevelStartingNumber
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: level
      description: Обязательный. Уровень в списке.
      type:
      - number
    - id: startingNumber
      description: Обязательный. Начальное число.
      type:
      - number
- uid: word.Word.List.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ListData;'
    return:
      type:
      - word.Word.Interfaces.ListData
      description: ''
- uid: word.Word.List.track
  summary: Отслеживание объектов для автоматической на основании соседних изменения в документе. Этот вызов это сокращение для context.trackedObjects.add(thisObject). Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
- uid: word.Word.List.untrack
  summary: Выпуск памяти, связанное с объектом, если ранее отслеживаются. Этот вызов — это сокращение для context.trackedObjects.remove(thisObject). Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования. Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
