### YamlMime:UniversalReference
ms.openlocfilehash: f8ab9dfe454c807fef7591ab3368e0c4645aa3d3
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975027"
items:
- uid: word.Word.ContentControl
  summary: >-
    <span data-ttu-id="82b44-p101">Представляет элемент управления содержимым. Элементы управления содержимым — это связанные и, возможно, помеченные фрагменты документа, выполняющие роль контейнеров для определенных типов содержимого. Отдельные элементы управления содержимым могут содержать изображения, таблицы или абзацы форматированного текста. На данный момент поддерживаются только элементы управления содержимым "форматированный текст".</span><span class="sxs-lookup"><span data-stu-id="82b44-p101">Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.</span></span>


    <span data-ttu-id="82b44-105">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.ContentControl
  fullName: Word.ContentControl
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.ContentControl.appearance
  - word.Word.ContentControl.cannotDelete
  - word.Word.ContentControl.cannotEdit
  - word.Word.ContentControl.clear
  - word.Word.ContentControl.color
  - word.Word.ContentControl.contentControls
  - word.Word.ContentControl.context
  - word.Word.ContentControl.delete
  - word.Word.ContentControl.font
  - word.Word.ContentControl.getHtml
  - word.Word.ContentControl.getOoxml
  - word.Word.ContentControl.getRange
  - word.Word.ContentControl.getRange_1
  - word.Word.ContentControl.getTextRanges
  - word.Word.ContentControl.id
  - word.Word.ContentControl.inlinePictures
  - word.Word.ContentControl.insertBreak
  - word.Word.ContentControl.insertBreak_1
  - word.Word.ContentControl.insertFileFromBase64
  - word.Word.ContentControl.insertFileFromBase64_1
  - word.Word.ContentControl.insertHtml
  - word.Word.ContentControl.insertHtml_1
  - word.Word.ContentControl.insertInlinePictureFromBase64
  - word.Word.ContentControl.insertInlinePictureFromBase64_1
  - word.Word.ContentControl.insertOoxml
  - word.Word.ContentControl.insertOoxml_1
  - word.Word.ContentControl.insertParagraph
  - word.Word.ContentControl.insertParagraph_1
  - word.Word.ContentControl.insertTable
  - word.Word.ContentControl.insertTable_1
  - word.Word.ContentControl.insertText
  - word.Word.ContentControl.insertText_1
  - word.Word.ContentControl.lists
  - word.Word.ContentControl.load
  - word.Word.ContentControl.load_1
  - word.Word.ContentControl.load_2
  - word.Word.ContentControl.paragraphs
  - word.Word.ContentControl.parentBody
  - word.Word.ContentControl.parentContentControl
  - word.Word.ContentControl.parentContentControlOrNullObject
  - word.Word.ContentControl.parentTable
  - word.Word.ContentControl.parentTableCell
  - word.Word.ContentControl.parentTableCellOrNullObject
  - word.Word.ContentControl.parentTableOrNullObject
  - word.Word.ContentControl.placeholderText
  - word.Word.ContentControl.removeWhenEdited
  - word.Word.ContentControl.search
  - word.Word.ContentControl.select
  - word.Word.ContentControl.select_1
  - word.Word.ContentControl.set
  - word.Word.ContentControl.set_1
  - word.Word.ContentControl.split
  - word.Word.ContentControl.style
  - word.Word.ContentControl.styleBuiltIn
  - word.Word.ContentControl.subtype
  - word.Word.ContentControl.tables
  - word.Word.ContentControl.tag
  - word.Word.ContentControl.text
  - word.Word.ContentControl.title
  - word.Word.ContentControl.toJSON
  - word.Word.ContentControl.track
  - word.Word.ContentControl.type
  - word.Word.ContentControl.untrack
- uid: word.Word.ContentControl.appearance
  summary: >-
    <span data-ttu-id="82b44-106">Получает или задает внешний вид элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-106">Gets or sets the appearance of the content control.</span></span> <span data-ttu-id="82b44-107">Значение может быть «BoundingBox», «Метки» или «Скрытый».</span><span class="sxs-lookup"><span data-stu-id="82b44-107">The value can be 'BoundingBox', 'Tags', or 'Hidden'.</span></span>


    <span data-ttu-id="82b44-108">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: appearance
  fullName: appearance
  langs:
  - typeScript
  type: property
  syntax:
    content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
    return:
      type:
      - Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
- uid: word.Word.ContentControl.cannotDelete
  summary: >-
    <span data-ttu-id="82b44-p103">Возвращает или задает значение, указывающее, может ли пользователь удалить элемент управления контентом. Является взаимоисключающим со свойством removeWhenEdited.</span><span class="sxs-lookup"><span data-stu-id="82b44-p103">Gets or sets a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.</span></span>


    <span data-ttu-id="82b44-111">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: cannotDelete
  fullName: cannotDelete
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cannotDelete: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.cannotEdit
  summary: >-
    <span data-ttu-id="82b44-112">Возвращает или задает значение, указывающее, может ли пользователь изменять содержимое элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-112">Gets or sets a value that indicates whether the user can edit the contents of the content control.</span></span>


    <span data-ttu-id="82b44-113">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: cannotEdit
  fullName: cannotEdit
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cannotEdit: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.clear
  summary: >-
    <span data-ttu-id="82b44-p104">Очищает содержимое элемента управления содержимым. Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="82b44-p104">Clears the contents of the content control. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="82b44-116">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-117\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-117\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to clear the contents of the first content control.\n            contentControls.items[0].clear();\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.color
  summary: >-
    <span data-ttu-id="82b44-118">Возвращает или задает цвет элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-118">Gets or sets the color of the content control.</span></span> <span data-ttu-id="82b44-119">Цвет указан в "\#вида RRGGBB" форматирование или с помощью имени цвета.</span><span class="sxs-lookup"><span data-stu-id="82b44-119">Color is specified in '\#RRGGBB' format or by using the color name.</span></span>


    <span data-ttu-id="82b44-120">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.contentControls
  summary: >-
    <span data-ttu-id="82b44-p106">Получает коллекцию объектов элементов управления содержимым в элементе управления содержимым. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p106">Gets the collection of content control objects in the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-123">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.ContentControl.context
  summary: <span data-ttu-id="82b44-124">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="82b44-124">The request context associated with the object.</span></span> <span data-ttu-id="82b44-125">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="82b44-125">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.ContentControl.delete
  summary: >-
    <span data-ttu-id="82b44-p108">Удаляет элемент управления содержимым и его содержимое. Если свойство keepContent имеет значение true, содержимое не будет удалено.</span><span class="sxs-lookup"><span data-stu-id="82b44-p108">Deletes the content control and its content. If keepContent is set to true, the content is not deleted.</span></span>


    <span data-ttu-id="82b44-128">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: delete(keepContent)
  fullName: delete(keepContent)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(keepContent: boolean): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-129\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-129\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to delete the first content control. The\n            // contents will remain in the document.\n            contentControls.items[0].delete(true);\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: keepContent
      description: <span data-ttu-id="82b44-p109">Обязательный параметр. Указывает, следует ли удалить содержимое вместе с элементом управления содержимым. Если свойству keepContent задано значение true, содержимое не удаляется.</span><span class="sxs-lookup"><span data-stu-id="82b44-p109">Required. Indicates whether the content should be deleted with the content control. If keepContent is set to true, the content is not deleted.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.font
  summary: >-
    <span data-ttu-id="82b44-p110">Получает текстовый формат элемента управления содержимым. Используйте это свойство для получения и установки имени, размера, цвета и других свойств шрифта. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p110">Gets the text format of the content control. Use this to get and set font name, size, color, and other properties. Read-only.</span></span>


    <span data-ttu-id="82b44-136">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.ContentControl.getHtml
  summary: >-
    <span data-ttu-id="82b44-137">Получает представление HTML объекта элемента управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-137">Gets an HTML representation of the content control object.</span></span> <span data-ttu-id="82b44-138">При отображении в веб-страницы или средства просмотра HTML, форматирование будет закрыть, но не точное соответствие для форматирования документа.</span><span class="sxs-lookup"><span data-stu-id="82b44-138">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="82b44-139">Этот метод не возвращает точный же HTML-код для одного документа на разных платформах (Windows, Mac, Word Online, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="82b44-139">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="82b44-140">Если требуется точное качеством или согласованности платформ, используйте `ContentControl.getOoxml()` и преобразования возвращенного XML в HTML-код.</span><span class="sxs-lookup"><span data-stu-id="82b44-140">If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.</span></span>


    <span data-ttu-id="82b44-141">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-142\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-142\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n    \n    // Queue a command to load the tag property for all of content controls. \n    context.load(contentControlsWithTag, 'tag');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the HTML contents of the first content control.\n            var html = contentControlsWithTag.items[0].getHtml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control HTML: ' + html.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.getOoxml
  summary: >-
    <span data-ttu-id="82b44-143">Возвращает OOXML-представление объекта элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-143">Gets the Office Open XML (OOXML) representation of the content control object.</span></span>


    <span data-ttu-id="82b44-144">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-145\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-145\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the OOXML contents of the first content control.\n            var ooxml = contentControls.items[0].getOoxml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control OOXML: ' + ooxml.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.getRange
  summary: >-
    <span data-ttu-id="82b44-146">Возвращает весь элемент управления содержимым (либо его начальную или конечную точку) в виде диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-146">Gets the whole content control, or the starting or ending point of the content control, as a range.</span></span>


    <span data-ttu-id="82b44-147">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-147">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange(rangeLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="82b44-148">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-148">Optional.</span></span> <span data-ttu-id="82b44-149">Расположение диапазона может быть «Целое», «До», «Пуск», «Завершение», «После», или «Содержимое».</span><span class="sxs-lookup"><span data-stu-id="82b44-149">The range location can be 'Whole', 'Before', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.ContentControl.getRange_1
  summary: >-
    <span data-ttu-id="82b44-150">Возвращает весь элемент управления содержимым (либо его начальную или конечную точку) в виде диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-150">Gets the whole content control, or the starting or ending point of the content control, as a range.</span></span>


    <span data-ttu-id="82b44-151">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-151">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocationString)
  fullName: getRange(rangeLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocationString
      description: <span data-ttu-id="82b44-152">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-152">Optional.</span></span> <span data-ttu-id="82b44-153">Расположение диапазона может быть «Целое», «До», «Пуск», «Завершение», «После», или «Содержимое».</span><span class="sxs-lookup"><span data-stu-id="82b44-153">The range location can be 'Whole', 'Before', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
- uid: word.Word.ContentControl.getTextRanges
  summary: >-
    <span data-ttu-id="82b44-154">Получает диапазонов текста в элементе управления содержимым с помощью пунктуации и/или другие конечные метки.</span><span class="sxs-lookup"><span data-stu-id="82b44-154">Gets the text ranges in the content control by using punctuation marks and/or other ending marks.</span></span>


    <span data-ttu-id="82b44-155">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getTextRanges(endingMarks, trimSpacing)
  fullName: getTextRanges(endingMarks, trimSpacing)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: endingMarks
      description: <span data-ttu-id="82b44-p114">Обязательный. Знаки пунктуации и/или другие конечные метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="82b44-p114">Required. The punctuation marks and/or other ending marks as an array of strings.</span></span>
      type:
      - string[]
    - id: trimSpacing
      description: <span data-ttu-id="82b44-158">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-158">Optional.</span></span> <span data-ttu-id="82b44-159">Указывает, следует ли удалить знаки интервалы (пробелы, вкладок, столбцов и end абзаца) из начала и окончания диапазонов, возвращаемых в коллекции диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-159">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="82b44-160">Значение по умолчанию — false означает, символы интервалов в начало и конец диапазонов включены в диапазоне семейства.</span><span class="sxs-lookup"><span data-stu-id="82b44-160">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.id
  summary: >-
    <span data-ttu-id="82b44-p116">Возвращает целое число, представляющее собой идентификатор элемента управления контентом. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p116">Gets an integer that represents the content control identifier. Read-only.</span></span>


    <span data-ttu-id="82b44-163">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: word.Word.ContentControl.inlinePictures
  summary: >-
    <span data-ttu-id="82b44-p117">Получает коллекцию объектов inlinePicture в элементе управления содержимым. Коллекция не содержит плавающие рисунки. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p117">Gets the collection of inlinePicture objects in the content control. The collection does not include floating images. Read-only.</span></span>


    <span data-ttu-id="82b44-167">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.ContentControl.insertBreak
  summary: >-
    <span data-ttu-id="82b44-168">Вставка разрыва в выбранном расположении в основной документ.</span><span class="sxs-lookup"><span data-stu-id="82b44-168">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="82b44-169">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-169">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-170">Этот метод не может использоваться с элементами управления содержимым «RichTextTable», «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-170">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>


    <span data-ttu-id="82b44-171">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-171">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak(breakType, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: breakType
      description: <span data-ttu-id="82b44-172">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-172">Required.</span></span> <span data-ttu-id="82b44-173">Тип приостановки выполнения.</span><span class="sxs-lookup"><span data-stu-id="82b44-173">Type of break.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="82b44-174">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-174">Required.</span></span> <span data-ttu-id="82b44-175">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-175">The value can be 'Start', 'End', 'Before', or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertBreak_1
  summary: >-
    <span data-ttu-id="82b44-176">Вставка разрыва в выбранном расположении в основной документ.</span><span class="sxs-lookup"><span data-stu-id="82b44-176">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="82b44-177">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-177">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-178">Этот метод не может использоваться с элементами управления содержимым «RichTextTable», «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-178">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>


    <span data-ttu-id="82b44-179">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-179">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakTypeString, insertLocation)
  fullName: insertBreak(breakTypeString, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-180\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-180\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a commmand to load the id property for all of content controls. \n    context.load(contentControls, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion. We now will have \n    // access to the content control collection.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a page break after the first content control. \n            contentControls.items[0].insertBreak('page', \"After\");\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion. \n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a page break after the first content control.');    \n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakTypeString
      description: <span data-ttu-id="82b44-181">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-181">Required.</span></span> <span data-ttu-id="82b44-182">Тип приостановки выполнения.</span><span class="sxs-lookup"><span data-stu-id="82b44-182">Type of break.</span></span>
      type:
      - "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: <span data-ttu-id="82b44-183">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-183">Required.</span></span> <span data-ttu-id="82b44-184">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-184">The value can be 'Start', 'End', 'Before', or 'After'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertFileFromBase64
  summary: >-
    <span data-ttu-id="82b44-185">Вставка документа в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-185">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id="82b44-186">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-186">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-187">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-187">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64(base64File, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="82b44-p125">Обязательный. Содержимое DOCX-файла в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="82b44-p125">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-190">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-190">Required.</span></span> <span data-ttu-id="82b44-191">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-191">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-192">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-192">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertFileFromBase64_1
  summary: >-
    <span data-ttu-id="82b44-193">Вставка документа в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-193">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id="82b44-194">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-194">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-195">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-195">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocationString)
  fullName: insertFileFromBase64(base64File, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="82b44-p128">Обязательный. Содержимое DOCX-файла в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="82b44-p128">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-198">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-198">Required.</span></span> <span data-ttu-id="82b44-199">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-199">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-200">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-200">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertHtml
  summary: >-
    <span data-ttu-id="82b44-201">Вставка HTML-код в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-201">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id="82b44-202">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-203">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml(html, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: html
      description: <span data-ttu-id="82b44-p131">Обязательный параметр. HTML-код, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-p131">Required. The HTML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-206">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-206">Required.</span></span> <span data-ttu-id="82b44-207">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-207">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-208">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-208">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertHtml_1
  summary: >-
    <span data-ttu-id="82b44-209">Вставка HTML-код в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-209">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id="82b44-210">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-211">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocationString)
  fullName: insertHtml(html, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-212\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-212\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put HTML into the contents of the first content control.\n            contentControls.items[0].insertHtml(\n                '<strong>HTML content inserted into the content control.</strong>',\n                'Start');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted HTML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="82b44-p134">Обязательный параметр. HTML-код, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-p134">Required. The HTML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-215">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-215">Required.</span></span> <span data-ttu-id="82b44-216">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-216">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-217">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-217">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="82b44-218">Вставка встроенного рисунка в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-218">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id="82b44-219">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-219">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-220">\[[Набор API-Интерфейсов: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-220">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: ''
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="82b44-p137">Обязательный параметр. Вставляемое в элемент управления содержимым изображение в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="82b44-p137">Required. The base64 encoded image to be inserted in the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-223">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-223">Required.</span></span> <span data-ttu-id="82b44-224">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-224">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-225">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-225">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertInlinePictureFromBase64_1
  summary: >-
    <span data-ttu-id="82b44-226">Вставка встроенного рисунка в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-226">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id="82b44-227">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-227">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-228">\[[Набор API-Интерфейсов: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-228">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: ''
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="82b44-p140">Обязательный параметр. Вставляемое в элемент управления содержимым изображение в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="82b44-p140">Required. The base64 encoded image to be inserted in the content control.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-231">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-231">Required.</span></span> <span data-ttu-id="82b44-232">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-232">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-233">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-233">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertOoxml
  summary: >-
    <span data-ttu-id="82b44-234">Вставляет OOXML внутрь элемента управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-234">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id="82b44-235">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-235">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-236">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-236">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml(ooxml, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="82b44-p143">Обязательный параметр. OOXML-код для вставки в элемент управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-p143">Required. The OOXML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-239">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-239">Required.</span></span> <span data-ttu-id="82b44-240">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-240">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-241">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-241">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertOoxml_1
  summary: >-
    <span data-ttu-id="82b44-242">Вставляет OOXML внутрь элемента управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-242">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id="82b44-243">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-243">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-244">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-244">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocationString)
  fullName: insertOoxml(ooxml, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-245\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-245\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put OOXML into the contents of the first content control.\n            contentControls.items[0].insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", \"End\");\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted OOXML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
    parameters:
    - id: ooxml
      description: <span data-ttu-id="82b44-p146">Обязательный параметр. OOXML-код для вставки в элемент управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-p146">Required. The OOXML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-248">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-248">Required.</span></span> <span data-ttu-id="82b44-249">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-249">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-250">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-250">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertParagraph
  summary: >-
    <span data-ttu-id="82b44-251">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-251">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="82b44-252">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-252">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="82b44-253">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-253">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph(paragraphText, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="82b44-p149">Обязательный параметр. Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="82b44-p149">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-256">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-256">Required.</span></span> <span data-ttu-id="82b44-257">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-257">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-258">«До» и «После» не может использоваться с «RichTextTable», элементы управления содержимым «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-258">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertParagraph_1
  summary: >-
    <span data-ttu-id="82b44-259">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-259">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="82b44-260">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-260">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="82b44-261">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-261">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocationString)
  fullName: insertParagraph(paragraphText, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-262\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-262\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a paragraph after the first content control. \n            contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a paragraph after the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="82b44-p152">Обязательный параметр. Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="82b44-p152">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-265">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-265">Required.</span></span> <span data-ttu-id="82b44-266">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-266">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-267">«До» и «После» не может использоваться с «RichTextTable», элементы управления содержимым «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-267">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.insertTable
  summary: >-
    <span data-ttu-id="82b44-268">Вставка таблицы с указанного числа строк и столбцов в или рядом с элементом управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-268">Inserts a table with the specified number of rows and columns into, or next to, a content control.</span></span> <span data-ttu-id="82b44-269">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-269">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="82b44-270">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="82b44-p155">Обязательный. Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="82b44-p155">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="82b44-p156">Обязательный. Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="82b44-p156">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="82b44-275">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-275">Required.</span></span> <span data-ttu-id="82b44-276">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-276">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-277">«До» и «После» не может использоваться с «RichTextTable», элементы управления содержимым «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-277">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="82b44-278">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="82b44-278">Optional 2D array.</span></span> <span data-ttu-id="82b44-279">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="82b44-279">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.ContentControl.insertTable_1
  summary: >-
    <span data-ttu-id="82b44-280">Вставка таблицы с указанного числа строк и столбцов в или рядом с элементом управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-280">Inserts a table with the specified number of rows and columns into, or next to, a content control.</span></span> <span data-ttu-id="82b44-281">Значение insertLocation может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-281">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="82b44-282">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-282">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocationString, values)
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="82b44-p160">Обязательный. Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="82b44-p160">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="82b44-p161">Обязательный. Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="82b44-p161">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocationString
      description: <span data-ttu-id="82b44-287">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-287">Required.</span></span> <span data-ttu-id="82b44-288">Значение может быть «Запуск», «End», «До» или «После».</span><span class="sxs-lookup"><span data-stu-id="82b44-288">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="82b44-289">«До» и «После» не может использоваться с «RichTextTable», элементы управления содержимым «RichTextTableRow» и «RichTextTableCell».</span><span class="sxs-lookup"><span data-stu-id="82b44-289">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: <span data-ttu-id="82b44-290">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="82b44-290">Optional 2D array.</span></span> <span data-ttu-id="82b44-291">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="82b44-291">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.ContentControl.insertText
  summary: >-
    <span data-ttu-id="82b44-292">Вставка текста в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-292">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id="82b44-293">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-293">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-294">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-294">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText(text, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="82b44-p165">Обязательный параметр. Текст, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-p165">Required. The text to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="82b44-297">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-297">Required.</span></span> <span data-ttu-id="82b44-298">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-298">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-299">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-299">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertText_1
  summary: >-
    <span data-ttu-id="82b44-300">Вставка текста в элемент управления содержимым в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="82b44-300">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id="82b44-301">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-301">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="82b44-302">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-302">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocationString)
  fullName: insertText(text, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-303\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-303\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to replace text in the first content control. \n            contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Replaced text in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how to use the insertText method.\n// https://aka.ms/sillystorywordaddin\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="82b44-p168">Обязательный параметр. Текст, который необходимо вставить в элемент управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-p168">Required. The text to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="82b44-306">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="82b44-306">Required.</span></span> <span data-ttu-id="82b44-307">Значение может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="82b44-307">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="82b44-308">«Replace» не может использоваться с элементами управления содержимым «RichTextTable» и «RichTextTableRow».</span><span class="sxs-lookup"><span data-stu-id="82b44-308">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.ContentControl.lists
  summary: >-
    <span data-ttu-id="82b44-p170">Возвращает коллекцию объектов списков в элементе управления содержимым. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p170">Gets the collection of list objects in the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-311">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-311">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.ContentControl.load
  summary: <span data-ttu-id="82b44-312">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="82b44-312">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82b44-313">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="82b44-313">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="82b44-314">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="82b44-314">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="82b44-315">`load(option?: string | string[]): Word.ContentControl`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="82b44-315">`load(option?: string | string[]): Word.ContentControl` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="82b44-316">`load(option?: { select?: string; expand?: string; }): Word.ContentControl`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="82b44-316">`load(option?: { select?: string; expand?: string; }): Word.ContentControl` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="82b44-317">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="82b44-317">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl` - Only available on collection types.</span></span> <span data-ttu-id="82b44-318">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="82b44-318">It is similar to the preceding signature.</span></span> <span data-ttu-id="82b44-319">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="82b44-319">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="82b44-320">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="82b44-320">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="82b44-321">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="82b44-321">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - word.Word.Interfaces.ContentControlLoadOptions
- uid: word.Word.ContentControl.load_1
  summary: <span data-ttu-id="82b44-322">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="82b44-322">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82b44-323">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="82b44-323">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-324\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-324\">Examples</span></span>\n\n```javascript\n// Load all of the content control properties\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to load the properties on the first content control. \n            contentControls.items[0].load(  'appearance,' +\n                                            'cannotDelete,' +\n                                            'cannotEdit,' +\n                                            'id,' +\n                                            'placeHolderText,' +\n                                            'removeWhenEdited,' +\n                                            'title,' +\n                                            'text,' +\n                                            'type,' +\n                                            'style,' +\n                                            'tag,' +\n                                            'font/size,' +\n                                            'font/name,' +\n                                            'font/color');             \n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Property values of the first content control:' + \n                        '   ----- appearance: ' + contentControls.items[0].appearance + \n                        '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +\n                        '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +\n                        '   ----- color: ' + contentControls.items[0].color +\n                        '   ----- id: ' + contentControls.items[0].id +\n                        '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +\n                        '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +\n                        '   ----- title: ' + contentControls.items[0].title +\n                        '   ----- text: ' + contentControls.items[0].text +\n                        '   ----- type: ' + contentControls.items[0].type +\n                        '   ----- style: ' + contentControls.items[0].style +\n                        '   ----- tag: ' + contentControls.items[0].tag +\n                        '   ----- font size: ' + contentControls.items[0].font.size +\n                        '   ----- font name: ' + contentControls.items[0].font.name +\n                        '   ----- font color: ' + contentControls.items[0].font.color);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="82b44-325">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="82b44-325">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.ContentControl.load_2
  summary: <span data-ttu-id="82b44-326">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="82b44-326">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82b44-327">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="82b44-327">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="82b44-328">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="82b44-328">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: word.Word.ContentControl.paragraphs
  summary: >-
    <span data-ttu-id="82b44-p175">Получает коллекцию объектов абзацев в элементе управления содержимым. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p175">Get the collection of paragraph objects in the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-331">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-331">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.ContentControl.parentBody
  summary: >-
    <span data-ttu-id="82b44-p176">Возвращает родительский текст элемента управления содержимым. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p176">Gets the parent body of the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-334">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-334">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.ContentControl.parentContentControl
  summary: >-
    <span data-ttu-id="82b44-p177">Возвращает элемент управления содержимым, содержащий элемент управления содержимым. Возвращает ошибку, если родительского элемента управления содержимым не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p177">Gets the content control that contains the content control. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="82b44-338">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-338">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.ContentControl.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="82b44-p178">Возвращает элемент управления содержимым, содержащий элемент управления содержимым. Возвращает пустой объект, если родительского элемента управления содержимым не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p178">Gets the content control that contains the content control. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="82b44-342">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-342">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.ContentControl.parentTable
  summary: >-
    <span data-ttu-id="82b44-p179">Возвращает таблицу, содержащую элемент управления содержимым. Если он находится не в таблице, возвращает ошибку. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p179">Gets the table that contains the content control. Throws if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="82b44-346">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-346">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.ContentControl.parentTableCell
  summary: >-
    <span data-ttu-id="82b44-p180">Возвращает ячейку таблицы, содержащую элемент управления содержимым. Если он находится не в ячейке таблицы, возвращает ошибку. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p180">Gets the table cell that contains the content control. Throws if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="82b44-350">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.ContentControl.parentTableCellOrNullObject
  summary: >-
    <span data-ttu-id="82b44-p181">Возвращает ячейку таблицы, содержащую элемент управления содержимым. Если он находится не в ячейке таблицы, возвращается пустой объект. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p181">Gets the table cell that contains the content control. Returns a null object if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="82b44-354">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-354">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNullObject
  fullName: parentTableCellOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.ContentControl.parentTableOrNullObject
  summary: >-
    <span data-ttu-id="82b44-p182">Возвращает таблицу, содержащую элемент управления содержимым. Если он находится не в таблице, возвращается пустой объект. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p182">Gets the table that contains the content control. Returns a null object if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="82b44-358">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableOrNullObject
  fullName: parentTableOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.ContentControl.placeholderText
  summary: >-
    <span data-ttu-id="82b44-p183">Возвращает или задает замещающий текст элемента управления контентом. Если элемент управления содержимым пуст, отображается затемненный текст.</span><span class="sxs-lookup"><span data-stu-id="82b44-p183">Gets or sets the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.</span></span>


    <span data-ttu-id="82b44-361">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-361">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: placeholderText
  fullName: placeholderText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'placeholderText: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.removeWhenEdited
  summary: >-
    <span data-ttu-id="82b44-p184">Возвращает или задает значение, указывающее, удаляется ли элемент управления контентом после изменения. Является взаимоисключающим со свойством cannotDelete.</span><span class="sxs-lookup"><span data-stu-id="82b44-p184">Gets or sets a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.</span></span>


    <span data-ttu-id="82b44-364">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-364">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: removeWhenEdited
  fullName: removeWhenEdited
  langs:
  - typeScript
  type: property
  syntax:
    content: 'removeWhenEdited: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.search
  summary: >-
    <span data-ttu-id="82b44-365">Выполняет поиск с указанным SearchOptions в области объекта элемента управления контентом.</span><span class="sxs-lookup"><span data-stu-id="82b44-365">Performs a search with the specified SearchOptions on the scope of the content control object.</span></span> <span data-ttu-id="82b44-366">Результат поиска — коллекция объектов range.</span><span class="sxs-lookup"><span data-stu-id="82b44-366">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="82b44-367">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-367">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search(searchText, searchOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-368\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-368\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to select the first content control.\n            contentControls.items[0].select();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Selected the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="82b44-p186">Обязательный параметр. Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="82b44-p186">Required. The search text.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="82b44-p187">Необязательный параметр. Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="82b44-p187">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.ContentControl.select
  summary: >-
    <span data-ttu-id="82b44-p188">Выбирает элемент управления содержимым. При этом Word переходит к выделенному фрагменту.</span><span class="sxs-lookup"><span data-stu-id="82b44-p188">Selects the content control. This causes Word to scroll to the selection.</span></span>


    <span data-ttu-id="82b44-375">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-375">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select(selectionMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionMode
      description: "<span data-ttu-id=\"82b44-p189\">Необязательный параметр. Возможные режимы выбора: Select, Start и End. Значение по умолчанию — Select.</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-p189\">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>"
      type:
      - Word.SelectionMode
- uid: word.Word.ContentControl.select_1
  summary: >-
    <span data-ttu-id="82b44-p190">Выбирает элемент управления содержимым. При этом Word переходит к выделенному фрагменту.</span><span class="sxs-lookup"><span data-stu-id="82b44-p190">Selects the content control. This causes Word to scroll to the selection.</span></span>


    <span data-ttu-id="82b44-381">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-381">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionModeString)
  fullName: select(selectionModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionModeString
      description: "<span data-ttu-id=\"82b44-p191\">Необязательный параметр. Возможные режимы выбора: Select, Start и End. Значение по умолчанию — Select.</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-p191\">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>"
      type:
      - "\"Select\" | \"Start\" | \"End\""
- uid: word.Word.ContentControl.set
  summary: <span data-ttu-id="82b44-385">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="82b44-385">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="82b44-386">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="82b44-386">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="82b44-387">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="82b44-387">This method has the following additional signature:</span></span>


    `set(properties: Word.ContentControl): void`

    #### <a name="examples"></a><span data-ttu-id="82b44-388">Примеры</span><span class="sxs-lookup"><span data-stu-id="82b44-388">Examples</span></span>


    ```typescript

    // Adds title and colors to odd and even content controls and changes their appearance.

    await Word.run(async (context) => {
        // Gets the complete sentence  (as range) associated with the insertion point.
        let evenContentControls = context.document.contentControls.getByTag("even");
        let oddContentControls = context.document.contentControls.getByTag("odd");
        evenContentControls.load("color,title,appearance");
        oddContentControls.load("color,title,appearance");

        await context.sync();

        for (let i = 0; i < evenContentControls.items.length; i++) {
            // Change a few properties and append a paragraph
            evenContentControls.items[i].set({
                color: 'red',
                title: 'Odd ContentControl #' + (i + 1),
                appearance: 'Tags'
            });
            evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
        }

        for (let j = 0; j < oddContentControls.items.length; j++) {
            // Change a few properties and append a paragraph
            oddContentControls.items[j].set({
                color: 'green',
                title: 'Even ContentControl #' + (j + 1),
                appearance: 'Tags'
            });
            oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
        }

        await context.sync();
    });

    ```
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="82b44-389">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="82b44-389">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ContentControlUpdateData
    - id: options
      description: <span data-ttu-id="82b44-390">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-390">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: word.Word.ContentControl.set_1
  summary: <span data-ttu-id="82b44-391">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="82b44-391">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Word.ContentControl): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - word.Word.ContentControl
- uid: word.Word.ContentControl.split
  summary: >-
    <span data-ttu-id="82b44-392">Разделяет элемент управления содержимым на дочерние диапазоны с помощью разделителей.</span><span class="sxs-lookup"><span data-stu-id="82b44-392">Splits the content control into child ranges by using delimiters.</span></span>


    <span data-ttu-id="82b44-393">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-393">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  fullName: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: delimiters
      description: <span data-ttu-id="82b44-p193">Обязательный. Разделители в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="82b44-p193">Required. The delimiters as an array of strings.</span></span>
      type:
      - string[]
    - id: multiParagraphs
      description: <span data-ttu-id="82b44-396">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-396">Optional.</span></span> <span data-ttu-id="82b44-397">Указывает, будет ли диапазон возвращаемый дочерний могут охватывать несколько абзацев.</span><span class="sxs-lookup"><span data-stu-id="82b44-397">Indicates whether a returned child range can cover multiple paragraphs.</span></span> <span data-ttu-id="82b44-398">Значение по умолчанию — значение false, который означает, что границы абзаца также используются в качестве разделителей.</span><span class="sxs-lookup"><span data-stu-id="82b44-398">Default is false which indicates that the paragraph boundaries are also used as delimiters.</span></span>
      type:
      - boolean
    - id: trimDelimiters
      description: <span data-ttu-id="82b44-399">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-399">Optional.</span></span> <span data-ttu-id="82b44-400">Указывает, следует ли удалить разделители из диапазонов в коллекции диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-400">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="82b44-401">Значение по умолчанию — значение false, который означает, что разделители включаются в диапазонах, возвращаемых в коллекции диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-401">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>
      type:
      - boolean
    - id: trimSpacing
      description: <span data-ttu-id="82b44-402">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="82b44-402">Optional.</span></span> <span data-ttu-id="82b44-403">Указывает, следует ли удалить знаки интервалы (пробелы, вкладок, столбцов и end абзаца) из начала и окончания диапазонов, возвращаемых в коллекции диапазона.</span><span class="sxs-lookup"><span data-stu-id="82b44-403">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="82b44-404">Значение по умолчанию — false означает, символы интервалов в начало и конец диапазонов включены в диапазоне семейства.</span><span class="sxs-lookup"><span data-stu-id="82b44-404">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.style
  summary: >-
    <span data-ttu-id="82b44-p197">Возвращает или задает стиль имени для элемента управления содержимым. Используйте это свойство для пользовательских стилей и локализованных имен стилей. Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="82b44-p197">Gets or sets the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="82b44-408">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-408">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.styleBuiltIn
  summary: >-
    <span data-ttu-id="82b44-p198">Возвращает или задает имя встроенного стиля для элемента управления содержимым. Используйте это свойство для встроенных стилей, поддерживающих несколько языковых стандартов. Чтобы использовать пользовательские стили или локализованные имена стилей, применяйте свойство style.</span><span class="sxs-lookup"><span data-stu-id="82b44-p198">Gets or sets the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="82b44-412">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-412">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.ContentControl.subtype
  summary: >-
    <span data-ttu-id="82b44-p199">Возвращает подтип элемента управления содержимым. Поддерживаемые подтипы: RichTextInline, RichTextParagraphs, RichTextTableCell, RichTextTableRow и RichTextTable для элементов управления форматированным текстом. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p199">Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls. Read-only.</span></span>


    <span data-ttu-id="82b44-416">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-416">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: subtype
  fullName: subtype
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subtype: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type:
      - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
- uid: word.Word.ContentControl.tables
  summary: >-
    <span data-ttu-id="82b44-p200">Возвращает коллекцию объектов таблиц в элементе управления содержимым. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p200">Gets the collection of table objects in the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-419">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-419">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.ContentControl.tag
  summary: >-
    <span data-ttu-id="82b44-420">Возвращает или задает тег для определения элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-420">Gets or sets a tag to identify a content control.</span></span>


    <span data-ttu-id="82b44-421">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-421">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tag
  fullName: tag
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tag: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82b44-422\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"82b44-422\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy range object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a commmand to create the content control.\n    var myContentControl = range.insertContentControl();\n    myContentControl.tag = 'Customer-Address';\n    myContentControl.title = ' has t';\n    myContentControl.style = 'Heading 2';\n    myContentControl.insertText('One Microsoft Way, Redmond, WA 98052', 'replace');\n    myContentControl.cannotEdit = true;\n    \n    // Queue a command to load the id property for the content control you created.\n    context.load(myContentControl, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Created content control with id: ' + myContentControl.id);\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\n// Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags\nawait Word.run(async (context) => {\n    let paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); //Don't need any properties, we'll just wrap each paragraph with a content control\n\n    await context.sync();\n\n    for (let i = 0; i < paragraphs.items.length; i++) {\n        let contentControl = paragraphs.items[i].insertContentControl();\n        // For even we tag \"even\"\n        if (i % 2 === 0) {\n            contentControl.tag = \"even\";\n        }\n\n        else {\n            contentControl.tag = \"odd\";\n        }\n    }\n    console.log(\"Content controls inserted: \" + paragraphs.items.length)\n\n    await context.sync();\n});\n\n```"
- uid: word.Word.ContentControl.text
  summary: >-
    <span data-ttu-id="82b44-p201">Возвращает текст элемента управления контентом. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p201">Gets the text of the content control. Read-only.</span></span>


    <span data-ttu-id="82b44-425">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-425">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.title
  summary: >-
    <span data-ttu-id="82b44-426">Возвращает или задает заголовок для элемента управления содержимым.</span><span class="sxs-lookup"><span data-stu-id="82b44-426">Gets or sets the title for a content control.</span></span>


    <span data-ttu-id="82b44-427">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-427">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: title
  fullName: title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'title: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlData;'
    return:
      type:
      - word.Word.Interfaces.ContentControlData
      description: ''
- uid: word.Word.ContentControl.track
  summary: <span data-ttu-id="82b44-428">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="82b44-428">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="82b44-429">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="82b44-429">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="82b44-430">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="82b44-430">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
- uid: word.Word.ContentControl.type
  summary: >-
    <span data-ttu-id="82b44-p203">Получает тип элемента управления содержимым. На данный момент поддерживаются только элементы управления содержимым в формате RTF. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="82b44-p203">Gets the content control type. Only rich text content controls are supported currently. Read-only.</span></span>


    <span data-ttu-id="82b44-434">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82b44-434">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type:
      - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
- uid: word.Word.ContentControl.untrack
  summary: <span data-ttu-id="82b44-435">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="82b44-435">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="82b44-436">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="82b44-436">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="82b44-437">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="82b44-437">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="82b44-438">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="82b44-438">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
