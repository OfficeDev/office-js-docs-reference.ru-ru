### YamlMime:UniversalReference
ms.openlocfilehash: 51f2bf54eeabf0842063daa1bb1bf6bf575df02f
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976637"
items:
- uid: word.Word.Body
  summary: >-
    <span data-ttu-id="96528-101">Представляет содержимое документа или раздела.</span><span class="sxs-lookup"><span data-stu-id="96528-101">Represents the body of a document or a section.</span></span>


    <span data-ttu-id="96528-102">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Body
  fullName: Word.Body
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Body.clear
  - word.Word.Body.contentControls
  - word.Word.Body.context
  - word.Word.Body.font
  - word.Word.Body.getHtml
  - word.Word.Body.getOoxml
  - word.Word.Body.getRange
  - word.Word.Body.getRange_1
  - word.Word.Body.inlinePictures
  - word.Word.Body.insertBreak
  - word.Word.Body.insertBreak_1
  - word.Word.Body.insertContentControl
  - word.Word.Body.insertFileFromBase64
  - word.Word.Body.insertFileFromBase64_1
  - word.Word.Body.insertHtml
  - word.Word.Body.insertHtml_1
  - word.Word.Body.insertInlinePictureFromBase64
  - word.Word.Body.insertInlinePictureFromBase64_1
  - word.Word.Body.insertOoxml
  - word.Word.Body.insertOoxml_1
  - word.Word.Body.insertParagraph
  - word.Word.Body.insertParagraph_1
  - word.Word.Body.insertTable
  - word.Word.Body.insertTable_1
  - word.Word.Body.insertText
  - word.Word.Body.insertText_1
  - word.Word.Body.lists
  - word.Word.Body.load
  - word.Word.Body.load_1
  - word.Word.Body.load_2
  - word.Word.Body.paragraphs
  - word.Word.Body.parentBody
  - word.Word.Body.parentBodyOrNullObject
  - word.Word.Body.parentContentControl
  - word.Word.Body.parentContentControlOrNullObject
  - word.Word.Body.parentSection
  - word.Word.Body.parentSectionOrNullObject
  - word.Word.Body.search
  - word.Word.Body.select
  - word.Word.Body.select_1
  - word.Word.Body.set
  - word.Word.Body.set_1
  - word.Word.Body.style
  - word.Word.Body.styleBuiltIn
  - word.Word.Body.tables
  - word.Word.Body.text
  - word.Word.Body.toJSON
  - word.Word.Body.track
  - word.Word.Body.type
  - word.Word.Body.untrack
- uid: word.Word.Body.clear
  summary: >-
    <span data-ttu-id="96528-p101">Очищает объект содержимого. Пользователь может отменить операцию очищения для содержимого.</span><span class="sxs-lookup"><span data-stu-id="96528-p101">Clears the contents of the body object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="96528-105">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-106\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to clear the contents of the body.\n    body.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the body contents.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how the \n// clear method can be used to clear the contents of a document.\n// https://aka.ms/sillystorywordaddin\n```"
- uid: word.Word.Body.contentControls
  summary: >-
    <span data-ttu-id="96528-p102">Получает коллекцию из объектов управления форматированным текстом в содержимом документа или раздела. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p102">Gets the collection of rich text content control objects in the body. Read-only.</span></span>


    <span data-ttu-id="96528-109">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Body.context
  summary: <span data-ttu-id="96528-110">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="96528-110">The request context associated with the object.</span></span> <span data-ttu-id="96528-111">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="96528-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.Body.font
  summary: >-
    <span data-ttu-id="96528-p104">Получает формат текста, указанный для содержимого документа или раздела. Используйте эту связь, чтобы получать и задавать имя, размер, цвет и другие свойства шрифта. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p104">Gets the text format of the body. Use this to get and set font name, size, color and other properties. Read-only.</span></span>


    <span data-ttu-id="96528-115">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-116\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-116\">Examples</span></span>\n\n```javascript\n// Get the style and the font size, font name, and font color properties on the body object.\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to load font and style information for the document body.\n    context.load(body, 'font/size, font/name, font/color, style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        // Show the results of the load method. Here we show the\n        // property values on the body object.\n        var results = 'Font size: ' + body.font.size +\n                      '; Font name: ' + body.font.name +\n                      '; Font color: ' + body.font.color +\n                      '; Body style: ' + body.style;\n\n        console.log(results);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getHtml
  summary: >-
    <span data-ttu-id="96528-117">Получает объект body представление HTML.</span><span class="sxs-lookup"><span data-stu-id="96528-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="96528-118">При отображении в веб-страницы или средства просмотра HTML, форматирование будет закрыть, но не точное соответствие для форматирования документа.</span><span class="sxs-lookup"><span data-stu-id="96528-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="96528-119">Этот метод не возвращает точный же HTML-код для одного документа на разных платформах (Windows, Mac, Word Online, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="96528-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="96528-120">Если требуется точное качеством или согласованности платформ, используйте `Body.getOoxml()` и преобразования возвращенного XML в HTML-код.</span><span class="sxs-lookup"><span data-stu-id="96528-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>


    <span data-ttu-id="96528-121">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-122\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-122\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the HTML contents of the body.\n    var bodyHTML = body.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body HTML contents: \" + bodyHTML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getOoxml
  summary: >-
    <span data-ttu-id="96528-123">Возвращает OOXML-представление (Office Open XML) объекта содержимого.</span><span class="sxs-lookup"><span data-stu-id="96528-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>


    <span data-ttu-id="96528-124">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-125\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-125\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the OOXML contents of the body.\n    var bodyOOXML = body.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body OOXML contents: \" + bodyOOXML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getRange
  summary: >-
    <span data-ttu-id="96528-126">Возвращает весь основной текст (либо его начальную или конечную точку) в виде диапазона.</span><span class="sxs-lookup"><span data-stu-id="96528-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="96528-127">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange(rangeLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="96528-128">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="96528-128">Optional.</span></span> <span data-ttu-id="96528-129">Расположение диапазона может быть «Целое», «Запуск», «End», «После», или «Содержимое».</span><span class="sxs-lookup"><span data-stu-id="96528-129">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Body.getRange_1
  summary: >-
    <span data-ttu-id="96528-130">Возвращает весь основной текст (либо его начальную или конечную точку) в виде диапазона.</span><span class="sxs-lookup"><span data-stu-id="96528-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="96528-131">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocationString)
  fullName: getRange(rangeLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocationString
      description: <span data-ttu-id="96528-132">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="96528-132">Optional.</span></span> <span data-ttu-id="96528-133">Расположение диапазона может быть «Целое», «Запуск», «End», «После», или «Содержимое».</span><span class="sxs-lookup"><span data-stu-id="96528-133">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
- uid: word.Word.Body.inlinePictures
  summary: >-
    <span data-ttu-id="96528-134">Получает коллекцию объектов InlinePicture в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="96528-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="96528-135">Коллекция не содержит плавающие изображения.</span><span class="sxs-lookup"><span data-stu-id="96528-135">The collection does not include floating images.</span></span> <span data-ttu-id="96528-136">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-136">Read-only.</span></span>


    <span data-ttu-id="96528-137">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Body.insertBreak
  summary: >-
    <span data-ttu-id="96528-p109">Вставляет разрыв в указанном расположении в основном документе. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p109">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-140">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak(breakType, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-141\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-141\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (ctx) {\n\n    // Create a proxy object for the document body.\n    var body = ctx.document.body;\n\n    // Queue a commmand to insert a page break at the start of the document body.\n    body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        console.log('Added a page break at the start of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="96528-p110">Обязательный параметр. Тип разрыва, который необходимо добавить в содержимое.</span><span class="sxs-lookup"><span data-stu-id="96528-p110">Required. The break type to add to the body.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p111\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p111\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertBreak_1
  summary: >-
    <span data-ttu-id="96528-p112">Вставляет разрыв в указанном расположении в основном документе. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p112">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-148">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakTypeString, insertLocation)
  fullName: insertBreak(breakTypeString, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: breakTypeString
      description: <span data-ttu-id="96528-p113">Обязательный параметр. Тип разрыва, который необходимо добавить в содержимое.</span><span class="sxs-lookup"><span data-stu-id="96528-p113">Required. The break type to add to the body.</span></span>
      type:
      - "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p114\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p114\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertContentControl
  summary: >-
    <span data-ttu-id="96528-153">Включает объект содержимого в элемент управления форматированным текстом.</span><span class="sxs-lookup"><span data-stu-id="96528-153">Wraps the body object with a Rich Text content control.</span></span>


    <span data-ttu-id="96528-154">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: insertContentControl()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-155\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-155\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to wrap the body in a content control.\n    body.insertContentControl();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Wrapped the body in a content control.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.insertFileFromBase64
  summary: >-
    <span data-ttu-id="96528-156">Вставляет документ в содержимое документа или раздела в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="96528-157">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-158">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64(base64File, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-159\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-159\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.\n    // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.\n    body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64File
      description: <span data-ttu-id="96528-p116">Обязательный. Содержимое DOCX-файла в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="96528-p116">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p117\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p117\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertFileFromBase64_1
  summary: >-
    <span data-ttu-id="96528-164">Вставляет документ в содержимое документа или раздела в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="96528-165">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-166">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocationString)
  fullName: insertFileFromBase64(base64File, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="96528-p119">Обязательный. Содержимое DOCX-файла в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="96528-p119">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p120\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p120\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertHtml
  summary: >-
    <span data-ttu-id="96528-171">Вставляет HTML-код в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="96528-172">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-173">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml(html, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-174\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-174\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert HTML in to the beginning of the body.\n    body.insertHtml(\n        '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="96528-p122">Обязательный параметр. HTML-код, который необходимо вставить в документ.</span><span class="sxs-lookup"><span data-stu-id="96528-p122">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p123\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p123\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertHtml_1
  summary: >-
    <span data-ttu-id="96528-179">Вставляет HTML-код в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="96528-180">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-181">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocationString)
  fullName: insertHtml(html, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: html
      description: <span data-ttu-id="96528-p125">Обязательный параметр. HTML-код, который необходимо вставить в документ.</span><span class="sxs-lookup"><span data-stu-id="96528-p125">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p126\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p126\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="96528-p127">Вставляет рисунок в содержимое в заданном расположении. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p127">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-188">\[[Набор API-Интерфейсов: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-189\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-189\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert OOXML in to the beginning of the body.\n    body.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="96528-p128">Обязательный параметр. Вставляемое в основной текст изображение в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="96528-p128">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p129\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p129\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertInlinePictureFromBase64_1
  summary: >-
    <span data-ttu-id="96528-p130">Вставляет рисунок в содержимое в заданном расположении. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p130">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-196">\[[Набор API-Интерфейсов: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: ''
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="96528-p131">Обязательный параметр. Вставляемое в основной текст изображение в кодировке base64.</span><span class="sxs-lookup"><span data-stu-id="96528-p131">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p132\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p132\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertOoxml
  summary: >-
    <span data-ttu-id="96528-201">Вставляет OOXML-код в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="96528-202">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-203">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml(ooxml, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="96528-p134">Обязательный параметр. Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="96528-p134">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p135\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p135\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertOoxml_1
  summary: >-
    <span data-ttu-id="96528-208">Вставляет OOXML-код в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="96528-209">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-210">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocationString)
  fullName: insertOoxml(ooxml, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="96528-p137">Обязательный параметр. Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="96528-p137">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p138\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p138\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertParagraph
  summary: >-
    <span data-ttu-id="96528-p139">Вставляет абзац в заданном расположении. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p139">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-217">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph(paragraphText, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-218\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-218\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert the paragraph at the end of the document body.\n    body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added at the end of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.insertParagraph(\"Timeline\", \"End\");\n    paragraph.style = \"Heading 2\";\n    let paragraph2 = context.document.body.insertParagraph(\"The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.\", \"End\");\n    paragraph2.style = \"Normal\";\n    let paragraph3 = context.document.body.insertParagraph(\"Project Costs by Phase\", \"End\");\n    paragraph3.style = \"Heading 2\";\n    // Note a content control with the title of \"ProjectCosts\" is added. Content will be replaced later.\n    let paragraph4 = context.document.body.insertParagraph(\"<Add Project Costs Here>\", \"End\");\n    paragraph4.style = \"Normal\";\n    paragraph4.font.highlightColor = \"#FFFF00\";\n    let contentControl = paragraph4.insertContentControl();\n    contentControl.title = \"ProjectCosts\";\n    let paragraph5 = context.document.body.insertParagraph(\"Project Team\", \"End\");\n    paragraph5.style = \"Heading 2\";\n    paragraph5.font.highlightColor = \"#FFFFFF\";\n    let paragraph6 = context.document.body.insertParagraph(\"Terms of Work\", \"End\");\n    paragraph6.style = \"Heading 1\";\n    let paragraph7 = context.document.body.insertParagraph(\"Contractor shall provide the Services and Deliverable(s) as follows:\", \"End\");\n    paragraph7.style = \"Normal\";\n    let paragraph8 = context.document.body.insertParagraph(\"Out-of-Pocket Expenses / Invoice Procedures\", \"End\");\n    paragraph8.style = \"Heading 2\";\n    let paragraph9 = context.document.body.insertParagraph(\"Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.\", \"End\");\n    paragraph9.style = \"Normal\";\n    // Insert a page break at the end of the document.\n    context.document.body.insertBreak(\"Page\", \"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="96528-p140">Обязательный параметр. Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="96528-p140">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p141\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p141\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertParagraph_1
  summary: >-
    <span data-ttu-id="96528-p142">Вставляет абзац в заданном расположении. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p142">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-225">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocationString)
  fullName: insertParagraph(paragraphText, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="96528-p143">Обязательный параметр. Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="96528-p143">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p144\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p144\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertTable
  summary: >-
    <span data-ttu-id="96528-p145">Вставляет таблицу с указанным количеством строк и столбцов. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p145">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-232">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-233\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-233\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n  // We need a 2D array to hold the initial table values\n  let data = [\n    [\"Tokyo\", \"Beijing\", \"Seattle\"],\n    [\"Apple\", \"Orange\", \"Pineapple\"]\n  ];\n  let table = context.document.body.insertTable(2, 3, \"Start\", data);\n  table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;\n  table.styleFirstColumn = false;\n\n  await context.sync();\n});\n```"
    parameters:
    - id: rowCount
      description: <span data-ttu-id="96528-p146">Обязательный. Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="96528-p146">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="96528-p147">Обязательный. Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="96528-p147">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p148\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p148\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="96528-240">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="96528-240">Optional 2D array.</span></span> <span data-ttu-id="96528-241">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="96528-241">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertTable_1
  summary: >-
    <span data-ttu-id="96528-p150">Вставляет таблицу с указанным количеством строк и столбцов. Возможные значения insertLocation: Start и End.</span><span class="sxs-lookup"><span data-stu-id="96528-p150">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="96528-244">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocationString, values)
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="96528-p151">Обязательный. Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="96528-p151">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="96528-p152">Обязательный. Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="96528-p152">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p153\">Обязательный параметр. Возможные значения: Start и End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p153\">Required. The value can be 'Start' or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: <span data-ttu-id="96528-251">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="96528-251">Optional 2D array.</span></span> <span data-ttu-id="96528-252">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="96528-252">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertText
  summary: >-
    <span data-ttu-id="96528-253">Вставляет текст в содержимое документа или раздела в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="96528-254">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-255">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText(text, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-256\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-256\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert text in to the beginning of the body.\n    body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="96528-p156">Обязательный параметр. Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="96528-p156">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: "<span data-ttu-id=\"96528-p157\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p157\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertText_1
  summary: >-
    <span data-ttu-id="96528-261">Вставляет текст в содержимое документа или раздела в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="96528-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="96528-262">Значение insertLocation может быть «Replace», «Запуск» или «Завершение».</span><span class="sxs-lookup"><span data-stu-id="96528-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="96528-263">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocationString)
  fullName: insertText(text, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="96528-p159">Обязательный параметр. Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="96528-p159">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: "<span data-ttu-id=\"96528-p160\">Обязательный параметр. Возможные значения: Replace, Start или End.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p160\">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>"
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.lists
  summary: >-
    <span data-ttu-id="96528-p161">Возвращает коллекцию объектов списков в основном тексте. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p161">Gets the collection of list objects in the body. Read-only.</span></span>


    <span data-ttu-id="96528-270">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.Body.load
  summary: <span data-ttu-id="96528-271">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="96528-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="96528-272">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="96528-272">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="96528-273">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="96528-273">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="96528-274">`load(option?: string | string[]): Word.Body`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="96528-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="96528-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="96528-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="96528-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="96528-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="96528-277">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="96528-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="96528-278">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="96528-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="96528-279">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="96528-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="96528-280">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="96528-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - word.Word.Interfaces.BodyLoadOptions
- uid: word.Word.Body.load_1
  summary: <span data-ttu-id="96528-281">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="96528-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="96528-282">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="96528-282">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="96528-283">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="96528-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Body.load_2
  summary: <span data-ttu-id="96528-284">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="96528-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="96528-285">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="96528-285">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="96528-286">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="96528-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: word.Word.Body.paragraphs
  summary: >-
    <span data-ttu-id="96528-p166">Получает коллекцию объектов Paragraph в содержимом объекта или раздела. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p166">Gets the collection of paragraph objects in the body. Read-only.</span></span>


    <span data-ttu-id="96528-289">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.Body.parentBody
  summary: >-
    <span data-ttu-id="96528-p167">Возвращает родительский текст основного текста. Например, родительским текстом ячейки таблицы может быть заголовок. Выдает ошибку, если родительского текста не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="96528-294">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-294">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentBodyOrNullObject
  summary: >-
    <span data-ttu-id="96528-p168">Возвращает родительский текст основного текста. Например, родительским текстом ячейки таблицы может быть заголовок. Возвращает пустой объект, если родительского текста не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="96528-299">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-299">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBodyOrNullObject
  fullName: parentBodyOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBodyOrNullObject: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentContentControl
  summary: >-
    <span data-ttu-id="96528-p169">Получает элемент управления содержимым, содержащий документ или раздел. Выдает ошибку, если родительского элемента управления содержимым не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p169">Gets the content control that contains the body. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="96528-303">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-303">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="96528-p170">Получает элемент управления содержимым, содержащий документ или раздел. Возвращает пустой объект, если родительского элемента управления содержимым не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p170">Gets the content control that contains the body. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="96528-307">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentSection
  summary: >-
    <span data-ttu-id="96528-p171">Возвращает родительский раздел основного текста. Выдает ошибку, если родительского объекта не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p171">Gets the parent section of the body. Throws if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="96528-311">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-311">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSection
  fullName: parentSection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSection: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.parentSectionOrNullObject
  summary: >-
    <span data-ttu-id="96528-p172">Возвращает родительский раздел основного текста. Возвращает пустой объект, если родительского раздела не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p172">Gets the parent section of the body. Returns a null object if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="96528-315">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-315">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSectionOrNullObject
  fullName: parentSectionOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSectionOrNullObject: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.search
  summary: >-
    <span data-ttu-id="96528-316">Выполняет поиск с указанным SearchOptions на область объект body.</span><span class="sxs-lookup"><span data-stu-id="96528-316">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="96528-317">Результат поиска — коллекция объектов range.</span><span class="sxs-lookup"><span data-stu-id="96528-317">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="96528-318">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-318">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search(searchText, searchOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-319\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-319\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to search the document.\n    var searchResults = context.document.body.search('video', {matchCase: false});\n\n    // Queue a commmand to load the results.\n    context.load(searchResults, 'text, font');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        var results = 'Found count: ' + searchResults.items.length +\n                      '; we highlighted the results.';\n\n        // Queue a command to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n          searchResults.items[i].font.color = '#FF0000'    // Change color to Red\n          searchResults.items[i].font.highlightColor = '#FFFF00';\n          searchResults.items[i].font.bold = true;\n        }\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log(results);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Online\");\n    results.load(\"font/highlightColor\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"yellow\";\n    }\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes (i.e. we are using wildcards).\n    let results = context.document.body.search(\"$*.[0-9][0-9]\", { matchWildcards: true });\n    results.load(\"font/highlightColor, font/color\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"red\";\n        results.items[i].font.color = \"white\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="96528-320">Обязательно указывать.</span><span class="sxs-lookup"><span data-stu-id="96528-320">Required.</span></span> <span data-ttu-id="96528-321">Текст поиска.</span><span class="sxs-lookup"><span data-stu-id="96528-321">The search text.</span></span> <span data-ttu-id="96528-322">Может быть не более 255 знаков.</span><span class="sxs-lookup"><span data-stu-id="96528-322">Can be a maximum of 255 characters.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="96528-p175">Необязательный параметр. Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="96528-p175">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Body.select
  summary: >-
    <span data-ttu-id="96528-325">Выбирает содержимое и переходит к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="96528-325">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="96528-326">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-326">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select(selectionMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-327\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-327\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to select the document body. The Word UI will\n    // move to the selected document body.\n    body.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: selectionMode
      description: "<span data-ttu-id=\"96528-p176\">Необязательный параметр. Возможные режимы выбора: Select, Start и End. Значение по умолчанию — Select.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p176\">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>"
      type:
      - Word.SelectionMode
- uid: word.Word.Body.select_1
  summary: >-
    <span data-ttu-id="96528-331">Выбирает содержимое и переходит к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="96528-331">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="96528-332">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-332">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionModeString)
  fullName: select(selectionModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionModeString
      description: "<span data-ttu-id=\"96528-p177\">Необязательный параметр. Возможные режимы выбора: Select, Start и End. Значение по умолчанию — Select.</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-p177\">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>"
      type:
      - "\"Select\" | \"Start\" | \"End\""
- uid: word.Word.Body.set
  summary: <span data-ttu-id="96528-336">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="96528-336">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="96528-337">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="96528-337">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="96528-338">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="96528-338">This method has the following additional signature:</span></span>


    `set(properties: Word.Body): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="96528-339">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="96528-339">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.BodyUpdateData
    - id: options
      description: <span data-ttu-id="96528-340">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-340">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: word.Word.Body.set_1
  summary: <span data-ttu-id="96528-341">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="96528-341">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Word.Body): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Word.Body
- uid: word.Word.Body.style
  summary: >-
    <span data-ttu-id="96528-p179">Возвращает или задает имя стиля для основного текста. Используйте это свойство для пользовательских стилей и локализованных имен стилей. Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="96528-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="96528-345">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-345">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Body.styleBuiltIn
  summary: >-
    <span data-ttu-id="96528-p180">Возвращает или задает имя встроенного стиля основного текста. Используйте это свойство для встроенных стилей, поддерживающих несколько языковых стандартов. Чтобы использовать пользовательские стили или локализованные имена стилей, применяйте свойство style.</span><span class="sxs-lookup"><span data-stu-id="96528-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="96528-349">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-349">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Body.tables
  summary: >-
    <span data-ttu-id="96528-p181">Возвращает коллекцию объектов таблиц в основном тексте. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p181">Gets the collection of table objects in the body. Read-only.</span></span>


    <span data-ttu-id="96528-352">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-352">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.Body.text
  summary: >-
    <span data-ttu-id="96528-p182">Возвращает текст содержимого. Для вставки текста используется метод insertText. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p182">Gets the text of the body. Use the insertText method to insert text. Read-only.</span></span>


    <span data-ttu-id="96528-356">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-356">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"96528-357\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"96528-357\">Examples</span></span>\n\n```javascript\n// Get the text property on the body object\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to load the text in document body.\n    context.load(body, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body contents: \" + body.text);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.BodyData;'
    return:
      type:
      - word.Word.Interfaces.BodyData
      description: ''
- uid: word.Word.Body.track
  summary: <span data-ttu-id="96528-358">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="96528-358">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="96528-359">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="96528-359">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="96528-360">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="96528-360">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
- uid: word.Word.Body.type
  summary: >-
    <span data-ttu-id="96528-p184">Возвращает тип основного текста. Поддерживаемые типы: MainDoc, Section, Header, Footer и TableCell. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="96528-p184">Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Read-only.</span></span>


    <span data-ttu-id="96528-364">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="96528-364">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
    return:
      type:
      - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
- uid: word.Word.Body.untrack
  summary: <span data-ttu-id="96528-365">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="96528-365">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="96528-366">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="96528-366">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="96528-367">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="96528-367">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="96528-368">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="96528-368">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
