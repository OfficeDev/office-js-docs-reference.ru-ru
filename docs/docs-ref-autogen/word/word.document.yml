### YamlMime:UniversalReference
ms.openlocfilehash: d6991e18a2ada0e048c160aafcaf943a709a7374
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/17/2018
ms.locfileid: "25584542"
items:
- uid: word.Word.Document
  summary: >-
    <span data-ttu-id="29074-p101">Объект Document — это объект верхнего уровня. Объект Document содержит один или несколько разделов, элементы управления контентом и основной текст с содержанием документа.</span><span class="sxs-lookup"><span data-stu-id="29074-p101">The Document object is the top level object. A Document object contains one or more sections, content controls, and the body that contains the contents of the document.</span></span>


    <span data-ttu-id="29074-103">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-103">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Document
  fullName: word.Word.Document
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Document.body
  - word.Word.Document.contentControls
  - word.Word.Document.getSelection
  - word.Word.Document.load
  - word.Word.Document.properties
  - word.Word.Document.save
  - word.Word.Document.saved
  - word.Word.Document.sections
  - word.Word.Document.toJSON
  - word.Word.Document.track
  - word.Word.Document.untrack
- uid: word.Word.Document.body
  summary: >-
    <span data-ttu-id="29074-p102">Возвращает объект body документа. Объект body — это текст, не содержащий верхних и нижних колонтитулов, сносок, текстовых полей и т. д. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="29074-p102">Gets the body object of the document. The body is the text that excludes headers, footers, footnotes, textboxes, etc.. Read-only.</span></span>


    <span data-ttu-id="29074-107">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-107">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: body
  fullName: word.Word.Document.body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly body: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Document.contentControls
  summary: >-
    <span data-ttu-id="29074-108">Получает коллекцию объектов элемента управления содержимым в документе.</span><span class="sxs-lookup"><span data-stu-id="29074-108">Gets the collection of content control objects in the document.</span></span> <span data-ttu-id="29074-109">Это включает в себя элементы управления содержимым в основной части документа, заголовков, нижних колонтитулов, текстовые поля, и т.д...</span><span class="sxs-lookup"><span data-stu-id="29074-109">This includes content controls in the body of the document, headers, footers, textboxes, etc..</span></span> <span data-ttu-id="29074-110">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="29074-110">Read-only.</span></span>


    <span data-ttu-id="29074-111">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: word.Word.Document.contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Document.getSelection
  summary: >-
    <span data-ttu-id="29074-p104">Возвращает текущий выбранный фрагмент документа. Получение нескольких выбранных фрагментов не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="29074-p104">Gets the current selection of the document. Multiple selections are not supported.</span></span>


    <span data-ttu-id="29074-114">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-114">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getSelection()
  fullName: word.Word.Document.getSelection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"29074-115\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-115\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    var textSample = 'This is an example of the insert text method. This is a method ' + \n        'which allows users to insert text into a selection. It can insert text into a ' +\n        'relative location or it can overwrite the current selection. Since the ' +\n        'getSelection method returns a range object, look up the range object documentation ' +\n        'for everything you can do with a selection.';\n    \n    // Create a range proxy object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a commmand to insert text at the end of the selection.\n    range.insertText(textSample, Word.InsertLocation.end);\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted the text at the end of the selection.');\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Document.load
  summary: <span data-ttu-id="29074-116">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="29074-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="29074-117">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="29074-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"29074-118\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-118\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"29074-119\">`load(option?: { select?: string; expand?: string; }): Word.Document`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-119\">`load(option?: { select?: string; expand?: string; }): Word.Document` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"29074-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Document`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Document` - Only available on collection types.</span></span> <span data-ttu-id=\"29074-121\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-121\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"29074-122\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-122\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"29074-123\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-123\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"29074-124\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-124\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"29074-125\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-125\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n    \n    // Queue a command to load content control properties.\n    context.load(thisDocument, 'contentControls/id, contentControls/text, contentControls/tag');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (thisDocument.contentControls.items.length !== 0) {\n            for (var i = 0; i < thisDocument.contentControls.items.length; i++) {\n                console.log(thisDocument.contentControls.items[i].id);\n                console.log(thisDocument.contentControls.items[i].text);\n                console.log(thisDocument.contentControls.items[i].tag);\n            }\n        } else {\n            console.log('No content controls in this document.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: word.Word.Document.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="29074-126">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="29074-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Document.properties
  summary: >-
    <span data-ttu-id="29074-127">Получает свойства документа.</span><span class="sxs-lookup"><span data-stu-id="29074-127">Gets the properties of the document.</span></span> <span data-ttu-id="29074-128">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="29074-128">Read-only.</span></span>


    <span data-ttu-id="29074-129">\[[Набор API-Интерфейсов: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-129">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: properties
  fullName: word.Word.Document.properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Word.DocumentProperties;'
    return:
      type:
      - Word.DocumentProperties
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"29074-130\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-130\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    let builtInProperties = context.document.properties;\n    builtInProperties.load(\"*\"); // Let's get all!\n\n    await context.sync();\n    console.log(JSON.stringify(builtInProperties, null, 4));\n});\n```"
- uid: word.Word.Document.save
  summary: >-
    <span data-ttu-id="29074-p108">Сохраняет документ. При этом используется соглашение об именовании файлов Word по умолчанию, если документ ранее не сохранялся.</span><span class="sxs-lookup"><span data-stu-id="29074-p108">Saves the document. This will use the Word default file naming convention if the document has not been saved before.</span></span>


    <span data-ttu-id="29074-133">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: save()
  fullName: word.Word.Document.save
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"29074-134\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"29074-134\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n\n    // Queue a commmand to load the document save state (on the saved property).\n    context.load(thisDocument, 'saved');    \n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (thisDocument.saved === false) {\n            // Queue a command to save this document.\n            thisDocument.save();\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Saved the document');\n            });\n        } else {\n            console.log('The document has not changed since the last save.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Document.saved
  summary: >-
    <span data-ttu-id="29074-p109">Указывает, сохранены ли изменения, внесенные в документ. Значение true указывает на то, что с момента последнего сохранения в документ не вносились изменения. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="29074-p109">Indicates whether the changes in the document have been saved. A value of true indicates that the document hasn't changed since it was saved. Read-only.</span></span>


    <span data-ttu-id="29074-138">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: saved
  fullName: word.Word.Document.saved
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly saved: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Document.sections
  summary: >-
    <span data-ttu-id="29074-p110">Получает коллекцию объектов section в документе. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="29074-p110">Gets the collection of section objects in the document. Read-only.</span></span>


    <span data-ttu-id="29074-141">\[[Набор API-Интерфейсов: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="29074-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: sections
  fullName: word.Word.Document.sections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sections: Word.SectionCollection;'
    return:
      type:
      - Word.SectionCollection
- uid: word.Word.Document.toJSON
  name: toJSON()
  fullName: word.Word.Document.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.DocumentData;'
    return:
      type:
      - Word.Interfaces.DocumentData
      description: ''
- uid: word.Word.Document.track
  summary: <span data-ttu-id="29074-142">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="29074-142">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="29074-143">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="29074-143">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="29074-144">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="29074-144">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: word.Word.Document.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
- uid: word.Word.Document.untrack
  summary: <span data-ttu-id="29074-145">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="29074-145">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="29074-146">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="29074-146">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="29074-147">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="29074-147">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="29074-148">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="29074-148">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: word.Word.Document.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
