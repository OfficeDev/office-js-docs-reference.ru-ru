### YamlMime:UniversalReference
items:
  - uid: word.Word.Range
    summary: |-
      <span data-ttu-id="9a3c6-101">Представляет непрерывную область в документе.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="9a3c6-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.Range.clear
      - word.Word.Range.compareLocationWith
      - word.Word.Range.contentControls
      - word.Word.Range.context
      - word.Word.Range.delete
      - word.Word.Range.expandTo
      - word.Word.Range.expandToOrNullObject
      - word.Word.Range.font
      - word.Word.Range.getBookmarks
      - word.Word.Range.getHtml
      - word.Word.Range.getHyperlinkRanges
      - word.Word.Range.getNextTextRange
      - word.Word.Range.getNextTextRangeOrNullObject
      - word.Word.Range.getOoxml
      - word.Word.Range.getRange
      - word.Word.Range.getRange_1
      - word.Word.Range.getTextRanges
      - word.Word.Range.hyperlink
      - word.Word.Range.inlinePictures
      - word.Word.Range.insertBookmark
      - word.Word.Range.insertBreak
      - word.Word.Range.insertBreak_1
      - word.Word.Range.insertContentControl
      - word.Word.Range.insertFileFromBase64
      - word.Word.Range.insertFileFromBase64_1
      - word.Word.Range.insertHtml
      - word.Word.Range.insertHtml_1
      - word.Word.Range.insertInlinePictureFromBase64
      - word.Word.Range.insertInlinePictureFromBase64_1
      - word.Word.Range.insertOoxml
      - word.Word.Range.insertOoxml_1
      - word.Word.Range.insertParagraph
      - word.Word.Range.insertParagraph_1
      - word.Word.Range.insertTable
      - word.Word.Range.insertTable_1
      - word.Word.Range.insertText
      - word.Word.Range.insertText_1
      - word.Word.Range.intersectWith
      - word.Word.Range.intersectWithOrNullObject
      - word.Word.Range.isEmpty
      - word.Word.Range.lists
      - word.Word.Range.load
      - word.Word.Range.load_1
      - word.Word.Range.load_2
      - word.Word.Range.paragraphs
      - word.Word.Range.parentBody
      - word.Word.Range.parentContentControl
      - word.Word.Range.parentContentControlOrNullObject
      - word.Word.Range.parentTable
      - word.Word.Range.parentTableCell
      - word.Word.Range.parentTableCellOrNullObject
      - word.Word.Range.parentTableOrNullObject
      - word.Word.Range.search
      - word.Word.Range.select
      - word.Word.Range.select_1
      - word.Word.Range.set
      - word.Word.Range.set_1
      - word.Word.Range.split
      - word.Word.Range.style
      - word.Word.Range.styleBuiltIn
      - word.Word.Range.tables
      - word.Word.Range.text
      - word.Word.Range.toJSON
      - word.Word.Range.track
      - word.Word.Range.untrack
  - uid: word.Word.Range.clear
    summary: |-
      <span data-ttu-id="9a3c6-103">Очищает содержимое объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-103">Clears the contents of the range object.</span></span> <span data-ttu-id="9a3c6-104">Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="9a3c6-105">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.compareLocationWith
    summary: |-
      <span data-ttu-id="9a3c6-107">Сравнивает расположение данного диапазона с расположением другого диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-107">Compares this range's location with another range's location.</span></span>

      <span data-ttu-id="9a3c6-108">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-108">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: compareLocationWith(range)
    fullName: compareLocationWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'compareLocationWith(range: Word.Range): OfficeExtension.ClientResult<Word.LocationRelation>;'
      return:
        type:
          - OfficeExtension.ClientResult<Word.LocationRelation>
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="9a3c6-109">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-109">Required.</span></span> <span data-ttu-id="9a3c6-110">Диапазон, сравниваемый с этим диапазоном.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-110">The range to compare with this range.</span></span>'
          type:
            - Word.Range
  - uid: word.Word.Range.contentControls
    summary: |-
      <span data-ttu-id="9a3c6-111">Получает коллекцию объектов элементов управления содержимым в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-111">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="9a3c6-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-112">Read-only.</span></span>

      <span data-ttu-id="9a3c6-113">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.Range.context
    summary: '<span data-ttu-id="9a3c6-114">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-114">The request context associated with the object.</span></span> <span data-ttu-id="9a3c6-115">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-115">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.Range.delete
    summary: |-
      <span data-ttu-id="9a3c6-116">Удаляет диапазон и его содержимое из документа.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-116">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="9a3c6-117">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-117">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.expandTo
    summary: |-
      <span data-ttu-id="9a3c6-119">Возвращает новый диапазон, который простирается в том или ином направлении от данного диапазона и перекрывает другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-119">Returns a new range that extends from this range in either direction to cover another range.</span></span> <span data-ttu-id="9a3c6-120">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-120">This range is not changed.</span></span> <span data-ttu-id="9a3c6-121">Вызывается, если два диапазона не имеют объединения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-121">Throws if the two ranges do not have a union.</span></span>

      <span data-ttu-id="9a3c6-122">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-122">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: expandTo(range)
    fullName: expandTo(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandTo(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="9a3c6-123">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-123">Required.</span></span> <span data-ttu-id="9a3c6-124">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-124">Another range.</span></span>
          type:
            - Word.Range
  - uid: word.Word.Range.expandToOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-125">Возвращает новый диапазон, который простирается в том или ином направлении от данного диапазона и перекрывает другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-125">Returns a new range that extends from this range in either direction to cover another range.</span></span> <span data-ttu-id="9a3c6-126">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-126">This range is not changed.</span></span> <span data-ttu-id="9a3c6-127">Возвращает нулевой объект, если два диапазона не имеют объединения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-127">Returns a null object if the two ranges do not have a union.</span></span>

      <span data-ttu-id="9a3c6-128">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-128">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: expandToOrNullObject(range)
    fullName: expandToOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandToOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="9a3c6-129">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-129">Required.</span></span> <span data-ttu-id="9a3c6-130">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-130">Another range.</span></span>
          type:
            - Word.Range
  - uid: word.Word.Range.font
    summary: |-
      <span data-ttu-id="9a3c6-131">Возвращает формат текста диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-131">Gets the text format of the range.</span></span> <span data-ttu-id="9a3c6-132">Используйте это свойство, чтобы получать и задавать имея, размер, цвет и другие свойства шрифта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="9a3c6-133">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-133">Read-only.</span></span>

      <span data-ttu-id="9a3c6-134">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word.Word.Range.getBookmarks
    summary: |-
      <span data-ttu-id="9a3c6-135">Получает имена всех закладок в диапазоне или перекрывают их.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-135">Gets the names all bookmarks in or overlapping the range.</span></span> <span data-ttu-id="9a3c6-136">Закладка скрывается, если ее имя начинается с символа подчеркивания.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-136">A bookmark is hidden if its name starts with the underscore character.</span></span>

      <span data-ttu-id="9a3c6-137">\[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-137">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getBookmarks(includeHidden, includeAdjacent)'
    fullName: 'getBookmarks(includeHidden, includeAdjacent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBookmarks(includeHidden?: boolean, includeAdjacent?: boolean): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
      parameters:
        - id: includeHidden
          description: '<span data-ttu-id="9a3c6-138">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-138">Optional.</span></span> <span data-ttu-id="9a3c6-139">Указывает, следует ли включать скрытые закладки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-139">Indicates whether to include hidden bookmarks.</span></span> <span data-ttu-id="9a3c6-140">Значение по умолчанию — false, что указывает на то, что скрытые закладки исключены.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-140">Default is false which indicates that the hidden bookmarks are excluded.</span></span>'
          type:
            - boolean
        - id: includeAdjacent
          description: '<span data-ttu-id="9a3c6-141">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-141">Optional.</span></span> <span data-ttu-id="9a3c6-142">Указывает, следует ли включать закладки, расположенные рядом с диапазоном.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-142">Indicates whether to include bookmarks that are adjacent to the range.</span></span> <span data-ttu-id="9a3c6-143">Значение по умолчанию — false, что указывает на то, что соседние закладки исключены.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-143">Default is false which indicates that the adjacent bookmarks are excluded.</span></span>'
          type:
            - boolean
  - uid: word.Word.Range.getHtml
    summary: |-
      <span data-ttu-id="9a3c6-144">Возвращает HTML-представление объекта Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-144">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="9a3c6-145">При отображении на веб-странице или в средстве просмотра HTML форматирование будет близким, но не точным, соответствующим формату документа.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-145">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="9a3c6-146">Этот метод не возвращает точно такой же HTML-код для одного и того же документа на различных платформах (Windows, Mac и т. д.).</span><span class="sxs-lookup"><span data-stu-id="9a3c6-146">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="9a3c6-147">Если вам нужна точная точность или согласованность на различных платформах `Range.getOoxml()` , используйте и преобразуйте возвращенный XML в HTML.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-147">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="9a3c6-148">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-149">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.getHyperlinkRanges
    summary: |-
      <span data-ttu-id="9a3c6-150">Возвращает дочерние диапазоны гиперссылок в данном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-150">Gets hyperlink child ranges within the range.</span></span>

      <span data-ttu-id="9a3c6-151">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-151">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHyperlinkRanges()
    fullName: getHyperlinkRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHyperlinkRanges(): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
  - uid: word.Word.Range.getNextTextRange
    summary: |-
      <span data-ttu-id="9a3c6-152">Получает следующий диапазон текста с использованием знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-152">Gets the next text range by using punctuation marks and/or other ending marks.</span></span> <span data-ttu-id="9a3c6-153">Вызывается, если этот диапазон текста является последним.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-153">Throws if this text range is the last one.</span></span>

      <span data-ttu-id="9a3c6-154">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-154">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getNextTextRange(endingMarks, trimSpacing)'
    fullName: 'getNextTextRange(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRange(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="9a3c6-155">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-155">Required.</span></span> <span data-ttu-id="9a3c6-156">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-156">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="9a3c6-157">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-157">Optional.</span></span> <span data-ttu-id="9a3c6-158">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) из начала и конца возвращаемого диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-158">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range.</span></span> <span data-ttu-id="9a3c6-159">Значение по умолчанию — false, что указывает на то, что в начале и конце диапазона содержатся символы пробелов.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-159">Default is false which indicates that spacing characters at the start and end of the range are included.</span></span>'
          type:
            - boolean
  - uid: word.Word.Range.getNextTextRangeOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-160">Получает следующий диапазон текста с использованием знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-160">Gets the next text range by using punctuation marks and/or other ending marks.</span></span> <span data-ttu-id="9a3c6-161">Возвращает нулевой объект, если этот диапазон текста является последним.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-161">Returns a null object if this text range is the last one.</span></span>

      <span data-ttu-id="9a3c6-162">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    fullName: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRangeOrNullObject(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="9a3c6-163">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-163">Required.</span></span> <span data-ttu-id="9a3c6-164">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-164">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="9a3c6-165">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-165">Optional.</span></span> <span data-ttu-id="9a3c6-166">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) из начала и конца возвращаемого диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-166">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range.</span></span> <span data-ttu-id="9a3c6-167">Значение по умолчанию — false, что указывает на то, что в начале и конце диапазона содержатся символы пробелов.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-167">Default is false which indicates that spacing characters at the start and end of the range are included.</span></span>'
          type:
            - boolean
  - uid: word.Word.Range.getOoxml
    summary: |-
      <span data-ttu-id="9a3c6-168">Возвращает OOXML-представление объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-168">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="9a3c6-169">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-169">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-170">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-170">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.getRange
    summary: |-
      <span data-ttu-id="9a3c6-171">Клонирует диапазон либо получает его начальную или конечную точку в виде нового диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-171">Clones the range, or gets the starting or ending point of the range as a new range.</span></span>

      <span data-ttu-id="9a3c6-172">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-172">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="9a3c6-173">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-173">Optional.</span></span> <span data-ttu-id="9a3c6-174">Допустимые значения: "целое", "начало", "конец", "после" или "содержимое".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-174">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word.Word.Range.getRange_1
    summary: |-
      <span data-ttu-id="9a3c6-175">Клонирует диапазон либо получает его начальную или конечную точку в виде нового диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-175">Clones the range, or gets the starting or ending point of the range as a new range.</span></span>

      <span data-ttu-id="9a3c6-176">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-176">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="9a3c6-177">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-177">Optional.</span></span> <span data-ttu-id="9a3c6-178">Допустимые значения: "целое", "начало", "конец", "после" или "содержимое".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-178">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word.Word.Range.getTextRanges
    summary: |-
      <span data-ttu-id="9a3c6-179">Возвращает дочерние диапазоны текста в диапазоне с помощью знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-179">Gets the text child ranges in the range by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="9a3c6-180">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-180">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-181">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-181">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Gets the complete sentence (as range) associated with the insertion point.
            let sentences = context.document
              .getSelection()
              .getTextRanges(["."] /* Using the "." as delimiter */, false /*means without trimming spaces*/);
            sentences.load("$none");
            await context.sync();

            // Expands the range to the end of the paragraph to get all the complete sentences.
            let sentencesToTheEndOfParagraph = sentences.items[0]
              .getRange()
              .expandTo(
                context.document
                  .getSelection()
                  .paragraphs.getFirst()
                  .getRange("End")
              )
              .getTextRanges(["."], false /* Don't trim spaces*/);
            sentencesToTheEndOfParagraph.load("text");
            await context.sync();

            for (let i = 0; i < sentencesToTheEndOfParagraph.items.length; i++) {
              console.log(sentencesToTheEndOfParagraph.items[i].text);
            }
          });
          ```
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="9a3c6-182">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-182">Required.</span></span> <span data-ttu-id="9a3c6-183">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-183">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="9a3c6-184">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-184">Optional.</span></span> <span data-ttu-id="9a3c6-185">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) от начала и конца диапазонов, возвращаемых в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-185">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="9a3c6-186">Значение по умолчанию — false, которое указывает, что пробелы в начале и конце диапазонов включаются в коллекцию Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-186">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word.Word.Range.hyperlink
    summary: |-
      <span data-ttu-id="9a3c6-187">Возвращает первую гиперссылку в диапазоне или задает для него гиперссылку.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-187">Gets the first hyperlink in the range, or sets a hyperlink on the range.</span></span> <span data-ttu-id="9a3c6-188">При добавлении в диапазон новой гиперссылки из него удаляются все имеющиеся гиперссылки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-188">All hyperlinks in the range are deleted when you set a new hyperlink on the range.</span></span> <span data-ttu-id="9a3c6-189">Используйте '\#', чтобы отделить адрес от части необязательного расположения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-189">Use a '\#' to separate the address part from the optional location part.</span></span>

      <span data-ttu-id="9a3c6-190">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-190">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.inlinePictures
    summary: |-
      <span data-ttu-id="9a3c6-191">Возвращает коллекцию объектов встроенных рисунков в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-191">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id="9a3c6-192">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-192">Read-only.</span></span>

      <span data-ttu-id="9a3c6-193">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-193">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word.Word.Range.insertBookmark
    summary: |-
      <span data-ttu-id="9a3c6-194">Вставляет закладку в диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-194">Inserts a bookmark on the range.</span></span> <span data-ttu-id="9a3c6-195">Если закладка с таким же именем существует в другом месте, она будет удалена первыми.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-195">If a bookmark of the same name exists somewhere, it is deleted first.</span></span>

      <span data-ttu-id="9a3c6-196">\[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-196">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: insertBookmark(name)
    fullName: insertBookmark(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBookmark(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: '<span data-ttu-id="9a3c6-197">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-197">Required.</span></span> <span data-ttu-id="9a3c6-198">Имя закладки, не зависящее от регистра.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-198">The bookmark name, which is case-insensitive.</span></span> <span data-ttu-id="9a3c6-199">Если имя начинается со знака подчеркивания, закладка будет скрыта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-199">If the name starts with an underscore character, the bookmark is an hidden one.</span></span>'
          type:
            - string
  - uid: word.Word.Range.insertBreak
    summary: |-
      <span data-ttu-id="9a3c6-200">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-200">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="9a3c6-201">Возможные значения insertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-201">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-202">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-202">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: '<span data-ttu-id="9a3c6-203">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-203">Required.</span></span> <span data-ttu-id="9a3c6-204">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-204">The break type to add.</span></span>'
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-205">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-205">Required.</span></span> <span data-ttu-id="9a3c6-206">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-206">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertBreak_1
    summary: |-
      <span data-ttu-id="9a3c6-207">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-207">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="9a3c6-208">Возможные значения insertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-208">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-209">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-209">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-210">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-210">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: '<span data-ttu-id="9a3c6-211">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-211">Required.</span></span> <span data-ttu-id="9a3c6-212">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-212">The break type to add.</span></span>'
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-213">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-213">Required.</span></span> <span data-ttu-id="9a3c6-214">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-214">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertContentControl
    summary: |-
      <span data-ttu-id="9a3c6-215">Включает объект диапазона в элемент управления содержимым форматированного текста.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-215">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="9a3c6-216">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-216">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-217">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-217">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: word.Word.Range.insertFileFromBase64
    summary: |-
      <span data-ttu-id="9a3c6-218">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-218">Inserts a document at the specified location.</span></span> <span data-ttu-id="9a3c6-219">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-219">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-220">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-220">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-221">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-221">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="9a3c6-222">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-222">Required.</span></span> <span data-ttu-id="9a3c6-223">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-223">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-224">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-224">Required.</span></span> <span data-ttu-id="9a3c6-225">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-225">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="9a3c6-226">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-226">Inserts a document at the specified location.</span></span> <span data-ttu-id="9a3c6-227">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-227">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-228">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-228">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="9a3c6-229">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-229">Required.</span></span> <span data-ttu-id="9a3c6-230">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-230">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-231">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-231">Required.</span></span> <span data-ttu-id="9a3c6-232">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-232">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertHtml
    summary: |-
      <span data-ttu-id="9a3c6-233">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-233">Inserts HTML at the specified location.</span></span> <span data-ttu-id="9a3c6-234">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-234">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-235">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-235">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-236">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-236">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="9a3c6-237">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-237">Required.</span></span> <span data-ttu-id="9a3c6-238">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-238">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-239">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-239">Required.</span></span> <span data-ttu-id="9a3c6-240">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-240">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertHtml_1
    summary: |-
      <span data-ttu-id="9a3c6-241">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-241">Inserts HTML at the specified location.</span></span> <span data-ttu-id="9a3c6-242">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-242">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-243">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-243">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="9a3c6-244">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-244">Required.</span></span> <span data-ttu-id="9a3c6-245">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-245">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-246">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-246">Required.</span></span> <span data-ttu-id="9a3c6-247">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-247">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="9a3c6-248">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-248">Inserts a picture at the specified location.</span></span> <span data-ttu-id="9a3c6-249">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-249">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-250">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-250">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="9a3c6-251">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-251">Required.</span></span> <span data-ttu-id="9a3c6-252">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-252">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-253">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-253">Required.</span></span> <span data-ttu-id="9a3c6-254">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-254">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="9a3c6-255">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-255">Inserts a picture at the specified location.</span></span> <span data-ttu-id="9a3c6-256">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-256">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-257">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-257">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="9a3c6-258">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-258">Required.</span></span> <span data-ttu-id="9a3c6-259">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-259">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-260">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-260">Required.</span></span> <span data-ttu-id="9a3c6-261">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-261">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertOoxml
    summary: |-
      <span data-ttu-id="9a3c6-262">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-262">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="9a3c6-263">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-263">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-264">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-264">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-265">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-265">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="9a3c6-266">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-266">Required.</span></span> <span data-ttu-id="9a3c6-267">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-267">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-268">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-268">Required.</span></span> <span data-ttu-id="9a3c6-269">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-269">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertOoxml_1
    summary: |-
      <span data-ttu-id="9a3c6-270">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-270">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="9a3c6-271">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-271">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-272">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-272">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="9a3c6-273">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-273">Required.</span></span> <span data-ttu-id="9a3c6-274">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-274">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-275">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-275">Required.</span></span> <span data-ttu-id="9a3c6-276">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-276">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertParagraph
    summary: |-
      <span data-ttu-id="9a3c6-277">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-277">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="9a3c6-278">Возможные значения InsertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-278">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-279">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-279">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-280">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-280">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="9a3c6-281">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-281">Required.</span></span> <span data-ttu-id="9a3c6-282">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-282">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-283">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-283">Required.</span></span> <span data-ttu-id="9a3c6-284">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-284">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertParagraph_1
    summary: |-
      <span data-ttu-id="9a3c6-285">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-285">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="9a3c6-286">Возможные значения InsertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-286">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-287">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-287">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="9a3c6-288">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-288">Required.</span></span> <span data-ttu-id="9a3c6-289">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-289">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-290">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-290">Required.</span></span> <span data-ttu-id="9a3c6-291">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-291">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertTable
    summary: |-
      <span data-ttu-id="9a3c6-292">Вставляет таблицу с указанным количеством строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-292">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="9a3c6-293">Возможные значения InsertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-293">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-294">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-294">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="9a3c6-295">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-295">Required.</span></span> <span data-ttu-id="9a3c6-296">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-296">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="9a3c6-297">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-297">Required.</span></span> <span data-ttu-id="9a3c6-298">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-298">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-299">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-299">Required.</span></span> <span data-ttu-id="9a3c6-300">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-300">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - Word.InsertLocation
        - id: values
          description: '<span data-ttu-id="9a3c6-301">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-301">Optional 2D array.</span></span> <span data-ttu-id="9a3c6-302">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-302">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word.Word.Range.insertTable_1
    summary: |-
      <span data-ttu-id="9a3c6-303">Вставляет таблицу с указанным количеством строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-303">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="9a3c6-304">Возможные значения insertLocation: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-304">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="9a3c6-305">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-305">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="9a3c6-306">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-306">Required.</span></span> <span data-ttu-id="9a3c6-307">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-307">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="9a3c6-308">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-308">Required.</span></span> <span data-ttu-id="9a3c6-309">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-309">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-310">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-310">Required.</span></span> <span data-ttu-id="9a3c6-311">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-311">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="9a3c6-312">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-312">Optional 2D array.</span></span> <span data-ttu-id="9a3c6-313">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-313">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word.Word.Range.insertText
    summary: |-
      <span data-ttu-id="9a3c6-314">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-314">Inserts text at the specified location.</span></span> <span data-ttu-id="9a3c6-315">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-315">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-316">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-317">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-317">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="9a3c6-318">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-318">Required.</span></span> <span data-ttu-id="9a3c6-319">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-319">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="9a3c6-320">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-320">Required.</span></span> <span data-ttu-id="9a3c6-321">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-321">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word.Word.Range.insertText_1
    summary: |-
      <span data-ttu-id="9a3c6-322">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-322">Inserts text at the specified location.</span></span> <span data-ttu-id="9a3c6-323">Значение insertLocation может быть "Replace", "Start", "End", "Before" или "After".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-323">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="9a3c6-324">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-324">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: '<span data-ttu-id="9a3c6-325">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-325">Required.</span></span> <span data-ttu-id="9a3c6-326">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-326">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="9a3c6-327">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-327">Required.</span></span> <span data-ttu-id="9a3c6-328">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="9a3c6-328">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.intersectWith
    summary: |-
      <span data-ttu-id="9a3c6-329">Возвращает новый диапазон, представляющий собой пересечение данного диапазона с другим.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-329">Returns a new range as the intersection of this range with another range.</span></span> <span data-ttu-id="9a3c6-330">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-330">This range is not changed.</span></span> <span data-ttu-id="9a3c6-331">Вызывается, если два диапазона не перекрываются или не являются смежными.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-331">Throws if the two ranges are not overlapped or adjacent.</span></span>

      <span data-ttu-id="9a3c6-332">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-332">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: intersectWith(range)
    fullName: intersectWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWith(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="9a3c6-333">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-333">Required.</span></span> <span data-ttu-id="9a3c6-334">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-334">Another range.</span></span>
          type:
            - Word.Range
  - uid: word.Word.Range.intersectWithOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-335">Возвращает новый диапазон, представляющий собой пересечение данного диапазона с другим.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-335">Returns a new range as the intersection of this range with another range.</span></span> <span data-ttu-id="9a3c6-336">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-336">This range is not changed.</span></span> <span data-ttu-id="9a3c6-337">Возвращает нулевой объект, если два диапазона не перекрываются или не являются смежными.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-337">Returns a null object if the two ranges are not overlapped or adjacent.</span></span>

      <span data-ttu-id="9a3c6-338">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-338">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: intersectWithOrNullObject(range)
    fullName: intersectWithOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWithOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="9a3c6-339">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-339">Required.</span></span> <span data-ttu-id="9a3c6-340">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-340">Another range.</span></span>
          type:
            - Word.Range
  - uid: word.Word.Range.isEmpty
    summary: |-
      <span data-ttu-id="9a3c6-341">Проверяет, является ли длина диапазона нулевой.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-341">Checks whether the range length is zero.</span></span> <span data-ttu-id="9a3c6-342">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-342">Read-only.</span></span>

      <span data-ttu-id="9a3c6-343">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-343">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isEmpty
    fullName: isEmpty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEmpty: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.Range.lists
    summary: |-
      <span data-ttu-id="9a3c6-344">Возвращает коллекцию объектов списков в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-344">Gets the collection of list objects in the range.</span></span> <span data-ttu-id="9a3c6-345">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-345">Read-only.</span></span>

      <span data-ttu-id="9a3c6-346">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-346">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - word.Word.ListCollection
  - uid: word.Word.Range.load
    summary: <span data-ttu-id="9a3c6-347">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-347">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a3c6-348">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="9a3c6-348">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="9a3c6-349">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="9a3c6-349">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="9a3c6-350">`load(option?: string | string[]): Word.Range`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-350">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="9a3c6-351">`load(option?: { select?: string; expand?: string; }): Word.Range`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-351">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="9a3c6-352">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-352">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="9a3c6-353">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-353">It is similar to the preceding signature.</span></span> <span data-ttu-id="9a3c6-354">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-354">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9a3c6-355">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-355">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9a3c6-356">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-356">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.RangeLoadOptions
  - uid: word.Word.Range.load_1
    summary: <span data-ttu-id="9a3c6-357">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-357">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a3c6-358">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-358">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="9a3c6-359">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-359">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word.Word.Range.load_2
    summary: <span data-ttu-id="9a3c6-360">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-360">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a3c6-361">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-361">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="9a3c6-362">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-362">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Range.paragraphs
    summary: |-
      <span data-ttu-id="9a3c6-363">Возвращает коллекцию объектов абзаца в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-363">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="9a3c6-364">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-364">Read-only.</span></span>

      <span data-ttu-id="9a3c6-365">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-365">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: word.Word.Range.parentBody
    summary: |-
      <span data-ttu-id="9a3c6-366">Возвращает родительский текст диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-366">Gets the parent body of the range.</span></span> <span data-ttu-id="9a3c6-367">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-367">Read-only.</span></span>

      <span data-ttu-id="9a3c6-368">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-368">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word.Word.Range.parentContentControl
    summary: |-
      <span data-ttu-id="9a3c6-369">Возвращает элемент управления содержимым, содержащий диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-369">Gets the content control that contains the range.</span></span> <span data-ttu-id="9a3c6-370">Вызывается, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-370">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="9a3c6-371">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-371">Read-only.</span></span>

      <span data-ttu-id="9a3c6-372">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-372">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Range.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-373">Возвращает элемент управления содержимым, содержащий диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-373">Gets the content control that contains the range.</span></span> <span data-ttu-id="9a3c6-374">Возвращает нулевой объект, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-374">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="9a3c6-375">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-375">Read-only.</span></span>

      <span data-ttu-id="9a3c6-376">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-376">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Range.parentTable
    summary: |-
      <span data-ttu-id="9a3c6-377">Возвращает таблицу, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-377">Gets the table that contains the range.</span></span> <span data-ttu-id="9a3c6-378">Вызывается, если он не включен в таблицу.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-378">Throws if it is not contained in a table.</span></span> <span data-ttu-id="9a3c6-379">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-379">Read-only.</span></span>

      <span data-ttu-id="9a3c6-380">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-380">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word.Word.Range.parentTableCell
    summary: |-
      <span data-ttu-id="9a3c6-381">Возвращает ячейку таблицы, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-381">Gets the table cell that contains the range.</span></span> <span data-ttu-id="9a3c6-382">Создает исключение, если оно не находится в ячейке таблицы.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-382">Throws if it is not contained in a table cell.</span></span> <span data-ttu-id="9a3c6-383">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-383">Read-only.</span></span>

      <span data-ttu-id="9a3c6-384">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-384">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word.Word.Range.parentTableCellOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-385">Возвращает ячейку таблицы, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-385">Gets the table cell that contains the range.</span></span> <span data-ttu-id="9a3c6-386">Если он находится не в ячейке таблицы, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-386">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="9a3c6-387">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-387">Read-only.</span></span>

      <span data-ttu-id="9a3c6-388">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-388">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word.Word.Range.parentTableOrNullObject
    summary: |-
      <span data-ttu-id="9a3c6-389">Возвращает таблицу, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-389">Gets the table that contains the range.</span></span> <span data-ttu-id="9a3c6-390">Если она находится не в таблице, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-390">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="9a3c6-391">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-391">Read-only.</span></span>

      <span data-ttu-id="9a3c6-392">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-392">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word.Word.Range.search
    summary: |-
      <span data-ttu-id="9a3c6-393">Выполняет поиск с указанным SearchOptions в области объекта Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-393">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="9a3c6-394">Результат поиска — это коллекция объектов диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-394">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="9a3c6-395">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-395">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="9a3c6-396">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-396">Required.</span></span> <span data-ttu-id="9a3c6-397">Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-397">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="9a3c6-398">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-398">Optional.</span></span> <span data-ttu-id="9a3c6-399">Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-399">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.Range.select
    summary: |-
      <span data-ttu-id="9a3c6-400">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-400">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="9a3c6-401">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-401">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a3c6-402">Примеры</span><span class="sxs-lookup"><span data-stu-id="9a3c6-402">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="9a3c6-403">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-403">Optional.</span></span> <span data-ttu-id="9a3c6-404">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-404">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="9a3c6-405">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-405">''Select'' is the default.</span></span>'
          type:
            - Word.SelectionMode
  - uid: word.Word.Range.select_1
    summary: |-
      <span data-ttu-id="9a3c6-406">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-406">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="9a3c6-407">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-407">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="9a3c6-408">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-408">Optional.</span></span> <span data-ttu-id="9a3c6-409">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-409">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="9a3c6-410">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-410">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.Range.set
    summary: '<span data-ttu-id="9a3c6-411">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-411">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9a3c6-412">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-412">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="9a3c6-413">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="9a3c6-413">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="9a3c6-414">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-414">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.RangeUpdateData
        - id: options
          description: '<span data-ttu-id="9a3c6-415">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-415">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word.Word.Range.set_1
    summary: '<span data-ttu-id="9a3c6-416">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-416">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Range
  - uid: word.Word.Range.split
    summary: |-
      <span data-ttu-id="9a3c6-417">Разделяет диапазон на дочерние диапазоны с помощью разделителей.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-417">Splits the range into child ranges by using delimiters.</span></span>

      <span data-ttu-id="9a3c6-418">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-418">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: delimiters
          description: <span data-ttu-id="9a3c6-419">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-419">Required.</span></span> <span data-ttu-id="9a3c6-420">Разделители в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-420">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: multiParagraphs
          description: '<span data-ttu-id="9a3c6-421">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-421">Optional.</span></span> <span data-ttu-id="9a3c6-422">Указывает, может ли возвращенный дочерний диапазон охватывать несколько абзацев.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-422">Indicates whether a returned child range can cover multiple paragraphs.</span></span> <span data-ttu-id="9a3c6-423">Значение по умолчанию — false, которое указывает, что границы абзацев также используются в качестве разделителей.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-423">Default is false which indicates that the paragraph boundaries are also used as delimiters.</span></span>'
          type:
            - boolean
        - id: trimDelimiters
          description: '<span data-ttu-id="9a3c6-424">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-424">Optional.</span></span> <span data-ttu-id="9a3c6-425">Указывает, следует ли отрезать разделители от диапазонов в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-425">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="9a3c6-426">Значение по умолчанию — false, которое указывает, что разделители включены в диапазоны, возвращаемые в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-426">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="9a3c6-427">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-427">Optional.</span></span> <span data-ttu-id="9a3c6-428">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) от начала и конца диапазонов, возвращаемых в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-428">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="9a3c6-429">Значение по умолчанию — false, которое указывает, что пробелы в начале и конце диапазонов включаются в коллекцию Range.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-429">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word.Word.Range.style
    summary: |-
      <span data-ttu-id="9a3c6-430">Получает или задает имя стиля для диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-430">Gets or sets the style name for the range.</span></span> <span data-ttu-id="9a3c6-431">Используйте это свойство для пользовательских стилей и локализованных имен стилей.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-431">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="9a3c6-432">Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-432">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="9a3c6-433">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-433">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.styleBuiltIn
    summary: |-
      <span data-ttu-id="9a3c6-p209">Возвращает или задает имя встроенного стиля диапазона. Используйте это свойство для встроенных стилей, поддерживающих несколько языковых стандартов. Чтобы использовать пользовательские стили или локализованные имена стилей, применяйте свойство style.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-p209">Gets or sets the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="9a3c6-437">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-437">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word.Word.Range.tables
    summary: |-
      <span data-ttu-id="9a3c6-438">Возвращает коллекцию объектов таблиц в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-438">Gets the collection of table objects in the range.</span></span> <span data-ttu-id="9a3c6-439">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-439">Read-only.</span></span>

      <span data-ttu-id="9a3c6-440">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-440">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: word.Word.Range.text
    summary: |-
      <span data-ttu-id="9a3c6-441">Возвращает текст диапазона.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-441">Gets the text of the range.</span></span> <span data-ttu-id="9a3c6-442">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-442">Read-only.</span></span>

      <span data-ttu-id="9a3c6-443">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a3c6-443">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.toJSON
    summary: '<span data-ttu-id="9a3c6-444">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="9a3c6-444">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="9a3c6-445">.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-445"></span></span> <span data-ttu-id="9a3c6-446">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="9a3c6-446"></span></span><!-- --><span data-ttu-id="9a3c6-447">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. Range — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="9a3c6-447">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="9a3c6-448">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-448">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - Word.Interfaces.RangeData
        description: ''
  - uid: word.Word.Range.track
    summary: '<span data-ttu-id="9a3c6-449">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-449">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="9a3c6-450">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="9a3c6-450">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="9a3c6-451">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-451">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
  - uid: word.Word.Range.untrack
    summary: '<span data-ttu-id="9a3c6-452">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-452">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="9a3c6-453">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="9a3c6-453">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="9a3c6-454">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="9a3c6-454">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="9a3c6-455">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="9a3c6-455">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''