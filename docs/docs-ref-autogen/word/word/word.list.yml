### YamlMime:UniversalReference
items:
  - uid: 'word!Word.List:class'
    summary: |-
      Содержит коллекцию объектов [Word. абзаца](xref:word!Word.Paragraph:class) .

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.List
    fullName: Word.List
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.List#context:member'
      - 'word!Word.List#getLevelFont:member(1)'
      - 'word!Word.List#getLevelParagraphs:member(1)'
      - 'word!Word.List#getLevelPicture:member(1)'
      - 'word!Word.List#getLevelString:member(1)'
      - 'word!Word.List#id:member'
      - 'word!Word.List#insertParagraph:member(1)'
      - 'word!Word.List#insertParagraph:member(2)'
      - 'word!Word.List#levelExistences:member'
      - 'word!Word.List#levelTypes:member'
      - 'word!Word.List#load:member(1)'
      - 'word!Word.List#load:member(2)'
      - 'word!Word.List#load:member(3)'
      - 'word!Word.List#paragraphs:member'
      - 'word!Word.List#resetLevelFont:member(1)'
      - 'word!Word.List#setLevelAlignment:member(1)'
      - 'word!Word.List#setLevelAlignment:member(2)'
      - 'word!Word.List#setLevelBullet:member(1)'
      - 'word!Word.List#setLevelBullet:member(2)'
      - 'word!Word.List#setLevelIndents:member(1)'
      - 'word!Word.List#setLevelNumbering:member(1)'
      - 'word!Word.List#setLevelNumbering:member(2)'
      - 'word!Word.List#setLevelPicture:member(1)'
      - 'word!Word.List#setLevelStartingNumber:member(1)'
      - 'word!Word.List#toJSON:member(1)'
      - 'word!Word.List#track:member(1)'
      - 'word!Word.List#untrack:member(1)'
  - uid: 'word!Word.List#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.List#getLevelFont:member(1)'
    summary: |-
      Получает или задает значение, указывающее, указаны ли в списке.

      \[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    isPreview: true
    name: getLevelFont(level)
    fullName: getLevelFont(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelFont(level: number): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
  - uid: 'word!Word.List#getLevelParagraphs:member(1)'
    summary: |-
      Возвращает абзацы, обнаруженные на указанном уровне списка.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelParagraphs(level)
    fullName: getLevelParagraphs(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
  - uid: 'word!Word.List#getLevelPicture:member(1)'
    summary: |-
      Получает строковое представление изображения в кодировке Base64 на указанном уровне в списке.

      \[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    isPreview: true
    name: getLevelPicture(level)
    fullName: getLevelPicture(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelPicture(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelPicture~0:complex'
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
  - uid: 'word!Word.List#getLevelString:member(1)'
    summary: |-
      Получает маркер, число или изображение на заданном уровне в виде строки.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelString(level)
    fullName: getLevelString(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelString~0:complex'
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
  - uid: 'word!Word.List#id:member'
    summary: |-
      Получает идентификатор списка.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.List#insertParagraph:member(1)'
    summary: |-
      Вставляет абзац в указанном расположении.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: 'Обязательный параметр. Текст абзаца, который необходимо вставить.'
          type:
            - string
        - id: insertLocation
          description: 'Обязательный. Возможные значения: "Start", "End", "Before" и "After".'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.List#insertParagraph:member(2)'
    summary: |-
      Вставляет абзац в указанном расположении.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: 'Обязательный параметр. Текст абзаца, который необходимо вставить.'
          type:
            - string
        - id: insertLocationString
          description: 'Обязательный. Возможные значения: "Start", "End", "Before" и "After".'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.List#levelExistences:member'
    summary: |-
      Проверяет наличие каждого из 9 уровней в списке. Значение true указывает, что уровень существует, то есть на этом уровне имеется по крайней мере один элемент списка. Только для чтения.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelExistences
    fullName: levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: 'word!Word.List#levelTypes:member'
    summary: |-
      Возвращает типы всех 9 уровней списка. Каждый тип может иметь вид "маркированный", "номер" или "Рисунок". Только для чтения.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelTypes
    fullName: levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'word!Word.List#levelTypes~0:complex'
  - uid: 'word!Word.List#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: options
          description: 'Предоставляет параметры, для которых загружается свойства объекта.'
          type:
            - 'word!Word.Interfaces.ListLoadOptions:interface'
  - uid: 'word!Word.List#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'word!Word.List#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.List;
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.List#paragraphs:member'
    summary: |-
      Возвращает абзацы в списке. Только для чтения.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.List#resetLevelFont:member(1)'
    summary: |-
      Сбрасывает шрифт маркера, числа или изображения на указанном уровне списка.

      \[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    isPreview: true
    name: 'resetLevelFont(level, resetFontName)'
    fullName: 'resetLevelFont(level, resetFontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resetLevelFont(level: number, resetFontName?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: resetFontName
          description: 'Необязательное. Указывает, следует ли сбросить имя шрифта. Значение по умолчанию — false, что означает, что имя шрифта остается неизменным.'
          type:
            - boolean
  - uid: 'word!Word.List#setLevelAlignment:member(1)'
    summary: |-
      Задает выравнивание маркера, числа или рисунка на указанном уровне в списке.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignment)'
    fullName: 'setLevelAlignment(level, alignment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: alignment
          description: 'Обязательный. Выравнивание уровня, которое может иметь значение "Left", "Centerd" или "Right".'
          type:
            - 'word!Word.Alignment:enum'
  - uid: 'word!Word.List#setLevelAlignment:member(2)'
    summary: |-
      Задает выравнивание маркера, числа или рисунка на указанном уровне в списке.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignmentString)'
    fullName: 'setLevelAlignment(level, alignmentString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: alignmentString
          description: 'Обязательный. Выравнивание уровня, которое может иметь значение "Left", "Centerd" или "Right".'
          type:
            - '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List#setLevelBullet:member(1)'
    summary: |-
      Задает формат маркеров на указанном уровне списка. Если задан формат Custom, то параметр charCode является обязательным.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: listBullet
          description: Обязательный. Маркер.
          type:
            - 'word!Word.ListBullet:enum'
        - id: charCode
          description: 'Необязательное. Значение кода маркера. Используется только в том случае, если маркер имеет значение Custom.'
          type:
            - number
        - id: fontName
          description: 'Необязательное. Имя шрифта маркера. Используется только в том случае, если маркер имеет значение Custom.'
          type:
            - string
  - uid: 'word!Word.List#setLevelBullet:member(2)'
    summary: |-
      Задает формат маркеров на указанном уровне списка. Если задан формат Custom, то параметр charCode является обязательным.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBulletString: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: listBulletString
          description: Обязательный. Маркер.
          type:
            - '"Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark"'
        - id: charCode
          description: 'Необязательное. Значение кода маркера. Используется только в том случае, если маркер имеет значение Custom.'
          type:
            - number
        - id: fontName
          description: 'Необязательное. Имя шрифта маркера. Используется только в том случае, если маркер имеет значение Custom.'
          type:
            - string
  - uid: 'word!Word.List#setLevelIndents:member(1)'
    summary: |-
      Задает два отступа на указанном уровне списка.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: textIndent
          description: 'Обязательный. Отступ текста в пунктах. Это то же самое, что и отступ абзаца слева.'
          type:
            - number
        - id: bulletNumberPictureIndent
          description: 'Обязательный. Относительный отступ (в пунктах) маркера, номера или изображения. Это то же самое, что и отступ первой строки абзаца.'
          type:
            - number
  - uid: 'word!Word.List#setLevelNumbering:member(1)'
    summary: |-
      Задает формат нумерации на указанном уровне списка.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: listNumbering
          description: Обязательный. Порядковый формат.
          type:
            - 'word!Word.ListNumbering:enum'
        - id: formatString
          description: 'Необязательное. Формат строки нумерации, определенный как массив строк и/или целых чисел. Каждое целое число — это уровень числового типа, который больше или равен этому уровню. Например, массив \[ "(", Level-1, ".", Level, ")" \] может определять формат "(2. c)", где 2 — это номер элемента родительского уровня, а c — это номер элемента этого уровня.'
          type:
            - 'word!Word.List#setLevelNumbering~0:complex'
  - uid: 'word!Word.List#setLevelNumbering:member(2)'
    summary: |-
      Задает формат нумерации на указанном уровне списка.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumberingString, formatString)'
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumberingString: "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: listNumberingString
          description: Обязательный. Порядковый формат.
          type:
            - '"None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter"'
        - id: formatString
          description: 'Необязательное. Формат строки нумерации, определенный как массив строк и/или целых чисел. Каждое целое число — это уровень числового типа, который больше или равен этому уровню. Например, массив \[ "(", Level-1, ".", Level, ")" \] может определять формат "(2. c)", где 2 — это номер элемента родительского уровня, а c — это номер элемента этого уровня.'
          type:
            - 'word!Word.List#setLevelNumbering~1:complex'
  - uid: 'word!Word.List#setLevelPicture:member(1)'
    summary: |-
      Задает рисунок на указанном уровне в списке.

      \[[Набор API: WORDAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    isPreview: true
    name: 'setLevelPicture(level, base64EncodedImage)'
    fullName: 'setLevelPicture(level, base64EncodedImage)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelPicture(level: number, base64EncodedImage?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: base64EncodedImage
          description: 'Необязательное. Устанавливаемое изображение в кодировке Base64. Если этот параметр не задан, устанавливается изображение по умолчанию.'
          type:
            - string
  - uid: 'word!Word.List#setLevelStartingNumber:member(1)'
    summary: |-
      Задает начальный номер на указанном уровне списка. Значение по умолчанию: 1.

      \[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Обязательный. Уровень в списке.
          type:
            - number
        - id: startingNumber
          description: 'Обязательный. Число, с которого начинается запуск.'
          type:
            - number
  - uid: 'word!Word.List#toJSON:member(1)'
    summary: 'Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. List — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.ListData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - 'word!Word.Interfaces.ListData:interface'
        description: ''
  - uid: 'word!Word.List#track:member(1)'
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращенной записью для`context.trackedObjects.add(thisObject)`<!-- -->. Если вы используете этот объект во время `.sync` вызовов и вне последовательного выполнения пакета ". Run", а затем получите ошибку "инвалидобжектпас" при настройке свойства или вызове метода для объекта, необходимо добавить объект в коллекцию отслеживаемых объектов при первом создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
  - uid: 'word!Word.List#untrack:member(1)'
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращенной для`context.trackedObjects.remove(thisObject)`<!-- -->. Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Вам потребуется позвонить, `context.sync()` прежде чем будет применен выпуск памяти.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.List#getLevelPicture~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.List#getLevelString~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.List#levelTypes~0:complex'
    name: 'Word.ListLevelType[]'
    fullName: 'Word.ListLevelType[]'
    spec.typeScript:
      - uid: 'word!Word.ListLevelType:enum'
        name: Word.ListLevelType
        fullName: Word.ListLevelType
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.Interfaces.ListLoadOptions:interface'
    name: Word.Interfaces.ListLoadOptions
  - uid: 'word!Word.Alignment:enum'
    name: Word.Alignment
  - uid: 'word!Word.ListBullet:enum'
    name: Word.ListBullet
  - uid: 'word!Word.ListNumbering:enum'
    name: Word.ListNumbering
  - uid: 'word!Word.List#setLevelNumbering~0:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.List#setLevelNumbering~1:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.Interfaces.ListData:interface'
    name: Word.Interfaces.ListData