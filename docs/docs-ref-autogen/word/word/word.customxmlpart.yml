### YamlMime:TSType
name: Word.CustomXmlPart
uid: word!Word.CustomXmlPart:class
package: word!
fullName: Word.CustomXmlPart
summary: >-
  Представляет настраиваемую XML-часть.


  \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: word!Word.CustomXmlPart#context:member
  package: word!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом ведущего приложения Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: id
  uid: word!Word.CustomXmlPart#id:member
  package: word!
  fullName: id
  summary: >-
    Получает ИД настраиваемой XML-части. Только для чтения.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: namespaceUri
  uid: word!Word.CustomXmlPart#namespaceUri:member
  package: word!
  fullName: namespaceUri
  summary: >-
    Получает URI пространства имен настраиваемой XML-части. Только для чтения.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type: string
methods:
- name: delete()
  uid: word!Word.CustomXmlPart#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Удаляет пользовательскую XML-часть.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: deleteAttribute(xpath, namespaceMappings, name)
  uid: word!Word.CustomXmlPart#deleteAttribute:member(1)
  package: word!
  fullName: deleteAttribute(xpath, namespaceMappings, name)
  summary: >-
    Удаляет атрибут с заданным именем из элемента, заданного xpath.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен иметь префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Week, where thelias is an alias that is mapped to "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteAttribute(xpath: string, namespaceMappings: any, name: string): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному элементу в нотации XPath.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "names") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    - id: name
      description: Обязательный. Имя атрибута.
      type: string
    return:
      type: void
      description: ''
- name: deleteElement(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#deleteElement:member(1)
  package: word!
  fullName: deleteElement(xpath, namespaceMappings)
  summary: >-
    Удаляет элемент, идентифицированный xpath.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен иметь префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Неделя, где Заг — это псевдоним, который со см. в "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteElement(xpath: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному элементу в нотации XPath.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    return:
      type: void
      description: ''
- name: getXml()
  uid: word!Word.CustomXmlPart#getXml:member(1)
  package: word!
  fullName: getXml()
  summary: >-
    Получает полное содержимое XML настраиваемой XML-части.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: insertAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#insertAttribute:member(1)
  package: word!
  fullName: insertAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Вставляет атрибут с заданным именем и значением в элемент, заданный xpath.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен иметь префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Week, where thelias is an alias that is mapped to "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному элементу в нотации XPath.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "names") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    - id: name
      description: Обязательный. Имя атрибута.
      type: string
    - id: value
      description: Обязательный. Значение атрибута.
      type: string
    return:
      type: void
      description: ''
- name: insertElement(xpath, xml, namespaceMappings, index)
  uid: word!Word.CustomXmlPart#insertElement:member(1)
  package: word!
  fullName: insertElement(xpath, xml, namespaceMappings, index)
  summary: >-
    Вставляет заданный XML-элемент в родительский элемент, заданный xpath в индексе положения.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Week, where thelias is an alias that is mapped to "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertElement(xpath: string, xml: string, namespaceMappings: any, index?: number): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному родительскому элементу в нотации XPath.
      type: string
    - id: xml
      description: Обязательный. Содержимое XML, которое необходимо вставить.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "names") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    - id: index
      description: Необязательный параметр. Позиция с нулем, в которую необходимо вставить новый XML.. Если он опущен, XML будет примещен в качестве последнего child этого родительского.
      type: number
    return:
      type: void
      description: ''
- name: load(options)
  uid: word!Word.CustomXmlPart#load:member(1)
  package: word!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.CustomXmlPartLoadOptions): Word.CustomXmlPart;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружаются свойства объекта.
      type: <xref uid="word!Word.Interfaces.CustomXmlPartLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.CustomXmlPart#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.CustomXmlPart;'
    parameters:
    - id: propertyNames
      description: Строка с делегировкой запятой или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.CustomXmlPart#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.CustomXmlPart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — это строка с делегировкой запятой, которая указывает свойства для загрузки и является строкой с делегировкой запятой, которая определяет свойства навигации для `propertyNamesAndPaths.expand` загрузки.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: query(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#query:member(1)
  package: word!
  fullName: query(xpath, namespaceMappings)
  summary: >-
    Запрашивает XML-содержимое настраиваемой XML-части.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен иметь префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Week, where thelias is an alias that is mapped to "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'query(xpath: string, namespaceMappings: any): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: xpath
      description: Обязательный. Запрос XPath.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "names") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: Массив, в котором каждый элемент представляет запись, совпав с запросом XPath.
- name: setXml(xml)
  uid: word!Word.CustomXmlPart#setXml:member(1)
  package: word!
  fullName: setXml(xml)
  summary: >-
    Задает полное XML-содержимое настраиваемой XML-части.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setXml(xml: string): void;'
    parameters:
    - id: xml
      description: Обязательный. Содержимое XML, которое необходимо установить.
      type: string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.CustomXmlPart#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезные выходные данные при передании объекта `toJSON()` API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, `toJSON` который передается ему.) В то время как исходный объект Word.CustomXmlPart является объектом API, метод возвращает обычный объект `toJSON` JavaScript (введите как `Word.Interfaces.CustomXmlPartData`<!-- -->) содержит поверхностные копии всех загруженных свойств из исходного объекта.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.CustomXmlPartData;'
    return:
      type: <xref uid="word!Word.Interfaces.CustomXmlPartData:interface" />
      description: ''
- name: track()
  uid: word!Word.CustomXmlPart#track:member(1)
  package: word!
  fullName: track()
  summary: Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является кратким `context.trackedObjects.add(thisObject)`<!-- -->. Если этот объект используется во всех вызовах и вне последовательного выполнения пакета ".run" и при установке свойства или вызове метода для объекта вы получаете ошибку InvalidObjectPath, то при первом создании объекта необходимо добавить объект в отслеживаемую коллекцию `.sync` объектов.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'track(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: untrack()
  uid: word!Word.CustomXmlPart#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является кратким для `context.trackedObjects.remove(thisObject)`<!-- -->. Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед тем как выпуск памяти вступает в силу, `context.sync()` необходимо будет вызвать этот вызов.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: updateAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#updateAttribute:member(1)
  package: word!
  fullName: updateAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Обновляет значение атрибута с заданным именем элемента, заданного xpath.


    \[[Набор API: Бета-версия WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Неделя, где Заг — это псевдоним, который со см. в "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному элементу в нотации XPath.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    - id: name
      description: Обязательный. Имя атрибута.
      type: string
    - id: value
      description: Обязательный. Новое значение атрибута.
      type: string
    return:
      type: void
      description: ''
- name: updateElement(xpath, xml, namespaceMappings)
  uid: word!Word.CustomXmlPart#updateElement:member(1)
  package: word!
  fullName: updateElement(xpath, xml, namespaceMappings)
  summary: >-
    Обновляет XML-xML элемента, заденуемого по xpath.


    \[[Набор API: БЕТА-ВЕРСИЯ WordApi (ТОЛЬКО ПРЕДВАРИТЕЛЬНАЯ ВЕРСИЯ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Если какой-либо элемент в дереве имеет атрибут xmlns (значение которого обычно, но не всегда является URI), псевдоним для этого значения атрибута должен иметь префикс имени элемента в параметре xpath. Например, предположим, что дерево является следующим: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>xpath</Week> </Month> </Day> должен быть <Week> /<!-- -->Day<!-- -->/<!-- -->1:Month<!-- -->/<!-- -->Week, where thelias is an alias that is mapped to "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" в параметре namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateElement(xpath: string, xml: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Обязательный. Абсолютный путь к одному элементу в нотации XPath.
      type: string
    - id: xml
      description: Обязательный. Новое содержимое XML, которое необходимо сохранить.
      type: string
    - id: namespaceMappings
      description: 'Обязательный. Объект, значения свойств которого — это имена пространств имен, а имена свойств — псевдонимы соответствующих пространств имен. Пример: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Имена свойств (например, "names") могут быть любой строкой, в которых не используются зарезервированные символы XPath, например косая черта "/".'
      type: any
    return:
      type: void
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b6d0a86c68a4c9fe5c8876bef881283f306aff90
  ms.sourcegitcommit: f229afdd4c2bc820ac799394a77b637fc66e87b4
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/27/2021
  ms.locfileid: "49992257"
