### YamlMime:UniversalReference
items:
  - uid: word.Word.Interfaces.CustomPropertyData
    summary: '<span data-ttu-id="2597a-101">Интерфейс, описывающий данные, возвращаемые при вызове "customProperty. Тожсон ()".</span><span class="sxs-lookup"><span data-stu-id="2597a-101">An interface describing the data returned by calling "customProperty.toJSON()".</span></span>'
    name: Word.Interfaces.CustomPropertyData
    fullName: Word.Interfaces.CustomPropertyData
    langs:
      - typeScript
    type: interface
    package: word
    children:
      - word.Word.Interfaces.CustomPropertyData.key
      - word.Word.Interfaces.CustomPropertyData.type
      - word.Word.Interfaces.CustomPropertyData.value
  - uid: word.Word.Interfaces.CustomPropertyData.key
    summary: |-
      <span data-ttu-id="2597a-102">Возвращает ключ настраиваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2597a-102">Gets the key of the custom property.</span></span> <span data-ttu-id="2597a-103">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2597a-103">Read only.</span></span>

      <span data-ttu-id="2597a-104">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2597a-104">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key?: string;'
      return:
        type:
          - string
  - uid: word.Word.Interfaces.CustomPropertyData.type
    summary: |-
      <span data-ttu-id="2597a-105">Возвращает тип значения настраиваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2597a-105">Gets the value type of the custom property.</span></span> <span data-ttu-id="2597a-106">Возможные значения: String, Number, Date, Boolean.</span><span class="sxs-lookup"><span data-stu-id="2597a-106">Possible values are: String, Number, Date, Boolean.</span></span> <span data-ttu-id="2597a-107">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2597a-107">Read only.</span></span>

      <span data-ttu-id="2597a-108">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2597a-108">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type?: Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean";'
      return:
        type:
          - Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean"
  - uid: word.Word.Interfaces.CustomPropertyData.value
    summary: |-
      <span data-ttu-id="2597a-109">Возвращает или задает значение настраиваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2597a-109">Gets or sets the value of the custom property.</span></span> <span data-ttu-id="2597a-110">Обратите внимание, что несмотря на то, что Word Online и формат docx допускают, что эти свойства имеют произвольное значение, в классической версии Word усечение строковые значения до 255 16-разрядных символов (возможно, при создании недопустимых символов Юникода путем разбиения суррогатной пары).</span><span class="sxs-lookup"><span data-stu-id="2597a-110">Note that even though Word Online and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).</span></span>

      <span data-ttu-id="2597a-111">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2597a-111">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: any;'
      return:
        type:
          - any