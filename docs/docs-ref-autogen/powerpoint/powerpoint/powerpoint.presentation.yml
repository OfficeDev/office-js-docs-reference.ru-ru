### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    summary: '\[[Набор API: поверпоинтапи 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
    name: PowerPoint.Presentation
    fullName: PowerPoint.Presentation
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Presentation#context:member'
      - 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(2)'
      - 'powerpoint!PowerPoint.Presentation#load:member(3)'
      - 'powerpoint!PowerPoint.Presentation#slides:member'
      - 'powerpoint!PowerPoint.Presentation#title:member'
      - 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Presentation#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
    summary: |-
      Вставляет указанные слайды из презентации в текущую презентацию.

      \[[Набор API: ПОВЕРПОИНТАПИ Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: 'insertSlidesFromBase64(base64File, options)'
    fullName: 'insertSlidesFromBase64(base64File, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSlidesFromBase64(base64File: string, options?: PowerPoint.InsertSlideOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: 'Строка в кодировке Base64, представляющая исходный файл презентации.'
          type:
            - string
        - id: options
          description: 'Параметры, определяющие, какие слайды будут вставлены, где будут размещаться новые слайды, а также будет использоваться форматирование презентации.'
          type:
            - 'powerpoint!PowerPoint.InsertSlideOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: options
          description: 'Предоставляет параметры, для которых загружается свойства объекта.'
          type:
            - 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Presentation;
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'powerpoint!PowerPoint.Presentation#slides:member'
    summary: |-
      Возвращает упорядоченную коллекцию слайдов в презентации.

      \[[Набор API: ПОВЕРПОИНТАПИ Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: slides
    fullName: slides
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slides: PowerPoint.SlideCollection;'
      return:
        type:
          - 'powerpoint!PowerPoint.SlideCollection:class'
  - uid: 'powerpoint!PowerPoint.Presentation#title:member'
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: string;'
      return:
        type:
          - string
  - uid: 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
    summary: 'Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект PowerPoint. Presentation является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `PowerPoint.Interfaces.PresentationData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
      return:
        type:
          - 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.InsertSlideOptions:interface'
    name: PowerPoint.InsertSlideOptions
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    name: PowerPoint.Presentation
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
    name: PowerPoint.Interfaces.PresentationLoadOptions
  - uid: 'powerpoint!PowerPoint.SlideCollection:class'
    name: PowerPoint.SlideCollection
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
    name: PowerPoint.Interfaces.PresentationData