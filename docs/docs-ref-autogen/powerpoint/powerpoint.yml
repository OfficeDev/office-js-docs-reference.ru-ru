### YamlMime:TSPackage
uid: powerpoint!
name: powerpoint
type: package
summary: ''
classes:
- powerpoint!PowerPoint.Application:class
- powerpoint!PowerPoint.Presentation:class
- powerpoint!PowerPoint.RequestContext:class
- powerpoint!PowerPoint.Slide:class
- powerpoint!PowerPoint.SlideCollection:class
enums:
- powerpoint!PowerPoint.ErrorCodes:enum
- powerpoint!PowerPoint.InsertSlideFormatting:enum
interfaces:
- powerpoint!PowerPoint.InsertSlideOptions:interface
- powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface
- powerpoint!PowerPoint.Interfaces.PresentationData:interface
- powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface
- powerpoint!PowerPoint.Interfaces.SlideCollectionData:interface
- powerpoint!PowerPoint.Interfaces.SlideCollectionLoadOptions:interface
- powerpoint!PowerPoint.Interfaces.SlideCollectionUpdateData:interface
- powerpoint!PowerPoint.Interfaces.SlideData:interface
- powerpoint!PowerPoint.Interfaces.SlideLoadOptions:interface
functions:
- name: PowerPoint.createPresentation(base64File)
  uid: powerpoint!PowerPoint.createPresentation:function(1)
  package: powerpoint!
  summary: >-
    Создает и открывает новую презентацию. Кроме того, можно предварительно заполнить презентацию с помощью файла с расширением. pptx в формате Base64.


    \[[Набор API: поверпоинтапи 1,1](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function createPresentation(base64File?: string): Promise<void>;'
    parameters:
    - id: base64File
      description: Необязательный атрибут. Файл PPTX с кодировкой base64. По умолчанию используется значение NULL.
      type: string
    return:
      type: Promise&lt;void&gt;
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nvar myFile = document.getElementById(\"file\");\nvar reader = new FileReader();\n\nreader.onload = function (event) {\n    // strip off the metadata before the base64-encoded string\n    var startIndex = event.target.result.indexOf(\"base64,\");\n    var copyBase64 = event.target.result.substr(startIndex + 7);\n\n    PowerPoint.createPresentation(copyBase64);        \n};\n\n// read in the file as a data URL so we can parse the base64-encoded string\nreader.readAsDataURL(myFile.files[0]);\n```"
- name: PowerPoint.run(batch)
  uid: powerpoint!PowerPoint.run:function(1)
  package: powerpoint!
  summary: Выполняет пакетный скрипт, который выполняет действия с объектной моделью PowerPoint, используя новый RequestContext. При разрешении обещания все отслеживаемые объекты, которые были автоматически выделены во время выполнения, будут освобождены.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(batch: (context: PowerPoint.RequestContext) => OfficeExtension.IPromise<T>): OfficeExtension.IPromise<T>;'
    parameters:
    - id: batch
      description: Функция, которая принимает значение RequestContext и возвращает обещание (как правило, только результат "Context. Sync ()"). Параметр context упрощает запросы к приложению PowerPoint. Так как надстройка Office и приложение PowerPoint выполняются в двух разных процессах, RequestContext необходим для получения доступа к объектной модели PowerPoint из надстройки.
      type: '(context: <xref uid="powerpoint!PowerPoint.RequestContext:class" />) =&gt; <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;'
    return:
      type: <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;
      description: ''
- name: PowerPoint.run(object, batch)
  uid: powerpoint!PowerPoint.run:function(2)
  package: powerpoint!
  summary: Выполняет пакетный скрипт, который выполняет действия с объектной моделью PowerPoint, используя RequestContext ранее созданного объекта API. При разрешении обещания все отслеживаемые объекты, которые были автоматически выделены во время выполнения, будут освобождены.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(object: OfficeExtension.ClientObject, batch: (context: PowerPoint.RequestContext) => OfficeExtension.IPromise<T>): OfficeExtension.IPromise<T>;'
    parameters:
    - id: object
      description: Ранее созданный объект API. Пакет будет использовать тот же RequestContext, что и переданный объект, что означает, что все изменения, примененные к объекту, будут забираться по имени "Context. Sync ()".
      type: <xref uid="powerpoint!OfficeExtension.ClientObject:class" />
    - id: batch
      description: Функция, которая принимает значение RequestContext и возвращает обещание (как правило, только результат "Context. Sync ()"). Параметр context упрощает запросы к приложению PowerPoint. Так как надстройка Office и приложение PowerPoint выполняются в двух разных процессах, RequestContext необходим для получения доступа к объектной модели PowerPoint из надстройки.
      type: '(context: <xref uid="powerpoint!PowerPoint.RequestContext:class" />) =&gt; <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;'
    return:
      type: <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;
      description: ''
- name: PowerPoint.run(objects, batch)
  uid: powerpoint!PowerPoint.run:function(3)
  package: powerpoint!
  summary: Выполняет пакетный скрипт, который выполняет действия с объектной моделью PowerPoint, используя RequestContext ранее созданных объектов API.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(objects: OfficeExtension.ClientObject[], batch: (context: PowerPoint.RequestContext) => OfficeExtension.IPromise<T>): OfficeExtension.IPromise<T>;'
    parameters:
    - id: objects
      description: Массив ранее созданных объектов API. Массив будет проверен, чтобы убедиться, что все объекты имеют один и тот же контекст. Пакет будет использовать этот общий RequestContext RequestContext, что означает, что все изменения, примененные к этим объектам, будут отбираться по "Context. Sync ()".
      type: <xref uid="powerpoint!OfficeExtension.ClientObject:class" />[]
    - id: batch
      description: Функция, которая принимает значение RequestContext и возвращает обещание (как правило, только результат "Context. Sync ()"). Параметр context упрощает запросы к приложению PowerPoint. Так как надстройка Office и приложение PowerPoint выполняются в двух разных процессах, RequestContext необходим для получения доступа к объектной модели PowerPoint из надстройки.
      type: '(context: <xref uid="powerpoint!PowerPoint.RequestContext:class" />) =&gt; <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;'
    return:
      type: <xref uid="powerpoint!OfficeExtension.IPromise:type" />&lt;T&gt;
      description: ''
metadata:
  ms.openlocfilehash: 41cca1bab51d7c857741e91ca78813226481e986
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49182182"
