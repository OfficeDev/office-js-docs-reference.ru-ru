### YamlMime:TSType
name: Visio.ShapeDataItemCollection
uid: visio!Visio.ShapeDataItemCollection:class
package: visio!
fullName: Visio.ShapeDataItemCollection
summary: >-
  Представляет ShapeDataItemCollection для заданного объекта Shape.


  \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeDataItemCollection#context:member
  package: visio!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.ShapeDataItemCollection#items:member
  package: visio!
  fullName: items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.ShapeDataItem[];'
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.ShapeDataItemCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Возвращает количество элементов данных фигуры.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: visio!Visio.ShapeDataItemCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Возвращает ShapeDataItem по имени.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Visio.ShapeDataItem;'
    parameters:
    - id: key
      description: Ключ — имя элемента ShapeDataItem, который нужно получить.
      type: string
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
  remarks: >-
    Помимо этой подписи, этот метод имеет следующие подписи:


    `load(option?: string | string[]): Visio.ShapeDataItemCollection` - Где параметр — запятая или массив строк, которые указывают свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Где option.select — это строка, делимитированная запятой, которая указывает свойства для загрузки, а options.expand — это запятая, которая указывает свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` — Доступно только для типов коллекций. Она аналогична предыдущей подписи. Option.top указывает максимальное количество элементов коллекции, которые могут быть включены в результат. Option.skip указывает количество элементов, которые должны быть пропущены и не включены в результат. Если option.top указан, набор результатов начнется после пропуска указанного количества элементов.


    #### <a name="examples"></a>Примеры


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItems = shape.shapeDataItems;
        shapeDataItems.load(["label", "value"]);
        return ctx.sync().then(function() {
            for (var i = 0; i < shapeDataItems.items.length; i++) {
                console.log(shapeDataItems.items[i].label);
                console.log(shapeDataItems.items[i].value);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeDataItemCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeDataItemCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект является объектом API, метод возвращает обычный `Visio.ShapeDataItemCollection` `toJSON` объект JavaScript (введите как `Visio.Interfaces.ShapeDataItemCollectionData`<!-- -->), содержащий массив "items" с мелкими копиями любых загруженных свойств из элементов коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a33c367b42efdcdc8a3eff7bda73e61bc32cacb9
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357957"
