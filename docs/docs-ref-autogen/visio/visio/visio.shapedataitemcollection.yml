### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    summary: |-
      <span data-ttu-id="5bc9c-101">Представляет ShapeDataItemCollection для заданного объекта Shape.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-101">Represents the ShapeDataItemCollection for a given Shape.</span></span>

      <span data-ttu-id="5bc9c-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5bc9c-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeDataItemCollection
    fullName: Visio.ShapeDataItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeDataItemCollection#context:member'
      - 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#items:member'
      - 'visio!Visio.ShapeDataItemCollection#load:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(2)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(3)'
      - 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
  - uid: 'visio!Visio.ShapeDataItemCollection#context:member'
    summary: '<span data-ttu-id="5bc9c-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-103">The request context associated with the object.</span></span> <span data-ttu-id="5bc9c-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="5bc9c-105">Возвращает количество элементов данных фигуры.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-105">Gets the number of Shape Data Items.</span></span>

      <span data-ttu-id="5bc9c-106">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5bc9c-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
        description: ''
  - uid: 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="5bc9c-107">Возвращает ShapeDataItem по имени.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-107">Gets the ShapeDataItem using its name.</span></span>

      <span data-ttu-id="5bc9c-108">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5bc9c-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="5bc9c-109">Ключ — имя элемента ShapeDataItem, который нужно получить.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-109">Key is the name of the ShapeDataItem to be retrieved.</span></span>'
          type:
            - string
  - uid: 'visio!Visio.ShapeDataItemCollection#items:member'
    summary: <span data-ttu-id="5bc9c-110">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#items~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(1)'
    summary: <span data-ttu-id="5bc9c-111">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5bc9c-112">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="5bc9c-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5bc9c-113">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="5bc9c-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5bc9c-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5bc9c-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5bc9c-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="5bc9c-117">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="5bc9c-118">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5bc9c-119">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5bc9c-120">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="5bc9c-121">Примеры</span><span class="sxs-lookup"><span data-stu-id="5bc9c-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItems = shape.shapeDataItems;
          shapeDataItems.load(["label", "value"]);
          return ctx.sync().then(function() {
              for (var i = 0; i < shapeDataItems.items.length; i++) {
                  console.log(shapeDataItems.items[i].label);
                  console.log(shapeDataItems.items[i].value);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.ShapeDataItemCollection#load~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(2)'
    summary: <span data-ttu-id="5bc9c-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5bc9c-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="5bc9c-124">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!OfficeExtension.LoadOption:interface'
  - uid: 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="5bc9c-125">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5bc9c-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5bc9c-126">.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-126"></span></span> <span data-ttu-id="5bc9c-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5bc9c-127"></span></span><!-- --><span data-ttu-id="5bc9c-128">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Visio.ShapeDataItemCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.ShapeDataItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="5bc9c-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeDataItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemCollectionData`</span></span><!-- --><span data-ttu-id="5bc9c-129">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="5bc9c-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: Visio.ShapeDataItem
  - uid: 'visio!Visio.ShapeDataItemCollection#items~0:complex'
    name: 'Visio.ShapeDataItem[]'
    fullName: 'Visio.ShapeDataItem[]'
    spec.typeScript:
      - uid: 'visio!Visio.ShapeDataItem:class'
        name: Visio.ShapeDataItem
        fullName: Visio.ShapeDataItem
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    name: Visio.ShapeDataItemCollection
  - uid: 'visio!Visio.ShapeDataItemCollection#load~0:complex'
    name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface'
        name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
        fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'visio!Visio.Interfaces.CollectionLoadOptions:interface'
        name: Visio.Interfaces.CollectionLoadOptions
        fullName: Visio.Interfaces.CollectionLoadOptions
  - uid: 'visio!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
    name: Visio.Interfaces.ShapeDataItemCollectionData