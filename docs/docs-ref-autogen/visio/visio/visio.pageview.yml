### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.PageView:class'
    summary: |-
      <span data-ttu-id="27e84-101">Представляет класс PageView.</span><span class="sxs-lookup"><span data-stu-id="27e84-101">Represents the PageView class.</span></span>

      <span data-ttu-id="27e84-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.PageView
    fullName: Visio.PageView
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.PageView#centerViewportOnShape:member(1)'
      - 'visio!Visio.PageView#context:member'
      - 'visio!Visio.PageView#fitToWindow:member(1)'
      - 'visio!Visio.PageView#getPosition:member(1)'
      - 'visio!Visio.PageView#getSelection:member(1)'
      - 'visio!Visio.PageView#isShapeInViewport:member(1)'
      - 'visio!Visio.PageView#load:member(1)'
      - 'visio!Visio.PageView#load:member(2)'
      - 'visio!Visio.PageView#load:member(3)'
      - 'visio!Visio.PageView#set:member(1)'
      - 'visio!Visio.PageView#set:member(2)'
      - 'visio!Visio.PageView#setPosition:member(1)'
      - 'visio!Visio.PageView#toJSON:member(1)'
      - 'visio!Visio.PageView#zoom:member'
  - uid: 'visio!Visio.PageView#centerViewportOnShape:member(1)'
    summary: |-
      <span data-ttu-id="27e84-103">Сдвигает документ Visio так, чтобы разместить указанную фигуру по центру.</span><span class="sxs-lookup"><span data-stu-id="27e84-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>

      <span data-ttu-id="27e84-104">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: centerViewportOnShape(ShapeId)
    fullName: centerViewportOnShape(ShapeId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'centerViewportOnShape(ShapeId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="27e84-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="27e84-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              activePage.view.centerViewportOnShape(shape.Id);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: ShapeId
          description: '<span data-ttu-id="27e84-106">Элемент ShapeId, который будет виден в центре.</span><span class="sxs-lookup"><span data-stu-id="27e84-106">ShapeId to be seen in the center.</span></span>'
          type:
            - number
  - uid: 'visio!Visio.PageView#context:member'
    summary: '<span data-ttu-id="27e84-107">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="27e84-107">The request context associated with the object.</span></span> <span data-ttu-id="27e84-108">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="27e84-108">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.PageView#fitToWindow:member(1)'
    summary: |-
      <span data-ttu-id="27e84-109">Выравнивает Page по краям текущего окна.</span><span class="sxs-lookup"><span data-stu-id="27e84-109">Fit Page to current window.</span></span>

      <span data-ttu-id="27e84-110">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: fitToWindow()
    fullName: fitToWindow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fitToWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'visio!Visio.PageView#getPosition:member(1)'
    summary: |-
      <span data-ttu-id="27e84-111">Возвращает объект, который определяет положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="27e84-111">Returns the position object that specifies the position of the page in the view.</span></span>

      <span data-ttu-id="27e84-112">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getPosition()
    fullName: getPosition()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
      return:
        type:
          - 'visio!Visio.PageView#getPosition~0:complex'
        description: ''
  - uid: 'visio!Visio.PageView#getSelection:member(1)'
    summary: |-
      <span data-ttu-id="27e84-113">Представляет выделение на странице.</span><span class="sxs-lookup"><span data-stu-id="27e84-113">Represents the Selection in the page.</span></span>

      <span data-ttu-id="27e84-114">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getSelection()
    fullName: getSelection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Visio.Selection;'
      return:
        type:
          - 'visio!Visio.Selection:class'
        description: ''
  - uid: 'visio!Visio.PageView#isShapeInViewport:member(1)'
    summary: |-
      <span data-ttu-id="27e84-115">Проверяет, находится ли фигура в представлении страницы.</span><span class="sxs-lookup"><span data-stu-id="27e84-115">To check if the shape is in view of the page or not.</span></span>

      <span data-ttu-id="27e84-116">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-116">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: isShapeInViewport(Shape)
    fullName: isShapeInViewport(Shape)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'visio!Visio.PageView#isShapeInViewport~0:complex'
        description: ''
      parameters:
        - id: Shape
          description: '<span data-ttu-id="27e84-117">Фигура, которую необходимо проверить.</span><span class="sxs-lookup"><span data-stu-id="27e84-117">Shape to be checked.</span></span>'
          type:
            - 'visio!Visio.Shape:class'
  - uid: 'visio!Visio.PageView#load:member(1)'
    summary: <span data-ttu-id="27e84-118">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="27e84-119">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="27e84-119">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="27e84-120">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="27e84-120">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="27e84-121">`load(option?: string | string[]): Visio.PageView`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="27e84-121">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="27e84-122">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="27e84-122">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="27e84-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="27e84-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="27e84-124">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="27e84-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="27e84-125">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="27e84-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="27e84-126">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="27e84-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="27e84-127">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="27e84-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
  - uid: 'visio!Visio.PageView#load:member(2)'
    summary: <span data-ttu-id="27e84-128">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="27e84-129">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="27e84-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="27e84-130">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="27e84-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.PageView#load:member(3)'
    summary: <span data-ttu-id="27e84-131">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="27e84-132">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="27e84-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="27e84-133">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="27e84-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.PageView#set:member(1)'
    summary: '<span data-ttu-id="27e84-134">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="27e84-135">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="27e84-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="27e84-136">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="27e84-136">This method has the following additional signature:</span></span>

      `set(properties: Visio.PageView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="27e84-137">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="27e84-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'visio!Visio.Interfaces.PageViewUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="27e84-138">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="27e84-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'visio!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.PageView#set:member(2)'
    summary: '<span data-ttu-id="27e84-139">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.PageView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.PageView:class'
  - uid: 'visio!Visio.PageView#setPosition:member(1)'
    summary: |-
      <span data-ttu-id="27e84-140">Задает положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="27e84-140">Sets the position of the page in the view.</span></span>

      <span data-ttu-id="27e84-141">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-141">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setPosition(Position)
    fullName: setPosition(Position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(Position: Visio.Position): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: Position
          description: '<span data-ttu-id="27e84-142">Объект Position, который указывает новое положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="27e84-142">Position object that specifies the new position of the page in the view.</span></span>'
          type:
            - 'visio!Visio.Position:interface'
  - uid: 'visio!Visio.PageView#toJSON:member(1)'
    summary: '<span data-ttu-id="27e84-143">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="27e84-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="27e84-144">.</span><span class="sxs-lookup"><span data-stu-id="27e84-144"></span></span> <span data-ttu-id="27e84-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="27e84-145"></span></span><!-- --><span data-ttu-id="27e84-146">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Visio. PageView — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.PageViewData`</span><span class="sxs-lookup"><span data-stu-id="27e84-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.PageView object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.PageViewData`</span></span><!-- --><span data-ttu-id="27e84-147">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="27e84-147">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageViewData;'
      return:
        type:
          - 'visio!Visio.Interfaces.PageViewData:interface'
        description: ''
  - uid: 'visio!Visio.PageView#zoom:member'
    summary: |-
      <span data-ttu-id="27e84-148">Получает и задает уровень масштабирования страницы.</span><span class="sxs-lookup"><span data-stu-id="27e84-148">Get and set Page's Zoom level.</span></span> <span data-ttu-id="27e84-149">Значение может находиться в диапазоне от 10 до 400 и обозначает процент масштабирования.</span><span class="sxs-lookup"><span data-stu-id="27e84-149">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>

      <span data-ttu-id="27e84-150">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="27e84-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="27e84-151">Примеры</span><span class="sxs-lookup"><span data-stu-id="27e84-151">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              activePage.view.zoom = 300;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.PageView#getPosition~0:complex'
    name: OfficeExtension.ClientResult<Visio.Position>
    fullName: OfficeExtension.ClientResult<Visio.Position>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'visio!Visio.Position:interface'
        name: Visio.Position
        fullName: Visio.Position
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Selection:class'
    name: Visio.Selection
  - uid: 'visio!Visio.PageView#isShapeInViewport~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'visio!Visio.Shape:class'
    name: Visio.Shape
  - uid: 'visio!Visio.PageView:class'
    name: Visio.PageView
  - uid: 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
    name: Visio.Interfaces.PageViewLoadOptions
  - uid: 'visio!Visio.Interfaces.PageViewUpdateData:interface'
    name: Interfaces.PageViewUpdateData
  - uid: 'visio!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Position:interface'
    name: Visio.Position
  - uid: 'visio!Visio.Interfaces.PageViewData:interface'
    name: Visio.Interfaces.PageViewData