### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Application:class'
    summary: |-
      <span data-ttu-id="992c2-101">Представляет Application.</span><span class="sxs-lookup"><span data-stu-id="992c2-101">Represents the Application.</span></span>

      <span data-ttu-id="992c2-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="992c2-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Application
    fullName: Visio.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Application#context:member'
      - 'visio!Visio.Application#load:member(1)'
      - 'visio!Visio.Application#load:member(2)'
      - 'visio!Visio.Application#load:member(3)'
      - 'visio!Visio.Application#set:member(1)'
      - 'visio!Visio.Application#set:member(2)'
      - 'visio!Visio.Application#showBorders:member'
      - 'visio!Visio.Application#showToolbar:member(1)'
      - 'visio!Visio.Application#showToolbar:member(2)'
      - 'visio!Visio.Application#showToolbars:member'
      - 'visio!Visio.Application#toJSON:member(1)'
  - uid: 'visio!Visio.Application#context:member'
    summary: '<span data-ttu-id="992c2-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="992c2-103">The request context associated with the object.</span></span> <span data-ttu-id="992c2-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="992c2-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Application#load:member(1)'
    summary: <span data-ttu-id="992c2-105">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="992c2-106">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="992c2-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="992c2-107">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="992c2-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="992c2-108">`load(option?: string | string[]): Visio.Application`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="992c2-108">`load(option?: string | string[]): Visio.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="992c2-109">`load(option?: { select?: string; expand?: string; }): Visio.Application`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="992c2-109">`load(option?: { select?: string; expand?: string; }): Visio.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="992c2-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="992c2-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application` - Only available on collection types.</span></span> <span data-ttu-id="992c2-111">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="992c2-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="992c2-112">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="992c2-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="992c2-113">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="992c2-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="992c2-114">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="992c2-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.ApplicationLoadOptions:interface'
  - uid: 'visio!Visio.Application#load:member(2)'
    summary: <span data-ttu-id="992c2-115">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="992c2-116">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="992c2-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="992c2-117">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="992c2-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Application#load:member(3)'
    summary: <span data-ttu-id="992c2-118">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="992c2-119">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="992c2-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="992c2-120">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="992c2-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Application#set:member(1)'
    summary: '<span data-ttu-id="992c2-121">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="992c2-122">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="992c2-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="992c2-123">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="992c2-123">This method has the following additional signature:</span></span>

      `set(properties: Visio.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="992c2-124">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="992c2-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'visio!Visio.Interfaces.ApplicationUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="992c2-125">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="992c2-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'visio!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Application#set:member(2)'
    summary: '<span data-ttu-id="992c2-126">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-126">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Application:class'
  - uid: 'visio!Visio.Application#showBorders:member'
    summary: |-
      <span data-ttu-id="992c2-127">Отображение или скрытие границ приложения iFrame.</span><span class="sxs-lookup"><span data-stu-id="992c2-127">Show or hide the iFrame application borders.</span></span>

      <span data-ttu-id="992c2-128">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="992c2-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showBorders
    fullName: showBorders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBorders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="992c2-129">Примеры</span><span class="sxs-lookup"><span data-stu-id="992c2-129">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.Application#showToolbar:member(1)'
    summary: |-
      <span data-ttu-id="992c2-130">Задает видимость определенной панели инструментов в приложении.</span><span class="sxs-lookup"><span data-stu-id="992c2-130">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="992c2-131">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="992c2-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(id, show)'
    fullName: 'showToolbar(id, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="992c2-132">Тип панели инструментов</span><span class="sxs-lookup"><span data-stu-id="992c2-132">The type of the Toolbar</span></span>
          type:
            - 'visio!Visio.ToolBarType:enum'
        - id: show
          description: '<span data-ttu-id="992c2-133">Указывает, является ли панель инструментов Visible.</span><span class="sxs-lookup"><span data-stu-id="992c2-133">Whether the toolbar is visibile or not.</span></span>'
          type:
            - boolean
  - uid: 'visio!Visio.Application#showToolbar:member(2)'
    summary: |-
      <span data-ttu-id="992c2-134">Задает видимость определенной панели инструментов в приложении.</span><span class="sxs-lookup"><span data-stu-id="992c2-134">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="992c2-135">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="992c2-135">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(idString, show)'
    fullName: 'showToolbar(idString, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: idString
          description: <span data-ttu-id="992c2-136">Тип панели инструментов</span><span class="sxs-lookup"><span data-stu-id="992c2-136">The type of the Toolbar</span></span>
          type:
            - '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: '<span data-ttu-id="992c2-137">Указывает, является ли панель инструментов Visible.</span><span class="sxs-lookup"><span data-stu-id="992c2-137">Whether the toolbar is visibile or not.</span></span>'
          type:
            - boolean
  - uid: 'visio!Visio.Application#showToolbars:member'
    summary: |-
      <span data-ttu-id="992c2-138">Отображение или скрытие стандартных панелей инструментов.</span><span class="sxs-lookup"><span data-stu-id="992c2-138">Show or hide the standard toolbars.</span></span>

      <span data-ttu-id="992c2-139">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="992c2-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showToolbars
    fullName: showToolbars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type:
          - boolean
  - uid: 'visio!Visio.Application#toJSON:member(1)'
    summary: '<span data-ttu-id="992c2-140">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="992c2-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="992c2-141">.</span><span class="sxs-lookup"><span data-stu-id="992c2-141"></span></span> <span data-ttu-id="992c2-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="992c2-142"></span></span><!-- --><span data-ttu-id="992c2-143">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Visio. Application — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="992c2-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="992c2-144">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="992c2-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ApplicationData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Application:class'
    name: Visio.Application
  - uid: 'visio!Visio.Interfaces.ApplicationLoadOptions:interface'
    name: Visio.Interfaces.ApplicationLoadOptions
  - uid: 'visio!Visio.Interfaces.ApplicationUpdateData:interface'
    name: Interfaces.ApplicationUpdateData
  - uid: 'visio!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.ToolBarType:enum'
    name: Visio.ToolBarType
  - uid: 'visio!Visio.Interfaces.ApplicationData:interface'
    name: Visio.Interfaces.ApplicationData