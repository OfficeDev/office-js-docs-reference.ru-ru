### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Application:class'
    summary: |-
      Представляет Application.

      \[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.Application
    fullName: Visio.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Application#context:member'
      - 'visio!Visio.Application#load:member(1)'
      - 'visio!Visio.Application#load:member(2)'
      - 'visio!Visio.Application#load:member(3)'
      - 'visio!Visio.Application#set:member(1)'
      - 'visio!Visio.Application#set:member(2)'
      - 'visio!Visio.Application#showBorders:member'
      - 'visio!Visio.Application#showToolbar:member(1)'
      - 'visio!Visio.Application#showToolbar:member(2)'
      - 'visio!Visio.Application#showToolbars:member'
      - 'visio!Visio.Application#toJSON:member(1)'
  - uid: 'visio!Visio.Application#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Application#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): Visio.Application`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): Visio.Application`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.ApplicationLoadOptions:interface'
  - uid: 'visio!Visio.Application#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Application#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Application#set:member(1)'
    summary: 'Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.'
    remarks: |-
      Этот метод имеет следующую дополнительную подпись:

      `set(properties: Visio.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.'
          type:
            - 'visio!Visio.Interfaces.ApplicationUpdateData:interface'
        - id: options
          description: 'Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.'
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Application#set:member(2)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Application:class'
  - uid: 'visio!Visio.Application#showBorders:member'
    summary: |-
      Отображение или скрытие границ приложения iFrame.

      \[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: showBorders
    fullName: showBorders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBorders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          Visio.run(session, function (ctx) {
              var application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.Application#showToolbar:member(1)'
    summary: |-
      Задает видимость определенной панели инструментов в приложении.

      \[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: 'showToolbar(id, show)'
    fullName: 'showToolbar(id, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: Тип панели инструментов
          type:
            - 'visio!Visio.ToolBarType:enum'
        - id: show
          description: 'Указывает, является ли панель инструментов Visible.'
          type:
            - boolean
  - uid: 'visio!Visio.Application#showToolbar:member(2)'
    summary: |-
      Задает видимость определенной панели инструментов в приложении.

      \[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: 'showToolbar(idString, show)'
    fullName: 'showToolbar(idString, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: idString
          description: Тип панели инструментов
          type:
            - '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: 'Указывает, является ли панель инструментов Visible.'
          type:
            - boolean
  - uid: 'visio!Visio.Application#showToolbars:member'
    summary: |-
      Отображение или скрытие стандартных панелей инструментов.

      \[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: showToolbars
    fullName: showToolbars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type:
          - boolean
  - uid: 'visio!Visio.Application#toJSON:member(1)'
    summary: 'Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Visio. Application — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.ApplicationData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ApplicationData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Application:class'
    name: Visio.Application
  - uid: 'visio!Visio.Interfaces.ApplicationLoadOptions:interface'
    name: Visio.Interfaces.ApplicationLoadOptions
  - uid: 'visio!Visio.Interfaces.ApplicationUpdateData:interface'
    name: Interfaces.ApplicationUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.ToolBarType:enum'
    name: Visio.ToolBarType
  - uid: 'visio!Visio.Interfaces.ApplicationData:interface'
    name: Visio.Interfaces.ApplicationData