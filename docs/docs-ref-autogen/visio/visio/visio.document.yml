### YamlMime:TSType
name: Visio.Document
uid: visio!Visio.Document:class
package: visio!
fullName: Visio.Document
summary: >-
  Представляет класс Document.


  \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: visio!Visio.Document#application:member
  package: visio!
  fullName: application
  summary: >-
    Представляет экземпляр приложения Visio, содержащий этот документ. Только для чтения.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Visio.Application;'
    return:
      type: <xref uid="visio!Visio.Application:class" />
- name: context
  uid: visio!Visio.Document#context:member
  package: visio!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: onDataRefreshComplete
  uid: visio!Visio.Document#onDataRefreshComplete:member
  package: visio!
  fullName: onDataRefreshComplete
  summary: >-
    Происходит, когда данные обновляются на схеме.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.DataRefreshCompleteEventArgs:interface" />&gt;
- name: onDocumentLoadComplete
  uid: visio!Visio.Document#onDocumentLoadComplete:member
  package: visio!
  fullName: onDocumentLoadComplete
  summary: >-
    Происходит, когда документ загружается, обновляется или меняется.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.DocumentLoadCompleteEventArgs:interface" />&gt;
- name: onPageLoadComplete
  uid: visio!Visio.Document#onPageLoadComplete:member
  package: visio!
  fullName: onPageLoadComplete
  summary: >-
    Возникает после завершения загрузки страницы.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.PageLoadCompleteEventArgs:interface" />&gt;
- name: onSelectionChanged
  uid: visio!Visio.Document#onSelectionChanged:member
  package: visio!
  fullName: onSelectionChanged
  summary: >-
    Происходит, когда меняется текущий выбор фигур.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.SelectionChangedEventArgs:interface" />&gt;
- name: onShapeMouseEnter
  uid: visio!Visio.Document#onShapeMouseEnter:member
  package: visio!
  fullName: onShapeMouseEnter
  summary: >-
    Возникает, когда пользователь перемещает указатель мыши в окне границы фигуры.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.ShapeMouseEnterEventArgs:interface" />&gt;
- name: onShapeMouseLeave
  uid: visio!Visio.Document#onShapeMouseLeave:member
  package: visio!
  fullName: onShapeMouseLeave
  summary: >-
    Происходит, когда пользователь перемещает мышь из окне границы фигуры.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.ShapeMouseLeaveEventArgs:interface" />&gt;
- name: pages
  uid: visio!Visio.Document#pages:member
  package: visio!
  fullName: pages
  summary: >-
    Представляет коллекцию страниц, связанных с документом. Только для чтения.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pages: Visio.PageCollection;'
    return:
      type: <xref uid="visio!Visio.PageCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pages = ctx.document.pages;\n    var pageCount = pages.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Pages Count: \" +pageCount.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: view
  uid: visio!Visio.Document#view:member
  package: visio!
  fullName: view
  summary: >-
    Возвращает объект DocumentView. Только для чтения.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.DocumentView;'
    return:
      type: <xref uid="visio!Visio.DocumentView:class" />
methods:
- name: getActivePage()
  uid: visio!Visio.Document#getActivePage:member(1)
  package: visio!
  fullName: getActivePage()
  summary: >-
    Возвращает активную страницу документа.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActivePage(): Visio.Page;'
    return:
      type: <xref uid="visio!Visio.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var activePage = document.getActivePage();\n    activePage.load(\"name\");\n    return ctx.sync().then(function () {\n        console.log(\"pageName: \" +activePage.name);\n    });   \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: visio!Visio.Document#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
  remarks: >-
    Помимо этой подписи, этот метод имеет следующие подписи:


    `load(option?: string | string[]): Visio.Document` - Где параметр — запятая или массив строк, которые указывают свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Visio.Document` - Где option.select — это строка, делимитированная запятой, которая указывает свойства для загрузки, а options.expand — это запятая, которая указывает свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` — Доступно только для типов коллекций. Она аналогична предыдущей подписи. Option.top указывает максимальное количество элементов коллекции, которые могут быть включены в результат. Option.skip указывает количество элементов, которые должны быть пропущены и не включены в результат. Если option.top указан, набор результатов начнется после пропуска указанного количества элементов.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.DocumentLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Document#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Document;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Document#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
    parameters:
    - id: propertyNamesAndPaths
      description: Если свойствоNamesAndPaths.select — это строка с запятой, которая указывает свойства для загрузки, а propertyNamesAndPaths.expand — запятая, которая указывает свойства навигации для загрузки.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Document#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Задает несколько свойств объекта одновременно. Можно передать либо обычный объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Visio.Document): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, структурированными изоморфно, с свойствами объекта, на который вызван метод.
      type: <xref uid="visio!Visio.Interfaces.DocumentUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавления ошибок, если объект свойств пытается установить любые свойства только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Document#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Задает несколько свойств на объекте одновременно на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Document): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Document:class" />
    return:
      type: void
      description: ''
- name: setActivePage(PageName)
  uid: visio!Visio.Document#setActivePage:member(1)
  package: visio!
  fullName: setActivePage(PageName)
  summary: >-
    Задает активную страницу документа.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setActivePage(PageName: string): void;'
    parameters:
    - id: PageName
      description: Имя страницы
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var pageName = \"Page-1\";\n    document.setActivePage(pageName);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: startDataRefresh()
  uid: visio!Visio.Document#startDataRefresh:member(1)
  package: visio!
  fullName: startDataRefresh()
  summary: >-
    Запускает обновление данных в диаграмме, для всех страниц.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'startDataRefresh(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    document.startDataRefresh();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: toJSON()
  uid: visio!Visio.Document#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект Visio.Docявляется объектом API, метод возвращает обычный объект `toJSON` JavaScript (введите как `Visio.Interfaces.DocumentData`<!-- -->), содержащий неглубокие копии любых загруженных свойств ребенка из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.DocumentData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.DocumentData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: c7e77f3ffd45076dff1581d05651d633dec2bbe6
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51277277"
