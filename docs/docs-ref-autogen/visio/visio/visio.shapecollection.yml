### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeCollection:class'
    summary: |-
      <span data-ttu-id="4bc92-101">Представляет коллекцию Shape.</span><span class="sxs-lookup"><span data-stu-id="4bc92-101">Represents the Shape Collection.</span></span>

      <span data-ttu-id="4bc92-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="4bc92-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeCollection
    fullName: Visio.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeCollection#context:member'
      - 'visio!Visio.ShapeCollection#getCount:member(1)'
      - 'visio!Visio.ShapeCollection#getItem:member(1)'
      - 'visio!Visio.ShapeCollection#items:member'
      - 'visio!Visio.ShapeCollection#load:member(1)'
      - 'visio!Visio.ShapeCollection#load:member(2)'
      - 'visio!Visio.ShapeCollection#load:member(3)'
      - 'visio!Visio.ShapeCollection#toJSON:member(1)'
  - uid: 'visio!Visio.ShapeCollection#context:member'
    summary: '<span data-ttu-id="4bc92-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="4bc92-103">The request context associated with the object.</span></span> <span data-ttu-id="4bc92-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="4bc92-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="4bc92-105">Возвращает количество фигур в коллекции.</span><span class="sxs-lookup"><span data-stu-id="4bc92-105">Gets the number of Shapes in the collection.</span></span>

      <span data-ttu-id="4bc92-106">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="4bc92-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'visio!Visio.ShapeCollection#getCount~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4bc92-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="4bc92-107">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var numShapesActivePage = activePage.shapes.getCount();
              return ctx.sync().then(function () {
                  console.log("Shapes Count: " + numShapesActivePage.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.ShapeCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="4bc92-108">Возвращает фигуру по ключу (имени или индексу).</span><span class="sxs-lookup"><span data-stu-id="4bc92-108">Gets a Shape using its key (name or Index).</span></span>

      <span data-ttu-id="4bc92-109">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="4bc92-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Shape;'
      return:
        type:
          - 'visio!Visio.Shape:class'
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="4bc92-110">Ключ — имя или индекс фигуры, которую нужно получить.</span><span class="sxs-lookup"><span data-stu-id="4bc92-110">Key is the Name or Index of the shape to be retrieved.</span></span>'
          type:
            - number | string
  - uid: 'visio!Visio.ShapeCollection#items:member'
    summary: <span data-ttu-id="4bc92-111">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="4bc92-111">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Shape[];'
      return:
        type:
          - 'visio!Visio.ShapeCollection#items~0:complex'
  - uid: 'visio!Visio.ShapeCollection#load:member(1)'
    summary: <span data-ttu-id="4bc92-112">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="4bc92-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4bc92-113">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="4bc92-113">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="4bc92-114">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="4bc92-114">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4bc92-115">`load(option?: string | string[]): Visio.ShapeCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4bc92-115">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4bc92-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4bc92-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4bc92-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="4bc92-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="4bc92-118">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="4bc92-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="4bc92-119">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="4bc92-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4bc92-120">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="4bc92-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4bc92-121">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="4bc92-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.ShapeCollection#load~0:complex'
  - uid: 'visio!Visio.ShapeCollection#load:member(2)'
    summary: <span data-ttu-id="4bc92-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="4bc92-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4bc92-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="4bc92-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="4bc92-124">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="4bc92-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!OfficeExtension.LoadOption:interface'
  - uid: 'visio!Visio.ShapeCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="4bc92-125">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4bc92-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4bc92-126">.</span><span class="sxs-lookup"><span data-stu-id="4bc92-126"></span></span> <span data-ttu-id="4bc92-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4bc92-127"></span></span><!-- --><span data-ttu-id="4bc92-128">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Visio.ShapeCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="4bc92-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="4bc92-129">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="4bc92-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeCollectionData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'visio!Visio.Shape:class'
    name: Visio.Shape
  - uid: 'visio!Visio.ShapeCollection#items~0:complex'
    name: 'Visio.Shape[]'
    fullName: 'Visio.Shape[]'
    spec.typeScript:
      - uid: 'visio!Visio.Shape:class'
        name: Visio.Shape
        fullName: Visio.Shape
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.ShapeCollection:class'
    name: Visio.ShapeCollection
  - uid: 'visio!Visio.ShapeCollection#load~0:complex'
    name: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    fullName: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.ShapeCollectionLoadOptions:interface'
        name: Visio.Interfaces.ShapeCollectionLoadOptions
        fullName: Visio.Interfaces.ShapeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'visio!Visio.Interfaces.CollectionLoadOptions:interface'
        name: Visio.Interfaces.CollectionLoadOptions
        fullName: Visio.Interfaces.CollectionLoadOptions
  - uid: 'visio!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'visio!Visio.Interfaces.ShapeCollectionData:interface'
    name: Visio.Interfaces.ShapeCollectionData