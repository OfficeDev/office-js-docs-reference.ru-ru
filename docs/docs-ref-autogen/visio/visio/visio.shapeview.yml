### YamlMime:TSType
name: Visio.ShapeView
uid: visio!Visio.ShapeView:class
package: visio!
fullName: Visio.ShapeView
summary: >-
  Представляет класс ShapeView.


  \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeView#context:member
  package: visio!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: highlight
  uid: visio!Visio.ShapeView#highlight:member
  package: visio!
  fullName: highlight
  summary: >-
    Представляет выделение фигуры.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'highlight: Visio.Highlight;'
    return:
      type: <xref uid="visio!Visio.Highlight:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
methods:
- name: addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)
  uid: visio!Visio.ShapeView#addOverlay:member(1)
  package: visio!
  fullName: addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)
  summary: >-
    Добавляет слой на фигуру.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addOverlay(OverlayType: Visio.OverlayType, Content: string, OverlayHorizontalAlignment: Visio.OverlayHorizontalAlignment, OverlayVerticalAlignment: Visio.OverlayVerticalAlignment, Width: number, Height: number): OfficeExtension.ClientResult<number>;'
    parameters:
    - id: OverlayType
      description: Тип наложения. Может быть "Text" или "Image".
      type: <xref uid="visio!Visio.OverlayType:enum" />
    - id: Content
      description: Содержимое слоя.
      type: string
    - id: OverlayHorizontalAlignment
      description: Горизонтальное выравнивание наложения. Может быть "Левый", "Центр" или "Правый".
      type: <xref uid="visio!Visio.OverlayHorizontalAlignment:enum" />
    - id: OverlayVerticalAlignment
      description: Вертикальное выравнивание наложения. Может быть "Top", "Middle", "Bottom".
      type: <xref uid="visio!Visio.OverlayVerticalAlignment:enum" />
    - id: Width
      description: Ширина слоя.
      type: number
    - id: Height
      description: Высота слоя.
      type: number
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    var overlayId = shape.view.addOverlay(\"Image\", \"Visio Online\", \"Center\", \"Middle\", 50, 50);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)
  uid: visio!Visio.ShapeView#addOverlay:member(2)
  package: visio!
  fullName: addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)
  summary: >-
    Добавляет слой на фигуру.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addOverlay(OverlayTypeString: "Text" | "Image" | "Html", Content: string, OverlayHorizontalAlignment: "Left" | "Center" | "Right", OverlayVerticalAlignment: "Top" | "Middle" | "Bottom", Width: number, Height: number): OfficeExtension.ClientResult<number>;'
    parameters:
    - id: OverlayTypeString
      description: Тип наложения. Может быть "Text" или "Image".
      type: "\"Text\" | \"Image\" | \"Html\""
    - id: Content
      description: Содержимое слоя.
      type: string
    - id: OverlayHorizontalAlignment
      description: Горизонтальное выравнивание наложения. Может быть "Левый", "Центр" или "Правый".
      type: "\"Left\" | \"Center\" | \"Right\""
    - id: OverlayVerticalAlignment
      description: Вертикальное выравнивание наложения. Может быть "Top", "Middle", "Bottom".
      type: "\"Top\" | \"Middle\" | \"Bottom\""
    - id: Width
      description: Ширина слоя.
      type: number
    - id: Height
      description: Высота слоя.
      type: number
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeView#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
  remarks: >-
    Помимо этой подписи, этот метод имеет следующие подписи:


    `load(option?: string | string[]): Visio.ShapeView` - Где параметр — запятая или массив строк, которые указывают свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeView` - Где option.select — это строка, делимитированная запятой, которая указывает свойства для загрузки, а options.expand — это запятая, которая указывает свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView` — Доступно только для типов коллекций. Она аналогична предыдущей подписи. Option.top указывает максимальное количество элементов коллекции, которые могут быть включены в результат. Option.skip указывает количество элементов, которые должны быть пропущены и не включены в результат. Если задан option.top, набор результатов начнется после пропуска указанного количества элементов.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeViewLoadOptions): Visio.ShapeView;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeViewLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeView#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeView;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeView#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): Visio.ShapeView;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
      description: ''
- name: removeOverlay(OverlayId)
  uid: visio!Visio.ShapeView#removeOverlay:member(1)
  package: visio!
  fullName: removeOverlay(OverlayId)
  summary: >-
    Удаляет заданный слой или все слои фигуры.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeOverlay(OverlayId: number): void;'
    parameters:
    - id: OverlayId
      description: Идентификатор слоя. Удаляет специальный идентификатор слоя на фигуре.
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.removeOverlay(1);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: set(properties, options)
  uid: visio!Visio.ShapeView#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Задает несколько свойств объекта одновременно. Можно передать либо обычный объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Visio.ShapeView): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, структурированными изоморфно, с свойствами объекта, на который вызван метод.
      type: <xref uid="visio!Visio.Interfaces.ShapeViewUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавления ошибок, если объект свойств пытается установить любые свойства только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.ShapeView#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Задает несколько свойств на объекте одновременно на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.ShapeView): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.ShapeView:class" />
    return:
      type: void
      description: ''
- name: showOverlay(overlayId, show)
  uid: visio!Visio.ShapeView#showOverlay:member(1)
  package: visio!
  fullName: showOverlay(overlayId, show)
  summary: >-
    Показывает определенное наложение на Shape.


    \[[Набор API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showOverlay(overlayId: number, show: boolean): void;'
    parameters:
    - id: overlayId
      description: наложение id в контексте
      type: number
    - id: show
      description: чтобы показать или скрыть
      type: boolean
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeView#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект Visio.ShapeView является объектом API, метод возвращает обычный объект `toJSON` JavaScript (введите как `Visio.Interfaces.ShapeViewData`<!-- -->), содержащий неглубокие копии любых загруженных свойств ребенка из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeViewData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeViewData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: ac275170d3dafa44678e6d43ad21879e699827a2
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50542028"
