### YamlMime:UniversalReference
ms.openlocfilehash: de03b8ef82e95e3b4953cae2326679b0125ecb73
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976434"
items:
- uid: visio.Visio.PageView
  summary: >-
    <span data-ttu-id="18fca-101">Представляет класс PageView.</span><span class="sxs-lookup"><span data-stu-id="18fca-101">Represents the PageView class.</span></span>


    <span data-ttu-id="18fca-102">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageView
  fullName: Visio.PageView
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageView.centerViewportOnShape
  - visio.Visio.PageView.fitToWindow
  - visio.Visio.PageView.getPosition
  - visio.Visio.PageView.getSelection
  - visio.Visio.PageView.isShapeInViewport
  - visio.Visio.PageView.load
  - visio.Visio.PageView.load_1
  - visio.Visio.PageView.load_2
  - visio.Visio.PageView.set
  - visio.Visio.PageView.set_1
  - visio.Visio.PageView.setPosition
  - visio.Visio.PageView.toJSON
  - visio.Visio.PageView.zoom
- uid: visio.Visio.PageView.centerViewportOnShape
  summary: >-
    <span data-ttu-id="18fca-103">Сдвигает документ Visio так, чтобы разместить указанную фигуру по центру.</span><span class="sxs-lookup"><span data-stu-id="18fca-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>


    <span data-ttu-id="18fca-104">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: centerViewportOnShape(ShapeId)
  fullName: centerViewportOnShape(ShapeId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'centerViewportOnShape(ShapeId: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"18fca-105\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"18fca-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    activePage.view.centerViewportOnShape(shape.Id);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: ShapeId
      description: <span data-ttu-id="18fca-106">Элемент ShapeId, который будет виден в центре.</span><span class="sxs-lookup"><span data-stu-id="18fca-106">ShapeId to be seen in the center.</span></span>
      type:
      - number
- uid: visio.Visio.PageView.fitToWindow
  summary: >-
    <span data-ttu-id="18fca-107">Выравнивает Page по краям текущего окна.</span><span class="sxs-lookup"><span data-stu-id="18fca-107">Fit Page to current window.</span></span>


    <span data-ttu-id="18fca-108">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: fitToWindow()
  fullName: fitToWindow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'fitToWindow(): void;'
    return:
      type:
      - void
      description: ''
- uid: visio.Visio.PageView.getPosition
  summary: >-
    <span data-ttu-id="18fca-109">Возвращает объект, который определяет положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="18fca-109">Returns the position object that specifies the position of the page in the view.</span></span>


    <span data-ttu-id="18fca-110">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getPosition()
  fullName: getPosition()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.Position>
      description: ''
- uid: visio.Visio.PageView.getSelection
  summary: >-
    <span data-ttu-id="18fca-111">Представляет выделение на странице.</span><span class="sxs-lookup"><span data-stu-id="18fca-111">Represents the Selection in the page.</span></span>


    <span data-ttu-id="18fca-112">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getSelection()
  fullName: getSelection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Visio.Selection;'
    return:
      type:
      - visio.Visio.Selection
      description: ''
- uid: visio.Visio.PageView.isShapeInViewport
  summary: >-
    <span data-ttu-id="18fca-113">Проверяет, находится ли фигура в представлении страницы.</span><span class="sxs-lookup"><span data-stu-id="18fca-113">To check if the shape is in view of the page or not.</span></span>


    <span data-ttu-id="18fca-114">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: isShapeInViewport(Shape)
  fullName: isShapeInViewport(Shape)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
    parameters:
    - id: Shape
      description: <span data-ttu-id="18fca-115">Фигура, которую необходимо проверить.</span><span class="sxs-lookup"><span data-stu-id="18fca-115">Shape to be checked.</span></span>
      type:
      - visio.Visio.Shape
- uid: visio.Visio.PageView.load
  summary: <span data-ttu-id="18fca-116">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="18fca-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="18fca-117">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="18fca-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="18fca-118">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="18fca-118">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="18fca-119">`load(option?: string | string[]): Visio.PageView`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="18fca-119">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="18fca-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="18fca-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="18fca-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="18fca-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="18fca-122">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="18fca-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="18fca-123">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="18fca-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="18fca-124">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="18fca-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="18fca-125">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="18fca-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.PageViewLoadOptions
- uid: visio.Visio.PageView.load_1
  summary: <span data-ttu-id="18fca-126">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="18fca-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="18fca-127">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="18fca-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="18fca-128">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="18fca-128">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageView.load_2
  summary: <span data-ttu-id="18fca-129">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="18fca-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="18fca-130">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="18fca-130">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="18fca-131">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="18fca-131">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.PageView.set
  summary: <span data-ttu-id="18fca-132">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="18fca-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="18fca-133">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="18fca-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="18fca-134">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="18fca-134">This method has the following additional signature:</span></span>


    `set(properties: Visio.PageView): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="18fca-135">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="18fca-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PageViewUpdateData
    - id: options
      description: <span data-ttu-id="18fca-136">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="18fca-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.PageView.set_1
  summary: <span data-ttu-id="18fca-137">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="18fca-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.PageView): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - visio.Visio.PageView
- uid: visio.Visio.PageView.setPosition
  summary: >-
    <span data-ttu-id="18fca-138">Задает положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="18fca-138">Sets the position of the page in the view.</span></span>


    <span data-ttu-id="18fca-139">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: setPosition(Position)
  fullName: setPosition(Position)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(Position: Visio.Position): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: Position
      description: <span data-ttu-id="18fca-140">Объект Position, который указывает новое положение страницы в представлении.</span><span class="sxs-lookup"><span data-stu-id="18fca-140">Position object that specifies the new position of the page in the view.</span></span>
      type:
      - visio.Visio.Position
- uid: visio.Visio.PageView.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageViewData;'
    return:
      type:
      - visio.Visio.Interfaces.PageViewData
      description: ''
- uid: visio.Visio.PageView.zoom
  summary: >-
    <span data-ttu-id="18fca-141">Получить и задать масштаб страницы уровня.</span><span class="sxs-lookup"><span data-stu-id="18fca-141">Get and set Page's Zoom level.</span></span> <span data-ttu-id="18fca-142">Значение может быть от 10 до 400 и обозначает процент масштабирования.</span><span class="sxs-lookup"><span data-stu-id="18fca-142">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>


    <span data-ttu-id="18fca-143">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="18fca-143">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: zoom
  fullName: zoom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'zoom: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"18fca-144\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"18fca-144\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    activePage.view.zoom = 300;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
