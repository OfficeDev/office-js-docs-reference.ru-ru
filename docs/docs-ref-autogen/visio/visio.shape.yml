### YamlMime:UniversalReference
ms.openlocfilehash: aec326bd3b26f70140e06d1251351c1571c83b8c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096978"
items:
- uid: visio.Visio.Shape
  summary: >-
    <span data-ttu-id="f88fe-101">Представляет класс Shape.</span><span class="sxs-lookup"><span data-stu-id="f88fe-101">Represents the Shape class.</span></span>


    <span data-ttu-id="f88fe-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Shape
  fullName: Visio.Shape
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Shape.comments
  - visio.Visio.Shape.getBounds
  - visio.Visio.Shape.hyperlinks
  - visio.Visio.Shape.id
  - visio.Visio.Shape.load
  - visio.Visio.Shape.load_1
  - visio.Visio.Shape.load_2
  - visio.Visio.Shape.name
  - visio.Visio.Shape.select
  - visio.Visio.Shape.set
  - visio.Visio.Shape.set_1
  - visio.Visio.Shape.shapeDataItems
  - visio.Visio.Shape.subShapes
  - visio.Visio.Shape.text
  - visio.Visio.Shape.toJSON
  - visio.Visio.Shape.view
- uid: visio.Visio.Shape.comments
  summary: >-
    <span data-ttu-id="f88fe-p101">Возвращает коллекцию Comments. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p101">Returns the Comments Collection. Read-only.</span></span>


    <span data-ttu-id="f88fe-105">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: comments
  fullName: comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type:
      - Visio.CommentCollection
- uid: visio.Visio.Shape.getBounds
  summary: >-
    <span data-ttu-id="f88fe-106">Возвращает объект BoundingBox, определяющий ограничивающий прямоугольник фигуры.</span><span class="sxs-lookup"><span data-stu-id="f88fe-106">Returns the BoundingBox object that specifies bounding box of the shape.</span></span>


    <span data-ttu-id="f88fe-107">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getBounds()
  fullName: getBounds()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.BoundingBox>
      description: ''
- uid: visio.Visio.Shape.hyperlinks
  summary: >-
    <span data-ttu-id="f88fe-p102">Возвращает коллекцию ссылок для объекта Shape. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p102">Returns the Hyperlinks collection for a Shape object. Read-only.</span></span>


    <span data-ttu-id="f88fe-110">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: hyperlinks
  fullName: hyperlinks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
- uid: visio.Visio.Shape.id
  summary: >-
    <span data-ttu-id="f88fe-111">Идентификатор фигуры.</span><span class="sxs-lookup"><span data-stu-id="f88fe-111">Shape's identifier.</span></span> <span data-ttu-id="f88fe-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-112">Read-only.</span></span>


    <span data-ttu-id="f88fe-113">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: visio.Visio.Shape.load
  summary: <span data-ttu-id="f88fe-114">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="f88fe-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f88fe-115">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="f88fe-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="f88fe-116">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="f88fe-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="f88fe-117">`load(option?: string | string[]): Visio.Shape`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f88fe-117">`load(option?: string | string[]): Visio.Shape` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="f88fe-118">`load(option?: { select?: string; expand?: string; }): Visio.Shape`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f88fe-118">`load(option?: { select?: string; expand?: string; }): Visio.Shape` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="f88fe-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="f88fe-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Only available on collection types.</span></span> <span data-ttu-id="f88fe-120">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="f88fe-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="f88fe-121">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="f88fe-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f88fe-122">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="f88fe-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f88fe-123">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="f88fe-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="f88fe-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="f88fe-124">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load();
        return ctx.sync().then(function () {
            console.log(shape.name );
            console.log(shape.id );
            console.log(shape.Text );
            console.log(shape.Select );
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    return:
      type:
      - Visio.Shape
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ShapeLoadOptions
- uid: visio.Visio.Shape.load_1
  summary: <span data-ttu-id="f88fe-125">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="f88fe-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f88fe-126">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="f88fe-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    return:
      type:
      - Visio.Shape
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="f88fe-127">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f88fe-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Shape.load_2
  summary: <span data-ttu-id="f88fe-128">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="f88fe-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f88fe-129">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="f88fe-129">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    return:
      type:
      - Visio.Shape
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="f88fe-130">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f88fe-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Shape.name
  summary: >-
    <span data-ttu-id="f88fe-p108">Имя фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p108">Shape's name. Read-only.</span></span>


    <span data-ttu-id="f88fe-133">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.select
  summary: >-
    <span data-ttu-id="f88fe-p109">Возвращает значение true, если фигура выделена. Пользователь может задать значение true, чтобы явно выбрать фигуру.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p109">Returns true, if shape is selected. User can set true to select the shape explicitly.</span></span>


    <span data-ttu-id="f88fe-136">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: select
  fullName: select
  langs:
  - typeScript
  type: property
  syntax:
    content: 'select: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Shape.set
  summary: <span data-ttu-id="f88fe-137">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="f88fe-137">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f88fe-138">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="f88fe-138">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="f88fe-139">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="f88fe-139">This method has the following additional signature:</span></span>


    `set(properties: Visio.Shape): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="f88fe-140">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="f88fe-140">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ShapeUpdateData
    - id: options
      description: <span data-ttu-id="f88fe-141">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-141">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Shape.set_1
  summary: <span data-ttu-id="f88fe-142">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="f88fe-142">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Shape
- uid: visio.Visio.Shape.shapeDataItems
  summary: >-
    <span data-ttu-id="f88fe-p111">Возвращает раздел данных фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p111">Returns the Shape's Data Section. Read-only.</span></span>


    <span data-ttu-id="f88fe-145">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-145">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: shapeDataItems
  fullName: shapeDataItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
- uid: visio.Visio.Shape.subShapes
  summary: >-
    <span data-ttu-id="f88fe-p112">Возвращает коллекцию вложенных фигур. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p112">Gets SubShape Collection. Read-only.</span></span>


    <span data-ttu-id="f88fe-148">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-148">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: subShapes
  fullName: subShapes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
- uid: visio.Visio.Shape.text
  summary: >-
    <span data-ttu-id="f88fe-149">Текст фигуры.</span><span class="sxs-lookup"><span data-stu-id="f88fe-149">Shape's text.</span></span> <span data-ttu-id="f88fe-150">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-150">Read-only.</span></span>


    <span data-ttu-id="f88fe-151">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-151">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type:
      - Visio.Interfaces.ShapeData
      description: ''
- uid: visio.Visio.Shape.view
  summary: >-
    <span data-ttu-id="f88fe-p114">Возвращает представление фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f88fe-p114">Returns the view of the shape. Read-only.</span></span>


    <span data-ttu-id="f88fe-154">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="f88fe-154">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: view
  fullName: view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type:
      - visio.Visio.ShapeView
