### YamlMime:UniversalReference
ms.openlocfilehash: dff57e0aea55d7648b9495605a66d091888e963e
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/28/2018
ms.locfileid: "24050329"
items:
- uid: visio.Visio.Shape
  summary: >-
    <span data-ttu-id="ae326-101">Представляет класс Shape.</span><span class="sxs-lookup"><span data-stu-id="ae326-101">Represents the Shape class.</span></span>


    <span data-ttu-id="ae326-102">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-102">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Shape
  fullName: visio.Visio.Shape
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Shape.comments
  - visio.Visio.Shape.getBounds
  - visio.Visio.Shape.hyperlinks
  - visio.Visio.Shape.id
  - visio.Visio.Shape.load
  - visio.Visio.Shape.name
  - visio.Visio.Shape.select
  - visio.Visio.Shape.shapeDataItems
  - visio.Visio.Shape.subShapes
  - visio.Visio.Shape.text
  - visio.Visio.Shape.toJSON
  - visio.Visio.Shape.view
- uid: visio.Visio.Shape.comments
  summary: >-
    <span data-ttu-id="ae326-p101">Возвращает коллекцию Comments. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p101">Returns the Comments Collection. Read-only.</span></span>


    <span data-ttu-id="ae326-105">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-105">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: comments
  fullName: visio.Visio.Shape.comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type:
      - visio.Visio.CommentCollection
- uid: visio.Visio.Shape.getBounds
  summary: >-
    <span data-ttu-id="ae326-106">Возвращает объект BoundingBox, определяющий ограничивающий прямоугольник фигуры.</span><span class="sxs-lookup"><span data-stu-id="ae326-106">Returns the BoundingBox object that specifies bounding box of the shape.</span></span>


    <span data-ttu-id="ae326-107">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-107">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: getBounds()
  fullName: visio.Visio.Shape.getBounds
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.BoundingBox>
      description: ''
- uid: visio.Visio.Shape.hyperlinks
  summary: >-
    <span data-ttu-id="ae326-p102">Возвращает коллекцию ссылок для объекта Shape. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p102">Returns the Hyperlinks collection for a Shape object. Read-only.</span></span>


    <span data-ttu-id="ae326-110">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-110">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: hyperlinks
  fullName: visio.Visio.Shape.hyperlinks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
- uid: visio.Visio.Shape.id
  summary: >-
    <span data-ttu-id="ae326-111">Идентификатор фигуры.</span><span class="sxs-lookup"><span data-stu-id="ae326-111">Shape's identifier.</span></span> <span data-ttu-id="ae326-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-112">Read-only.</span></span>


    <span data-ttu-id="ae326-113">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-113">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: id
  fullName: visio.Visio.Shape.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: visio.Visio.Shape.load
  summary: <span data-ttu-id="ae326-114">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ae326-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae326-115">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="ae326-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ae326-116">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="ae326-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ae326-117">`load(option?: { select?: string; expand?: string; }): Visio.Shape`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ae326-117">`load(option?: { select?: string; expand?: string; }): Visio.Shape` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ae326-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="ae326-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Only available on collection types.</span></span> <span data-ttu-id="ae326-119">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="ae326-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="ae326-120">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="ae326-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ae326-121">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="ae326-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ae326-122">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="ae326-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="ae326-123">Примеры</span><span class="sxs-lookup"><span data-stu-id="ae326-123">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load();
        return ctx.sync().then(function () {
            console.log(shape.name );
            console.log(shape.id );
            console.log(shape.Text );
            console.log(shape.Select );
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.Shape.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="ae326-124">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ae326-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Shape.name
  summary: >-
    <span data-ttu-id="ae326-p106">Имя фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p106">Shape's name. Read-only.</span></span>


    <span data-ttu-id="ae326-127">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-127">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: name
  fullName: visio.Visio.Shape.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.select
  summary: >-
    <span data-ttu-id="ae326-p107">Возвращает значение true, если фигура выделена. Пользователь может задать значение true, чтобы явно выбрать фигуру.</span><span class="sxs-lookup"><span data-stu-id="ae326-p107">Returns true, if shape is selected. User can set true to select the shape explicitly.</span></span>


    <span data-ttu-id="ae326-130">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-130">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: select
  fullName: visio.Visio.Shape.select
  langs:
  - typeScript
  type: property
  syntax:
    content: 'select: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Shape.shapeDataItems
  summary: >-
    <span data-ttu-id="ae326-p108">Возвращает раздел данных фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p108">Returns the Shape's Data Section. Read-only.</span></span>


    <span data-ttu-id="ae326-133">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-133">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: shapeDataItems
  fullName: visio.Visio.Shape.shapeDataItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
- uid: visio.Visio.Shape.subShapes
  summary: >-
    <span data-ttu-id="ae326-p109">Возвращает коллекцию вложенных фигур. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p109">Gets SubShape Collection. Read-only.</span></span>


    <span data-ttu-id="ae326-136">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-136">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: subShapes
  fullName: visio.Visio.Shape.subShapes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
- uid: visio.Visio.Shape.text
  summary: >-
    <span data-ttu-id="ae326-137">Текст фигуры.</span><span class="sxs-lookup"><span data-stu-id="ae326-137">Shape's text.</span></span> <span data-ttu-id="ae326-138">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-138">Read-only.</span></span>


    <span data-ttu-id="ae326-139">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-139">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: visio.Visio.Shape.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.toJSON
  name: toJSON()
  fullName: visio.Visio.Shape.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeData
      description: ''
- uid: visio.Visio.Shape.view
  summary: >-
    <span data-ttu-id="ae326-p111">Возвращает представление фигуры. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ae326-p111">Returns the view of the shape. Read-only.</span></span>


    <span data-ttu-id="ae326-142">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae326-142">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: view
  fullName: visio.Visio.Shape.view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type:
      - visio.Visio.ShapeView
