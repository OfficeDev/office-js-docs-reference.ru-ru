### YamlMime:UniversalReference
items:
  - uid: visio.Visio.CommentCollection
    summary: |-
      <span data-ttu-id="25a0d-101">Представляет CommentCollection для заданной фигуры.</span><span class="sxs-lookup"><span data-stu-id="25a0d-101">Represents the CommentCollection for a given Shape.</span></span>

      <span data-ttu-id="25a0d-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="25a0d-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.CommentCollection
    fullName: Visio.CommentCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.CommentCollection.context
      - visio.Visio.CommentCollection.getCount
      - visio.Visio.CommentCollection.getItem
      - visio.Visio.CommentCollection.items
      - visio.Visio.CommentCollection.load
      - visio.Visio.CommentCollection.load_1
      - visio.Visio.CommentCollection.load_2
      - visio.Visio.CommentCollection.toJSON
  - uid: visio.Visio.CommentCollection.context
    summary: '<span data-ttu-id="25a0d-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="25a0d-103">The request context associated with the object.</span></span> <span data-ttu-id="25a0d-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="25a0d-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.CommentCollection.getCount
    summary: |-
      <span data-ttu-id="25a0d-105">Получает количество примечаний.</span><span class="sxs-lookup"><span data-stu-id="25a0d-105">Gets the number of Comments.</span></span>

      <span data-ttu-id="25a0d-106">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="25a0d-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.CommentCollection.getItem
    summary: |-
      <span data-ttu-id="25a0d-107">Получает примечание по имени.</span><span class="sxs-lookup"><span data-stu-id="25a0d-107">Gets the Comment using its name.</span></span>

      <span data-ttu-id="25a0d-108">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="25a0d-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="25a0d-109">Ключ — это имя примечания, которое нужно извлечь.</span><span class="sxs-lookup"><span data-stu-id="25a0d-109">Key is the name of the Comment to be retrieved.</span></span>'
          type:
            - string
  - uid: visio.Visio.CommentCollection.items
    summary: <span data-ttu-id="25a0d-110">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="25a0d-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Comment[];'
      return:
        type:
          - 'Visio.Comment[]'
  - uid: visio.Visio.CommentCollection.load
    summary: <span data-ttu-id="25a0d-111">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="25a0d-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="25a0d-112">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="25a0d-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="25a0d-113">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="25a0d-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="25a0d-114">`load(option?: string | string[]): Visio.CommentCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="25a0d-114">`load(option?: string | string[]): Visio.CommentCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="25a0d-115">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="25a0d-115">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="25a0d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="25a0d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection` - Only available on collection types.</span></span> <span data-ttu-id="25a0d-117">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="25a0d-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="25a0d-118">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="25a0d-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="25a0d-119">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="25a0d-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="25a0d-120">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="25a0d-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="25a0d-121">Примеры</span><span class="sxs-lookup"><span data-stu-id="25a0d-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Position Belt.41";
          var shape = activePage.shapes.getItem(shapeName);
          var shapeComments= shape.comments;
          shapeComments.load(["author", "text"]);
          return ctx.sync().then(function () {
              for(var i = 0; i < shapeComments.items.length; i++)
              {
                  var comment = shapeComments.items[i];
                  console.log("comment Author: " + comment.author);
                  console.log("Comment Text: " + comment.text);
                  console.log("Date " + comment.date);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.CommentCollection;'
      return:
        type:
          - Visio.CommentCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.CommentCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.CommentCollection.load_1
    summary: <span data-ttu-id="25a0d-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="25a0d-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="25a0d-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="25a0d-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.CommentCollection;'
      return:
        type:
          - Visio.CommentCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="25a0d-124">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="25a0d-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.CommentCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.CommentCollection;'
      return:
        type:
          - Visio.CommentCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.CommentCollection.toJSON
    summary: '<span data-ttu-id="25a0d-125">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="25a0d-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="25a0d-126">.</span><span class="sxs-lookup"><span data-stu-id="25a0d-126"></span></span> <span data-ttu-id="25a0d-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="25a0d-127"></span></span><!-- --><span data-ttu-id="25a0d-128">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Visio.CommentCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.CommentCollectionData`</span><span class="sxs-lookup"><span data-stu-id="25a0d-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.CommentCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.CommentCollectionData`</span></span><!-- --><span data-ttu-id="25a0d-129">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="25a0d-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentCollectionData;'
      return:
        type:
          - Visio.Interfaces.CommentCollectionData
        description: ''