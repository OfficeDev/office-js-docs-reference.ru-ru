### YamlMime:UniversalReference
ms.openlocfilehash: 600869649ff73c4deedf59f037ebeaf2c4e1dabd
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/28/2018
ms.locfileid: "24051130"
items:
- uid: visio.Visio.PageCollection
  summary: >-
    <span data-ttu-id="3f329-101">Представляет коллекцию объектов Page, включенных в документ.</span><span class="sxs-lookup"><span data-stu-id="3f329-101">Represents a collection of Page objects that are part of the document.</span></span>


    <span data-ttu-id="3f329-102">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3f329-102">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageCollection
  fullName: visio.Visio.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageCollection.getCount
  - visio.Visio.PageCollection.getItem
  - visio.Visio.PageCollection.items
  - visio.Visio.PageCollection.load
  - visio.Visio.PageCollection.toJSON
- uid: visio.Visio.PageCollection.getCount
  summary: >-
    <span data-ttu-id="3f329-103">Возвращает количество страниц в коллекции.</span><span class="sxs-lookup"><span data-stu-id="3f329-103">Gets the number of pages in the collection.</span></span>


    <span data-ttu-id="3f329-104">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3f329-104">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: visio.Visio.PageCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.PageCollection.getItem
  summary: >-
    <span data-ttu-id="3f329-105">Возвращает страницу по ключу (имени или идентификатору).</span><span class="sxs-lookup"><span data-stu-id="3f329-105">Gets a page using its key (name or Id).</span></span>


    <span data-ttu-id="3f329-106">\[[Набор API-Интерфейсов: 1.1](/javascript/office/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3f329-106">\[ [API set: 1.1](/javascript/office/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: visio.Visio.PageCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3f329-107\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"3f329-107\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="3f329-108">Ключ — имя или идентификатор получаемой страницы.</span><span class="sxs-lookup"><span data-stu-id="3f329-108">Key is the name or Id of the page to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.PageCollection.items
  summary: <span data-ttu-id="3f329-109">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="3f329-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: visio.Visio.PageCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type:
      - Visio.Page[]
- uid: visio.Visio.PageCollection.load
  summary: <span data-ttu-id="3f329-110">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="3f329-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f329-111">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="3f329-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="3f329-112">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="3f329-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="3f329-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="3f329-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="3f329-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="3f329-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="3f329-115">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="3f329-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="3f329-116">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="3f329-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3f329-117">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="3f329-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3f329-118">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="3f329-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: visio.Visio.PageCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="3f329-119">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="3f329-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageCollection.toJSON
  name: toJSON()
  fullName: visio.Visio.PageCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type:
      - Visio.Interfaces.PageCollectionData
      description: ''
