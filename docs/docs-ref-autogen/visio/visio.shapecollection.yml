### YamlMime:UniversalReference
ms.openlocfilehash: 46f2ca6ab12fbe4cad956c40b3df252d187e7532
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096901"
items:
- uid: visio.Visio.ShapeCollection
  summary: >-
    <span data-ttu-id="d1589-101">Представляет коллекцию Shape.</span><span class="sxs-lookup"><span data-stu-id="d1589-101">Represents the Shape Collection.</span></span>


    <span data-ttu-id="d1589-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d1589-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.ShapeCollection
  fullName: Visio.ShapeCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.ShapeCollection.getCount
  - visio.Visio.ShapeCollection.getItem
  - visio.Visio.ShapeCollection.items
  - visio.Visio.ShapeCollection.load
  - visio.Visio.ShapeCollection.load_1
  - visio.Visio.ShapeCollection.load_2
  - visio.Visio.ShapeCollection.toJSON
- uid: visio.Visio.ShapeCollection.getCount
  summary: >-
    <span data-ttu-id="d1589-103">Возвращает количество фигур в коллекции.</span><span class="sxs-lookup"><span data-stu-id="d1589-103">Gets the number of Shapes in the collection.</span></span>


    <span data-ttu-id="d1589-104">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d1589-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1589-105\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1589-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var numShapesActivePage = activePage.shapes.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Shapes Count: \" + numShapesActivePage.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.ShapeCollection.getItem
  summary: >-
    <span data-ttu-id="d1589-106">Возвращает фигуру по ключу (имени или индексу).</span><span class="sxs-lookup"><span data-stu-id="d1589-106">Gets a Shape using its key (name or Index).</span></span>


    <span data-ttu-id="d1589-107">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d1589-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Shape;'
    return:
      type:
      - Visio.Shape
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="d1589-108">Ключ — имя или индекс фигуры, которую нужно получить.</span><span class="sxs-lookup"><span data-stu-id="d1589-108">Key is the Name or Index of the shape to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.ShapeCollection.items
  summary: <span data-ttu-id="d1589-109">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="d1589-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Shape[];'
    return:
      type:
      - Visio.Shape[]
- uid: visio.Visio.ShapeCollection.load
  summary: <span data-ttu-id="d1589-110">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="d1589-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1589-111">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="d1589-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d1589-112">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="d1589-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d1589-113">`load(option?: string | string[]): Visio.ShapeCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="d1589-113">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d1589-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="d1589-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d1589-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="d1589-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="d1589-116">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="d1589-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="d1589-117">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="d1589-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d1589-118">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="d1589-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d1589-119">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="d1589-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.ShapeCollection.load_1
  summary: <span data-ttu-id="d1589-120">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="d1589-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1589-121">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="d1589-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d1589-122">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="d1589-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.ShapeCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.ShapeCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
    return:
      type:
      - Visio.Interfaces.ShapeCollectionData
      description: ''
