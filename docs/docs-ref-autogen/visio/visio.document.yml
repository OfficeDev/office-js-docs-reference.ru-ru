### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Document
    summary: |-
      <span data-ttu-id="7df24-101">Представляет класс Document.</span><span class="sxs-lookup"><span data-stu-id="7df24-101">Represents the Document class.</span></span>

      <span data-ttu-id="7df24-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Document
    fullName: Visio.Document
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Document.application
      - visio.Visio.Document.context
      - visio.Visio.Document.getActivePage
      - visio.Visio.Document.load
      - visio.Visio.Document.load_1
      - visio.Visio.Document.load_2
      - visio.Visio.Document.onDataRefreshComplete
      - visio.Visio.Document.onDocumentLoadComplete
      - visio.Visio.Document.onPageLoadComplete
      - visio.Visio.Document.onSelectionChanged
      - visio.Visio.Document.onShapeMouseEnter
      - visio.Visio.Document.onShapeMouseLeave
      - visio.Visio.Document.pages
      - visio.Visio.Document.set
      - visio.Visio.Document.set_1
      - visio.Visio.Document.setActivePage
      - visio.Visio.Document.startDataRefresh
      - visio.Visio.Document.toJSON
      - visio.Visio.Document.view
  - uid: visio.Visio.Document.application
    summary: |-
      <span data-ttu-id="7df24-103">Представляет экземпляр приложения Visio, содержащий этот документ.</span><span class="sxs-lookup"><span data-stu-id="7df24-103">Represents a Visio application instance that contains this document.</span></span> <span data-ttu-id="7df24-104">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7df24-104">Read-only.</span></span>

      <span data-ttu-id="7df24-105">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Visio.Application;'
      return:
        type:
          - Visio.Application
  - uid: visio.Visio.Document.context
    summary: '<span data-ttu-id="7df24-106">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="7df24-106">The request context associated with the object.</span></span> <span data-ttu-id="7df24-107">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7df24-107">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Document.getActivePage
    summary: |-
      <span data-ttu-id="7df24-108">Возвращает активную страницу документа.</span><span class="sxs-lookup"><span data-stu-id="7df24-108">Returns the Active Page of the document.</span></span>

      <span data-ttu-id="7df24-109">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): Visio.Page;'
      return:
        type:
          - Visio.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7df24-110">Примеры</span><span class="sxs-lookup"><span data-stu-id="7df24-110">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var activePage = document.getActivePage();
              activePage.load();
              return ctx.sync().then(function () {
                  console.log("pageName: " +activePage.name);
              });   
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.load
    summary: <span data-ttu-id="7df24-111">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7df24-112">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="7df24-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7df24-113">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="7df24-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7df24-114">`load(option?: string | string[]): Visio.Document`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7df24-114">`load(option?: string | string[]): Visio.Document` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7df24-115">`load(option?: { select?: string; expand?: string; }): Visio.Document`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7df24-115">`load(option?: { select?: string; expand?: string; }): Visio.Document` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7df24-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="7df24-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` - Only available on collection types.</span></span> <span data-ttu-id="7df24-117">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="7df24-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="7df24-118">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7df24-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7df24-119">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="7df24-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7df24-120">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="7df24-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.DocumentLoadOptions
  - uid: visio.Visio.Document.load_1
    summary: <span data-ttu-id="7df24-121">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7df24-122">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7df24-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="7df24-123">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7df24-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.Document.load_2
    summary: <span data-ttu-id="7df24-124">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7df24-125">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="7df24-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
      return:
        type:
          - Visio.Document
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7df24-126">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7df24-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Document.onDataRefreshComplete
    summary: |-
      <span data-ttu-id="7df24-127">Происходит, когда данные обновляются на схеме.</span><span class="sxs-lookup"><span data-stu-id="7df24-127">Occurs when the data is refreshed in the diagram.</span></span>

      <span data-ttu-id="7df24-128">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDataRefreshComplete
    fullName: onDataRefreshComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
  - uid: visio.Visio.Document.onDocumentLoadComplete
    summary: |-
      <span data-ttu-id="7df24-129">Возникает при загрузке, обновлении или изменении документа.</span><span class="sxs-lookup"><span data-stu-id="7df24-129">Occurs when the Document is loaded, refreshed, or changed.</span></span>

      <span data-ttu-id="7df24-130">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-130">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDocumentLoadComplete
    fullName: onDocumentLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onPageLoadComplete
    summary: |-
      <span data-ttu-id="7df24-131">Происходит при завершении загрузки страницы.</span><span class="sxs-lookup"><span data-stu-id="7df24-131">Occurs when the page is finished loading.</span></span>

      <span data-ttu-id="7df24-132">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-132">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onPageLoadComplete
    fullName: onPageLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onSelectionChanged
    summary: |-
      <span data-ttu-id="7df24-133">Возникает при изменении текущего выделения фигур.</span><span class="sxs-lookup"><span data-stu-id="7df24-133">Occurs when the current selection of shapes changes.</span></span>

      <span data-ttu-id="7df24-134">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-134">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
  - uid: visio.Visio.Document.onShapeMouseEnter
    summary: |-
      <span data-ttu-id="7df24-135">Происходит, когда пользователь наводит указатель мыши на ограничивающий прямоугольник фигуры.</span><span class="sxs-lookup"><span data-stu-id="7df24-135">Occurs when the user moves the mouse pointer into the bounding box of a shape.</span></span>

      <span data-ttu-id="7df24-136">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseEnter
    fullName: onShapeMouseEnter
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
  - uid: visio.Visio.Document.onShapeMouseLeave
    summary: |-
      <span data-ttu-id="7df24-137">Происходит, когда пользователь перемещает указатель мыши из ограничительной рамки фигуры.</span><span class="sxs-lookup"><span data-stu-id="7df24-137">Occurs when the user moves the mouse out of the bounding box of a shape.</span></span>

      <span data-ttu-id="7df24-138">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-138">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseLeave
    fullName: onShapeMouseLeave
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
  - uid: visio.Visio.Document.pages
    summary: |-
      <span data-ttu-id="7df24-139">Представляет коллекцию страниц, связанных с документом.</span><span class="sxs-lookup"><span data-stu-id="7df24-139">Represents a collection of pages associated with the document.</span></span> <span data-ttu-id="7df24-140">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7df24-140">Read-only.</span></span>

      <span data-ttu-id="7df24-141">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-141">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: Visio.PageCollection;'
      return:
        type:
          - Visio.PageCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7df24-142">Примеры</span><span class="sxs-lookup"><span data-stu-id="7df24-142">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var pages = ctx.document.pages;
              var pageCount = pages.getCount();
              return ctx.sync().then(function () {
                  console.log("Pages Count: " +pageCount.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.set
    summary: '<span data-ttu-id="7df24-143">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7df24-144">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="7df24-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="7df24-145">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="7df24-145">This method has the following additional signature:</span></span>

      `set(properties: Visio.Document): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="7df24-146">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="7df24-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.DocumentUpdateData
        - id: options
          description: '<span data-ttu-id="7df24-147">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7df24-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Document.set_1
    summary: '<span data-ttu-id="7df24-148">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Document): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Document
  - uid: visio.Visio.Document.setActivePage
    summary: |-
      <span data-ttu-id="7df24-149">Задает активную страницу документа.</span><span class="sxs-lookup"><span data-stu-id="7df24-149">Set the Active Page of the document.</span></span>

      <span data-ttu-id="7df24-150">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setActivePage(PageName)
    fullName: setActivePage(PageName)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setActivePage(PageName: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7df24-151">Примеры</span><span class="sxs-lookup"><span data-stu-id="7df24-151">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var pageName = "Page-1";
              document.setActivePage(pageName);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: PageName
          description: <span data-ttu-id="7df24-152">Имя страницы</span><span class="sxs-lookup"><span data-stu-id="7df24-152">Name of the page</span></span>
          type:
            - string
  - uid: visio.Visio.Document.startDataRefresh
    summary: |-
      <span data-ttu-id="7df24-153">Запускает обновление данных в диаграмме, для всех страниц.</span><span class="sxs-lookup"><span data-stu-id="7df24-153">Triggers the refresh of the data in the Diagram, for all pages.</span></span>

      <span data-ttu-id="7df24-154">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-154">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: startDataRefresh()
    fullName: startDataRefresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startDataRefresh(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7df24-155">Примеры</span><span class="sxs-lookup"><span data-stu-id="7df24-155">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              document.startDataRefresh();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.toJSON
    summary: '<span data-ttu-id="7df24-156">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7df24-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7df24-157">.</span><span class="sxs-lookup"><span data-stu-id="7df24-157"></span></span> <span data-ttu-id="7df24-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7df24-158"></span></span><!-- --><span data-ttu-id="7df24-159">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Visio. Document является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Visio.Interfaces.DocumentData`</span><span class="sxs-lookup"><span data-stu-id="7df24-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Document object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.DocumentData`</span></span><!-- --><span data-ttu-id="7df24-160">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="7df24-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.DocumentData;'
      return:
        type:
          - visio.Visio.Interfaces.DocumentData
        description: ''
  - uid: visio.Visio.Document.view
    summary: |-
      <span data-ttu-id="7df24-161">Возвращает объект DocumentView.</span><span class="sxs-lookup"><span data-stu-id="7df24-161">Returns the DocumentView object.</span></span> <span data-ttu-id="7df24-162">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7df24-162">Read-only.</span></span>

      <span data-ttu-id="7df24-163">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7df24-163">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.DocumentView;'
      return:
        type:
          - visio.Visio.DocumentView