### YamlMime:UniversalReference
ms.openlocfilehash: b8cef1a9fb6b0a28a9c36743a8cc320cb0f260a6
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973669"
items:
- uid: visio.Visio.Document
  summary: >-
    <span data-ttu-id="b6aed-101">Представляет класс Document.</span><span class="sxs-lookup"><span data-stu-id="b6aed-101">Represents the Document class.</span></span>


    <span data-ttu-id="b6aed-102">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Document
  fullName: Visio.Document
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Document.application
  - visio.Visio.Document.getActivePage
  - visio.Visio.Document.load
  - visio.Visio.Document.load_1
  - visio.Visio.Document.load_2
  - visio.Visio.Document.onDataRefreshComplete
  - visio.Visio.Document.onDocumentLoadComplete
  - visio.Visio.Document.onPageLoadComplete
  - visio.Visio.Document.onSelectionChanged
  - visio.Visio.Document.onShapeMouseEnter
  - visio.Visio.Document.onShapeMouseLeave
  - visio.Visio.Document.pages
  - visio.Visio.Document.set
  - visio.Visio.Document.set_1
  - visio.Visio.Document.setActivePage
  - visio.Visio.Document.startDataRefresh
  - visio.Visio.Document.toJSON
  - visio.Visio.Document.view
- uid: visio.Visio.Document.application
  summary: >-
    <span data-ttu-id="b6aed-p101">Представляет экземпляр приложения Visio, содержащий этот документ. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b6aed-p101">Represents a Visio application instance that contains this document. Read-only.</span></span>


    <span data-ttu-id="b6aed-105">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Visio.Application;'
    return:
      type:
      - Visio.Application
- uid: visio.Visio.Document.getActivePage
  summary: >-
    <span data-ttu-id="b6aed-106">Возвращает активную страницу документа.</span><span class="sxs-lookup"><span data-stu-id="b6aed-106">Returns the Active Page of the document.</span></span>


    <span data-ttu-id="b6aed-107">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getActivePage()
  fullName: getActivePage()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePage(): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6aed-108\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6aed-108\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var activePage = document.getActivePage();\n    activePage.load();\n    return ctx.sync().then(function () {\n        console.log(\"pageName: \" +activePage.name);\n    });   \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Document.load
  summary: <span data-ttu-id="b6aed-109">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b6aed-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6aed-110">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="b6aed-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b6aed-111">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="b6aed-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b6aed-112">`load(option?: string | string[]): Visio.Document`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6aed-112">`load(option?: string | string[]): Visio.Document` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b6aed-113">`load(option?: { select?: string; expand?: string; }): Visio.Document`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6aed-113">`load(option?: { select?: string; expand?: string; }): Visio.Document` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b6aed-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="b6aed-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` - Only available on collection types.</span></span> <span data-ttu-id="b6aed-115">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="b6aed-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="b6aed-116">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="b6aed-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b6aed-117">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="b6aed-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b6aed-118">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="b6aed-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
    return:
      type:
      - Visio.Document
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.DocumentLoadOptions
- uid: visio.Visio.Document.load_1
  summary: <span data-ttu-id="b6aed-119">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b6aed-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6aed-120">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="b6aed-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Document;'
    return:
      type:
      - Visio.Document
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b6aed-121">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6aed-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Document.load_2
  summary: <span data-ttu-id="b6aed-122">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b6aed-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6aed-123">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="b6aed-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
    return:
      type:
      - Visio.Document
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b6aed-124">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6aed-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Document.onDataRefreshComplete
  summary: >-
    <span data-ttu-id="b6aed-125">Происходит при обновлении данных в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="b6aed-125">Occurs when the data is refreshed in the diagram.</span></span>


    <span data-ttu-id="b6aed-126">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-126">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onDataRefreshComplete
  fullName: onDataRefreshComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
- uid: visio.Visio.Document.onDocumentLoadComplete
  summary: >-
    <span data-ttu-id="b6aed-127">Возникает при загрузке, обновить или изменить документ.</span><span class="sxs-lookup"><span data-stu-id="b6aed-127">Occurs when the Document is loaded, refreshed, or changed.</span></span>


    <span data-ttu-id="b6aed-128">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onDocumentLoadComplete
  fullName: onDocumentLoadComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
- uid: visio.Visio.Document.onPageLoadComplete
  summary: >-
    <span data-ttu-id="b6aed-129">Возникает после завершения страницы загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6aed-129">Occurs when the page is finished loading.</span></span>


    <span data-ttu-id="b6aed-130">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-130">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onPageLoadComplete
  fullName: onPageLoadComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
- uid: visio.Visio.Document.onSelectionChanged
  summary: >-
    <span data-ttu-id="b6aed-131">Возникает при изменении текущего выделения фигур.</span><span class="sxs-lookup"><span data-stu-id="b6aed-131">Occurs when the current selection of shapes changes.</span></span>


    <span data-ttu-id="b6aed-132">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-132">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
- uid: visio.Visio.Document.onShapeMouseEnter
  summary: >-
    <span data-ttu-id="b6aed-133">Происходит, когда пользователь перемещает указатель мыши в ограничивающему прямоугольнику фигуры.</span><span class="sxs-lookup"><span data-stu-id="b6aed-133">Occurs when the user moves the mouse pointer into the bounding box of a shape.</span></span>


    <span data-ttu-id="b6aed-134">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-134">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onShapeMouseEnter
  fullName: onShapeMouseEnter
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
- uid: visio.Visio.Document.onShapeMouseLeave
  summary: >-
    <span data-ttu-id="b6aed-135">Происходит, когда пользователь перемещает мышь из него ограничивающему прямоугольнику фигуры.</span><span class="sxs-lookup"><span data-stu-id="b6aed-135">Occurs when the user moves the mouse out of the bounding box of a shape.</span></span>


    <span data-ttu-id="b6aed-136">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: onShapeMouseLeave
  fullName: onShapeMouseLeave
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
- uid: visio.Visio.Document.pages
  summary: >-
    <span data-ttu-id="b6aed-p106">Представляет коллекцию страниц, связанных с документом. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b6aed-p106">Represents a collection of pages associated with the document. Read-only.</span></span>


    <span data-ttu-id="b6aed-139">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: pages
  fullName: pages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pages: Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6aed-140\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6aed-140\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pages = ctx.document.pages;\n    var pageCount = pages.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Pages Count: \" +pageCount.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Document.set
  summary: <span data-ttu-id="b6aed-141">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="b6aed-141">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b6aed-142">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="b6aed-142">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="b6aed-143">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="b6aed-143">This method has the following additional signature:</span></span>


    `set(properties: Visio.Document): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="b6aed-144">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="b6aed-144">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DocumentUpdateData
    - id: options
      description: <span data-ttu-id="b6aed-145">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b6aed-145">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Document.set_1
  summary: <span data-ttu-id="b6aed-146">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="b6aed-146">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Document): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Document
- uid: visio.Visio.Document.setActivePage
  summary: >-
    <span data-ttu-id="b6aed-147">Задает активную страницу документа.</span><span class="sxs-lookup"><span data-stu-id="b6aed-147">Set the Active Page of the document.</span></span>


    <span data-ttu-id="b6aed-148">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-148">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: setActivePage(PageName)
  fullName: setActivePage(PageName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setActivePage(PageName: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6aed-149\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6aed-149\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var pageName = \"Page-1\";\n    document.setActivePage(pageName);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: PageName
      description: <span data-ttu-id="b6aed-150">Имя страницы</span><span class="sxs-lookup"><span data-stu-id="b6aed-150">Name of the page</span></span>
      type:
      - string
- uid: visio.Visio.Document.startDataRefresh
  summary: >-
    <span data-ttu-id="b6aed-151">Запускает обновление данных в диаграмме, для всех страниц.</span><span class="sxs-lookup"><span data-stu-id="b6aed-151">Triggers the refresh of the data in the Diagram, for all pages.</span></span>


    <span data-ttu-id="b6aed-152">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-152">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: startDataRefresh()
  fullName: startDataRefresh()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'startDataRefresh(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6aed-153\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6aed-153\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    document.startDataRefresh();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Document.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.DocumentData;'
    return:
      type:
      - visio.Visio.Interfaces.DocumentData
      description: ''
- uid: visio.Visio.Document.view
  summary: >-
    <span data-ttu-id="b6aed-p108">Возвращает объект DocumentView. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b6aed-p108">Returns the DocumentView object. Read-only.</span></span>


    <span data-ttu-id="b6aed-156">\[[Набор API-Интерфейсов: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b6aed-156">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: view
  fullName: view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.DocumentView;'
    return:
      type:
      - visio.Visio.DocumentView
