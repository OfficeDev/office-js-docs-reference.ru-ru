### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Comment
    summary: |-
      <span data-ttu-id="8e080-101">Представляет примечание.</span><span class="sxs-lookup"><span data-stu-id="8e080-101">Represents the Comment.</span></span>

      <span data-ttu-id="8e080-102">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8e080-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Comment
    fullName: Visio.Comment
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Comment.author
      - visio.Visio.Comment.date
      - visio.Visio.Comment.load
      - visio.Visio.Comment.load_1
      - visio.Visio.Comment.load_2
      - visio.Visio.Comment.set
      - visio.Visio.Comment.set_1
      - visio.Visio.Comment.text
      - visio.Visio.Comment.toJSON
  - uid: visio.Visio.Comment.author
    summary: |-
      <span data-ttu-id="8e080-103">Строка, определяющая имя автора комментария.</span><span class="sxs-lookup"><span data-stu-id="8e080-103">A string that specifies the name of the author of the comment.</span></span>

      <span data-ttu-id="8e080-104">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8e080-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: author
    fullName: author
    langs:
      - typeScript
    type: property
    syntax:
      content: 'author: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.date
    summary: |-
      <span data-ttu-id="8e080-105">Строка, определяющая дату создания комментария.</span><span class="sxs-lookup"><span data-stu-id="8e080-105">A string that specifies the date when the comment was created.</span></span>

      <span data-ttu-id="8e080-106">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8e080-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: date
    fullName: date
    langs:
      - typeScript
    type: property
    syntax:
      content: 'date: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.load
    summary: <span data-ttu-id="8e080-107">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8e080-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e080-108">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="8e080-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8e080-109">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="8e080-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8e080-110">`load(option?: string | string[]): Visio.Comment`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8e080-110">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8e080-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8e080-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8e080-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="8e080-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="8e080-113">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="8e080-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="8e080-114">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="8e080-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8e080-115">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="8e080-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8e080-116">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="8e080-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="8e080-117">Примеры</span><span class="sxs-lookup"><span data-stu-id="8e080-117">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Position Belt.41";
          var shape = activePage.shapes.getItem(shapeName);
          var shapecomments= shape.comments;
          shapecomments.load();
          return ctx.sync().then(function () {
              for(var i=0; i<shapecomments.items.length;i++)
              {
                  var comment= shapecomments.items[i];
                  console.log("comment Author: " + comment.author);
                  console.log("Comment Text: " + comment.text);
                  console.log("Date " + comment.date);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.CommentLoadOptions
  - uid: visio.Visio.Comment.load_1
    summary: <span data-ttu-id="8e080-118">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8e080-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e080-119">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8e080-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8e080-120">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8e080-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.Comment.load_2
    summary: <span data-ttu-id="8e080-121">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8e080-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e080-122">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="8e080-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8e080-123">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="8e080-123">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Comment.set
    summary: '<span data-ttu-id="8e080-124">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="8e080-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8e080-125">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="8e080-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8e080-126">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="8e080-126">This method has the following additional signature:</span></span>

      `set(properties: Visio.Comment): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="8e080-127">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="8e080-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.CommentUpdateData
        - id: options
          description: '<span data-ttu-id="8e080-128">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8e080-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Comment.set_1
    summary: '<span data-ttu-id="8e080-129">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="8e080-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Comment
  - uid: visio.Visio.Comment.text
    summary: |-
      <span data-ttu-id="8e080-130">Строка, содержащая текст комментария.</span><span class="sxs-lookup"><span data-stu-id="8e080-130">A string that contains the comment text.</span></span>

      <span data-ttu-id="8e080-131">\[[Набор API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8e080-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type:
          - Visio.Interfaces.CommentData
        description: ''