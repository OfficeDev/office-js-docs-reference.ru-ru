### YamlMime:UniversalReference
items:
  - uid: Outlook_1_5.Office.CustomProperties
    summary: |-
      Объект CustomProperties представляет настраиваемые свойства, которые относятся к определенному элементу и относятся к почтовой надстройке Outlook. Например, может возникнуть необходимость в почтовой надстройке, сохраняющей некоторые данные текущего электронного сообщения, которое активировало надстройку. Если впоследствии пользователь снова откроет это сообщение и активирует почтовую надстройку, она сможет извлечь данные, сохраненные в виде настраиваемых свойств.

      Так как Outlook для Mac не кэширует настраиваемые свойства, если сеть пользователя отключена, почтовые надстройки не смогут получить доступ к их настраиваемым свойствам.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: Office.CustomProperties
    fullName: Office.CustomProperties
    langs:
      - typeScript
    type: interface
    package: Outlook_1_5
    children:
      - Outlook_1_5.Office.CustomProperties.get
      - Outlook_1_5.Office.CustomProperties.remove
      - Outlook_1_5.Office.CustomProperties.saveAsync
      - Outlook_1_5.Office.CustomProperties.set
  - uid: Outlook_1_5.Office.CustomProperties.get
    summary: Возвращает значение указанного настраиваемого свойства.
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: get(name)
    fullName: get(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: |-
          Значение указанного настраиваемого свойства.

          \[Набор API: Mailbox 1,0\]
      parameters:
        - id: name
          description: Имя возвращаемого настраиваемого свойства.
          type:
            - string
  - uid: Outlook_1_5.Office.CustomProperties.remove
    summary: |-
      Удаляет указанное свойство из коллекции настраиваемых свойств.

      Чтобы удаление свойства было постоянным, вызовите метод saveAsync объекта CustomProperties.
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: remove(name)
    fullName: remove(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: |-
            Имя удаляемого свойства.

            \[Набор API: Mailbox 1,0\]
          type:
            - string
  - uid: Outlook_1_5.Office.CustomProperties.saveAsync
    summary: "Сохраняет настраиваемые свойства конкретного элемента на сервере.\n\nНеобходимо вызвать метод saveAsync для сохранения изменений, сделанных с помощью метода set или метода remove объекта CustomProperties. Сохранение\_— асинхронное действие.\n\nРекомендуется проверять функцию обратного вызова и обрабатывать ошибки из saveAsync. В частности, надстройка чтения может активироваться, когда подключенный пользователь открыл форму чтения, а затем отключился. Если надстройка вызывает saveAsync, находясь в отключенном состоянии, saveAsync возвращает ошибку. Метод обратного вызова должен обрабатывать эту ошибку соответствующим образом."
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      // The following JavaScript code sample shows how to asynchronously use
      // the loadCustomPropertiesAsync method to load custom properties that
      // are specific to the current item, and the saveAsync method to save
      // these properties back to the server. After loading the custom properties,
      // the code sample uses the get method to read the custom property myProp,
      // the set method to write the custom property otherProp, and then finally
      // calls the saveAsync method to save the custom properties.

      // The initialize function is required for all add-ins.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, add-in-specific code can run.
              var item = Office.context.mailbox.item;
              item.loadCustomPropertiesAsync(customPropsCallback);
          });
      };

      function customPropsCallback(asyncResult) {
          var customProps = asyncResult.value;
          var myProp = customProps.get("myProp");

          customProps.set("otherProp", "value");
          customProps.saveAsync(saveCallback);
      }

      function saveCallback(asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              write(asyncResult.error.message);
          }
          else {
              // Async call to save custom properties completed.
              // Proceed to do the appropriate for your add-in.
          }
      }

      // Writes to a div with id='message' on the page.
      function write(message) {
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'saveAsync(callback, asyncContext)'
    fullName: 'saveAsync(callback, asyncContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void, asyncContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
        - id: asyncContext
          description: |-
            Необязательно. Данные о состоянии, передаваемые в метод обратного вызова.

            \[Набор API: Mailbox 1,0\]
          type:
            - any
  - uid: Outlook_1_5.Office.CustomProperties.set
    summary: |-
      Присваивает указанному свойству заданное значение.

      Метод set присваивает указанному свойству заданное значение. Для сохранения свойства на сервере необходимо использовать метод saveAsync.

      Метод set создает новое свойство, если указанное свойство не существует; в противном случае существующее значение заменяется на новое значение. Параметр value может быть любого типа, однако он всегда передается на сервер в виде строки.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: 'set(name, value)'
    fullName: 'set(name, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 'Имя свойства, которому присваивается значение.'
          type:
            - string
        - id: value
          description: 'Значение, присваиваемое свойству.'
          type:
            - string