### YamlMime:UniversalReference
ms.openlocfilehash: 88671696bafad50de5054ebe10c919e0dad4057c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30095172"
items:
- uid: Outlook_1_5.Office.Item
  summary: >-
    <span data-ttu-id="1db1c-101">Пространство имен элемента используется для доступа к выбранному в данный момент сообщению, приглашению на собрание или встрече.</span><span class="sxs-lookup"><span data-stu-id="1db1c-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="1db1c-102">Тип элемента можно определить с помощью `itemType` свойства.</span><span class="sxs-lookup"><span data-stu-id="1db1c-102">You can determine the type of the item by using the `itemType` property.</span></span>


    <span data-ttu-id="1db1c-103">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="1db1c-104">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-105">С ограничениями</span><span class="sxs-lookup"><span data-stu-id="1db1c-105">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-106">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-107">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-107">Compose or Read</span></span></td></tr> </table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: Outlook_1_5
  children:
  - Outlook_1_5.Office.Item.loadCustomPropertiesAsync
  - Outlook_1_5.Office.Item.loadCustomPropertiesAsync_1
  - Outlook_1_5.Office.Item.body
  - Outlook_1_5.Office.Item.itemType
  - Outlook_1_5.Office.Item.notificationMessages
- uid: Outlook_1_5.Office.Item.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="1db1c-108">Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="1db1c-108">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="1db1c-p102">Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента. Этот метод возвращает объект CustomProperties при обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, характерным для текущего элемента и текущей надстройки. Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.</span><span class="sxs-lookup"><span data-stu-id="1db1c-p102">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="1db1c-p103">Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult.value. Этот объект позволяет получить, задать и удалить настраиваемые свойства из элемента, а также сохранить изменения, внесенные в настраиваемое свойство, на сервере.</span><span class="sxs-lookup"><span data-stu-id="1db1c-p103">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="1db1c-114">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-114">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="1db1c-115">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-115">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-116">ReadItem</span><span class="sxs-lookup"><span data-stu-id="1db1c-116">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-117">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-117">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-118">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-118">Compose or Read</span></span></td></tr> </table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="1db1c-119">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="1db1c-119">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="1db1c-120">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="1db1c-120">Optional.</span></span> <span data-ttu-id="1db1c-121">Разработчики могут указать любой объект, к которому необходимо получить доступ, в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="1db1c-121">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="1db1c-122">Доступ к этому объекту можно получить с помощью свойства asyncResult. asyncContext в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="1db1c-122">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_5.Office.Item.loadCustomPropertiesAsync_1
  summary: >-
    <span data-ttu-id="1db1c-123">Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.</span><span class="sxs-lookup"><span data-stu-id="1db1c-123">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="1db1c-p105">Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента. Этот метод возвращает объект CustomProperties при обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, характерным для текущего элемента и текущей надстройки. Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.</span><span class="sxs-lookup"><span data-stu-id="1db1c-p105">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="1db1c-p106">Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult.value. Этот объект позволяет получить, задать и удалить настраиваемые свойства из элемента, а также сохранить изменения, внесенные в настраиваемое свойство, на сервере.</span><span class="sxs-lookup"><span data-stu-id="1db1c-p106">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="1db1c-129">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-129">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="1db1c-130">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-130">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-131">ReadItem</span><span class="sxs-lookup"><span data-stu-id="1db1c-131">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-132">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-132">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-133">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-133">Compose or Read</span></span></td></tr> </table><span data-ttu-id="1db1c-134">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="1db1c-134">

    #### Examples</span></span>


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback)
  fullName: loadCustomPropertiesAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="1db1c-135">После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="1db1c-135">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
- uid: Outlook_1_5.Office.Item.body
  summary: >-
    <span data-ttu-id="1db1c-136">Получает объект, предоставляющий методы для работы с основным текстом элемента.</span><span class="sxs-lookup"><span data-stu-id="1db1c-136">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="1db1c-137">\[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-137">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="1db1c-138">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-138">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-139">ReadItem</span><span class="sxs-lookup"><span data-stu-id="1db1c-139">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-140">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-140">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-141">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-141">Compose or Read</span></span></td></tr> </table><span data-ttu-id="1db1c-142">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="1db1c-142">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_5.Office.Item.itemType
  summary: >-
    <span data-ttu-id="1db1c-143">Получает тип элемента, который представляет экземпляр.</span><span class="sxs-lookup"><span data-stu-id="1db1c-143">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="1db1c-144">Свойство itemType возвращает одно из значений перечисления ItemType, которое указывает, является ли экземпляр объекта item сообщением или собранием.</span><span class="sxs-lookup"><span data-stu-id="1db1c-144">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="1db1c-145">\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-145">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="1db1c-146">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-146">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-147">ReadItem</span><span class="sxs-lookup"><span data-stu-id="1db1c-147">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-148">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-148">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-149">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-149">Compose or Read</span></span></td></tr> </table><span data-ttu-id="1db1c-150">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="1db1c-150">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_5.Office.Item.notificationMessages
  summary: >-
    <span data-ttu-id="1db1c-151">Получает сообщения уведомления для элемента.</span><span class="sxs-lookup"><span data-stu-id="1db1c-151">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="1db1c-152">\[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1db1c-152">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="1db1c-153">Минимальный уровень разрешений</span><span class="sxs-lookup"><span data-stu-id="1db1c-153">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="1db1c-154">ReadItem</span><span class="sxs-lookup"><span data-stu-id="1db1c-154">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="1db1c-155">Применимый режим Outlook</span><span class="sxs-lookup"><span data-stu-id="1db1c-155">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="1db1c-156">Создание или чтение</span><span class="sxs-lookup"><span data-stu-id="1db1c-156">Compose or Read</span></span></td></tr> </table><span data-ttu-id="1db1c-157">

    ####Примеры</span><span class="sxs-lookup"><span data-stu-id="1db1c-157">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
