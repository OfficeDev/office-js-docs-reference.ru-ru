### YamlMime:UniversalReference
items:
  - uid: Outlook.Office.Mailbox
    summary: |-
      Предоставляет для Microsoft Outlook и Microsoft Outlook в Интернете доступ к объектной модели надстройки Outlook.

      Пространства имен

      - diagnostics. Предоставляет надстройке Outlook диагностические сведения.

      - item. Предоставляет методы и свойства для доступа к сообщению или встрече в надстройке Outlook.

      - userProfile. Предоставляет сведения о пользователе в надстройке Outlook.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: Office.Mailbox
    fullName: Office.Mailbox
    langs:
      - typeScript
    type: interface
    package: Outlook
    children:
      - Outlook.Office.Mailbox.addHandlerAsync
      - Outlook.Office.Mailbox.addHandlerAsync_1
      - Outlook.Office.Mailbox.convertToEwsId
      - Outlook.Office.Mailbox.convertToLocalClientTime
      - Outlook.Office.Mailbox.convertToRestId
      - Outlook.Office.Mailbox.convertToUtcClientTime
      - Outlook.Office.Mailbox.displayAppointmentForm
      - Outlook.Office.Mailbox.displayMessageForm
      - Outlook.Office.Mailbox.displayNewAppointmentForm
      - Outlook.Office.Mailbox.getCallbackTokenAsync
      - Outlook.Office.Mailbox.getCallbackTokenAsync_1
      - Outlook.Office.Mailbox.getUserIdentityTokenAsync
      - Outlook.Office.Mailbox.makeEwsRequestAsync
      - Outlook.Office.Mailbox.removeHandlerAsync
      - Outlook.Office.Mailbox.removeHandlerAsync_1
      - Outlook.Office.Mailbox.diagnostics
      - Outlook.Office.Mailbox.ewsUrl
      - Outlook.Office.Mailbox.item
      - Outlook.Office.Mailbox.restUrl
      - Outlook.Office.Mailbox.userProfile
  - uid: Outlook.Office.Mailbox.addHandlerAsync
    summary: |-
      Добавляет обработчик для поддерживаемого события. **Note**: события доступны только в области задач.

      В настоящее время единственным поддерживаемым типом события является`Office.EventType.ItemChanged`<!-- -->.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: (type: Office.EventType) => void, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: 'Событие, которое должно вызвать обработчик.'
          type:
            - Office.EventType | string
        - id: handler
          description: 'Функция для обработки события. Функция должна принимать один параметр, представляющий собой объектный литерал. Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.'
          type:
            - '(type: Office.EventType) => void'
        - id: options
          description: Необязательно. Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.Mailbox.addHandlerAsync_1
    summary: |-
      Добавляет обработчик для поддерживаемого события. **Note**: события доступны только в области задач.

      В настоящее время единственным поддерживаемым типом события является`Office.EventType.ItemChanged`<!-- -->.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.initialize = function (reason) {
          $(document).ready(function () {
              Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, loadNewItem, function (result) {
              if (result.status === Office.AsyncResultStatus.Failed) {
                      // Handle error.
                  }
              });
          });
      };

      function loadNewItem(eventArgs) {
          // Load the properties of the newly selected item.
          loadProps(Office.context.mailbox.item);
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: (type: Office.EventType) => void, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: 'Событие, которое должно вызвать обработчик.'
          type:
            - Office.EventType | string
        - id: handler
          description: 'Функция для обработки события. Функция должна принимать один параметр, представляющий собой объектный литерал. Свойство Type для параметра будет сопоставляться с параметром eventType, переданному в addHandlerAsync.'
          type:
            - '(type: Office.EventType) => void'
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.Mailbox.convertToEwsId
    summary: |-
      Преобразовывает идентификатор элемента из формата REST в формат EWS.

      Формат идентификаторов, извлекаемых через API REST (например, API Почты Outlook или Microsoft Graph), отличается от формата веб-служб Exchange (EWS). Метод Конверттоевсид преобразует идентификатор в формате REST в правильном формате для EWS.

      **Note**: Этот метод не поддерживается в Outlook на iOS или Android.

      \[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      // Get an item's ID from a REST API.
      var restId = 'AAMkAGVlOTZjNTM3LW...';

      // Treat restId as coming from the v2.0 version of the Outlook Mail API.
      var ewsId = Office.context.mailbox.convertToEwsId(restId, Office.MailboxEnums.RestVersion.v2_0);
      ```
    name: 'convertToEwsId(itemId, restVersion)'
    fullName: 'convertToEwsId(itemId, restVersion)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToEwsId(itemId: string, restVersion: MailboxEnums.RestVersion | string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: itemId
          description: 'Идентификатор элемента, отформатированный для REST API Outlook.'
          type:
            - string
        - id: restVersion
          description: 'Значение, определяющее версию REST API для Outlook, которая используется для извлечения идентификатора элемента.'
          type:
            - MailboxEnums.RestVersion | string
  - uid: Outlook.Office.Mailbox.convertToLocalClientTime
    summary: |-
      Получает словарь, содержащий сведения о локальном времени клиента.

      Даты и времена, используемые почтовым приложением для Outlook в Интернете или на настольных клиентах, могут использовать различные часовые пояса. Outlook использует часовой пояс клиентского компьютера; В Outlook в Интернете используется часовой пояс, установленный в центре администрирования Exchange. Значения даты и времени должны обрабатываться таким образом, чтобы значения, отображаемые в интерфейсе пользователя, всегда согласовывались с часовым поясом, ожидаемым пользователем.

      Если почтовое приложение запущено в Outlook на настольных клиентах, метод convertToLocalClientTime будет возвращать объект Dictionary со значениями, установленными на часовой пояс клиентского компьютера. Если почтовое приложение запущено в Outlook в Интернете, метод convertToLocalClientTime будет возвращать объект Dictionary со значениями, заданными в часовом поясе, заданном в центре администрирования Exchange.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: convertToLocalClientTime(timeValue)
    fullName: convertToLocalClientTime(timeValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
      return:
        type:
          - Outlook.Office.LocalClientTime
        description: ''
      parameters:
        - id: timeValue
          description: Объект Date.
          type:
            - Date
  - uid: Outlook.Office.Mailbox.convertToRestId
    summary: |-
      Преобразовывает идентификатор элемента в формате EWS в формат REST.

      **Note**: Этот метод не поддерживается в Outlook на iOS или Android.

      \[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      Идентификаторы элементов, получаемые с помощью EWS или с помощью свойства itemId, используют формат, отличный от формата, используемого REST API (например, [API почты Outlook](https://docs.microsoft.com/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations) или [Microsoft Graph](https://graph.microsoft.io/)<!-- -->. Метод convertToRestId преобразует идентификатор в формате EWS в нужный формат для REST.

      #### <a name="examples"></a>Примеры

      ```javascript
      // Get the currently selected item's ID.
      var ewsId = Office.context.mailbox.item.itemId;

      // Convert to a REST ID for the v2.0 version of the Outlook Mail API.
      var restId = Office.context.mailbox.convertToRestId(ewsId, Office.MailboxEnums.RestVersion.v2_0);
      ```
    name: 'convertToRestId(itemId, restVersion)'
    fullName: 'convertToRestId(itemId, restVersion)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRestId(itemId: string, restVersion: MailboxEnums.RestVersion | string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: itemId
          description: Идентификатор элемента в формате EWS
          type:
            - string
        - id: restVersion
          description: 'Значение, определяющее версию REST API для Outlook, с которой будет использоваться преобразованный идентификатор.'
          type:
            - MailboxEnums.RestVersion | string
  - uid: Outlook.Office.Mailbox.convertToUtcClientTime
    summary: |-
      Получает объект Date из словаря, содержащего сведения о времени.

      Метод convertToUtcClientTime преобразует словарь, содержащий локальную дату и время, в объект Date с правильными значениями локальной даты и времени.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: convertToUtcClientTime(input)
    fullName: convertToUtcClientTime(input)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
      return:
        type:
          - Date
        description: Объект Date со временем в формате UTC.
      parameters:
        - id: input
          description: Значение локального времени для преобразования.
          type:
            - Outlook.Office.LocalClientTime
  - uid: Outlook.Office.Mailbox.displayAppointmentForm
    summary: |-
      Отображает имеющуюся встречу из календаря.

      Метод displayAppointmentForm открывает существующую встречу в календаре в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.

      В Outlook на Mac Этот метод можно использовать для отображения одной встречи, которая не является частью повторяющегося ряда, или главной встречи повторяющейся серии, но невозможно отобразить экземпляр ряда. Это связано с тем, что в Outlook на Mac-адресе невозможно получить доступ к свойствам (включая идентификатор элемента) повторяющихся рядов.

      В Outlook в Интернете этот метод открывает указанную форму, только если текст формы меньше или равен 32 КБ числу символов.

      Если указанный идентификатор элемента не определяет существующую встречу, на клиентском компьютере или устройстве открывается пустая страница, и сообщение об ошибке не возвращается.

      **Note**: Этот метод не поддерживается в Outlook на iOS или Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.context.mailbox.displayAppointmentForm(appointmentId);
      ```
    name: displayAppointmentForm(itemId)
    fullName: displayAppointmentForm(itemId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayAppointmentForm(itemId: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: Идентификатор веб-служб Exchange для существующей встречи в календаре.
          type:
            - string
  - uid: Outlook.Office.Mailbox.displayMessageForm
    summary: |-
      Отображает имеющееся сообщение.

      Метод displayMessageForm открывает существующее сообщение в новом окне на рабочем столе или в диалоговом окне на мобильных устройствах.

      В Outlook в Интернете этот метод открывает указанную форму только в том случае, если размер текста формы меньше или равен 32 КБ.

      Если указанный идентификатор элемента не определяет существующее сообщение, окно на клиентском компьютере не открывается и сообщение об ошибке не возвращается.

      Не используйте функцию displayMessageForm с объектом itemId, который представляет встречу. Используйте метод displayAppointmentForm для отображения существующей встречи и displayNewAppointmentForm, чтобы отобразить форму для создания новой встречи.

      **Note**: Этот метод не поддерживается в Outlook на iOS или Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      Office.context.mailbox.displayMessageForm(messageId);
      ```
    name: displayMessageForm(itemId)
    fullName: displayMessageForm(itemId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayMessageForm(itemId: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: Идентификатор веб-служб Exchange для существующего сообщения.
          type:
            - string
  - uid: Outlook.Office.Mailbox.displayNewAppointmentForm
    summary: |-
      Отображает форму для создания новой встречи в календаре.

      Метод displayNewAppointmentForm открывает форму, которая позволяет пользователю создать новую встречу или собрание. Если параметры заданы, поля формы встречи автоматически заполняются их содержимым.

      В Outlook в Интернете этот метод всегда отображает форму с полем участников. Если вы не укажете участников в качестве входных аргументов, метод отображает форму с кнопкой Сохранить. Если вы укажете участников, форма будет включать участников и кнопку Отправить.

      В расширенном клиенте Outlook и Outlook RT при указании участников или ресурсов в параметре requiredAttendees, optionalAttendees или Resources в этом методе отображается форма собрания с кнопкой Отправить. Если не указать получателей, этот метод отображает форму встречи с кнопкой Сохранить &amp; закрыть.

      Если параметры превышают указанные ограничения размера или если указано неизвестное имя параметра, вызывается исключение.

      **Note**: Этот метод не поддерживается в Outlook на iOS или Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение

      #### <a name="examples"></a>Примеры

      ```javascript
      var start = new Date();
      var end = new Date();
      end.setHours(start.getHours() + 1);

      Office.context.mailbox.displayNewAppointmentForm(
      {
          requiredAttendees: ['bob@contoso.com'],
          optionalAttendees: ['sam@contoso.com'],
          start: start,
          end: end,
          location: 'Home',
          resources: ['projector@contoso.com'],
          subject: 'meeting',
          body: 'Hello World!'
      });
      ```
    name: displayNewAppointmentForm(parameters)
    fullName: displayNewAppointmentForm(parameters)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: parameters
          description: 'Аппоинтментформ, описывающий новую встречу. Все свойства являются необязательными.'
          type:
            - Outlook.Office.AppointmentForm
  - uid: Outlook.Office.Mailbox.getCallbackTokenAsync
    summary: |-
      Возвращает строку, содержащую маркер, который используется для вызова интерфейсов REST API или веб-служб Exchange.

      Метод getCallbackTokenAsync выполняет асинхронный вызов для получения непрозрачного маркера с сервера Exchange Server, на котором размещается почтовый ящик пользователя. Время существования маркера обратного вызова составляет 5 минут.

      *Маркеры REST*

      Когда запрашивается маркер REST (Options. IsTrue = true), полученный маркер не будет работать для проверки подлинности вызовов веб-служб Exchange. Маркер будет ограничен в области для доступа только для чтения к текущему элементу и его вложениям, если надстройка не указала разрешение ReadWriteMailbox в манифесте. Если задано разрешение ReadWriteMailbox, полученный маркер предоставит доступ для чтения и записи к почте, календарю и контактам, включая возможность отправки почты.

      Надстройка должна использовать свойство Рестурл, чтобы определить правильный URL-адрес, используемый при вызовах REST API.

      *Маркеры EWS*

      Когда запрашивается маркер EWS (Options. IsFalse = false), полученный маркер не будет работать для проверки подлинности вызовов REST API. Область действия маркера будет ограничена доступом к текущему элементу.

      Надстройка должна использовать свойство ewsUrl, чтобы определить правильный URL-адрес, используемый при совершении вызовов EWS.

      **Примечание**: рекомендуется по возможности использовать API REST вместо веб-служб Exchange.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      function getCallbackToken() {
          var options = {
              isRest: true,
              asyncContext: { message: 'Hello World!' }
          };

          Office.context.mailbox.getCallbackTokenAsync(options, cb);
      }

      function cb(asyncResult) {
          var token = asyncResult.value;
      }
      ```
    name: 'getCallbackTokenAsync(options, callback)'
    fullName: 'getCallbackTokenAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCallbackTokenAsync(options: Office.AsyncContextOptions & { isRest?: boolean }, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. Опускайте: определяет, будет ли предоставленный маркер использоваться для REST API Outlook или веб-служб Exchange. Значение по умолчанию − ложь. asyncContext: любые данные о состоянии, которые передаются в асинхронный метод.'
          type:
            - 'Office.AsyncContextOptions & { isRest?: boolean }'
        - id: callback
          description: 'После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Маркер указывается в виде строки в свойстве `asyncResult.value`. Если возникла ошибка, то `asyncResult.error` свойства и `asyncResult.diagnostics` могут содержать дополнительные сведения.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.Mailbox.getCallbackTokenAsync_1
    summary: |-
      Получает строку, содержащую маркер, используемый для получения вложения или элемента с Exchange Server.

      Метод getCallbackTokenAsync выполняет асинхронный вызов для получения непрозрачного маркера с сервера Exchange Server, на котором размещается почтовый ящик пользователя. Время существования маркера обратного вызова составляет 5 минут.

      Вы можете передать сторонней системе токен и идентификатор вложения или элемента. Сторонняя система использует этот токен как токен авторизации, чтобы вызвать операцию GetAttachment или GetItem веб-служб Exchange для возврата вложения или элемента. Например, вы можете создать удаленную службу, чтобы получить вложения из выбранного элемента.

      У вашего приложения должно быть разрешение ReadItem, указанное в его манифесте, для вызова метода getCallbackTokenAsync в режиме чтения.

      В режиме создания необходимо вызвать метод saveAsync, чтобы получить идентификатор элемента, передаваемый в метод getCallbackTokenAsync. У вашего приложения должны быть разрешения ReadWriteItem для вызова метода saveAsync.

      \[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      function getCallbackToken() {
          Office.context.mailbox.getCallbackTokenAsync(cb);
      }

      function cb(asyncResult) {
          var token = asyncResult.value;
      }
      ```
    name: 'getCallbackTokenAsync(callback, userContext)'
    fullName: 'getCallbackTokenAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCallbackTokenAsync(callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Маркер указывается в виде строки в свойстве `asyncResult.value`. Если возникла ошибка, то `asyncResult.error` свойства и `asyncResult.diagnostics` могут содержать дополнительные сведения.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
        - id: userContext
          description: 'Необязательно. Данные о состоянии, передаваемые в асинхронный метод.'
          type:
            - any
  - uid: Outlook.Office.Mailbox.getUserIdentityTokenAsync
    summary: |-
      Получает маркер, идентифицирующий пользователя и надстройку Office.

      Маркер предоставляется в виде строки в свойстве asyncResult. Value.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      Метод getUserIdentityTokenAsync возвращает маркер, который можно использовать для идентификации и [проверки подлинности надстройки и пользователя с помощью сторонней системы](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->.

      #### <a name="examples"></a>Примеры

      ```javascript
      function getIdentityToken() {
          Office.context.mailbox.getUserIdentityTokenAsync(cb);
      }

      function cb(asyncResult) {
          var token = asyncResult.value;
      }
      ```
    name: 'getUserIdentityTokenAsync(callback, userContext)'
    fullName: 'getUserIdentityTokenAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUserIdentityTokenAsync(callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Маркер указывается в виде строки в свойстве `asyncResult.value`. Если возникла ошибка, то `asyncResult.error` свойства и `asyncResult.diagnostics` могут содержать дополнительные сведения.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
        - id: userContext
          description: 'Необязательно. Данные о состоянии, передаваемые в асинхронный метод.'
          type:
            - any
  - uid: Outlook.Office.Mailbox.makeEwsRequestAsync
    summary: "Выполняет асинхронный запрос к службе веб-служб Exchange (EWS) на сервере Exchange, на котором размещается почтовый ящик пользователя.\n\nВ таких случаях надстройка должна использовать REST API для доступа к почтовому ящику пользователя.\n\nМетод makeEwsRequestAsync отправляет запрос EWS от имени надстройки в Exchange.\n\nС помощью метода makeEwsRequestAsync нельзя запрашивать элементы, связанные с папкой.\n\nВ запросе XML должна быть указана кодировка UTF-8. &lt;<!-- -->? Версия XML = \"1.0\" Encoding = \"UTF-8\"?<!-- -->&gt;\n\nНадстройка должна иметь разрешение ReadWriteMailbox на использование метода makeEwsRequestAsync. Сведения об использовании разрешения ReadWriteMailbox и операций EWS, которые можно вызывать с помощью метода makeEwsRequestAsync, можно узнать в статье [Определение разрешений для почтового ящика пользователя на доступ к почтовому ящику пользователя](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions) .<!-- -->.\n\nРезультат XML вызова EWS предоставляется в виде строки в свойстве asyncResult. Value. Если размер результата превышает 1\_МБ, возвращается сообщение об ошибке.\n\n**Примечание**: Этот метод не поддерживается в следующих сценариях:\n\n- В Outlook на iOS или Android.\n\n- Когда надстройка загружается в почтовый ящик Gmail.\n\n**Note**: администратор сервера должен установить для OAuthAuthentication значение true в каталоге Client Access Server EWS, чтобы разрешить методу makeEwsRequestAsync выполнять запросы EWS.\n\n*Различия версий*\n\nПри использовании метода makeEwsRequestAsync в почтовых приложениях, которые выполняются в Outlook версии ниже 15.0.4535.1004, следует указывать кодировку ISO-8859-1.\n\n`<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>`\n\nЗначение кодировки не нужно указывать, если почтовое приложение выполняется в Outlook в Интернете. Чтобы определить, выполняется ли приложение в Outlook или Outlook в Интернете, используйте свойство mailbox.diagnostics.hostName. Используемую версию Outlook можно определить с помощью свойства mailbox.diagnostics.hostVersion.\n\n\\[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\\]"
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadWriteMailbox

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      #### <a name="examples"></a>Примеры

      ```javascript
      function getSubjectRequest(id) {
          // Return a GetItem operation request for the subject of the specified item.
          var request =
              '<?xml version="1.0" encoding="utf-8"?>' +
              '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' +
              '               xmlns:xsd="http://www.w3.org/2001/XMLSchema"' +
              '               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"' +
              '               xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types">' +
              '  <soap:Header>' +
              '    <RequestServerVersion Version="Exchange2013" xmlns="http://schemas.microsoft.com/exchange/services/2006/types" soap:mustUnderstand="0" />' +
              '  </soap:Header>' +
              '  <soap:Body>' +
              '    <GetItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">' +
              '      <ItemShape>' +
              '        <t:BaseShape>IdOnly</t:BaseShape>' +
              '        <t:AdditionalProperties>' +
              '            <t:FieldURI FieldURI="item:Subject"/>' +
              '        </t:AdditionalProperties>' +
              '      </ItemShape>' +
              '      <ItemIds><t:ItemId Id="' + id + '"/></ItemIds>' +
              '    </GetItem>' +
              '  </soap:Body>' +
              '</soap:Envelope>';

          return request;
      }

      function sendRequest() {
          // Create a local variable that contains the mailbox.
          Office.context.mailbox.makeEwsRequestAsync(
              getSubjectRequest(mailbox.item.itemId), callback);
      }

      function callback(asyncResult)  {
          var result = asyncResult.value;
          var context = asyncResult.asyncContext;

          // Process the returned response here.
      }
      ```
    name: 'makeEwsRequestAsync(data, callback, userContext)'
    fullName: 'makeEwsRequestAsync(data, callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'makeEwsRequestAsync(data: any, callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: Запрос EWS.
          type:
            - any
        - id: callback
          description: "После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. `value` Свойство Result представляет собой XML-код запроса EWS, предоставленный в виде строки. Если размер результата превышает 1\_МБ, возвращается сообщение об ошибке."
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
        - id: userContext
          description: 'Необязательно. Данные о состоянии, передаваемые в асинхронный метод.'
          type:
            - any
  - uid: Outlook.Office.Mailbox.removeHandlerAsync
    summary: |-
      Удаляет обработчиков для поддерживаемого типа события. **Note**: события доступны только в области задач.

      В настоящее время единственным поддерживаемым типом события является`Office.EventType.ItemChanged`<!-- -->.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: 'Событие, которое должно отменить обработчик.'
          type:
            - Office.EventType | string
        - id: options
          description: Необязательно. Предоставляет параметр для сохранения данных контекста любого типа без изменений для использования при обратном вызове.
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.Mailbox.removeHandlerAsync_1
    summary: |-
      Удаляет обработчиков для поддерживаемого типа события. **Note**: события доступны только в области задач.

      В настоящее время единственным поддерживаемым типом события является`Office.EventType.ItemChanged`<!-- -->.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: 'Событие, которое должно отменить обработчик.'
          type:
            - Office.EventType | string
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.Mailbox.diagnostics
    summary: |-
      Предоставляет надстройке Outlook диагностические сведения.

      Содержит следующие элементы:

      - hostName (строка): строка, представляющая имя ведущего приложения. Оно должно иметь одно из следующих значений: "Outlook", "OutlookWebApp", "Аутлукиос" или "Аутлукандроид".

      - hostVersion (строка): строка, представляющая версию ведущего приложения или сервера Exchange Server. Если почтовая надстройка работает в Outlook на настольных клиентах или в iOS, свойство hostVersion Возвращает версию ведущего приложения, Outlook. В Outlook в Интернете свойство возвращает версию сервера Exchange. Пример: строка "15.0.468.0".

      - OWAView (MailboxEnums. OWAView или String): перечисление (или строковый литерал), представляющее текущее представление Outlook в Интернете. Если ведущее приложение не является Outlook в Интернете, при доступе к этому свойству будет получено неопределенное значение. В Outlook в Интернете имеется три представления ("OneColumn"), отображаемые, когда экран сужается, "TwoColumns" — отображается, когда экран шире, а "ThreeColumns" — отображается, когда экран составляется, а "" — отображается, когда экран является широким), который соответствует ширине экрана и окна, а также количество столбцы, которые могут быть отображены.

      Дополнительные сведения находятся в разделе [Office. Diagnostics](xref:Outlook.Office.Diagnostics)<!-- -->.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"
    name: diagnostics
    fullName: diagnostics
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagnostics: Diagnostics;'
      return:
        type:
          - Outlook.Office.Diagnostics
  - uid: Outlook.Office.Mailbox.ewsUrl
    summary: |-
      Получает URL-адрес конечной точки веб-служб Exchange (EWS) для этой учетной записи электронной почты. Только в режиме чтения.

      У вашего приложения должно быть разрешение ReadItem, указанное в его манифесте, для вызова члена ewsUrl в режиме чтения.

      В режиме создания необходимо вызвать метод saveAsync, прежде чем можно будет использовать элемент ewsUrl. У вашего приложения должны быть разрешения ReadWriteItem для вызова метода saveAsync.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      Удаленная служба может использовать значение ewsUrl для выполнения вызовов EWS в почтовый ящик пользователя. Например, вы можете создать удаленную службу для [получения вложений из выбранного элемента](https://docs.microsoft.com/outlook/add-ins/get-attachments-of-an-outlook-item) .<!-- -->.

      **Примечание**: этот элемент не поддерживается в Outlook на iOS или Android.
    name: ewsUrl
    fullName: ewsUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ewsUrl: string;'
      return:
        type:
          - string
  - uid: Outlook.Office.Mailbox.item
    summary: 'Элемент почтового ящика. В зависимости от контекста, в котором открытая надстройка, элемент может иметь любое количество типов. Если требуется просмотреть IntelliSense только для определенного типа, необходимо привести этот элемент к одному из следующих вариантов:`ItemCompose`<!-- -->, `ItemRead`<!-- -->, `MessageCompose`<!-- -->, `MessageRead`<!-- -->, `AppointmentCompose`<!-- -->, `AppointmentRead`'
    name: item
    fullName: item
    langs:
      - typeScript
    type: property
    syntax:
      content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
      return:
        type:
          - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
  - uid: Outlook.Office.Mailbox.restUrl
    summary: |-
      Возвращает URL-адрес конечной точки REST для этой учетной записи электронной почты.

      У вашего приложения должно быть разрешение ReadItem, указанное в его манифесте, для вызова члена Рестурл в режиме чтения.

      В режиме создания необходимо вызвать метод saveAsync, прежде чем можно будет использовать элемент Рестурл. У вашего приложения должны быть разрешения ReadWriteItem для вызова метода saveAsync.

      \[[Набор API: Mailbox 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: "создание" или "чтение"

      Значение Рестурл можно использовать, чтобы совершать вызовы [REST API](https://docs.microsoft.com/outlook/rest/) для почтового ящика пользователя.
    name: restUrl
    fullName: restUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restUrl: string;'
      return:
        type:
          - string
  - uid: Outlook.Office.Mailbox.userProfile
    summary: |-
      Сведения о пользователе, связанном с почтовым ящиком. К ним относятся тип учетной записи, отображаемое имя, адрес электронной почты и часовой пояс.

      Дополнительные сведения находятся в [пакете Office. UserProfile](xref:Outlook.Office.UserProfile)
    name: userProfile
    fullName: userProfile
    langs:
      - typeScript
    type: property
    syntax:
      content: 'userProfile: UserProfile;'
      return:
        type:
          - Outlook.Office.UserProfile