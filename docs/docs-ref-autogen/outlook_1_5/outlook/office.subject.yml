### YamlMime:TSType
name: Office.Subject
uid: outlook!Office.Subject:interface
package: outlook!
fullName: Office.Subject
summary: >-
  Предоставляет методы для получения и задания темы для встречи или сообщения в надстройке Outlook.


  \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


  **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Subject#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Получает тему встречи или сообщения.


    Метод `getAsync` выполняет асинхронный вызов на сервер Exchange Server, чтобы получить тему встречи или сообщения.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа `Office.AsyncResult`<!-- -->. `value`Свойство Result является темой элемента.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.Subject#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: >-
    Получает тему встречи или сообщения.


    Метод getAsync выполняет асинхронный вызов на сервер Exchange для получения темы встречи или сообщения.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание


    #### <a name="examples"></a>Примеры


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: callback
      description: После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа `Office.AsyncResult`<!-- -->. `value`Свойство Result является темой элемента.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(subject, options, callback)
  uid: outlook!Office.Subject#setAsync:member(1)
  package: outlook!
  fullName: setAsync(subject, options, callback)
  summary: >-
    Задает тему встречи или сообщения.


    Метод `setAsync` запускает асинхронный запрос на сервере Exchange Server, чтобы задать тему встречи или сообщения. При задании темы перезаписывается текущая тема, но сохраняются все префиксы, такие как "Fwd:" или "Re:".


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`


    **[Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: создание


    **Ошибки**:


    - `DataExceedsMaximumSize`<!-- -->: Параметр subject имеет более 255 символов.


    #### <a name="examples"></a>Примеры


    ```javascript

    Office.context.mailbox.item.subject.setAsync("New subject!", function (asyncResult) {
        if (asyncResult.status === "failed") {
            console.log("Action failed with error: " + asyncResult.error.message);
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(subject: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: subject
      description: Тема встречи или сообщения. Строка может содержать до 255 символов.
      type: string
    - id: options
      description: 'Необязательный атрибут. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный атрибут. После выполнения метода функция, переданная в `callback` параметре, вызывается с помощью одного параметра типа `Office.AsyncResult`<!-- -->. Если не удастся задать тему, свойство `asyncResult.error` будет содержать код ошибки.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 2799520a055c9182b7d7077196c52fad64fdf6d6
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49193224"
