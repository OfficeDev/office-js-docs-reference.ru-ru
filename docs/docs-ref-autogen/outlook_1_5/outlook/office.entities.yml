### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Entities:interface'
    summary: |-
      Представляет коллекцию объектов, обнаруженных в электронном сообщении или сведениях о встрече. Только в режиме чтения.

      Объект `Entities` — это контейнер для массивов сущностей, возвращаемых методами `getEntities` и `getEntitiesByType`, если элемент (электронное сообщение или сведения о встрече) содержит одну или несколько сущностей, обнаруженных сервером. Эти сущности можно использовать в коде, чтобы предоставить дополнительные контекстные сведения (например, отобразить адрес на карте или открыть приложение для набора телефонного номера, обнаруженного в элементе).

      Если в элементе нет сущностей типа, указанного в свойстве, это свойство возвращает значение null. Например, если сообщение содержит почтовый адрес и номер телефона, свойства addresses и phoneNumbers будут содержать данные, а остальные свойства вернут значение null.

      Чтобы строка распознавалась как адрес, она должна содержать почтовый адрес в США с такими элементами, как номер дома, название улицы, город, штат и почтовый индекс.

      Чтобы строка распознавалась как номер телефона, она должна содержать номер телефона в формате, принятом в Северной Америке.

      Распознавание сущностей опирается на встроенное распознавание языка, основанное на компьютерном осмыслении больших объемов данных. Распознавание сущности является недетерминированным, и успех иногда зависит от конкретного контекста в элементе.

      Когда массивы свойств возвращаются `getEntitiesByType` методом, только свойство указанной сущности содержит данные; все остальные свойства имеют значение null.
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->разрешений**:`ReadItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->Outlook**: чтение
    name: Office.Entities
    fullName: Office.Entities
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Entities#addresses:member'
      - 'outlook!Office.Entities#contacts:member'
      - 'outlook!Office.Entities#emailAddresses:member'
      - 'outlook!Office.Entities#meetingSuggestions:member'
      - 'outlook!Office.Entities#phoneNumbers:member'
      - 'outlook!Office.Entities#taskSuggestions:member'
      - 'outlook!Office.Entities#urls:member'
  - uid: 'outlook!Office.Entities#addresses:member'
    summary: 'Получает физические (почтовые) адреса, обнаруженные в сообщении электронной почты или встрече.'
    name: addresses
    fullName: addresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addresses: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
          ```
  - uid: 'outlook!Office.Entities#contacts:member'
    summary: 'Получает контакты, обнаруженные в адресе электронной почты или встрече.'
    name: contacts
    fullName: contacts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contacts: Contact[];'
      return:
        type:
          - 'outlook!Office.Entities#contacts~0:complex'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var contacts = item.getEntitiesByType(Office.MailboxEnums.EntityType.Contact);
          ```
  - uid: 'outlook!Office.Entities#emailAddresses:member'
    summary: 'Получает адреса электронной почты, обнаруженные в сообщении электронной почты или встрече.'
    name: emailAddresses
    fullName: emailAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'emailAddresses: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var emailAddresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.EmailAddress);
          ```
  - uid: 'outlook!Office.Entities#meetingSuggestions:member'
    summary: 'Получает предложения о собраниях, обнаруженные в сообщении электронной почты.'
    name: meetingSuggestions
    fullName: meetingSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'meetingSuggestions: MeetingSuggestion[];'
      return:
        type:
          - 'outlook!Office.Entities#meetingSuggestions~0:complex'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var meetingSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.MeetingSuggestion);
          ```
  - uid: 'outlook!Office.Entities#phoneNumbers:member'
    summary: 'Получает номера телефона, обнаруженные в сообщении электронной почты или встрече.'
    name: phoneNumbers
    fullName: phoneNumbers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'phoneNumbers: PhoneNumber[];'
      return:
        type:
          - 'outlook!Office.Entities#phoneNumbers~0:complex'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var phoneNumbers = item.getEntitiesByType(Office.MailboxEnums.EntityType.PhoneNumber);
          ```
  - uid: 'outlook!Office.Entities#taskSuggestions:member'
    summary: 'Получает предложения задач, обнаруженные в сообщении электронной почты или встрече.'
    name: taskSuggestions
    fullName: taskSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'taskSuggestions: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var taskSuggestions = item.getEntitiesByType(Office.MailboxEnums.EntityType.TaskSuggestion);
          ```
  - uid: 'outlook!Office.Entities#urls:member'
    summary: 'Получает URL-адреса в Интернете, присутствующие в сообщении электронной почты или встрече.'
    name: urls
    fullName: urls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'urls: string[];'
      return:
        type:
          - 'string[]'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          var item = Office.context.mailbox.item;
          var urls = item.getEntitiesByType(Office.MailboxEnums.EntityType.Url);
          ```
references:
  - uid: 'outlook!Office.Entities#contacts~0:complex'
    name: 'Contact[]'
    fullName: 'Office.Contact[]'
    spec.typeScript:
      - uid: 'outlook!Office.Contact:interface'
        name: Contact
        fullName: Office.Contact
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.Entities#meetingSuggestions~0:complex'
    name: 'MeetingSuggestion[]'
    fullName: 'Office.MeetingSuggestion[]'
    spec.typeScript:
      - uid: 'outlook!Office.MeetingSuggestion:interface'
        name: MeetingSuggestion
        fullName: Office.MeetingSuggestion
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.Entities#phoneNumbers~0:complex'
    name: 'PhoneNumber[]'
    fullName: 'Office.PhoneNumber[]'
    spec.typeScript:
      - uid: 'outlook!Office.PhoneNumber:interface'
        name: PhoneNumber
        fullName: Office.PhoneNumber
      - name: '[]'
        fullName: '[]'