### YamlMime:UniversalReference
ms.openlocfilehash: 96c0ad9f60239cb1b0da0bd12a80409e10591542
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976644"
items:
- uid: onenote.OneNote.PageCollection
  summary: >-
    <span data-ttu-id="bd220-101">Представляет коллекцию страниц.</span><span class="sxs-lookup"><span data-stu-id="bd220-101">Represents a collection of pages.</span></span>


    <span data-ttu-id="bd220-102">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd220-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.PageCollection
  fullName: OneNote.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.PageCollection.context
  - onenote.OneNote.PageCollection.count
  - onenote.OneNote.PageCollection.getByTitle
  - onenote.OneNote.PageCollection.getItem
  - onenote.OneNote.PageCollection.getItemAt
  - onenote.OneNote.PageCollection.items
  - onenote.OneNote.PageCollection.load
  - onenote.OneNote.PageCollection.load_1
  - onenote.OneNote.PageCollection.load_2
  - onenote.OneNote.PageCollection.toJSON
  - onenote.OneNote.PageCollection.track
  - onenote.OneNote.PageCollection.untrack
- uid: onenote.OneNote.PageCollection.context
  summary: <span data-ttu-id="bd220-103">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="bd220-103">The request context associated with the object.</span></span> <span data-ttu-id="bd220-104">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="bd220-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.PageCollection.count
  summary: >-
    <span data-ttu-id="bd220-p102">Возвращает количество страниц в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="bd220-p102">Returns the number of pages in the collection. Read-only.</span></span>


    <span data-ttu-id="bd220-107">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd220-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.PageCollection.getByTitle
  summary: >-
    <span data-ttu-id="bd220-108">Возвращает коллекцию объектов Page с указанным названием.</span><span class="sxs-lookup"><span data-stu-id="bd220-108">Gets the collection of pages with the specified title.</span></span>


    <span data-ttu-id="bd220-109">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd220-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getByTitle(title)
  fullName: getByTitle(title)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTitle(title: string): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd220-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd220-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get all the pages in the current section.\n    var allPages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.\n    allPages.load(\"id\"); \n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Get the sections with the specified name.\n            var todoPages = allPages.getByTitle(\"Todo list\");\n\n            // Queue a command to load the section. \n            // For best performance, request specific properties.\n            todoPages.load(\"id,title\"); \n\n            return context.sync()\n                .then(function () {\n\n                    // Iterate through the collection or access items individually by index.\n                    if (todoPages.items.length > 0) {\n                        console.log(\"Page title: \" + todoPages.items[0].title);\n                        console.log(\"Page ID: \" + todoPages.items[0].id);\n                    }\n                });\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: title
      description: <span data-ttu-id="bd220-111">Заголовок страницы.</span><span class="sxs-lookup"><span data-stu-id="bd220-111">The title of the page.</span></span>
      type:
      - string
- uid: onenote.OneNote.PageCollection.getItem
  summary: >-
    <span data-ttu-id="bd220-p103">Возвращает объект Page по его идентификатору или индексу в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="bd220-p103">Gets a page by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="bd220-114">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd220-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="bd220-115">Идентификатор объекта Page или расположение индекса этого объекта в коллекции.</span><span class="sxs-lookup"><span data-stu-id="bd220-115">The ID of the page, or the index location of the page in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.PageCollection.getItemAt
  summary: >-
    <span data-ttu-id="bd220-116">Возвращает объект Page по его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="bd220-116">Gets a page on its position in the collection.</span></span>


    <span data-ttu-id="bd220-117">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd220-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="bd220-p104">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="bd220-p104">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.PageCollection.items
  summary: <span data-ttu-id="bd220-120">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="bd220-120">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Page[];'
    return:
      type:
      - OneNote.Page[]
- uid: onenote.OneNote.PageCollection.load
  summary: <span data-ttu-id="bd220-121">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="bd220-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd220-122">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="bd220-122">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="bd220-123">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="bd220-123">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="bd220-124">`load(option?: string | string[]): OneNote.PageCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bd220-124">`load(option?: string | string[]): OneNote.PageCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="bd220-125">`load(option?: { select?: string; expand?: string; }): OneNote.PageCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bd220-125">`load(option?: { select?: string; expand?: string; }): OneNote.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="bd220-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="bd220-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="bd220-127">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="bd220-127">It is similar to the preceding signature.</span></span> <span data-ttu-id="bd220-128">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="bd220-128">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bd220-129">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="bd220-129">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bd220-130">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="bd220-130">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
- uid: onenote.OneNote.PageCollection.load_1
  summary: <span data-ttu-id="bd220-131">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="bd220-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd220-132">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="bd220-132">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd220-133\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd220-133\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n    \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n    \n    // Queue a command to load the id and title for each page.            \n    pages.load('id,title');\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Display the properties.\n            $.each(pages.items, function(index, page) {\n                console.log(page.title);\n                console.log(page.id);\n            });\n        }); \n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="bd220-134">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bd220-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.PageCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: onenote.OneNote.PageCollection.toJSON
  summary: <span data-ttu-id="bd220-135">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="bd220-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="bd220-136">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `OneNote.PageCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `OneNote.Interfaces.PageCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="bd220-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `OneNote.PageCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.PageCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.PageCollectionData
      description: ''
- uid: onenote.OneNote.PageCollection.track
  summary: <span data-ttu-id="bd220-137">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="bd220-137">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="bd220-138">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="bd220-138">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="bd220-139">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="bd220-139">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
- uid: onenote.OneNote.PageCollection.untrack
  summary: <span data-ttu-id="bd220-140">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="bd220-140">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="bd220-141">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="bd220-141">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="bd220-142">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="bd220-142">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="bd220-143">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="bd220-143">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
