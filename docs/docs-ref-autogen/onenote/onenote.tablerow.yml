### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.TableRow
    summary: |-
      <span data-ttu-id="2d20c-101">Представляет строку в таблице.</span><span class="sxs-lookup"><span data-stu-id="2d20c-101">Represents a row in a table.</span></span>

      <span data-ttu-id="2d20c-102">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.TableRow
    fullName: OneNote.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.TableRow.cellCount
      - onenote.OneNote.TableRow.cells
      - onenote.OneNote.TableRow.clear
      - onenote.OneNote.TableRow.context
      - onenote.OneNote.TableRow.id
      - onenote.OneNote.TableRow.insertRowAsSibling
      - onenote.OneNote.TableRow.insertRowAsSibling_1
      - onenote.OneNote.TableRow.load
      - onenote.OneNote.TableRow.load_1
      - onenote.OneNote.TableRow.load_2
      - onenote.OneNote.TableRow.parentTable
      - onenote.OneNote.TableRow.rowIndex
      - onenote.OneNote.TableRow.setShadingColor
      - onenote.OneNote.TableRow.toJSON
      - onenote.OneNote.TableRow.track
      - onenote.OneNote.TableRow.untrack
  - uid: onenote.OneNote.TableRow.cellCount
    summary: |-
      <span data-ttu-id="2d20c-103">Получает количество ячеек в строке.</span><span class="sxs-lookup"><span data-stu-id="2d20c-103">Gets the number of cells in the row.</span></span> <span data-ttu-id="2d20c-104">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d20c-104">Read-only.</span></span>

      <span data-ttu-id="2d20c-105">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.TableRow.cells
    summary: |-
      <span data-ttu-id="2d20c-106">Получает ячейки в строке.</span><span class="sxs-lookup"><span data-stu-id="2d20c-106">Gets the cells in the row.</span></span> <span data-ttu-id="2d20c-107">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d20c-107">Read-only.</span></span>

      <span data-ttu-id="2d20c-108">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: cells
    fullName: cells
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cells: OneNote.TableCellCollection;'
      return:
        type:
          - onenote.OneNote.TableCellCollection
  - uid: onenote.OneNote.TableRow.clear
    summary: |-
      <span data-ttu-id="2d20c-109">Очищает содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-109">Clears the contents of the row.</span></span>

      <span data-ttu-id="2d20c-110">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: onenote.OneNote.TableRow.context
    summary: '<span data-ttu-id="2d20c-111">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="2d20c-111">The request context associated with the object.</span></span> <span data-ttu-id="2d20c-112">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="2d20c-112">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.TableRow.id
    summary: |-
      <span data-ttu-id="2d20c-113">Получает идентификатор строки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-113">Gets the ID of the row.</span></span> <span data-ttu-id="2d20c-114">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d20c-114">Read-only.</span></span>

      <span data-ttu-id="2d20c-115">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.TableRow.insertRowAsSibling
    summary: |-
      <span data-ttu-id="2d20c-116">Вставляет строку перед текущей строкой или после нее.</span><span class="sxs-lookup"><span data-stu-id="2d20c-116">Inserts a row before or after the current row.</span></span>

      <span data-ttu-id="2d20c-117">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRowAsSibling(insertLocation, values)'
    fullName: 'insertRowAsSibling(insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2d20c-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="2d20c-118">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          
                          // Run the queued commands
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              rows.items[1].insertRowAsSibling("Before", ["cell0", "cell1"]);
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: '<span data-ttu-id="2d20c-119">Определяет, куда необходимо вставить новые строки относительно текущей строки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-119">Where the new rows should be inserted relative to the current row.</span></span>'
          type:
            - onenote.OneNote.InsertLocation
        - id: values
          description: '<span data-ttu-id="2d20c-120">Строки, которые необходимо вставить в новую строку, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="2d20c-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="2d20c-121">Ячеек в этом параметре не должно быть больше, чем в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="2d20c-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="2d20c-122">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="2d20c-122">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.TableRow.insertRowAsSibling_1
    summary: |-
      <span data-ttu-id="2d20c-123">Вставляет строку перед текущей строкой или после нее.</span><span class="sxs-lookup"><span data-stu-id="2d20c-123">Inserts a row before or after the current row.</span></span>

      <span data-ttu-id="2d20c-124">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-124">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRowAsSibling(insertLocationString, values)'
    fullName: 'insertRowAsSibling(insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocationString: "Before" | "After", values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: insertLocationString
          description: '<span data-ttu-id="2d20c-125">Определяет, куда необходимо вставить новые строки относительно текущей строки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-125">Where the new rows should be inserted relative to the current row.</span></span>'
          type:
            - '"Before" | "After"'
        - id: values
          description: '<span data-ttu-id="2d20c-126">Строки, которые необходимо вставить в новую строку, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="2d20c-126">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="2d20c-127">Ячеек в этом параметре не должно быть больше, чем в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="2d20c-127">Must not have more cells than in the current row.</span></span> <span data-ttu-id="2d20c-128">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="2d20c-128">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.TableRow.load
    summary: <span data-ttu-id="2d20c-129">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2d20c-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d20c-130">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="2d20c-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="2d20c-131">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="2d20c-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2d20c-132">`load(option?: string | string[]): OneNote.TableRow`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-132">`load(option?: string | string[]): OneNote.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2d20c-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2d20c-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="2d20c-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="2d20c-135">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="2d20c-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="2d20c-136">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="2d20c-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2d20c-137">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="2d20c-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2d20c-138">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="2d20c-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableRowLoadOptions): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.TableRowLoadOptions
  - uid: onenote.OneNote.TableRow.load_1
    summary: <span data-ttu-id="2d20c-139">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2d20c-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d20c-140">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2d20c-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2d20c-141">Примеры</span><span class="sxs-lookup"><span data-stu-id="2d20c-141">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each table row, log cell count and row index.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                                  console.log("Row " + i + " Cell Count: " + rows.items[i].cellCount);
                                  console.log("Row " + i + " Row Index: " + rows.items[i].rowIndex);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load parentTable and cells of each row in the table.
                          ctx.load(table, "rows/parentTable, rows/cells");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each row, log parentTable and cells
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Parent Table Id: " + rows.items[i].parentTable.id);
                                  var cells = rows.items[i].cells;
                                  for (var j = 0 ; j < cells.items.length; j++) {
                                      console.log("Row " + i + " Cell " + j + " Id: " + cells.items[j].id);
                                  }
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="2d20c-142">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.TableRow.load_2
    summary: <span data-ttu-id="2d20c-143">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2d20c-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d20c-144">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2d20c-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2d20c-145">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2d20c-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.TableRow.parentTable
    summary: |-
      <span data-ttu-id="2d20c-146">Получает родительскую таблицу.</span><span class="sxs-lookup"><span data-stu-id="2d20c-146">Gets the parent table.</span></span> <span data-ttu-id="2d20c-147">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d20c-147">Read-only.</span></span>

      <span data-ttu-id="2d20c-148">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: OneNote.Table;'
      return:
        type:
          - OneNote.Table
  - uid: onenote.OneNote.TableRow.rowIndex
    summary: |-
      <span data-ttu-id="2d20c-149">Получает индекс строки в родительской таблице.</span><span class="sxs-lookup"><span data-stu-id="2d20c-149">Gets the index of the row in its parent table.</span></span> <span data-ttu-id="2d20c-150">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d20c-150">Read-only.</span></span>

      <span data-ttu-id="2d20c-151">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-151">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowIndex
    fullName: rowIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.TableRow.setShadingColor
    summary: |-
      <span data-ttu-id="2d20c-152">Задает цвет заливки всех ячеек в строке.</span><span class="sxs-lookup"><span data-stu-id="2d20c-152">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id="2d20c-153">Код цвета, который нужно задать ячейкам.</span><span class="sxs-lookup"><span data-stu-id="2d20c-153">The color code to set the cells to.</span></span>

      <span data-ttu-id="2d20c-154">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2d20c-154">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: onenote.OneNote.TableRow.toJSON
    summary: '<span data-ttu-id="2d20c-155">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2d20c-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2d20c-156">.</span><span class="sxs-lookup"><span data-stu-id="2d20c-156"></span></span> <span data-ttu-id="2d20c-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2d20c-157"></span></span><!-- --><span data-ttu-id="2d20c-158">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект OneNote. TableRow является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="2d20c-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="2d20c-159">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="2d20c-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableRowData;'
      return:
        type:
          - OneNote.Interfaces.TableRowData
        description: ''
  - uid: onenote.OneNote.TableRow.track
    summary: '<span data-ttu-id="2d20c-160">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="2d20c-160">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="2d20c-161">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="2d20c-161">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="2d20c-162">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="2d20c-162">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
  - uid: onenote.OneNote.TableRow.untrack
    summary: '<span data-ttu-id="2d20c-163">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="2d20c-163">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="2d20c-164">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="2d20c-164">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="2d20c-165">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="2d20c-165">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="2d20c-166">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="2d20c-166">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''