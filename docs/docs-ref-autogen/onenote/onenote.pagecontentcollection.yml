### YamlMime:UniversalReference
ms.openlocfilehash: ece84b8260bf420d1f75a1993cd126e1be4f4ace
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/09/2018
ms.locfileid: "26230686"
items:
- uid: onenote.OneNote.PageContentCollection
  summary: >-
    <span data-ttu-id="53784-101">Представляет содержимое страницы в виде коллекции объектов PageContent.</span><span class="sxs-lookup"><span data-stu-id="53784-101">Represents the contents of a page, as a collection of PageContent objects.</span></span>


    <span data-ttu-id="53784-102">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="53784-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.PageContentCollection
  fullName: OneNote.PageContentCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.PageContentCollection.count
  - onenote.OneNote.PageContentCollection.getItem
  - onenote.OneNote.PageContentCollection.getItemAt
  - onenote.OneNote.PageContentCollection.items
  - onenote.OneNote.PageContentCollection.load
  - onenote.OneNote.PageContentCollection.toJSON
  - onenote.OneNote.PageContentCollection.track
  - onenote.OneNote.PageContentCollection.untrack
- uid: onenote.OneNote.PageContentCollection.count
  summary: >-
    <span data-ttu-id="53784-p101">Возвращает количество единиц содержимого страницы в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="53784-p101">Returns the number of page contents in the collection. Read-only.</span></span>


    <span data-ttu-id="53784-105">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="53784-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.PageContentCollection.getItem
  summary: >-
    <span data-ttu-id="53784-p102">Получает объект PageContent по его идентификатору или индексу в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="53784-p102">Gets a PageContent object by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="53784-108">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="53784-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.PageContent;'
    return:
      type:
      - onenote.OneNote.PageContent
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="53784-109">Идентификатор объекта PageContent или расположение индекса объекта PageContent в коллекции.</span><span class="sxs-lookup"><span data-stu-id="53784-109">The ID of the PageContent object, or the index location of the PageContent object in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.PageContentCollection.getItemAt
  summary: >-
    <span data-ttu-id="53784-110">Получает объект PageContent по его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="53784-110">Gets a page content on its position in the collection.</span></span>


    <span data-ttu-id="53784-111">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="53784-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.PageContent;'
    return:
      type:
      - onenote.OneNote.PageContent
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"53784-112\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-112\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    var page = context.application.getActivePage();\n    var pageContents = page.contents;\n    var firstPageContent = pageContents.getItemAt(0);\n    firstPageContent.load('type');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"The first page content item is of type: \" + firstPageContent.type);\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="53784-p103">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="53784-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.PageContentCollection.items
  summary: <span data-ttu-id="53784-115">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="53784-115">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.PageContent[];'
    return:
      type:
      - OneNote.PageContent[]
- uid: onenote.OneNote.PageContentCollection.load
  summary: <span data-ttu-id="53784-116">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="53784-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="53784-117">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="53784-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"53784-118\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-118\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"53784-119\">`load(option?: { select?: string; expand?: string; }): OneNote.PageContentCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-119\">`load(option?: { select?: string; expand?: string; }): OneNote.PageContentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"53784-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageContentCollection`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageContentCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"53784-121\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-121\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"53784-122\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-122\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"53784-123\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-123\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"53784-124\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-124\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"53784-125\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"53784-125\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Queue a command to load the type of each pageContent.\n    pageContents.load(\"type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            $.each(pageContents.items, function(index, pageContent) {\n                console.log(\"PageContent type: \" + pageContent.type);\n            });\n        });\n})                \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n   var page = context.application.getActivePage();\n   var pageContents = page.contents;\n   pageContents.load('type');\n   var outlines = ;\n   return context.sync()\n       .then(function () {      \n              $.each(pageContents.items, function (index, pageContent) {\n                     console.log(pageContent.type);\n                     if (pageContent.type === 'Outline') {\n                           outlines.push(pageContent);\n                     }\n              });\n              $.each(outlines, function (index, outline) {\n                     outline.load(\"id,paragraphs,paragraphs/type\");\n              });\n              return context.sync();\n       })\n       .then(function () {\n              $.each(outlines, function (index, outline) {\n                     console.log(\"An outline was found with id : \" + outline.id);\n              });\n              return Promise.resolve(outlines);\n       });\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="53784-126">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="53784-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.PageContentCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.PageContentCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.PageContentCollectionData
      description: ''
- uid: onenote.OneNote.PageContentCollection.track
  summary: <span data-ttu-id="53784-127">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="53784-127">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="53784-128">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="53784-128">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="53784-129">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="53784-129">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
- uid: onenote.OneNote.PageContentCollection.untrack
  summary: <span data-ttu-id="53784-130">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="53784-130">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="53784-131">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="53784-131">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="53784-132">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="53784-132">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="53784-133">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="53784-133">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
