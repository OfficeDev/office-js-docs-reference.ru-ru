### YamlMime:UniversalReference
ms.openlocfilehash: e61e2873d8762eefa14da7dc7952afe07b7aff9b
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/17/2018
ms.locfileid: "25584262"
items:
- uid: onenote.OneNote.Notebook
  summary: >-
    <span data-ttu-id="69b58-p101">Представляет записную книжку OneNote. Записные книжки содержат группы разделов и разделы.</span><span class="sxs-lookup"><span data-stu-id="69b58-p101">Represents a OneNote notebook. Notebooks contain section groups and sections.</span></span>


    <span data-ttu-id="69b58-103">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Notebook
  fullName: onenote.OneNote.Notebook
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Notebook.addSection
  - onenote.OneNote.Notebook.addSectionGroup
  - onenote.OneNote.Notebook.baseUrl
  - onenote.OneNote.Notebook.clientUrl
  - onenote.OneNote.Notebook.getRestApiId
  - onenote.OneNote.Notebook.id
  - onenote.OneNote.Notebook.isVirtual
  - onenote.OneNote.Notebook.load
  - onenote.OneNote.Notebook.name
  - onenote.OneNote.Notebook.sectionGroups
  - onenote.OneNote.Notebook.sections
  - onenote.OneNote.Notebook.toJSON
  - onenote.OneNote.Notebook.track
  - onenote.OneNote.Notebook.untrack
- uid: onenote.OneNote.Notebook.addSection
  summary: >-
    <span data-ttu-id="69b58-104">Добавляет новый раздел в конец записной книжки.</span><span class="sxs-lookup"><span data-stu-id="69b58-104">Adds a new section to the end of the notebook.</span></span>


    <span data-ttu-id="69b58-105">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addSection(name)
  fullName: onenote.OneNote.Notebook.addSection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addSection(name: string): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69b58-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-106\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Gets the active notebook.\n    var notebook = context.application.getActiveNotebook();\n\n    // Queue a command to add a new section. \n    var section = notebook.addSection(\"Sample section\");\n    \n    // Queue a command to load the new section. This example reads the name property later.\n    section.load(\"name\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            console.log(\"New section name is \" + section.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: name
      description: <span data-ttu-id="69b58-107">Имя нового раздела.</span><span class="sxs-lookup"><span data-stu-id="69b58-107">The name of the new section.</span></span>
      type:
      - string
- uid: onenote.OneNote.Notebook.addSectionGroup
  summary: >-
    <span data-ttu-id="69b58-108">Добавляет новую группу разделов в конец записной книжки.</span><span class="sxs-lookup"><span data-stu-id="69b58-108">Adds a new section group to the end of the notebook.</span></span>


    <span data-ttu-id="69b58-109">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addSectionGroup(name)
  fullName: onenote.OneNote.Notebook.addSectionGroup
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addSectionGroup(name: string): OneNote.SectionGroup;'
    return:
      type:
      - onenote.OneNote.SectionGroup
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69b58-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Gets the active notebook.\n    var notebook = context.application.getActiveNotebook();\n\n    // Queue a command to add a new section group.\n    var sectionGroup = notebook.addSectionGroup(\"Sample section group\");\n\n    // Queue a command to load the new section group.\n    sectionGroup.load();\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            console.log(\"New section group name is \" + sectionGroup.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: name
      description: <span data-ttu-id="69b58-111">Имя нового раздела.</span><span class="sxs-lookup"><span data-stu-id="69b58-111">The name of the new section.</span></span>
      type:
      - string
- uid: onenote.OneNote.Notebook.baseUrl
  summary: >-
    <span data-ttu-id="69b58-112">URL-адрес сайта, что находится в этом записной книжки.</span><span class="sxs-lookup"><span data-stu-id="69b58-112">The url of the site that this notebook is located.</span></span> <span data-ttu-id="69b58-113">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="69b58-113">Read only</span></span>


    <span data-ttu-id="69b58-114">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: baseUrl
  fullName: onenote.OneNote.Notebook.baseUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly baseUrl: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Notebook.clientUrl
  summary: >-
    <span data-ttu-id="69b58-115">URL-адрес записной книжки для клиента.</span><span class="sxs-lookup"><span data-stu-id="69b58-115">The client url of the notebook.</span></span> <span data-ttu-id="69b58-116">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="69b58-116">Read only</span></span>


    <span data-ttu-id="69b58-117">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clientUrl
  fullName: onenote.OneNote.Notebook.clientUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly clientUrl: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Notebook.getRestApiId
  summary: >-
    <span data-ttu-id="69b58-118">Получает идентификатор API REST</span><span class="sxs-lookup"><span data-stu-id="69b58-118">Gets the REST API ID.</span></span>


    <span data-ttu-id="69b58-119">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-119">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getRestApiId()
  fullName: onenote.OneNote.Notebook.getRestApiId
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69b58-120\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-120\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx){\n    // Get the current notebook.         \n    var notebook = ctx.application.getActiveNotebook();\n    var restApiId = notebook.getRestApiId();\n\n    return ctx.sync().\n        then(function(){\n            console.log(\"The REST API ID is \" + restApiId.value);\n            // Note that the REST API ID isn't all you need to interact with the OneNote REST API. \n            // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.\n            // For SharePoint notebooks, the notebook baseUrl should be used to talk to the OneNote REST API\n            // according to the OneNote Development Blog.\n            // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/\n        });\n});\n```"
- uid: onenote.OneNote.Notebook.id
  summary: >-
    <span data-ttu-id="69b58-p104">Получает идентификатор записной книжки. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="69b58-p104">Gets the ID of the notebook. Read-only.</span></span>


    <span data-ttu-id="69b58-123">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: onenote.OneNote.Notebook.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Notebook.isVirtual
  summary: >-
    <span data-ttu-id="69b58-124">Значение true, если не происходит пользователем (то есть «перемещенными разделами»).</span><span class="sxs-lookup"><span data-stu-id="69b58-124">True if the Notebook is not created by the user (i.e. 'Misplaced Sections').</span></span> <span data-ttu-id="69b58-125">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="69b58-125">Read only</span></span>


    <span data-ttu-id="69b58-126">\[[Набор API-Интерфейсов: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-126">\[ [API set: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: isVirtual
  fullName: onenote.OneNote.Notebook.isVirtual
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isVirtual: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Notebook.load
  summary: <span data-ttu-id="69b58-127">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="69b58-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="69b58-128">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="69b58-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"69b58-129\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-129\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"69b58-130\">`load(option?: { select?: string; expand?: string; }): OneNote.Notebook`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-130\">`load(option?: { select?: string; expand?: string; }): OneNote.Notebook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"69b58-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Notebook`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Notebook` - Only available on collection types.</span></span> <span data-ttu-id=\"69b58-132\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-132\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"69b58-133\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-133\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"69b58-134\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-134\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"69b58-135\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-135\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"69b58-136\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"69b58-136\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('baseUrl');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Base url: \" + notebook.baseUrl);\n            // This is only required for SharePoint notebooks, and will be null for OneDrive notebooks.\n            // This baseUrl should be used to talk to OneNote REST APIs according to the OneNote Development Blog.\n            // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Notebook ID: \" + notebook.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Notebook name: \" + notebook.name);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Get the section groups in the notebook. \n    var sectionGroups = context.application.getActiveNotebook().sectionGroups;\n\n    // Queue a command to load the sectionGroups. \n    sectionGroups.load(\"name\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            $.each(sectionGroups.items, function(index, sectionGroup) {\n                console.log(\"Section group name: \" + sectionGroup.name);\n            });\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Gets the active notebook.\n    var notebook = context.application.getActiveNotebook();\n    \n    // Queue a command to get immediate child sections of the notebook. \n    var childSections = notebook.sections;\n\n    // Queue a command to load the childSections. \n    context.load(childSections);\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            $.each(childSections.items, function(index, childSection) {\n                console.log(\"Immediate child section name: \" + childSection.name);\n            });            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});   \n```"
  name: load(option)
  fullName: onenote.OneNote.Notebook.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="69b58-137">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="69b58-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Notebook.name
  summary: >-
    <span data-ttu-id="69b58-p108">Получает имя записной книжки. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="69b58-p108">Gets the name of the notebook. Read-only.</span></span>


    <span data-ttu-id="69b58-140">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-140">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: name
  fullName: onenote.OneNote.Notebook.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Notebook.sectionGroups
  summary: >-
    <span data-ttu-id="69b58-141">Группы разделов в записной книжке.</span><span class="sxs-lookup"><span data-stu-id="69b58-141">The section groups in the notebook.</span></span> <span data-ttu-id="69b58-142">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="69b58-142">Read only</span></span>


    <span data-ttu-id="69b58-143">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-143">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: sectionGroups
  fullName: onenote.OneNote.Notebook.sectionGroups
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sectionGroups: OneNote.SectionGroupCollection;'
    return:
      type:
      - onenote.OneNote.SectionGroupCollection
- uid: onenote.OneNote.Notebook.sections
  summary: >-
    <span data-ttu-id="69b58-144">Разделы записной книжки.</span><span class="sxs-lookup"><span data-stu-id="69b58-144">The the sections of the notebook.</span></span> <span data-ttu-id="69b58-145">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="69b58-145">Read only</span></span>


    <span data-ttu-id="69b58-146">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69b58-146">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: sections
  fullName: onenote.OneNote.Notebook.sections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sections: OneNote.SectionCollection;'
    return:
      type:
      - onenote.OneNote.SectionCollection
- uid: onenote.OneNote.Notebook.toJSON
  name: toJSON()
  fullName: onenote.OneNote.Notebook.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.NotebookData;'
    return:
      type:
      - onenote.OneNote.Interfaces.NotebookData
      description: ''
- uid: onenote.OneNote.Notebook.track
  summary: <span data-ttu-id="69b58-147">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="69b58-147">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="69b58-148">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="69b58-148">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="69b58-149">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="69b58-149">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: onenote.OneNote.Notebook.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
- uid: onenote.OneNote.Notebook.untrack
  summary: <span data-ttu-id="69b58-150">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="69b58-150">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="69b58-151">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="69b58-151">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="69b58-152">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="69b58-152">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="69b58-153">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="69b58-153">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: onenote.OneNote.Notebook.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: ''
