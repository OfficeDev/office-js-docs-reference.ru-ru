### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Outline
    summary: |-
      <span data-ttu-id="60443-101">Представляет контейнер для объектов Paragraph.</span><span class="sxs-lookup"><span data-stu-id="60443-101">Represents a container for Paragraph objects.</span></span>

      <span data-ttu-id="60443-102">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Outline
    fullName: OneNote.Outline
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.Outline.appendHtml
      - onenote.OneNote.Outline.appendImage
      - onenote.OneNote.Outline.appendRichText
      - onenote.OneNote.Outline.appendTable
      - onenote.OneNote.Outline.context
      - onenote.OneNote.Outline.id
      - onenote.OneNote.Outline.isTitle
      - onenote.OneNote.Outline.load
      - onenote.OneNote.Outline.load_1
      - onenote.OneNote.Outline.load_2
      - onenote.OneNote.Outline.pageContent
      - onenote.OneNote.Outline.paragraphs
      - onenote.OneNote.Outline.toJSON
      - onenote.OneNote.Outline.track
      - onenote.OneNote.Outline.untrack
  - uid: onenote.OneNote.Outline.appendHtml
    summary: |-
      <span data-ttu-id="60443-103">Добавляет указанный HTML в нижнюю часть объекта Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-103">Adds the specified HTML to the bottom of the Outline.</span></span>

      <span data-ttu-id="60443-104">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-104">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendHtml(html)
    fullName: appendHtml(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendHtml(html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="60443-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="60443-105">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline")
                      {
                          // First item is an outline.
                          outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendHtml("<p>new paragraph</p>");

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="60443-106">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="60443-106">The HTML string to append.</span></span> <span data-ttu-id="60443-107">Обратитесь к разделу [supportED HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) для API JavaScript для надстроек OneNote.</span><span class="sxs-lookup"><span data-stu-id="60443-107">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>'
          type:
            - string
  - uid: onenote.OneNote.Outline.appendImage
    summary: |-
      <span data-ttu-id="60443-108">Добавляет указанное изображение в нижнюю часть объекта Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-108">Adds the specified image to the bottom of the Outline.</span></span>

      <span data-ttu-id="60443-109">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'appendImage(base64EncodedImage, width, height)'
    fullName: 'appendImage(base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendImage(base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - OneNote.Image
        description: ''
      parameters:
        - id: base64EncodedImage
          description: '<span data-ttu-id="60443-110">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="60443-110">HTML string to append.</span></span>'
          type:
            - string
        - id: width
          description: '<span data-ttu-id="60443-111">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="60443-111">Optional.</span></span> <span data-ttu-id="60443-112">Ширина в точках.</span><span class="sxs-lookup"><span data-stu-id="60443-112">Width in the unit of Points.</span></span> <span data-ttu-id="60443-113">Значение по умолчанию — null, ширина изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="60443-113">The default value is null and image width will be respected.</span></span>'
          type:
            - number
        - id: height
          description: '<span data-ttu-id="60443-114">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="60443-114">Optional.</span></span> <span data-ttu-id="60443-115">Высота в точках.</span><span class="sxs-lookup"><span data-stu-id="60443-115">Height in the unit of Points.</span></span> <span data-ttu-id="60443-116">Значение по умолчанию — null, высота изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="60443-116">The default value is null and image height will be respected.</span></span>'
          type:
            - number
  - uid: onenote.OneNote.Outline.appendRichText
    summary: |-
      <span data-ttu-id="60443-117">Добавляет указанный текст в нижнюю часть объекта Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-117">Adds the specified text to the bottom of the Outline.</span></span>

      <span data-ttu-id="60443-118">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRichText(paragraphText)
    fullName: appendRichText(paragraphText)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRichText(paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="60443-119">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="60443-119">HTML string to append.</span></span>'
          type:
            - string
  - uid: onenote.OneNote.Outline.appendTable
    summary: |-
      <span data-ttu-id="60443-120">Добавляет таблицу с указанным количеством строк и столбцов в нижнюю часть объекта Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-120">Adds a table with the specified number of rows and columns to the bottom of the outline.</span></span>

      <span data-ttu-id="60443-121">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'appendTable(rowCount, columnCount, values)'
    fullName: 'appendTable(rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendTable(rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="60443-122">Примеры</span><span class="sxs-lookup"><span data-stu-id="60443-122">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline") {
                          // First item is an outline.
                          var outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendTable(2, 2, [[1, 2],[3, 4]]);

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowCount
          description: <span data-ttu-id="60443-123">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="60443-123">Required.</span></span> <span data-ttu-id="60443-124">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="60443-124">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="60443-125">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="60443-125">Required.</span></span> <span data-ttu-id="60443-126">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="60443-126">The number of columns in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="60443-127">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="60443-127">Optional 2D array.</span></span> <span data-ttu-id="60443-128">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="60443-128">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Outline.context
    summary: '<span data-ttu-id="60443-129">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="60443-129">The request context associated with the object.</span></span> <span data-ttu-id="60443-130">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="60443-130">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.Outline.id
    summary: |-
      <span data-ttu-id="60443-131">Получает идентификатор объекта Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-131">Gets the ID of the Outline object.</span></span> <span data-ttu-id="60443-132">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="60443-132">Read-only.</span></span>

      <span data-ttu-id="60443-133">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Outline.isTitle
    summary: |-
      <span data-ttu-id="60443-134">Проверьте, является ли структура названием "структура".</span><span class="sxs-lookup"><span data-stu-id="60443-134">Check if the outline is title outline.</span></span>

      <span data-ttu-id="60443-135">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: isTitle()
    fullName: isTitle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isTitle(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
  - uid: onenote.OneNote.Outline.load
    summary: <span data-ttu-id="60443-136">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="60443-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60443-137">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="60443-137">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="60443-138">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="60443-138">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="60443-139">`load(option?: string | string[]): OneNote.Outline`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="60443-139">`load(option?: string | string[]): OneNote.Outline` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="60443-140">`load(option?: { select?: string; expand?: string; }): OneNote.Outline`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="60443-140">`load(option?: { select?: string; expand?: string; }): OneNote.Outline` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="60443-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Outline`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="60443-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Outline` - Only available on collection types.</span></span> <span data-ttu-id="60443-142">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="60443-142">It is similar to the preceding signature.</span></span> <span data-ttu-id="60443-143">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="60443-143">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="60443-144">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="60443-144">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="60443-145">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="60443-145">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.OutlineLoadOptions): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.OutlineLoadOptions
  - uid: onenote.OneNote.Outline.load_1
    summary: <span data-ttu-id="60443-146">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="60443-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60443-147">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="60443-147">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="60443-148">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="60443-148">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Outline.load_2
    summary: <span data-ttu-id="60443-149">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="60443-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60443-150">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="60443-150">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="60443-151">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="60443-151">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Outline.pageContent
    summary: |-
      <span data-ttu-id="60443-152">Получает объект PageContent, содержащий объект Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-152">Gets the PageContent object that contains the Outline.</span></span> <span data-ttu-id="60443-153">Этот объект определяет положение объекта Outline на странице.</span><span class="sxs-lookup"><span data-stu-id="60443-153">This object defines the position of the Outline on the page.</span></span> <span data-ttu-id="60443-154">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="60443-154">Read-only.</span></span>

      <span data-ttu-id="60443-155">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-155">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: pageContent
    fullName: pageContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageContent: OneNote.PageContent;'
      return:
        type:
          - onenote.OneNote.PageContent
  - uid: onenote.OneNote.Outline.paragraphs
    summary: |-
      <span data-ttu-id="60443-156">Получает коллекцию объектов Paragraph в объекте Outline.</span><span class="sxs-lookup"><span data-stu-id="60443-156">Gets the collection of Paragraph objects in the Outline.</span></span> <span data-ttu-id="60443-157">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="60443-157">Read-only.</span></span>

      <span data-ttu-id="60443-158">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60443-158">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - onenote.OneNote.ParagraphCollection
  - uid: onenote.OneNote.Outline.toJSON
    summary: '<span data-ttu-id="60443-159">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="60443-159">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="60443-160">.</span><span class="sxs-lookup"><span data-stu-id="60443-160"></span></span> <span data-ttu-id="60443-161">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="60443-161"></span></span><!-- --><span data-ttu-id="60443-162">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В отличие от исходного объекта OneNote. Структура — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный как`OneNote.Interfaces.OutlineData`</span><span class="sxs-lookup"><span data-stu-id="60443-162">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Outline object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.OutlineData`</span></span><!-- --><span data-ttu-id="60443-163">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="60443-163">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.OutlineData;'
      return:
        type:
          - onenote.OneNote.Interfaces.OutlineData
        description: ''
  - uid: onenote.OneNote.Outline.track
    summary: '<span data-ttu-id="60443-164">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="60443-164">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="60443-165">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="60443-165">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="60443-166">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="60443-166">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''
  - uid: onenote.OneNote.Outline.untrack
    summary: '<span data-ttu-id="60443-167">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="60443-167">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="60443-168">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="60443-168">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="60443-169">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="60443-169">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="60443-170">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="60443-170">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: ''