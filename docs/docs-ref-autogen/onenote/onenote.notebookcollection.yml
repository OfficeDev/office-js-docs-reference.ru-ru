### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.NotebookCollection
    summary: |-
      Представляет коллекцию записных книжек.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.NotebookCollection
    fullName: OneNote.NotebookCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.NotebookCollection.context
      - onenote.OneNote.NotebookCollection.count
      - onenote.OneNote.NotebookCollection.getByName
      - onenote.OneNote.NotebookCollection.getItem
      - onenote.OneNote.NotebookCollection.getItemAt
      - onenote.OneNote.NotebookCollection.items
      - onenote.OneNote.NotebookCollection.load
      - onenote.OneNote.NotebookCollection.load_1
      - onenote.OneNote.NotebookCollection.load_2
      - onenote.OneNote.NotebookCollection.toJSON
      - onenote.OneNote.NotebookCollection.track
      - onenote.OneNote.NotebookCollection.untrack
  - uid: onenote.OneNote.NotebookCollection.context
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.NotebookCollection.count
    summary: |-
      Возвращает количество записных книжек в коллекции. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.NotebookCollection.getByName
    summary: |-
      Получает коллекцию записных книжек с указанным именем, открытую в экземпляре приложения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getByName(name)
    fullName: getByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByName(name: string): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {

              // Get the notebooks that are open in the application instance and have the specified name.
              var notebooks = context.application.notebooks.getByName("Homework");

              // Queue a command to load the notebooks. 
              // For best performance, request specific properties.           
              notebooks.load("id,name");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Iterate through the collection or access items individually by index,
                      // for example: notebooks.items[0]
                      if (notebooks.items.length > 0) {
                          console.log("Notebook name: " + notebooks.items[0].name);
                          console.log("Notebook ID: " + notebooks.items[0].id);
                      }
                          
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: Имя записной книжки.
          type:
            - string
  - uid: onenote.OneNote.NotebookCollection.getItem
    summary: |-
      Получает записную книжку по ее идентификатору или индексу в коллекции. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: ''
      parameters:
        - id: index
          description: Идентификатор записной книжки или расположение индекса записной книжки в коллекции.
          type:
            - number | string
  - uid: onenote.OneNote.NotebookCollection.getItemAt
    summary: |-
      Получает записную книжку по ее позиции в коллекции.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: ''
      parameters:
        - id: index
          description: Значение индекса получаемого объекта. Используется нулевой индекс.
          type:
            - number
  - uid: onenote.OneNote.NotebookCollection.items
    summary: Получает загруженные дочерние элементы в этой коллекции.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: OneNote.Notebook[];'
      return:
        type:
          - 'OneNote.Notebook[]'
  - uid: onenote.OneNote.NotebookCollection.load
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): OneNote.NotebookCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.NotebookCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.NotebookCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
  - uid: onenote.OneNote.NotebookCollection.load_1
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {

              // Get the notebooks that are open in the application instance and have the specified name.
              var notebooks = context.application.notebooks.getByName("Homework");

              // Queue a command to load the notebooks. 
              // For best performance, request specific properties.           
              notebooks.load("id");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Iterate through the collection or access items individually by index, 
                      // for example: notebooks.items[0]
                      $.each(notebooks.items, function(index, notebook) {
                          notebook.addSection("Biology");
                          notebook.addSection("Spanish");
                          notebook.addSection("Computer Science");
                      });
                      
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.NotebookCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: onenote.OneNote.NotebookCollection.toJSON
    summary: 'ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `OneNote.NotebookCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.NotebookCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.NotebookCollectionData;'
      return:
        type:
          - onenote.OneNote.Interfaces.NotebookCollectionData
        description: ''
  - uid: onenote.OneNote.NotebookCollection.track
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращением для context.trackedObjects.add(thisObject). Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: ''
  - uid: onenote.OneNote.NotebookCollection.untrack
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращением для context.trackedObjects.remove(thisObject). Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед фактическим освобождением памяти потребуется вызвать метод context.sync().'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
        description: ''