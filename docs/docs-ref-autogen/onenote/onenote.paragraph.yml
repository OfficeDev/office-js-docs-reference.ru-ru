### YamlMime:UniversalReference
ms.openlocfilehash: a6d18d767f53dda53656e20bdc036ba61daf7f98
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/30/2018
ms.locfileid: "26995362"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="571c9-p101">Контейнер для контента, отображаемого на странице. Объект Paragraph может содержать контент с любым типом ParagraphType.</span><span class="sxs-lookup"><span data-stu-id="571c9-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="571c9-103">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="571c9-104">Добавьте NoteTag абзаца.</span><span class="sxs-lookup"><span data-stu-id="571c9-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="571c9-105">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="571c9-106">Тип NoteTag.</span><span class="sxs-lookup"><span data-stu-id="571c9-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="571c9-107">Состояние NoteTag.</span><span class="sxs-lookup"><span data-stu-id="571c9-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="571c9-108">Удаляет объект Paragraph.</span><span class="sxs-lookup"><span data-stu-id="571c9-108">Deletes the paragraph</span></span>


    <span data-ttu-id="571c9-109">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"571c9-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="571c9-111">Получите сведения о списке абзаца</span><span class="sxs-lookup"><span data-stu-id="571c9-111">Get list information of paragraph</span></span>


    <span data-ttu-id="571c9-112">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-112">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="571c9-p102">Получает идентификатор объекта Paragraph. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p102">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="571c9-115">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="571c9-p103">Получает объект Image в объекте Paragraph. Вызывает исключение, если ParagraphType не является Image. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p103">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="571c9-119">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-119">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="571c9-p104">Возвращает коллекцию рукописных фрагментов в объекте Paragraph. Вызывает исключение, если ParagraphType не является Ink. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p104">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="571c9-123">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="571c9-124">Вставляет указанный HTML-контент</span><span class="sxs-lookup"><span data-stu-id="571c9-124">Inserts the specified HTML content</span></span>


    <span data-ttu-id="571c9-125">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"571c9-126\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-126\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="571c9-127">Расположение нового содержимого относительно текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="571c9-127">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="571c9-128">Строка HTML, описывающая визуальное представление содержимого.</span><span class="sxs-lookup"><span data-stu-id="571c9-128">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="571c9-129">В разделе [Поддерживаемые HTML -код](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) JavaScript API надстройки OneNote.</span><span class="sxs-lookup"><span data-stu-id="571c9-129">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="571c9-130">Вставляет изображение в указанное место.</span><span class="sxs-lookup"><span data-stu-id="571c9-130">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="571c9-131">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"571c9-132\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="571c9-133">Расположение таблицы относительно текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="571c9-133">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="571c9-134">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="571c9-134">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="571c9-p106">Необязательный. Ширина в точках. Значение по умолчанию — null, ширина изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="571c9-p106">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="571c9-p107">Необязательный. Высота в точках. Значение по умолчанию — null, высота изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="571c9-p107">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="571c9-141">Вставляет текст абзаца в указанное место.</span><span class="sxs-lookup"><span data-stu-id="571c9-141">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="571c9-142">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"571c9-143\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="571c9-144">Расположение таблицы относительно текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="571c9-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="571c9-145">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="571c9-145">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="571c9-146">Добавляет таблицу с указанным количеством строк и столбцов перед текущим абзацем или после него.</span><span class="sxs-lookup"><span data-stu-id="571c9-146">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="571c9-147">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-147">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="571c9-148">Расположение таблицы относительно текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="571c9-148">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="571c9-149">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="571c9-149">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="571c9-150">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="571c9-150">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="571c9-151">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="571c9-151">Optional 2D array.</span></span> <span data-ttu-id="571c9-152">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="571c9-152">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="571c9-153">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="571c9-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="571c9-154">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="571c9-154">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"571c9-155\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-155\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"571c9-156\">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-156\">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"571c9-157\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-157\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id=\"571c9-158\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-158\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"571c9-159\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-159\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"571c9-160\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-160\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"571c9-161\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-161\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"571c9-162\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"571c9-162\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="571c9-163">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="571c9-163">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="571c9-p111">Получает объект Outline, содержащий объект Paragraph. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p111">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="571c9-166">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="571c9-167">Коллекция абзацев под этим абзацем.</span><span class="sxs-lookup"><span data-stu-id="571c9-167">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="571c9-168">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="571c9-168">Read only</span></span>


    <span data-ttu-id="571c9-169">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-169">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="571c9-p113">Получает родительский объект Paragraph. Возвращает исключение, если родительского объекта абзаца не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p113">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="571c9-173">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="571c9-p114">Получает родительский объект Paragraph. Возвращает значение null, если родительского объекта абзаца не существует. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p114">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="571c9-177">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-177">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="571c9-p115">Получает объект TableCell, содержащий объект Paragraph, если он существует. Если родительский объект не TableCell, возвращает ItemNotFound. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p115">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="571c9-181">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-181">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="571c9-p116">Получает объект TableCell, содержащий объект Paragraph, если он существует. Если родительский объект не TableCell, возвращает значение null. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p116">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="571c9-185">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-185">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="571c9-186">Получает объект RichText в объекте Paragraph.</span><span class="sxs-lookup"><span data-stu-id="571c9-186">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="571c9-187">Выдает исключение, если ParagraphType не является RichText.</span><span class="sxs-lookup"><span data-stu-id="571c9-187">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="571c9-188">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="571c9-188">Read-only</span></span>


    <span data-ttu-id="571c9-189">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-189">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="571c9-p118">Получает объект Table в объекте Paragraph. Вызывает исключение, если ParagraphType не является Table. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-p118">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="571c9-193">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-193">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="571c9-194">Отслеживание объектов для автоматической на основании соседних изменения в документе.</span><span class="sxs-lookup"><span data-stu-id="571c9-194">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="571c9-195">Этот вызов это сокращение для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="571c9-195">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="571c9-196">Если вы используете этот объект «.sync» вызовах и за пределами последовательного выполнение пакета «.run» и get «InvalidObjectPath» ошибка при установке свойства или вызова метода на объекте, необходимые для добавления объекта отслеживаемого объекта Сначала создается объект семейства сайтов.</span><span class="sxs-lookup"><span data-stu-id="571c9-196">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="571c9-197">Получает тип объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="571c9-197">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="571c9-198">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="571c9-198">Read-only.</span></span>


    <span data-ttu-id="571c9-199">\[[Набор API-Интерфейсов: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="571c9-199">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="571c9-200">Выпуск памяти, связанное с объектом, если ранее отслеживаются.</span><span class="sxs-lookup"><span data-stu-id="571c9-200">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="571c9-201">Этот вызов — это сокращение для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="571c9-201">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="571c9-202">Создавая множество отслеживаемых объектов замедляет ведущего приложения, так помните освободить место на любые объекты, добавлении, после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="571c9-202">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="571c9-203">Необходимо будет вызывать «context.sync()» до выпуска памяти вступает в силу.</span><span class="sxs-lookup"><span data-stu-id="571c9-203">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
