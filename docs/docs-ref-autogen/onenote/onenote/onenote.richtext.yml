### YamlMime:TSType
name: OneNote.RichText
uid: onenote!OneNote.RichText:class
package: onenote!
fullName: OneNote.RichText
summary: >-
  Представляет объект RichText в объекте Paragraph.


  \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: onenote!OneNote.RichText#context:member
  package: onenote!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.RichText#id:member
  package: onenote!
  fullName: id
  summary: >-
    Получает идентификатор объекта RichText. Только для чтения.


    \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: languageId
  uid: onenote!OneNote.RichText#languageId:member
  package: onenote!
  fullName: languageId
  summary: >-
    ИД языка для текста. Только для чтения.


    \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly languageId: string;'
    return:
      type: string
- name: paragraph
  uid: onenote!OneNote.RichText#paragraph:member
  package: onenote!
  fullName: paragraph
  summary: >-
    Получает объект Paragraph, содержащий объект RichText. Только для чтения.


    \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: text
  uid: onenote!OneNote.RichText#text:member
  package: onenote!
  fullName: text
  summary: >-
    Получает текстовое содержимое объекта RichText. Только для чтения.


    \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
methods:
- name: getHtml()
  uid: onenote!OneNote.RichText#getHtml:member(1)
  package: onenote!
  fullName: getHtml()
  summary: >-
    Получение HTML форматированного текста.


    \[[Набор API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: Html богатого текста
- name: load(option)
  uid: onenote!OneNote.RichText#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
  remarks: >-
    Помимо этой подписи, этот метод имеет следующие подписи:


    `load(option?: string | string[]): OneNote.RichText` - Где параметр — запятая или массив строк, которые указывают свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): OneNote.RichText` - Где option.select — это строка, делимитированная запятой, которая указывает свойства для загрузки, а options.expand — это запятая, которая указывает свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.RichText` — Доступно только для типов коллекций. Она аналогична предыдущей подписи. Option.top указывает максимальное количество элементов коллекции, которые могут быть включены в результат. Option.skip указывает количество элементов, которые должны быть пропущены и не включены в результат. Если option.top указан, набор результатов начнется после пропуска указанного количества элементов.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.RichTextLoadOptions): OneNote.RichText;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.RichTextLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.RichText#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.RichText;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its outline's paragraphs.\n    var outlinePageContents = ;\n    var paragraphs = ;\n    var richTextParagraphs = ;\n    // Queue a command to load the id and type of each page content in the outline.\n    pageContents.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            // Load all page contents of type Outline\n            $.each(pageContents.items, function(index, pageContent) {\n                if(pageContent.type == 'Outline')\n                {\n                    pageContent.load('outline,outline/paragraphs,outline/paragraphs/type');\n                    outlinePageContents.push(pageContent);\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Load all rich text paragraphs across outlines\n            $.each(outlinePageContents, function(index, outlinePageContent) {\n                var outline = outlinePageContent.outline;\n                paragraphs = paragraphs.concat(outline.paragraphs.items);\n            });\n            $.each(paragraphs, function(index, paragraph) {\n                if(paragraph.type == 'RichText')\n                {\n                    richTextParagraphs.push(paragraph);\n                    paragraph.load(\"id,richText/text\");\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Display all rich text paragraphs to the console\n            $.each(richTextParagraphs, function(index, richTextParagraph) {\n                var richText = richTextParagraph.richText;\n                console.log(\n                    \"Paragraph found with richtext content : \" + \n                    richText.text + \" and richtext id : \" + richText.id);\n            });\n            return context.sync();\n        });\n});\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
- name: load(propertyNamesAndPaths)
  uid: onenote!OneNote.RichText#load:member(3)
  package: onenote!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.RichText;'
    parameters:
    - id: propertyNamesAndPaths
      description: Если свойствоNamesAndPaths.select — это строка с запятой, которая указывает свойства для загрузки, а propertyNamesAndPaths.expand — запятая, которая указывает свойства навигации для загрузки.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: toJSON()
  uid: onenote!OneNote.RichText#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект OneNote.RichText является объектом API, метод возвращает обычный объект `toJSON` JavaScript (введите как `OneNote.Interfaces.RichTextData`<!-- -->), содержащий неглубокие копии любых загруженных свойств ребенка из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.RichTextData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.RichTextData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.RichText#track:member(1)
  package: onenote!
  fullName: track()
  summary: Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращением для context.trackedObjects.add(thisObject). Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.RichText;'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.RichText#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращением для context.trackedObjects.remove(thisObject). Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед фактическим освобождением памяти потребуется вызвать метод context.sync().
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.RichText;'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a77d31af3fb48bdec6ef9000f29b767c38af655d
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51320064"
