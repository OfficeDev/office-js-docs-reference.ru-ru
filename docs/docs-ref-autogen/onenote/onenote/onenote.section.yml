### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Section:class'
    summary: |-
      Представляет раздел в OneNote. Разделы могут содержать страницы.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Section
    fullName: OneNote.Section
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Section#addPage:member(1)'
      - 'onenote!OneNote.Section#clientUrl:member'
      - 'onenote!OneNote.Section#context:member'
      - 'onenote!OneNote.Section#copyToNotebook:member(1)'
      - 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
      - 'onenote!OneNote.Section#getRestApiId:member(1)'
      - 'onenote!OneNote.Section#id:member'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
      - 'onenote!OneNote.Section#isEncrypted:member'
      - 'onenote!OneNote.Section#isLocked:member'
      - 'onenote!OneNote.Section#load:member(1)'
      - 'onenote!OneNote.Section#load:member(2)'
      - 'onenote!OneNote.Section#load:member(3)'
      - 'onenote!OneNote.Section#name:member'
      - 'onenote!OneNote.Section#notebook:member'
      - 'onenote!OneNote.Section#pages:member'
      - 'onenote!OneNote.Section#parentSectionGroup:member'
      - 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
      - 'onenote!OneNote.Section#toJSON:member(1)'
      - 'onenote!OneNote.Section#track:member(1)'
      - 'onenote!OneNote.Section#untrack:member(1)'
      - 'onenote!OneNote.Section#webUrl:member'
  - uid: 'onenote!OneNote.Section#addPage:member(1)'
    summary: |-
      Добавляет новую страницу в конец раздела.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: addPage(title)
    fullName: addPage(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addPage(title: string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to add a page to the current section.
              var page = context.application.getActiveSection().addPage("Wish list");
                      
              // Queue a command to load the id and title of the new page. 
              // This example loads the new page so it can read its properties later.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Page name: " + page.title);
                      console.log("Page ID: " + page.id);

                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: Название новой страницы.
          type:
            - string
  - uid: 'onenote!OneNote.Section#clientUrl:member'
    summary: |-
      URL-адрес клиента раздела. Только чтение

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: clientUrl
    fullName: clientUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clientUrl: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Section#copyToNotebook:member(1)'
    summary: |-
      Копирует этот раздел в указанную записную книжку.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: copyToNotebook(destinationNotebook)
    fullName: copyToNotebook(destinationNotebook)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToNotebook(destinationNotebook: OneNote.Notebook): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {
              var app = context.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return context.sync()
                  .then(function() {
                      newSection = section.copyToNotebook(notebook);
                      newSection.load('id');
                      return context.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationNotebook
          description: 'Записная книжка, куда нужно скопировать этот раздел.'
          type:
            - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
    summary: |-
      Копирует этот раздел в указанную группу разделов.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: copyToSectionGroup(destinationSectionGroup)
    fullName: copyToSectionGroup(destinationSectionGroup)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToSectionGroup(destinationSectionGroup: OneNote.SectionGroup): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (ctx) {
              var app = ctx.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return ctx.sync()
                  .then(function() {
                      var firstSectionGroup = notebook.sectionGroups.items[0];
                      newSection = section.copyToSectionGroup(firstSectionGroup);
                      newSection.load('id');
                      return ctx.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationSectionGroup
          description: 'Группа разделов, куда нужно скопировать этот раздел.'
          type:
            - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#getRestApiId:member(1)'
    summary: |-
      Получает идентификатор API REST.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getRestApiId()
    fullName: getRestApiId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.Section#getRestApiId~0:complex'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function(ctx){
              // Get the current section.         
              var section = ctx.application.getActiveSection();
              var restApiId = section.getRestApiId();

              return ctx.sync().
                  then(function(){
                      console.log("The REST API ID is " + restApiId.value);
                      // Note that the REST API ID isn't all you need to interact with the OneNote REST API. 
                      // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.
                      // For SharePoint notebooks, the notebook baseUrl should be used to talk to the 
                      // OneNote REST API according to the OneNote Development Blog.
                      // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/
                  });
          });
          ```
  - uid: 'onenote!OneNote.Section#id:member'
    summary: |-
      Получает идентификатор объекта Section. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
    summary: |-
      Вставляет новый раздел перед текущим разделом или после него.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertSectionAsSibling(location, title)'
    fullName: 'insertSectionAsSibling(location, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(location: OneNote.InsertLocation, title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: location
          description: Расположение нового раздела относительно текущего раздела.
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: title
          description: Имя нового раздела.
          type:
            - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
    summary: |-
      Вставляет новый раздел перед текущим разделом или после него.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertSectionAsSibling(locationString, title)'
    fullName: 'insertSectionAsSibling(locationString, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(locationString: "Before" | "After", title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to insert a section after the current section.
              var section = context.application.getActiveSection().insertSectionAsSibling("After", "New section");
                      
              // Queue a command to load the id and name of the new section. 
              // This example loads the new section so it can read its properties later.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: locationString
          description: Расположение нового раздела относительно текущего раздела.
          type:
            - '"Before" | "After"'
        - id: title
          description: Имя нового раздела.
          type:
            - string
  - uid: 'onenote!OneNote.Section#isEncrypted:member'
    summary: |-
      Значение true, если этот раздел зашифрован с помощью пароля. Только чтение

      \[[Набор API: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isEncrypted
    fullName: isEncrypted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEncrypted: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#isLocked:member'
    summary: |-
      Значение true, если раздел заблокирован. Только чтение

      \[[Набор API: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isLocked
    fullName: isLocked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLocked: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): OneNote.Section`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): OneNote.Section`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.SectionLoadOptions): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
  - uid: 'onenote!OneNote.Section#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load("id");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section with the specified properties. 
              section.load("name,notebook/name");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section name: " + section.name);
                      console.log("Parent notebook name: " + section.notebook.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
              // Queue a command to add a page to the current section.
              var section = context.application.getActiveSection();
              section.load('clientUrl,notebook');
              var sectionGroup = section.parentSectionGroupOrNull;
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if(sectionGroup.isNull === false)
                      {
                          // If a parent section group exists, queue a command to add a section in it!
                          sectionGroup.addSection("NewSectionInSectionGroup");
                      }
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Section#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Section#name:member'
    summary: |-
      Получает имя раздела. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#notebook:member'
    summary: |-
      Получает записную книжку, содержащую раздел. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: notebook
    fullName: notebook
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebook: OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#pages:member'
    summary: |-
      Получает коллекцию страниц в разделе. Только чтение

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroup:member'
    summary: |-
      Получает группу объектов, содержащую раздел. Возвращает значение ItemNotFound, если раздел является прямым потомком записной книжки. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroup
    fullName: parentSectionGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
    summary: |-
      Получает группу объектов, содержащую раздел. Возвращает значение null, если объект Section является прямым потомком объекта Notebook. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroupOrNull
    fullName: parentSectionGroupOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#toJSON:member(1)'
    summary: 'Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект OneNote. Section является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.SectionData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.SectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.SectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.Section#track:member(1)'
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращением для context.trackedObjects.add(thisObject). Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#untrack:member(1)'
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращением для context.trackedObjects.remove(thisObject). Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед фактическим освобождением памяти потребуется вызвать метод context.sync().'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#webUrl:member'
    summary: |-
      URL-адрес страницы. Только чтение

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: webUrl
    fullName: webUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly webUrl: string;'
      return:
        type:
          - string
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Section:class'
    name: OneNote.Section
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.SectionGroup:class'
    name: OneNote.SectionGroup
  - uid: 'onenote!OneNote.Section#getRestApiId~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.InsertLocation:enum'
    name: OneNote.InsertLocation
  - uid: 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
    name: OneNote.Interfaces.SectionLoadOptions
  - uid: 'onenote!OneNote.PageCollection:class'
    name: OneNote.PageCollection
  - uid: 'onenote!OneNote.Interfaces.SectionData:interface'
    name: OneNote.Interfaces.SectionData