### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Table:class'
    summary: |-
      <span data-ttu-id="e04b6-101">Представляет таблицу на странице OneNote.</span><span class="sxs-lookup"><span data-stu-id="e04b6-101">Represents a table in a OneNote page.</span></span>

      <span data-ttu-id="e04b6-102">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Table#appendColumn:member(1)'
      - 'onenote!OneNote.Table#appendRow:member(1)'
      - 'onenote!OneNote.Table#borderVisible:member'
      - 'onenote!OneNote.Table#clear:member(1)'
      - 'onenote!OneNote.Table#columnCount:member'
      - 'onenote!OneNote.Table#context:member'
      - 'onenote!OneNote.Table#getCell:member(1)'
      - 'onenote!OneNote.Table#id:member'
      - 'onenote!OneNote.Table#insertColumn:member(1)'
      - 'onenote!OneNote.Table#insertRow:member(1)'
      - 'onenote!OneNote.Table#load:member(1)'
      - 'onenote!OneNote.Table#load:member(2)'
      - 'onenote!OneNote.Table#load:member(3)'
      - 'onenote!OneNote.Table#paragraph:member'
      - 'onenote!OneNote.Table#rowCount:member'
      - 'onenote!OneNote.Table#rows:member'
      - 'onenote!OneNote.Table#set:member(1)'
      - 'onenote!OneNote.Table#set:member(2)'
      - 'onenote!OneNote.Table#setShadingColor:member(1)'
      - 'onenote!OneNote.Table#toJSON:member(1)'
      - 'onenote!OneNote.Table#track:member(1)'
      - 'onenote!OneNote.Table#untrack:member(1)'
  - uid: 'onenote!OneNote.Table#appendColumn:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-103">Добавляет столбец в конец таблицы.</span><span class="sxs-lookup"><span data-stu-id="e04b6-103">Adds a column to the end of the table.</span></span> <span data-ttu-id="e04b6-104">Значения указываются в новом столбце.</span><span class="sxs-lookup"><span data-stu-id="e04b6-104">Values, if specified, are set in the new column.</span></span> <span data-ttu-id="e04b6-105">В противном случае столбец будет пустым.</span><span class="sxs-lookup"><span data-stu-id="e04b6-105">Otherwise the column is empty.</span></span>

      <span data-ttu-id="e04b6-106">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="e04b6-108">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e04b6-108">Optional.</span></span> <span data-ttu-id="e04b6-109">Строки, которые необходимо вставить в новый столбец, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="e04b6-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="e04b6-110">Значений в этом параметре не должно быть больше, чем строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#appendRow:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-111">Добавляет строку в конец таблицы.</span><span class="sxs-lookup"><span data-stu-id="e04b6-111">Adds a row to the end of the table.</span></span> <span data-ttu-id="e04b6-112">Значения указываются в новой строке.</span><span class="sxs-lookup"><span data-stu-id="e04b6-112">Values, if specified, are set in the new row.</span></span> <span data-ttu-id="e04b6-113">В противном случае строка будет пустой.</span><span class="sxs-lookup"><span data-stu-id="e04b6-113">Otherwise the row is empty.</span></span>

      <span data-ttu-id="e04b6-114">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="e04b6-116">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="e04b6-116">Optional.</span></span> <span data-ttu-id="e04b6-117">Строки, которые необходимо вставить в новую строку, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="e04b6-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e04b6-118">Значений в этом параметре не должно быть больше, чем столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#borderVisible:member'
    summary: |-
      <span data-ttu-id="e04b6-119">Задает отображение границ или возвращает сведения об отображении границ.</span><span class="sxs-lookup"><span data-stu-id="e04b6-119">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id="e04b6-120">Значение true, если они отображаются, значение false — если нет.</span><span class="sxs-lookup"><span data-stu-id="e04b6-120">True if they are visible, false if they are hidden.</span></span>

      <span data-ttu-id="e04b6-121">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Table#clear:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-122">Очищает содержимое таблицы.</span><span class="sxs-lookup"><span data-stu-id="e04b6-122">Clears the contents of the table.</span></span>

      <span data-ttu-id="e04b6-123">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'onenote!OneNote.Table#columnCount:member'
    summary: |-
      <span data-ttu-id="e04b6-124">Получает количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-124">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="e04b6-125">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#context:member'
    summary: '<span data-ttu-id="e04b6-126">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="e04b6-126">The request context associated with the object.</span></span> <span data-ttu-id="e04b6-127">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e04b6-127">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Table#getCell:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-128">Возвращает ячейку таблицы в указанной строке и указанном столбце.</span><span class="sxs-lookup"><span data-stu-id="e04b6-128">Gets the table cell at a specified row and column.</span></span>

      <span data-ttu-id="e04b6-129">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - 'onenote!OneNote.TableCell:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-130">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="e04b6-131">Индекс строки.</span><span class="sxs-lookup"><span data-stu-id="e04b6-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="e04b6-132">Индекс ячейки в строке.</span><span class="sxs-lookup"><span data-stu-id="e04b6-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: 'onenote!OneNote.Table#id:member'
    summary: |-
      <span data-ttu-id="e04b6-133">Получает идентификатор таблицы.</span><span class="sxs-lookup"><span data-stu-id="e04b6-133">Gets the ID of the table.</span></span> <span data-ttu-id="e04b6-134">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e04b6-134">Read-only.</span></span>

      <span data-ttu-id="e04b6-135">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Table#insertColumn:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-p108">Вставляет столбец в положении заданного индекса в таблице. Значения указываются в новом столбце. В противном случае столбец будет пустым.</span><span class="sxs-lookup"><span data-stu-id="e04b6-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>

      <span data-ttu-id="e04b6-139">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-140">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="e04b6-141">Индекс в таблице, в положении которого будет вставлен столбец.</span><span class="sxs-lookup"><span data-stu-id="e04b6-141">Index where the column will be inserted in the table.</span></span>'
          type:
            - number
        - id: values
          description: '<span data-ttu-id="e04b6-142">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="e04b6-142">Optional.</span></span> <span data-ttu-id="e04b6-143">Строки, которые необходимо вставить в новый столбец, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="e04b6-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="e04b6-144">Значений в этом параметре не должно быть больше, чем строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#insertRow:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-p110">Вставляет строку в положение заданного индекса в таблице. Значения указываются в новой строке. В противном случае строка будет пустой.</span><span class="sxs-lookup"><span data-stu-id="e04b6-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>

      <span data-ttu-id="e04b6-148">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-149">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="e04b6-150">Индекс в таблице, в положении которого будет вставлена строка.</span><span class="sxs-lookup"><span data-stu-id="e04b6-150">Index where the row will be inserted in the table.</span></span>'
          type:
            - number
        - id: values
          description: '<span data-ttu-id="e04b6-151">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="e04b6-151">Optional.</span></span> <span data-ttu-id="e04b6-152">Строки, которые необходимо вставить в новую строку, заданные в виде массива.</span><span class="sxs-lookup"><span data-stu-id="e04b6-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e04b6-153">Значений в этом параметре не должно быть больше, чем столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#load:member(1)'
    summary: <span data-ttu-id="e04b6-154">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e04b6-155">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e04b6-155">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e04b6-156">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="e04b6-156">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e04b6-157">`load(option?: string | string[]): OneNote.Table`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e04b6-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e04b6-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e04b6-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e04b6-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="e04b6-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="e04b6-160">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="e04b6-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="e04b6-161">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e04b6-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e04b6-162">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="e04b6-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e04b6-163">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="e04b6-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
  - uid: 'onenote!OneNote.Table#load:member(2)'
    summary: <span data-ttu-id="e04b6-164">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e04b6-165">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e04b6-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e04b6-166">Примеры</span><span class="sxs-lookup"><span data-stu-id="e04b6-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e04b6-167">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e04b6-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Table#load:member(3)'
    summary: <span data-ttu-id="e04b6-168">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e04b6-169">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e04b6-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e04b6-170">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e04b6-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Table#paragraph:member'
    summary: |-
      <span data-ttu-id="e04b6-171">Получает объект Paragraph, содержащий объект Table.</span><span class="sxs-lookup"><span data-stu-id="e04b6-171">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id="e04b6-172">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e04b6-172">Read-only.</span></span>

      <span data-ttu-id="e04b6-173">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Table#rowCount:member'
    summary: |-
      <span data-ttu-id="e04b6-174">Получает количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-174">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="e04b6-175">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#rows:member'
    summary: |-
      <span data-ttu-id="e04b6-176">Возвращает все строки таблицы.</span><span class="sxs-lookup"><span data-stu-id="e04b6-176">Gets all of the table rows.</span></span> <span data-ttu-id="e04b6-177">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e04b6-177">Read-only.</span></span>

      <span data-ttu-id="e04b6-178">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - 'onenote!OneNote.TableRowCollection:class'
  - uid: 'onenote!OneNote.Table#set:member(1)'
    summary: '<span data-ttu-id="e04b6-179">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e04b6-180">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="e04b6-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e04b6-181">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="e04b6-181">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e04b6-182">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e04b6-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'onenote!OneNote.Interfaces.TableUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="e04b6-183">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e04b6-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'onenote!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.Table#set:member(2)'
    summary: '<span data-ttu-id="e04b6-184">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.Table:class'
  - uid: 'onenote!OneNote.Table#setShadingColor:member(1)'
    summary: |-
      <span data-ttu-id="e04b6-185">Задает цвет заливки всех ячеек в таблице.</span><span class="sxs-lookup"><span data-stu-id="e04b6-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="e04b6-186">Код цвета, который нужно задать ячейкам.</span><span class="sxs-lookup"><span data-stu-id="e04b6-186">The color code to set the cells to.</span></span>

      <span data-ttu-id="e04b6-187">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e04b6-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: 'onenote!OneNote.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="e04b6-188">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e04b6-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e04b6-189">.</span><span class="sxs-lookup"><span data-stu-id="e04b6-189"></span></span> <span data-ttu-id="e04b6-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e04b6-190"></span></span><!-- --><span data-ttu-id="e04b6-191">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект OneNote. Table является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="e04b6-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="e04b6-192">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.TableData:interface'
        description: ''
  - uid: 'onenote!OneNote.Table#track:member(1)'
    summary: '<span data-ttu-id="e04b6-193">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="e04b6-193">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="e04b6-194">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="e04b6-194">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="e04b6-195">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="e04b6-195">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
  - uid: 'onenote!OneNote.Table#untrack:member(1)'
    summary: '<span data-ttu-id="e04b6-196">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="e04b6-196">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="e04b6-197">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="e04b6-197">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="e04b6-198">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="e04b6-198">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="e04b6-199">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e04b6-199">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.TableRow:class'
    name: OneNote.TableRow
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.TableCell:class'
    name: OneNote.TableCell
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
    name: OneNote.Interfaces.TableLoadOptions
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.TableRowCollection:class'
    name: OneNote.TableRowCollection
  - uid: 'onenote!OneNote.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'onenote!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.TableData:interface'
    name: OneNote.Interfaces.TableData