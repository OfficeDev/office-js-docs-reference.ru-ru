### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Outline:class'
    summary: |-
      Представляет контейнер для объектов Paragraph.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Outline
    fullName: OneNote.Outline
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Outline#appendHtml:member(1)'
      - 'onenote!OneNote.Outline#appendImage:member(1)'
      - 'onenote!OneNote.Outline#appendRichText:member(1)'
      - 'onenote!OneNote.Outline#appendTable:member(1)'
      - 'onenote!OneNote.Outline#context:member'
      - 'onenote!OneNote.Outline#id:member'
      - 'onenote!OneNote.Outline#isTitle:member(1)'
      - 'onenote!OneNote.Outline#load:member(1)'
      - 'onenote!OneNote.Outline#load:member(2)'
      - 'onenote!OneNote.Outline#load:member(3)'
      - 'onenote!OneNote.Outline#pageContent:member'
      - 'onenote!OneNote.Outline#paragraphs:member'
      - 'onenote!OneNote.Outline#toJSON:member(1)'
      - 'onenote!OneNote.Outline#track:member(1)'
      - 'onenote!OneNote.Outline#untrack:member(1)'
  - uid: 'onenote!OneNote.Outline#appendHtml:member(1)'
    summary: |-
      Добавляет указанный HTML в нижнюю часть объекта Outline.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: appendHtml(html)
    fullName: appendHtml(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendHtml(html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline")
                      {
                          // First item is an outline.
                          outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendHtml("<p>new paragraph</p>");

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: 'Строка HTML, которую необходимо добавить. Обратитесь к разделу [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) для API JavaScript для надстроек OneNote.'
          type:
            - string
  - uid: 'onenote!OneNote.Outline#appendImage:member(1)'
    summary: |-
      Добавляет указанное изображение в нижнюю часть объекта Outline.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'appendImage(base64EncodedImage, width, height)'
    fullName: 'appendImage(base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendImage(base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: 'Строка HTML, которую необходимо добавить.'
          type:
            - string
        - id: width
          description: 'Необязательный параметр. Ширина в точках. Значение по умолчанию — null, ширина изображения имеет приоритет.'
          type:
            - number
        - id: height
          description: 'Необязательный. Высота в точках. Значение по умолчанию — null, высота изображения имеет приоритет.'
          type:
            - number
  - uid: 'onenote!OneNote.Outline#appendRichText:member(1)'
    summary: |-
      Добавляет указанный текст в нижнюю часть объекта Outline.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: appendRichText(paragraphText)
    fullName: appendRichText(paragraphText)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRichText(paragraphText: string): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
      parameters:
        - id: paragraphText
          description: 'Строка HTML, которую необходимо добавить.'
          type:
            - string
  - uid: 'onenote!OneNote.Outline#appendTable:member(1)'
    summary: |-
      Добавляет таблицу с указанным количеством строк и столбцов в нижнюю часть объекта Outline.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'appendTable(rowCount, columnCount, values)'
    fullName: 'appendTable(rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendTable(rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {

              // Gets the active page.
              var activePage = context.application.getActivePage();

              // Get pageContents of the activePage. 
              var pageContents = activePage.contents;

              // Queue a command to load the pageContents to access its data.
              context.load(pageContents);

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      if (pageContents.items.length != 0 && pageContents.items[0].type == "Outline") {
                          // First item is an outline.
                          var outline = pageContents.items[0].outline;

                          // Queue a command to append a paragraph to the outline.
                          outline.appendTable(2, 2, [[1, 2],[3, 4]]);

                          // Run the queued commands.
                          return context.sync();
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowCount
          description: Обязательный. Количество строк в таблице.
          type:
            - number
        - id: columnCount
          description: Обязательный. Количество столбцов в таблице.
          type:
            - number
        - id: values
          description: 'Необязательный двухмерный массив. Ячейки заполняются, если в массиве указаны соответствующие строки.'
          type:
            - 'string[][]'
  - uid: 'onenote!OneNote.Outline#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Outline#id:member'
    summary: |-
      Получает идентификатор объекта Outline. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Outline#isTitle:member(1)'
    summary: |-
      Проверьте, является ли структура названием "структура".

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isTitle()
    fullName: isTitle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isTitle(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'onenote!OneNote.Outline#isTitle~0:complex'
        description: ''
  - uid: 'onenote!OneNote.Outline#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): OneNote.Outline`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): OneNote.Outline`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Outline`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.OutlineLoadOptions): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.OutlineLoadOptions:interface'
  - uid: 'onenote!OneNote.Outline#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Outline#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Outline#pageContent:member'
    summary: |-
      Получает объект PageContent, содержащий объект Outline. Этот объект определяет положение объекта Outline на странице. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: pageContent
    fullName: pageContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageContent: OneNote.PageContent;'
      return:
        type:
          - 'onenote!OneNote.PageContent:class'
  - uid: 'onenote!OneNote.Outline#paragraphs:member'
    summary: |-
      Получает коллекцию объектов Paragraph в объекте Outline. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - 'onenote!OneNote.ParagraphCollection:class'
  - uid: 'onenote!OneNote.Outline#toJSON:member(1)'
    summary: 'Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В отличие от исходного объекта OneNote. Структура — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный как`OneNote.Interfaces.OutlineData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.OutlineData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.OutlineData:interface'
        description: ''
  - uid: 'onenote!OneNote.Outline#track:member(1)'
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращением для context.trackedObjects.add(thisObject). Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: ''
  - uid: 'onenote!OneNote.Outline#untrack:member(1)'
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращением для context.trackedObjects.remove(thisObject). Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед фактическим освобождением памяти потребуется вызвать метод context.sync().'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.Image:class'
    name: OneNote.Image
  - uid: 'onenote!OneNote.RichText:class'
    name: OneNote.RichText
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Outline#isTitle~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'onenote!OneNote.Outline:class'
    name: OneNote.Outline
  - uid: 'onenote!OneNote.Interfaces.OutlineLoadOptions:interface'
    name: OneNote.Interfaces.OutlineLoadOptions
  - uid: 'onenote!OneNote.PageContent:class'
    name: OneNote.PageContent
  - uid: 'onenote!OneNote.ParagraphCollection:class'
    name: OneNote.ParagraphCollection
  - uid: 'onenote!OneNote.Interfaces.OutlineData:interface'
    name: OneNote.Interfaces.OutlineData