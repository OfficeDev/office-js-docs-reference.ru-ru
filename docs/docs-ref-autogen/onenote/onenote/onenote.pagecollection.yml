### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.PageCollection:class'
    summary: |-
      Представляет коллекцию страниц.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.PageCollection
    fullName: OneNote.PageCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.PageCollection#context:member'
      - 'onenote!OneNote.PageCollection#count:member'
      - 'onenote!OneNote.PageCollection#getByTitle:member(1)'
      - 'onenote!OneNote.PageCollection#getItem:member(1)'
      - 'onenote!OneNote.PageCollection#getItemAt:member(1)'
      - 'onenote!OneNote.PageCollection#items:member'
      - 'onenote!OneNote.PageCollection#load:member(1)'
      - 'onenote!OneNote.PageCollection#load:member(2)'
      - 'onenote!OneNote.PageCollection#load:member(3)'
      - 'onenote!OneNote.PageCollection#toJSON:member(1)'
      - 'onenote!OneNote.PageCollection#track:member(1)'
      - 'onenote!OneNote.PageCollection#untrack:member(1)'
  - uid: 'onenote!OneNote.PageCollection#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.PageCollection#count:member'
    summary: |-
      Возвращает количество страниц в коллекции. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.PageCollection#getByTitle:member(1)'
    summary: |-
      Возвращает коллекцию объектов Page с указанным названием.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getByTitle(title)
    fullName: getByTitle(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {

              // Get all the pages in the current section.
              var allPages = context.application.getActiveSection().pages;

              // Queue a command to load the pages. 
              // For best performance, request specific properties.
              allPages.load("id"); 

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Get the sections with the specified name.
                      var todoPages = allPages.getByTitle("Todo list");

                      // Queue a command to load the section. 
                      // For best performance, request specific properties.
                      todoPages.load("id,title"); 

                      return context.sync()
                          .then(function () {

                              // Iterate through the collection or access items individually by index.
                              if (todoPages.items.length > 0) {
                                  console.log("Page title: " + todoPages.items[0].title);
                                  console.log("Page ID: " + todoPages.items[0].id);
                              }
                          });
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: Заголовок страницы.
          type:
            - string
  - uid: 'onenote!OneNote.PageCollection#getItem:member(1)'
    summary: |-
      Возвращает объект Page по его идентификатору или индексу в коллекции. Только для чтения.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: ''
      parameters:
        - id: index
          description: Идентификатор объекта Page или расположение индекса этого объекта в коллекции.
          type:
            - number | string
  - uid: 'onenote!OneNote.PageCollection#getItemAt:member(1)'
    summary: |-
      Возвращает объект Page по его позиции в коллекции.

      \[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: ''
      parameters:
        - id: index
          description: Значение индекса получаемого объекта. Используется нулевой индекс.
          type:
            - number
  - uid: 'onenote!OneNote.PageCollection#items:member'
    summary: Получает загруженные дочерние элементы в этой коллекции.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: OneNote.Page[];'
      return:
        type:
          - 'onenote!OneNote.PageCollection#items~0:complex'
  - uid: 'onenote!OneNote.PageCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): OneNote.PageCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): OneNote.PageCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.PageCollection#load~0:complex'
  - uid: 'onenote!OneNote.PageCollection#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```javascript
          OneNote.run(function (context) {
              
              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;
              
              // Queue a command to load the id and title for each page.            
              pages.load('id,title');
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Display the properties.
                      $.each(pages.items, function(index, page) {
                          console.log(page.title);
                          console.log(page.id);
                      });
                  }); 
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.PageCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'onenote!OneNote.PageCollection#toJSON:member(1)'
    summary: 'Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `OneNote.PageCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.PageCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.PageCollectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.PageCollection#track:member(1)'
    summary: 'Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе. Этот вызов является сокращением для context.trackedObjects.add(thisObject). Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
  - uid: 'onenote!OneNote.PageCollection#untrack:member(1)'
    summary: 'Освобождает память, связанную с этим объектом, если он ранее отслеживался. Этот вызов является сокращением для context.trackedObjects.remove(thisObject). Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования. Перед фактическим освобождением памяти потребуется вызвать метод context.sync().'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.PageCollection:class'
    name: OneNote.PageCollection
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.PageCollection#items~0:complex'
    name: 'OneNote.Page[]'
    fullName: 'OneNote.Page[]'
    spec.typeScript:
      - uid: 'onenote!OneNote.Page:class'
        name: OneNote.Page
        fullName: OneNote.Page
      - name: '[]'
        fullName: '[]'
  - uid: 'onenote!OneNote.PageCollection#load~0:complex'
    name: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    fullName: OneNote.Interfaces.PageCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'onenote!OneNote.Interfaces.PageCollectionLoadOptions:interface'
        name: OneNote.Interfaces.PageCollectionLoadOptions
        fullName: OneNote.Interfaces.PageCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'onenote!OneNote.Interfaces.CollectionLoadOptions:interface'
        name: OneNote.Interfaces.CollectionLoadOptions
        fullName: OneNote.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'onenote!OneNote.Interfaces.PageCollectionData:interface'
    name: OneNote.Interfaces.PageCollectionData