### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Paragraph:class'
    summary: |-
      <span data-ttu-id="c3d70-101">Контейнер для контента, отображаемого на странице.</span><span class="sxs-lookup"><span data-stu-id="c3d70-101">A container for the visible content on a page.</span></span> <span data-ttu-id="c3d70-102">Объект Paragraph может содержать контент с любым типом ParagraphType.</span><span class="sxs-lookup"><span data-stu-id="c3d70-102">A Paragraph can contain any one ParagraphType type of content.</span></span>

      <span data-ttu-id="c3d70-103">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Paragraph
    fullName: OneNote.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Paragraph#addNoteTag:member(1)'
      - 'onenote!OneNote.Paragraph#addNoteTag:member(2)'
      - 'onenote!OneNote.Paragraph#context:member'
      - 'onenote!OneNote.Paragraph#delete:member(1)'
      - 'onenote!OneNote.Paragraph#getParagraphInfo:member(1)'
      - 'onenote!OneNote.Paragraph#id:member'
      - 'onenote!OneNote.Paragraph#image:member'
      - 'onenote!OneNote.Paragraph#inkWords:member'
      - 'onenote!OneNote.Paragraph#insertHtmlAsSibling:member(1)'
      - 'onenote!OneNote.Paragraph#insertHtmlAsSibling:member(2)'
      - 'onenote!OneNote.Paragraph#insertImageAsSibling:member(1)'
      - 'onenote!OneNote.Paragraph#insertImageAsSibling:member(2)'
      - 'onenote!OneNote.Paragraph#insertRichTextAsSibling:member(1)'
      - 'onenote!OneNote.Paragraph#insertRichTextAsSibling:member(2)'
      - 'onenote!OneNote.Paragraph#insertTableAsSibling:member(1)'
      - 'onenote!OneNote.Paragraph#insertTableAsSibling:member(2)'
      - 'onenote!OneNote.Paragraph#load:member(1)'
      - 'onenote!OneNote.Paragraph#load:member(2)'
      - 'onenote!OneNote.Paragraph#load:member(3)'
      - 'onenote!OneNote.Paragraph#outline:member'
      - 'onenote!OneNote.Paragraph#paragraphs:member'
      - 'onenote!OneNote.Paragraph#parentParagraph:member'
      - 'onenote!OneNote.Paragraph#parentParagraphOrNull:member'
      - 'onenote!OneNote.Paragraph#parentTableCell:member'
      - 'onenote!OneNote.Paragraph#parentTableCellOrNull:member'
      - 'onenote!OneNote.Paragraph#richText:member'
      - 'onenote!OneNote.Paragraph#set:member(1)'
      - 'onenote!OneNote.Paragraph#set:member(2)'
      - 'onenote!OneNote.Paragraph#table:member'
      - 'onenote!OneNote.Paragraph#toJSON:member(1)'
      - 'onenote!OneNote.Paragraph#track:member(1)'
      - 'onenote!OneNote.Paragraph#type:member'
      - 'onenote!OneNote.Paragraph#untrack:member(1)'
  - uid: 'onenote!OneNote.Paragraph#addNoteTag:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-104">Добавьте Нотетаг к абзацу.</span><span class="sxs-lookup"><span data-stu-id="c3d70-104">Add NoteTag to the paragraph.</span></span>

      <span data-ttu-id="c3d70-105">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'addNoteTag(type, status)'
    fullName: 'addNoteTag(type, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
      return:
        type:
          - 'onenote!OneNote.NoteTag:class'
        description: ''
      parameters:
        - id: type
          description: <span data-ttu-id="c3d70-106">Тип объекта Нотетаг.</span><span class="sxs-lookup"><span data-stu-id="c3d70-106">The type of the NoteTag.</span></span>
          type:
            - 'onenote!OneNote.NoteTagType:enum'
        - id: status
          description: <span data-ttu-id="c3d70-107">Состояние Нотетаг.</span><span class="sxs-lookup"><span data-stu-id="c3d70-107">The status of the NoteTag.</span></span>
          type:
            - 'onenote!OneNote.NoteTagStatus:enum'
  - uid: 'onenote!OneNote.Paragraph#addNoteTag:member(2)'
    summary: |-
      <span data-ttu-id="c3d70-108">Добавьте Нотетаг к абзацу.</span><span class="sxs-lookup"><span data-stu-id="c3d70-108">Add NoteTag to the paragraph.</span></span>

      <span data-ttu-id="c3d70-109">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'addNoteTag(typeString, status)'
    fullName: 'addNoteTag(typeString, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
      return:
        type:
          - 'onenote!OneNote.NoteTag:class'
        description: ''
      parameters:
        - id: typeString
          description: <span data-ttu-id="c3d70-110">Тип объекта Нотетаг.</span><span class="sxs-lookup"><span data-stu-id="c3d70-110">The type of the NoteTag.</span></span>
          type:
            - '"Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2"'
        - id: status
          description: <span data-ttu-id="c3d70-111">Состояние Нотетаг.</span><span class="sxs-lookup"><span data-stu-id="c3d70-111">The status of the NoteTag.</span></span>
          type:
            - '"Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"'
  - uid: 'onenote!OneNote.Paragraph#context:member'
    summary: '<span data-ttu-id="c3d70-112">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="c3d70-112">The request context associated with the object.</span></span> <span data-ttu-id="c3d70-113">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="c3d70-113">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Paragraph#delete:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-114">Удаляет объект Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-114">Deletes the paragraph</span></span>

      <span data-ttu-id="c3d70-115">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c3d70-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="c3d70-116">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              
              var paragraphs = pageContent.outline.paragraphs;
              
              var firstParagraph = paragraphs.getItemAt(0);
              
              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Queue a command to delete the first paragraph                 
                      firstParagraph.delete();
                      
                      // Run the command to delete it
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Paragraph#getParagraphInfo:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-117">Получение сведений о списке абзаца</span><span class="sxs-lookup"><span data-stu-id="c3d70-117">Get list information of paragraph</span></span>

      <span data-ttu-id="c3d70-118">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getParagraphInfo()
    fullName: getParagraphInfo()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
      return:
        type:
          - 'onenote!OneNote.Paragraph#getParagraphInfo~0:complex'
        description: ''
  - uid: 'onenote!OneNote.Paragraph#id:member'
    summary: |-
      <span data-ttu-id="c3d70-119">Получает идентификатор объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-119">Gets the ID of the Paragraph object.</span></span> <span data-ttu-id="c3d70-120">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-120">Read-only.</span></span>

      <span data-ttu-id="c3d70-121">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Paragraph#image:member'
    summary: |-
      <span data-ttu-id="c3d70-122">Получает объект Image в объекте Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-122">Gets the Image object in the Paragraph.</span></span> <span data-ttu-id="c3d70-123">Вызывает исключение, если ParagraphType не является Image.</span><span class="sxs-lookup"><span data-stu-id="c3d70-123">Throws an exception if ParagraphType is not Image.</span></span> <span data-ttu-id="c3d70-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-124">Read-only.</span></span>

      <span data-ttu-id="c3d70-125">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
  - uid: 'onenote!OneNote.Paragraph#inkWords:member'
    summary: |-
      <span data-ttu-id="c3d70-126">Возвращает коллекцию рукописных фрагментов в объекте Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-126">Gets the Ink collection in the Paragraph.</span></span> <span data-ttu-id="c3d70-127">Вызывает исключение, если ParagraphType не является Ink.</span><span class="sxs-lookup"><span data-stu-id="c3d70-127">Throws an exception if ParagraphType is not Ink.</span></span> <span data-ttu-id="c3d70-128">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-128">Read-only.</span></span>

      <span data-ttu-id="c3d70-129">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: inkWords
    fullName: inkWords
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inkWords: OneNote.InkWordCollection;'
      return:
        type:
          - 'onenote!OneNote.InkWordCollection:class'
  - uid: 'onenote!OneNote.Paragraph#insertHtmlAsSibling:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-130">Вставляет указанный HTML-контент</span><span class="sxs-lookup"><span data-stu-id="c3d70-130">Inserts the specified HTML content</span></span>

      <span data-ttu-id="c3d70-131">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertHtmlAsSibling(insertLocation, html)'
    fullName: 'insertHtmlAsSibling(insertLocation, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c3d70-132">Примеры</span><span class="sxs-lookup"><span data-stu-id="c3d70-132">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertHtmlAsSibling("Before", "<p>ContentBeforeFirstParagraph</p>");
                      firstParagraph.insertHtmlAsSibling("After", "<p>ContentAfterFirstParagraph</p>");
                      
                      // Run the command to run inserts
                      return context.sync();
                  });
          ))
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c3d70-133">Расположение нового содержимого относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-133">The location of new contents relative to the current Paragraph.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: html
          description: '<span data-ttu-id="c3d70-134">Строка HTML, описывающая визуальное представление содержимого.</span><span class="sxs-lookup"><span data-stu-id="c3d70-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="c3d70-135">Обратитесь к разделу [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) для API JavaScript для надстроек OneNote.</span><span class="sxs-lookup"><span data-stu-id="c3d70-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>'
          type:
            - string
  - uid: 'onenote!OneNote.Paragraph#insertHtmlAsSibling:member(2)'
    summary: |-
      <span data-ttu-id="c3d70-136">Вставляет указанный HTML-контент</span><span class="sxs-lookup"><span data-stu-id="c3d70-136">Inserts the specified HTML content</span></span>

      <span data-ttu-id="c3d70-137">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertHtmlAsSibling(insertLocationString, html)'
    fullName: 'insertHtmlAsSibling(insertLocationString, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c3d70-138">Расположение нового содержимого относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-138">The location of new contents relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: html
          description: '<span data-ttu-id="c3d70-139">Строка HTML, описывающая визуальное представление содержимого.</span><span class="sxs-lookup"><span data-stu-id="c3d70-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="c3d70-140">Обратитесь к разделу [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) для API JavaScript для надстроек OneNote.</span><span class="sxs-lookup"><span data-stu-id="c3d70-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>'
          type:
            - string
  - uid: 'onenote!OneNote.Paragraph#insertImageAsSibling:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-141">Вставляет изображение в указанное место.</span><span class="sxs-lookup"><span data-stu-id="c3d70-141">Inserts the image at the specified insert location..</span></span>

      <span data-ttu-id="c3d70-142">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c3d70-143">Примеры</span><span class="sxs-lookup"><span data-stu-id="c3d70-143">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertImageAsSibling("Before", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      firstParagraph.insertImageAsSibling("After", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      
                      // Run the command to insert images
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c3d70-144">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-144">The location of the table relative to the current Paragraph.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: base64EncodedImage
          description: '<span data-ttu-id="c3d70-145">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="c3d70-145">HTML string to append.</span></span>'
          type:
            - string
        - id: width
          description: '<span data-ttu-id="c3d70-146">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="c3d70-146">Optional.</span></span> <span data-ttu-id="c3d70-147">Ширина в точках.</span><span class="sxs-lookup"><span data-stu-id="c3d70-147">Width in the unit of Points.</span></span> <span data-ttu-id="c3d70-148">Значение по умолчанию — null, ширина изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="c3d70-148">The default value is null and image width will be respected.</span></span>'
          type:
            - number
        - id: height
          description: '<span data-ttu-id="c3d70-149">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="c3d70-149">Optional.</span></span> <span data-ttu-id="c3d70-150">Высота в точках.</span><span class="sxs-lookup"><span data-stu-id="c3d70-150">Height in the unit of Points.</span></span> <span data-ttu-id="c3d70-151">Значение по умолчанию — null, высота изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="c3d70-151">The default value is null and image height will be respected.</span></span>'
          type:
            - number
  - uid: 'onenote!OneNote.Paragraph#insertImageAsSibling:member(2)'
    summary: |-
      <span data-ttu-id="c3d70-152">Вставляет изображение в указанное место.</span><span class="sxs-lookup"><span data-stu-id="c3d70-152">Inserts the image at the specified insert location..</span></span>

      <span data-ttu-id="c3d70-153">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c3d70-154">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-154">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: base64EncodedImage
          description: '<span data-ttu-id="c3d70-155">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="c3d70-155">HTML string to append.</span></span>'
          type:
            - string
        - id: width
          description: '<span data-ttu-id="c3d70-156">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="c3d70-156">Optional.</span></span> <span data-ttu-id="c3d70-157">Ширина в точках.</span><span class="sxs-lookup"><span data-stu-id="c3d70-157">Width in the unit of Points.</span></span> <span data-ttu-id="c3d70-158">Значение по умолчанию — null, ширина изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="c3d70-158">The default value is null and image width will be respected.</span></span>'
          type:
            - number
        - id: height
          description: '<span data-ttu-id="c3d70-159">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="c3d70-159">Optional.</span></span> <span data-ttu-id="c3d70-160">Высота в точках.</span><span class="sxs-lookup"><span data-stu-id="c3d70-160">Height in the unit of Points.</span></span> <span data-ttu-id="c3d70-161">Значение по умолчанию — null, высота изображения имеет приоритет.</span><span class="sxs-lookup"><span data-stu-id="c3d70-161">The default value is null and image height will be respected.</span></span>'
          type:
            - number
  - uid: 'onenote!OneNote.Paragraph#insertRichTextAsSibling:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-162">Вставляет текст абзаца в указанное место.</span><span class="sxs-lookup"><span data-stu-id="c3d70-162">Inserts the paragraph text at the specifiec insert location.</span></span>

      <span data-ttu-id="c3d70-163">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c3d70-164">Примеры</span><span class="sxs-lookup"><span data-stu-id="c3d70-164">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertRichTextAsSibling("Before", "Text Appears Before Paragraph");
                      firstParagraph.insertRichTextAsSibling("After", "Text Appears After Paragraph");
                      
                      // Run the command to insert text contents
                      return context.sync();
                  });
          })    
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c3d70-165">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-165">The location of the table relative to the current Paragraph.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: paragraphText
          description: '<span data-ttu-id="c3d70-166">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="c3d70-166">HTML string to append.</span></span>'
          type:
            - string
  - uid: 'onenote!OneNote.Paragraph#insertRichTextAsSibling:member(2)'
    summary: |-
      <span data-ttu-id="c3d70-167">Вставляет текст абзаца в указанное место.</span><span class="sxs-lookup"><span data-stu-id="c3d70-167">Inserts the paragraph text at the specifiec insert location.</span></span>

      <span data-ttu-id="c3d70-168">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c3d70-169">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-169">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: paragraphText
          description: '<span data-ttu-id="c3d70-170">Строка HTML, которую необходимо добавить.</span><span class="sxs-lookup"><span data-stu-id="c3d70-170">HTML string to append.</span></span>'
          type:
            - string
  - uid: 'onenote!OneNote.Paragraph#insertTableAsSibling:member(1)'
    summary: |-
      <span data-ttu-id="c3d70-171">Добавляет таблицу с указанным количеством строк и столбцов перед текущим абзацем или после него.</span><span class="sxs-lookup"><span data-stu-id="c3d70-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>

      <span data-ttu-id="c3d70-172">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c3d70-173">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-173">The location of the table relative to the current Paragraph.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: rowCount
          description: <span data-ttu-id="c3d70-174">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="c3d70-174">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="c3d70-175">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="c3d70-175">The number of columns in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="c3d70-176">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="c3d70-176">Optional 2D array.</span></span> <span data-ttu-id="c3d70-177">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-177">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'onenote!OneNote.Paragraph#insertTableAsSibling:member(2)'
    summary: |-
      <span data-ttu-id="c3d70-178">Добавляет таблицу с указанным количеством строк и столбцов перед текущим абзацем или после него.</span><span class="sxs-lookup"><span data-stu-id="c3d70-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>

      <span data-ttu-id="c3d70-179">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c3d70-180">Расположение таблицы относительно текущего объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-180">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: rowCount
          description: <span data-ttu-id="c3d70-181">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="c3d70-181">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="c3d70-182">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="c3d70-182">The number of columns in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="c3d70-183">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="c3d70-183">Optional 2D array.</span></span> <span data-ttu-id="c3d70-184">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-184">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'onenote!OneNote.Paragraph#load:member(1)'
    summary: <span data-ttu-id="c3d70-185">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3d70-186">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="c3d70-186">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c3d70-187">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="c3d70-187">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c3d70-188">`load(option?: string | string[]): OneNote.Paragraph`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c3d70-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c3d70-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="c3d70-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="c3d70-191">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="c3d70-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="c3d70-192">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="c3d70-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c3d70-193">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="c3d70-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c3d70-194">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="c3d70-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'onenote!OneNote.Paragraph#load:member(2)'
    summary: <span data-ttu-id="c3d70-195">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3d70-196">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="c3d70-196">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c3d70-197">Примеры</span><span class="sxs-lookup"><span data-stu-id="c3d70-197">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;
              
              // Queue a command to load the outline property of each pageContent.
              pageContents.load("outline");
                  
              // Get the first PageContent on the page, and then get its Outline.
              var pageContent = pageContents._GetItem(0);
              var paragraphs = pageContent.outline.paragraphs;
                      
              // Queue a command to load the id and type of each paragraph.
              paragraphs.load("id,type");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Write the text.                  
                      $.each(paragraphs.items, function(index, paragraph) {
                          console.log("Paragraph type: " + paragraph.type);
                          console.log("Paragraph ID: " + paragraph.id);
                      });
                  });
          })        
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
          ```javascript
          OneNote.run(function(context) {
              var app = context.application;
              
              // Gets the active outline
              var outline = app.getActiveOutline();
              
              // load nested paragraphs and their types.
              outline.load("paragraphs/type");
              
              return context.sync().then(function () {
                  var paragraphs = outline.paragraphs.items;
                  
                  var promise;
                  // for each nested paragraphs, load tables only
                  for (var i = 0; i < paragraphs.length; i++) {
                      var paragraph = paragraphs[i];
                      if (paragraph.type == "Table") {
                          paragraph.load("table/id");
                          promise =  context.sync().then(function() {
                              console.log(paragraph.table.id);
                          });
                      }
                  }
                  return promise;
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c3d70-198">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Paragraph#load:member(3)'
    summary: <span data-ttu-id="c3d70-199">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3d70-200">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="c3d70-200">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c3d70-201">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="c3d70-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Paragraph#outline:member'
    summary: |-
      <span data-ttu-id="c3d70-202">Получает объект Outline, содержащий объект Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-202">Gets the Outline object that contains the Paragraph.</span></span> <span data-ttu-id="c3d70-203">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-203">Read-only.</span></span>

      <span data-ttu-id="c3d70-204">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: outline
    fullName: outline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly outline: OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
  - uid: 'onenote!OneNote.Paragraph#paragraphs:member'
    summary: |-
      <span data-ttu-id="c3d70-205">Коллекция абзацев под этим абзацем.</span><span class="sxs-lookup"><span data-stu-id="c3d70-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="c3d70-206">Только чтение</span><span class="sxs-lookup"><span data-stu-id="c3d70-206">Read only</span></span>

      <span data-ttu-id="c3d70-207">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - 'onenote!OneNote.ParagraphCollection:class'
  - uid: 'onenote!OneNote.Paragraph#parentParagraph:member'
    summary: |-
      <span data-ttu-id="c3d70-208">Получает родительский объект Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-208">Gets the parent paragraph object.</span></span> <span data-ttu-id="c3d70-209">Возвращает исключение, если родительского объекта абзаца не существует.</span><span class="sxs-lookup"><span data-stu-id="c3d70-209">Throws if a parent paragraph does not exist.</span></span> <span data-ttu-id="c3d70-210">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-210">Read-only.</span></span>

      <span data-ttu-id="c3d70-211">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentParagraph
    fullName: parentParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Paragraph#parentParagraphOrNull:member'
    summary: |-
      <span data-ttu-id="c3d70-212">Получает родительский объект Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-212">Gets the parent paragraph object.</span></span> <span data-ttu-id="c3d70-213">Возвращает значение null, если родительского объекта абзаца не существует.</span><span class="sxs-lookup"><span data-stu-id="c3d70-213">Returns null if a parent paragraph does not exist.</span></span> <span data-ttu-id="c3d70-214">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-214">Read-only.</span></span>

      <span data-ttu-id="c3d70-215">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentParagraphOrNull
    fullName: parentParagraphOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Paragraph#parentTableCell:member'
    summary: |-
      <span data-ttu-id="c3d70-216">Получает объект TableCell, содержащий объект Paragraph, если он существует.</span><span class="sxs-lookup"><span data-stu-id="c3d70-216">Gets the TableCell object that contains the Paragraph if one exists.</span></span> <span data-ttu-id="c3d70-217">Если родительский объект не TableCell, возвращает ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="c3d70-217">If parent is not a TableCell, throws ItemNotFound.</span></span> <span data-ttu-id="c3d70-218">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-218">Read-only.</span></span>

      <span data-ttu-id="c3d70-219">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: OneNote.TableCell;'
      return:
        type:
          - 'onenote!OneNote.TableCell:class'
  - uid: 'onenote!OneNote.Paragraph#parentTableCellOrNull:member'
    summary: |-
      <span data-ttu-id="c3d70-220">Получает объект TableCell, содержащий объект Paragraph, если он существует.</span><span class="sxs-lookup"><span data-stu-id="c3d70-220">Gets the TableCell object that contains the Paragraph if one exists.</span></span> <span data-ttu-id="c3d70-221">Если родительский объект не TableCell, возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="c3d70-221">If parent is not a TableCell, returns null.</span></span> <span data-ttu-id="c3d70-222">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-222">Read-only.</span></span>

      <span data-ttu-id="c3d70-223">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNull
    fullName: parentTableCellOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
      return:
        type:
          - 'onenote!OneNote.TableCell:class'
  - uid: 'onenote!OneNote.Paragraph#richText:member'
    summary: |-
      <span data-ttu-id="c3d70-224">Получает объект RichText в объекте Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="c3d70-225">Вызывает исключение, если ParagraphType не является RichText.</span><span class="sxs-lookup"><span data-stu-id="c3d70-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="c3d70-226">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="c3d70-226">Read-only</span></span>

      <span data-ttu-id="c3d70-227">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: richText
    fullName: richText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richText: OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
  - uid: 'onenote!OneNote.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="c3d70-228">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c3d70-229">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="c3d70-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c3d70-230">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="c3d70-230">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Paragraph): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="c3d70-231">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="c3d70-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'onenote!OneNote.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="c3d70-232">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'onenote!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="c3d70-233">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Paragraph#table:member'
    summary: |-
      <span data-ttu-id="c3d70-234">Получает объект Table в объекте Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-234">Gets the Table object in the Paragraph.</span></span> <span data-ttu-id="c3d70-235">Вызывает исключение, если ParagraphType не является Table.</span><span class="sxs-lookup"><span data-stu-id="c3d70-235">Throws an exception if ParagraphType is not Table.</span></span> <span data-ttu-id="c3d70-236">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-236">Read-only.</span></span>

      <span data-ttu-id="c3d70-237">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: table
    fullName: table
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly table: OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
  - uid: 'onenote!OneNote.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="c3d70-238">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c3d70-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c3d70-239">.</span><span class="sxs-lookup"><span data-stu-id="c3d70-239"></span></span> <span data-ttu-id="c3d70-240">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c3d70-240"></span></span><!-- --><span data-ttu-id="c3d70-241">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект OneNote. абзац — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`OneNote.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="c3d70-241">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="c3d70-242">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-242">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'onenote!OneNote.Paragraph#track:member(1)'
    summary: '<span data-ttu-id="c3d70-243">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="c3d70-243">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="c3d70-244">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="c3d70-244">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="c3d70-245">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="c3d70-245">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
  - uid: 'onenote!OneNote.Paragraph#type:member'
    summary: |-
      <span data-ttu-id="c3d70-246">Получает тип объекта Paragraph.</span><span class="sxs-lookup"><span data-stu-id="c3d70-246">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="c3d70-247">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c3d70-247">Read-only.</span></span>

      <span data-ttu-id="c3d70-248">\[[Набор API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3d70-248">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
      return:
        type:
          - 'onenote!OneNote.Paragraph#type~0:complex'
  - uid: 'onenote!OneNote.Paragraph#untrack:member(1)'
    summary: '<span data-ttu-id="c3d70-249">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="c3d70-249">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="c3d70-250">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="c3d70-250">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="c3d70-251">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="c3d70-251">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="c3d70-252">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="c3d70-252">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.NoteTag:class'
    name: OneNote.NoteTag
  - uid: 'onenote!OneNote.NoteTagType:enum'
    name: OneNote.NoteTagType
  - uid: 'onenote!OneNote.NoteTagStatus:enum'
    name: OneNote.NoteTagStatus
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Paragraph#getParagraphInfo~0:complex'
    name: OfficeExtension.ClientResult<OneNote.ParagraphInfo>
    fullName: OfficeExtension.ClientResult<OneNote.ParagraphInfo>
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'onenote!OneNote.ParagraphInfo:interface'
        name: OneNote.ParagraphInfo
        fullName: OneNote.ParagraphInfo
      - name: '>'
        fullName: '>'
  - uid: 'onenote!OneNote.Image:class'
    name: OneNote.Image
  - uid: 'onenote!OneNote.InkWordCollection:class'
    name: OneNote.InkWordCollection
  - uid: 'onenote!OneNote.InsertLocation:enum'
    name: OneNote.InsertLocation
  - uid: 'onenote!OneNote.RichText:class'
    name: OneNote.RichText
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.Interfaces.ParagraphLoadOptions:interface'
    name: OneNote.Interfaces.ParagraphLoadOptions
  - uid: 'onenote!OneNote.Outline:class'
    name: OneNote.Outline
  - uid: 'onenote!OneNote.ParagraphCollection:class'
    name: OneNote.ParagraphCollection
  - uid: 'onenote!OneNote.TableCell:class'
    name: OneNote.TableCell
  - uid: 'onenote!OneNote.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'onenote!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.ParagraphData:interface'
    name: OneNote.Interfaces.ParagraphData
  - uid: 'onenote!OneNote.Paragraph#type~0:complex'
    name: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
    fullName: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
    spec.typeScript:
      - uid: 'onenote!OneNote.ParagraphType:enum'
        name: OneNote.ParagraphType
        fullName: OneNote.ParagraphType
      - name: ' | "RichText" | "Image" | "Table" | "Ink" | "Other"'
        fullName: ' | "RichText" | "Image" | "Table" | "Ink" | "Other"'