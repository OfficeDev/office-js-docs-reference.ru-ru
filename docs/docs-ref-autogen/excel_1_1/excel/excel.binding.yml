### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Binding:class'
    summary: |-
      <span data-ttu-id="729a7-101">Представляет привязку Office.js, которая определена в книге.</span><span class="sxs-lookup"><span data-stu-id="729a7-101">Represents an Office.js binding that is defined in the workbook.</span></span>

      <span data-ttu-id="729a7-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Binding
    fullName: Excel.Binding
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Binding#context:member'
      - 'excel!Excel.Binding#getRange:member(1)'
      - 'excel!Excel.Binding#getTable:member(1)'
      - 'excel!Excel.Binding#getText:member(1)'
      - 'excel!Excel.Binding#id:member'
      - 'excel!Excel.Binding#load:member(1)'
      - 'excel!Excel.Binding#load:member(2)'
      - 'excel!Excel.Binding#load:member(3)'
      - 'excel!Excel.Binding#toJSON:member(1)'
      - 'excel!Excel.Binding#type:member'
  - uid: 'excel!Excel.Binding#context:member'
    summary: '<span data-ttu-id="729a7-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="729a7-103">The request context associated with the object.</span></span> <span data-ttu-id="729a7-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="729a7-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Binding#getRange:member(1)'
    summary: |-
      <span data-ttu-id="729a7-105">Возвращает представленный привязкой диапазон.</span><span class="sxs-lookup"><span data-stu-id="729a7-105">Returns the range represented by the binding.</span></span> <span data-ttu-id="729a7-106">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="729a7-106">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="729a7-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="729a7-108">Примеры</span><span class="sxs-lookup"><span data-stu-id="729a7-108">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var range = binding.getRange();
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getTable:member(1)'
    summary: |-
      <span data-ttu-id="729a7-109">Возвращает представленную привязкой таблицу.</span><span class="sxs-lookup"><span data-stu-id="729a7-109">Returns the table represented by the binding.</span></span> <span data-ttu-id="729a7-110">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="729a7-110">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="729a7-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTable()
    fullName: getTable()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTable(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="729a7-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="729a7-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var table = binding.getTable();
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getText:member(1)'
    summary: |-
      <span data-ttu-id="729a7-113">Возвращает представленный привязкой текст.</span><span class="sxs-lookup"><span data-stu-id="729a7-113">Returns the text represented by the binding.</span></span> <span data-ttu-id="729a7-114">Если тип привязки неправильный, выдается ошибка.</span><span class="sxs-lookup"><span data-stu-id="729a7-114">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="729a7-115">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'excel!Excel.Binding#getText~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="729a7-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="729a7-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var text = binding.getText();
              binding.load('text');
              return ctx.sync().then(function() {
                  console.log(text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#id:member'
    summary: |-
      <span data-ttu-id="729a7-117">Представляет идентификатор привязки.</span><span class="sxs-lookup"><span data-stu-id="729a7-117">Represents binding identifier.</span></span> <span data-ttu-id="729a7-118">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="729a7-118">Read-only.</span></span>

      <span data-ttu-id="729a7-119">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Binding#load:member(1)'
    summary: <span data-ttu-id="729a7-120">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="729a7-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="729a7-121">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="729a7-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="729a7-122">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="729a7-122">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.Interfaces.BindingLoadOptions:interface'
  - uid: 'excel!Excel.Binding#load:member(2)'
    summary: <span data-ttu-id="729a7-123">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="729a7-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="729a7-124">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="729a7-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="729a7-125">Примеры</span><span class="sxs-lookup"><span data-stu-id="729a7-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              binding.load('type');
              return ctx.sync().then(function() {
                  console.log(binding.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="729a7-126">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="729a7-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Binding#load:member(3)'
    summary: <span data-ttu-id="729a7-127">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="729a7-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="729a7-128">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="729a7-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Binding;
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="729a7-129">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="729a7-129">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Binding#toJSON:member(1)'
    summary: '<span data-ttu-id="729a7-130">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="729a7-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="729a7-131">.</span><span class="sxs-lookup"><span data-stu-id="729a7-131"></span></span> <span data-ttu-id="729a7-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="729a7-132"></span></span><!-- --><span data-ttu-id="729a7-133">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Binding является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.BindingData`</span><span class="sxs-lookup"><span data-stu-id="729a7-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`</span></span><!-- --><span data-ttu-id="729a7-134">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="729a7-134">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingData:interface'
        description: ''
  - uid: 'excel!Excel.Binding#type:member'
    summary: |-
      <span data-ttu-id="729a7-135">Возвращает тип привязки.</span><span class="sxs-lookup"><span data-stu-id="729a7-135">Returns the type of the binding.</span></span> <span data-ttu-id="729a7-136">Дополнительные сведения см. в статье Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="729a7-136">See Excel.BindingType for details.</span></span> <span data-ttu-id="729a7-137">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="729a7-137">Read-only.</span></span>

      <span data-ttu-id="729a7-138">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="729a7-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
      return:
        type:
          - 'excel!Excel.Binding#type~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Binding#getText~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.Interfaces.BindingLoadOptions:interface'
    name: Excel.Interfaces.BindingLoadOptions
  - uid: 'excel!Excel.Interfaces.BindingData:interface'
    name: Excel.Interfaces.BindingData
  - uid: 'excel!Excel.Binding#type~0:complex'
    name: Excel.BindingType | "Range" | "Table" | "Text"
    fullName: Excel.BindingType | "Range" | "Table" | "Text"
    spec.typeScript:
      - uid: 'excel!Excel.BindingType:enum'
        name: Excel.BindingType
        fullName: Excel.BindingType
      - name: ' | "Range" | "Table" | "Text"'
        fullName: ' | "Range" | "Table" | "Text"'