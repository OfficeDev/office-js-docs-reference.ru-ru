### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Worksheet
    summary: |-
      <span data-ttu-id="fcc36-101">Лист Excel представляет собой сетку ячеек.</span><span class="sxs-lookup"><span data-stu-id="fcc36-101">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id="fcc36-102">Она может содержать данные, таблицы, диаграммы и т. д. Чтобы узнать больше об объектной модели листа, прочтите [Работа с листами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span><span class="sxs-lookup"><span data-stu-id="fcc36-102">It can contain data, tables, charts, etc. To learn more about the worksheet object model, read [Work with worksheets using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span></span><!-- --><span data-ttu-id="fcc36-103">.</span><span class="sxs-lookup"><span data-stu-id="fcc36-103"></span></span>

      <span data-ttu-id="fcc36-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Worksheet.activate
      - excel.Excel.Worksheet.charts
      - excel.Excel.Worksheet.context
      - excel.Excel.Worksheet.delete
      - excel.Excel.Worksheet.getCell
      - excel.Excel.Worksheet.getRange
      - excel.Excel.Worksheet.id
      - excel.Excel.Worksheet.load
      - excel.Excel.Worksheet.load_1
      - excel.Excel.Worksheet.load_2
      - excel.Excel.Worksheet.name
      - excel.Excel.Worksheet.position
      - excel.Excel.Worksheet.set
      - excel.Excel.Worksheet.set_1
      - excel.Excel.Worksheet.tables
      - excel.Excel.Worksheet.toJSON
      - excel.Excel.Worksheet.visibility
  - uid: excel.Excel.Worksheet.activate
    summary: |-
      <span data-ttu-id="fcc36-105">Активация листа в пользовательском интерфейсе Excel.</span><span class="sxs-lookup"><span data-stu-id="fcc36-105">Activate the worksheet in the Excel UI.</span></span>

      <span data-ttu-id="fcc36-106">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fcc36-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="fcc36-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.charts
    summary: |-
      <span data-ttu-id="fcc36-108">Возвращает коллекцию диаграмм, имеющихся на листе.</span><span class="sxs-lookup"><span data-stu-id="fcc36-108">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id="fcc36-109">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fcc36-109">Read-only.</span></span>

      <span data-ttu-id="fcc36-110">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
  - uid: excel.Excel.Worksheet.context
    summary: '<span data-ttu-id="fcc36-111">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="fcc36-111">The request context associated with the object.</span></span> <span data-ttu-id="fcc36-112">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="fcc36-112">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Worksheet.delete
    summary: |-
      <span data-ttu-id="fcc36-113">Удаляет лист из книги.</span><span class="sxs-lookup"><span data-stu-id="fcc36-113">Deletes the worksheet from the workbook.</span></span> <span data-ttu-id="fcc36-114">Обратите внимание, что если для отображения листа задано значение "Верихидден", операция удаления завершится с помощью GeneralException.</span><span class="sxs-lookup"><span data-stu-id="fcc36-114">Note that if the worksheet's visibility is set to "VeryHidden", the delete operation will fail with a GeneralException.</span></span>

      <span data-ttu-id="fcc36-115">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fcc36-116">Примеры</span><span class="sxs-lookup"><span data-stu-id="fcc36-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.getCell
    summary: |-
      <span data-ttu-id="fcc36-117">Получает объект диапазона, содержащий одну ячейку, по номеру строки и столбца.</span><span class="sxs-lookup"><span data-stu-id="fcc36-117">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="fcc36-118">Ячейка может находиться вне границ родительского диапазона, пока она остается в сетке листа.</span><span class="sxs-lookup"><span data-stu-id="fcc36-118">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>

      <span data-ttu-id="fcc36-119">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fcc36-120">Примеры</span><span class="sxs-lookup"><span data-stu-id="fcc36-120">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: '<span data-ttu-id="fcc36-121">Номер строки ячейки, которую требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="fcc36-121">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="fcc36-122">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="fcc36-122">Zero-indexed.</span></span>'
          type:
            - number
        - id: column
          description: '<span data-ttu-id="fcc36-123">Номер столбца ячейки, которую требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="fcc36-123">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="fcc36-124">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="fcc36-124">Zero-indexed.</span></span>'
          type:
            - number
  - uid: excel.Excel.Worksheet.getRange
    summary: |-
      <span data-ttu-id="fcc36-125">Получает объект Range, представляющий отдельный прямоугольный блок ячеек, заданный по адресу или имени.</span><span class="sxs-lookup"><span data-stu-id="fcc36-125">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>

      <span data-ttu-id="fcc36-126">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fcc36-127">Примеры</span><span class="sxs-lookup"><span data-stu-id="fcc36-127">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="fcc36-128">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="fcc36-128">Optional.</span></span> <span data-ttu-id="fcc36-129">Строка, представляющая адрес или имя диапазона.</span><span class="sxs-lookup"><span data-stu-id="fcc36-129">The string representing the address or name of the range.</span></span> <span data-ttu-id="fcc36-130">Например, "a1: B2".</span><span class="sxs-lookup"><span data-stu-id="fcc36-130">For example, "A1:B2".</span></span> <span data-ttu-id="fcc36-131">Если аргумент не указан, возвращается весь диапазон листа.</span><span class="sxs-lookup"><span data-stu-id="fcc36-131">If not specified, the entire worksheet range is returned.</span></span>'
          type:
            - string
  - uid: excel.Excel.Worksheet.id
    summary: |-
      <span data-ttu-id="fcc36-p109">Возвращает значение, однозначно идентифицирующее лист в данной книге. Значение идентификатора остается прежним, даже если переименовать или переместить лист. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fcc36-p109">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>

      <span data-ttu-id="fcc36-135">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.load
    summary: <span data-ttu-id="fcc36-136">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fcc36-137">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="fcc36-137">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fcc36-138">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="fcc36-138">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fcc36-139">`load(option?: string | string[]): Excel.Worksheet`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fcc36-139">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fcc36-140">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fcc36-140">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fcc36-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="fcc36-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id="fcc36-142">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="fcc36-142">It is similar to the preceding signature.</span></span> <span data-ttu-id="fcc36-143">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="fcc36-143">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fcc36-144">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="fcc36-144">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fcc36-145">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="fcc36-145">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetLoadOptions
  - uid: excel.Excel.Worksheet.load_1
    summary: <span data-ttu-id="fcc36-146">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fcc36-147">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="fcc36-147">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fcc36-148">Примеры</span><span class="sxs-lookup"><span data-stu-id="fcc36-148">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fcc36-149">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fcc36-149">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Worksheet.load_2
    summary: <span data-ttu-id="fcc36-150">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-150">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fcc36-151">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="fcc36-151">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fcc36-152">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fcc36-152">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Worksheet.name
    summary: |-
      <span data-ttu-id="fcc36-153">Отображаемое имя листа.</span><span class="sxs-lookup"><span data-stu-id="fcc36-153">The display name of the worksheet.</span></span>

      <span data-ttu-id="fcc36-154">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-154">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.position
    summary: |-
      <span data-ttu-id="fcc36-155">Положение листа (начиная с нуля) в книге.</span><span class="sxs-lookup"><span data-stu-id="fcc36-155">The zero-based position of the worksheet within the workbook.</span></span>

      <span data-ttu-id="fcc36-156">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.set
    summary: '<span data-ttu-id="fcc36-157">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-157">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fcc36-158">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="fcc36-158">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="fcc36-159">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="fcc36-159">This method has the following additional signature:</span></span>

      `set(properties: Excel.Worksheet): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="fcc36-160">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="fcc36-160">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.WorksheetUpdateData
        - id: options
          description: '<span data-ttu-id="fcc36-161">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fcc36-161">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Worksheet.set_1
    summary: '<span data-ttu-id="fcc36-162">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-162">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.tables
    summary: |-
      <span data-ttu-id="fcc36-163">Коллекция таблиц, имеющихся на листе.</span><span class="sxs-lookup"><span data-stu-id="fcc36-163">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id="fcc36-164">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fcc36-164">Read-only.</span></span>

      <span data-ttu-id="fcc36-165">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Worksheet.toJSON
    summary: '<span data-ttu-id="fcc36-166">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fcc36-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fcc36-167">.</span><span class="sxs-lookup"><span data-stu-id="fcc36-167"></span></span> <span data-ttu-id="fcc36-168">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fcc36-168"></span></span><!-- --><span data-ttu-id="fcc36-169">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. лист является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="fcc36-169">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="fcc36-170">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="fcc36-170">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetData
        description: ''
  - uid: excel.Excel.Worksheet.visibility
    summary: |-
      <span data-ttu-id="fcc36-171">Видимость листа.</span><span class="sxs-lookup"><span data-stu-id="fcc36-171">The Visibility of the worksheet.</span></span>

      <span data-ttu-id="fcc36-172">\[[Набор API: ExcelApi 1,1 для чтения видимости; 1,2 — для его установки.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="fcc36-172">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="fcc36-173">\]</span><span class="sxs-lookup"><span data-stu-id="fcc36-173"></span></span>
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"