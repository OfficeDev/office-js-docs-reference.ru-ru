### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Range:class'
    summary: |-
      <span data-ttu-id="57968-101">Представляет непрерывную область в документе.</span><span class="sxs-lookup"><span data-stu-id="57968-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="57968-102">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Range#clear:member(1)'
      - 'word!Word.Range#compareLocationWith:member(1)'
      - 'word!Word.Range#contentControls:member'
      - 'word!Word.Range#context:member'
      - 'word!Word.Range#delete:member(1)'
      - 'word!Word.Range#expandTo:member(1)'
      - 'word!Word.Range#expandToOrNullObject:member(1)'
      - 'word!Word.Range#font:member'
      - 'word!Word.Range#getHtml:member(1)'
      - 'word!Word.Range#getHyperlinkRanges:member(1)'
      - 'word!Word.Range#getNextTextRange:member(1)'
      - 'word!Word.Range#getNextTextRangeOrNullObject:member(1)'
      - 'word!Word.Range#getOoxml:member(1)'
      - 'word!Word.Range#getRange:member(1)'
      - 'word!Word.Range#getRange:member(2)'
      - 'word!Word.Range#getTextRanges:member(1)'
      - 'word!Word.Range#hyperlink:member'
      - 'word!Word.Range#inlinePictures:member'
      - 'word!Word.Range#insertBreak:member(1)'
      - 'word!Word.Range#insertBreak:member(2)'
      - 'word!Word.Range#insertContentControl:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(2)'
      - 'word!Word.Range#insertHtml:member(1)'
      - 'word!Word.Range#insertHtml:member(2)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Range#insertOoxml:member(1)'
      - 'word!Word.Range#insertOoxml:member(2)'
      - 'word!Word.Range#insertParagraph:member(1)'
      - 'word!Word.Range#insertParagraph:member(2)'
      - 'word!Word.Range#insertTable:member(1)'
      - 'word!Word.Range#insertTable:member(2)'
      - 'word!Word.Range#insertText:member(1)'
      - 'word!Word.Range#insertText:member(2)'
      - 'word!Word.Range#intersectWith:member(1)'
      - 'word!Word.Range#intersectWithOrNullObject:member(1)'
      - 'word!Word.Range#isEmpty:member'
      - 'word!Word.Range#lists:member'
      - 'word!Word.Range#load:member(1)'
      - 'word!Word.Range#load:member(2)'
      - 'word!Word.Range#load:member(3)'
      - 'word!Word.Range#paragraphs:member'
      - 'word!Word.Range#parentBody:member'
      - 'word!Word.Range#parentContentControl:member'
      - 'word!Word.Range#parentContentControlOrNullObject:member'
      - 'word!Word.Range#parentTable:member'
      - 'word!Word.Range#parentTableCell:member'
      - 'word!Word.Range#parentTableCellOrNullObject:member'
      - 'word!Word.Range#parentTableOrNullObject:member'
      - 'word!Word.Range#search:member(1)'
      - 'word!Word.Range#select:member(1)'
      - 'word!Word.Range#select:member(2)'
      - 'word!Word.Range#set:member(1)'
      - 'word!Word.Range#set:member(2)'
      - 'word!Word.Range#split:member(1)'
      - 'word!Word.Range#style:member'
      - 'word!Word.Range#styleBuiltIn:member'
      - 'word!Word.Range#tables:member'
      - 'word!Word.Range#text:member'
      - 'word!Word.Range#toJSON:member(1)'
      - 'word!Word.Range#track:member(1)'
      - 'word!Word.Range#untrack:member(1)'
  - uid: 'word!Word.Range#clear:member(1)'
    summary: |-
      <span data-ttu-id="57968-103">Очищает содержимое объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-103">Clears the contents of the range object.</span></span> <span data-ttu-id="57968-104">Пользователь может отменить операцию для очищенного содержимого.</span><span class="sxs-lookup"><span data-stu-id="57968-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="57968-105">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#compareLocationWith:member(1)'
    summary: |-
      <span data-ttu-id="57968-107">Сравнивает расположение данного диапазона с расположением другого диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-107">Compares this range's location with another range's location.</span></span>

      <span data-ttu-id="57968-108">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-108">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: compareLocationWith(range)
    fullName: compareLocationWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'compareLocationWith(range: Word.Range): OfficeExtension.ClientResult<Word.LocationRelation>;'
      return:
        type:
          - 'word!Word.Range#compareLocationWith~0:complex'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="57968-109">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-109">Required.</span></span> <span data-ttu-id="57968-110">Диапазон, сравниваемый с этим диапазоном.</span><span class="sxs-lookup"><span data-stu-id="57968-110">The range to compare with this range.</span></span>'
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#contentControls:member'
    summary: |-
      <span data-ttu-id="57968-111">Получает коллекцию объектов элементов управления содержимым в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-111">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="57968-112">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-112">Read-only.</span></span>

      <span data-ttu-id="57968-113">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Range#context:member'
    summary: '<span data-ttu-id="57968-114">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="57968-114">The request context associated with the object.</span></span> <span data-ttu-id="57968-115">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="57968-115">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Range#delete:member(1)'
    summary: |-
      <span data-ttu-id="57968-116">Удаляет диапазон и его содержимое из документа.</span><span class="sxs-lookup"><span data-stu-id="57968-116">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="57968-117">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-117">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-118">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#expandTo:member(1)'
    summary: |-
      <span data-ttu-id="57968-119">Возвращает новый диапазон, который простирается в том или ином направлении от данного диапазона и перекрывает другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-119">Returns a new range that extends from this range in either direction to cover another range.</span></span> <span data-ttu-id="57968-120">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="57968-120">This range is not changed.</span></span> <span data-ttu-id="57968-121">Выдает ошибку, если два диапазона не имеют объединения.</span><span class="sxs-lookup"><span data-stu-id="57968-121">Throws an error if the two ranges do not have a union.</span></span>

      <span data-ttu-id="57968-122">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-122">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: expandTo(range)
    fullName: expandTo(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandTo(range: Word.Range): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="57968-123">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-123">Required.</span></span> <span data-ttu-id="57968-124">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-124">Another range.</span></span>
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#expandToOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="57968-125">Возвращает новый диапазон, который простирается в том или ином направлении от данного диапазона и перекрывает другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-125">Returns a new range that extends from this range in either direction to cover another range.</span></span> <span data-ttu-id="57968-126">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="57968-126">This range is not changed.</span></span> <span data-ttu-id="57968-127">Возвращает нулевой объект, если два диапазона не имеют объединения.</span><span class="sxs-lookup"><span data-stu-id="57968-127">Returns a null object if the two ranges do not have a union.</span></span>

      <span data-ttu-id="57968-128">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-128">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: expandToOrNullObject(range)
    fullName: expandToOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandToOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="57968-129">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-129">Required.</span></span> <span data-ttu-id="57968-130">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-130">Another range.</span></span>
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#font:member'
    summary: |-
      <span data-ttu-id="57968-131">Возвращает формат текста диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-131">Gets the text format of the range.</span></span> <span data-ttu-id="57968-132">Используйте это свойство, чтобы получать и задавать имея, размер, цвет и другие свойства шрифта.</span><span class="sxs-lookup"><span data-stu-id="57968-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="57968-133">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-133">Read-only.</span></span>

      <span data-ttu-id="57968-134">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Range#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="57968-135">Возвращает HTML-представление объекта Range.</span><span class="sxs-lookup"><span data-stu-id="57968-135">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="57968-136">При отображении на веб-странице или в средстве просмотра HTML форматирование будет близким, но не точным, соответствующим для форматирования документа.</span><span class="sxs-lookup"><span data-stu-id="57968-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="57968-137">Этот метод не возвращает точно такой же HTML-код для одного и того же документа на различных платформах (Windows, Mac, Word для Интернета и т. д.).</span><span class="sxs-lookup"><span data-stu-id="57968-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="57968-138">Если вам нужна точная точность или согласованность на различных платформах `Range.getOoxml()` , используйте и преобразуйте возвращенный XML в HTML.</span><span class="sxs-lookup"><span data-stu-id="57968-138">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="57968-139">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-140">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-140">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getHyperlinkRanges:member(1)'
    summary: |-
      <span data-ttu-id="57968-141">Возвращает дочерние диапазоны гиперссылок в данном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-141">Gets hyperlink child ranges within the range.</span></span>

      <span data-ttu-id="57968-142">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-142">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHyperlinkRanges()
    fullName: getHyperlinkRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHyperlinkRanges(): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
  - uid: 'word!Word.Range#getNextTextRange:member(1)'
    summary: |-
      <span data-ttu-id="57968-143">Получает следующий диапазон текста с использованием знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="57968-143">Gets the next text range by using punctuation marks and/or other ending marks.</span></span> <span data-ttu-id="57968-144">Выдает ошибку, если этот диапазон текста является последним.</span><span class="sxs-lookup"><span data-stu-id="57968-144">Throws an error if this text range is the last one.</span></span>

      <span data-ttu-id="57968-145">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-145">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getNextTextRange(endingMarks, trimSpacing)'
    fullName: 'getNextTextRange(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRange(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="57968-146">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-146">Required.</span></span> <span data-ttu-id="57968-147">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="57968-147">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="57968-148">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-148">Optional.</span></span> <span data-ttu-id="57968-149">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) из начала и конца возвращаемого диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-149">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range.</span></span> <span data-ttu-id="57968-150">Значение по умолчанию — false, что указывает на то, что в начале и конце диапазона содержатся символы пробелов.</span><span class="sxs-lookup"><span data-stu-id="57968-150">Default is false which indicates that spacing characters at the start and end of the range are included.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Range#getNextTextRangeOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="57968-151">Получает следующий диапазон текста с использованием знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="57968-151">Gets the next text range by using punctuation marks and/or other ending marks.</span></span> <span data-ttu-id="57968-152">Возвращает нулевой объект, если этот диапазон текста является последним.</span><span class="sxs-lookup"><span data-stu-id="57968-152">Returns a null object if this text range is the last one.</span></span>

      <span data-ttu-id="57968-153">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-153">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    fullName: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRangeOrNullObject(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="57968-154">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-154">Required.</span></span> <span data-ttu-id="57968-155">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="57968-155">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="57968-156">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-156">Optional.</span></span> <span data-ttu-id="57968-157">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) из начала и конца возвращаемого диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-157">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the returned range.</span></span> <span data-ttu-id="57968-158">Значение по умолчанию — false, что указывает на то, что в начале и конце диапазона содержатся символы пробелов.</span><span class="sxs-lookup"><span data-stu-id="57968-158">Default is false which indicates that spacing characters at the start and end of the range are included.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Range#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="57968-159">Возвращает OOXML-представление объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-159">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="57968-160">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-160">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-161">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-161">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getRange:member(1)'
    summary: |-
      <span data-ttu-id="57968-162">Клонирует диапазон либо получает его начальную или конечную точку в виде нового диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-162">Clones the range, or gets the starting or ending point of the range as a new range.</span></span>

      <span data-ttu-id="57968-163">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-163">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="57968-164">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-164">Optional.</span></span> <span data-ttu-id="57968-165">Допустимые значения: "целое", "начало", "конец", "после" или "содержимое".</span><span class="sxs-lookup"><span data-stu-id="57968-165">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Range#getRange:member(2)'
    summary: |-
      <span data-ttu-id="57968-166">Клонирует диапазон либо получает его начальную или конечную точку в виде нового диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-166">Clones the range, or gets the starting or ending point of the range as a new range.</span></span>

      <span data-ttu-id="57968-167">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-167">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="57968-168">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-168">Optional.</span></span> <span data-ttu-id="57968-169">Допустимые значения: "целое", "начало", "конец", "после" или "содержимое".</span><span class="sxs-lookup"><span data-stu-id="57968-169">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Range#getTextRanges:member(1)'
    summary: |-
      <span data-ttu-id="57968-170">Возвращает дочерние диапазоны текста в диапазоне с помощью знаков препинания и/или других конечных меток.</span><span class="sxs-lookup"><span data-stu-id="57968-170">Gets the text child ranges in the range by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="57968-171">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-171">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-172">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-172">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Gets the complete sentence (as range) associated with the insertion point.
            let sentences = context.document
              .getSelection()
              .getTextRanges(["."] /* Using the "." as delimiter */, false /*means without trimming spaces*/);
            sentences.load("$none");
            await context.sync();

            // Expands the range to the end of the paragraph to get all the complete sentences.
            let sentencesToTheEndOfParagraph = sentences.items[0]
              .getRange()
              .expandTo(
                context.document
                  .getSelection()
                  .paragraphs.getFirst()
                  .getRange("End")
              )
              .getTextRanges(["."], false /* Don't trim spaces*/);
            sentencesToTheEndOfParagraph.load("text");
            await context.sync();

            for (let i = 0; i < sentencesToTheEndOfParagraph.items.length; i++) {
              console.log(sentencesToTheEndOfParagraph.items[i].text);
            }
          });
          ```
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="57968-173">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-173">Required.</span></span> <span data-ttu-id="57968-174">Знаки пунктуации и/или другие закрывающие метки в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="57968-174">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="57968-175">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-175">Optional.</span></span> <span data-ttu-id="57968-176">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) от начала и конца диапазонов, возвращаемых в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="57968-176">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="57968-177">Значение по умолчанию — false, которое указывает, что пробелы в начале и конце диапазонов включаются в коллекцию Range.</span><span class="sxs-lookup"><span data-stu-id="57968-177">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Range#hyperlink:member'
    summary: |-
      <span data-ttu-id="57968-178">Возвращает первую гиперссылку в диапазоне или задает для него гиперссылку.</span><span class="sxs-lookup"><span data-stu-id="57968-178">Gets the first hyperlink in the range, or sets a hyperlink on the range.</span></span> <span data-ttu-id="57968-179">При добавлении в диапазон новой гиперссылки из него удаляются все имеющиеся гиперссылки.</span><span class="sxs-lookup"><span data-stu-id="57968-179">All hyperlinks in the range are deleted when you set a new hyperlink on the range.</span></span> <span data-ttu-id="57968-180">Используйте '\#', чтобы отделить адрес от части необязательного расположения.</span><span class="sxs-lookup"><span data-stu-id="57968-180">Use a '\#' to separate the address part from the optional location part.</span></span>

      <span data-ttu-id="57968-181">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-181">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#inlinePictures:member'
    summary: |-
      <span data-ttu-id="57968-182">Возвращает коллекцию объектов встроенных рисунков в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-182">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id="57968-183">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-183">Read-only.</span></span>

      <span data-ttu-id="57968-184">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-184">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Range#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="57968-185">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="57968-185">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="57968-186">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: '<span data-ttu-id="57968-187">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-187">Required.</span></span> <span data-ttu-id="57968-188">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="57968-188">The break type to add.</span></span>'
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: '<span data-ttu-id="57968-189">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-189">Required.</span></span> <span data-ttu-id="57968-190">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-190">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="57968-191">Вставляет разрыв в указанном расположении в основном документе.</span><span class="sxs-lookup"><span data-stu-id="57968-191">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="57968-192">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-192">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-193">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-193">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: '<span data-ttu-id="57968-194">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-194">Required.</span></span> <span data-ttu-id="57968-195">Тип разрыва, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="57968-195">The break type to add.</span></span>'
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="57968-196">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-196">Required.</span></span> <span data-ttu-id="57968-197">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-197">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="57968-198">Включает объект диапазона в элемент управления содержимым форматированного текста.</span><span class="sxs-lookup"><span data-stu-id="57968-198">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="57968-199">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-199">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-200">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-200">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: 'word!Word.Range#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="57968-201">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-201">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="57968-202">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-202">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-203">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-203">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="57968-204">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-204">Required.</span></span> <span data-ttu-id="57968-205">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="57968-205">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-206">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-206">Required.</span></span> <span data-ttu-id="57968-207">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-207">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="57968-208">Вставляет документ в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-208">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="57968-209">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-209">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="57968-210">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-210">Required.</span></span> <span data-ttu-id="57968-211">Содержимое docx файлов в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="57968-211">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-212">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-212">Required.</span></span> <span data-ttu-id="57968-213">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-213">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="57968-214">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-214">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="57968-215">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-215">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-216">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-216">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="57968-217">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-217">Required.</span></span> <span data-ttu-id="57968-218">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-218">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-219">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-219">Required.</span></span> <span data-ttu-id="57968-220">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-220">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="57968-221">Вставляет HTML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-221">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="57968-222">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-222">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="57968-223">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-223">Required.</span></span> <span data-ttu-id="57968-224">HTML-код, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-224">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-225">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-225">Required.</span></span> <span data-ttu-id="57968-226">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-226">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="57968-227">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-227">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="57968-228">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-228">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="57968-229">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-229">Required.</span></span> <span data-ttu-id="57968-230">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="57968-230">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-231">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-231">Required.</span></span> <span data-ttu-id="57968-232">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-232">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="57968-233">Вставляет рисунок в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-233">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="57968-234">\[[Набор API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-234">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="57968-235">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-235">Required.</span></span> <span data-ttu-id="57968-236">Вставленное изображение в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="57968-236">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-237">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-237">Required.</span></span> <span data-ttu-id="57968-238">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-238">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="57968-239">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-239">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="57968-240">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-240">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-241">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-241">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="57968-242">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-242">Required.</span></span> <span data-ttu-id="57968-243">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="57968-243">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-244">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-244">Required.</span></span> <span data-ttu-id="57968-245">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-245">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="57968-246">Вставляет OOXML-код в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-246">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="57968-247">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-247">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="57968-248">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-248">Required.</span></span> <span data-ttu-id="57968-249">Вставляемый OOXML-код.</span><span class="sxs-lookup"><span data-stu-id="57968-249">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-250">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-250">Required.</span></span> <span data-ttu-id="57968-251">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-251">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="57968-252">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-252">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="57968-253">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-253">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-254">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-254">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="57968-255">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-255">Required.</span></span> <span data-ttu-id="57968-256">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-256">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-257">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-257">Required.</span></span> <span data-ttu-id="57968-258">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-258">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="57968-259">Вставляет абзац в указанном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-259">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="57968-260">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-260">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: '<span data-ttu-id="57968-261">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-261">Required.</span></span> <span data-ttu-id="57968-262">Текст абзаца, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-262">The paragraph text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-263">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-263">Required.</span></span> <span data-ttu-id="57968-264">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-264">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertTable:member(1)'
    summary: |-
      <span data-ttu-id="57968-265">Вставляет таблицу с указанным количеством строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="57968-265">Inserts a table with the specified number of rows and columns.</span></span>

      <span data-ttu-id="57968-266">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-266">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="57968-267">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-267">Required.</span></span> <span data-ttu-id="57968-268">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="57968-268">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="57968-269">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="57968-269">Required.</span></span> <span data-ttu-id="57968-270">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="57968-270">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: '<span data-ttu-id="57968-271">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-271">Required.</span></span> <span data-ttu-id="57968-272">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-272">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: '<span data-ttu-id="57968-273">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="57968-273">Optional 2D array.</span></span> <span data-ttu-id="57968-274">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="57968-274">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Range#insertTable:member(2)'
    summary: |-
      <span data-ttu-id="57968-275">Вставляет таблицу с указанным количеством строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="57968-275">Inserts a table with the specified number of rows and columns.</span></span>

      <span data-ttu-id="57968-276">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-276">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="57968-277">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-277">Required.</span></span> <span data-ttu-id="57968-278">Количество строк в таблице.</span><span class="sxs-lookup"><span data-stu-id="57968-278">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="57968-279">Обязательный.</span><span class="sxs-lookup"><span data-stu-id="57968-279">Required.</span></span> <span data-ttu-id="57968-280">Количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="57968-280">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: '<span data-ttu-id="57968-281">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-281">Required.</span></span> <span data-ttu-id="57968-282">Возможные значения: Before и After.</span><span class="sxs-lookup"><span data-stu-id="57968-282">The value can be ''Before'' or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="57968-283">Необязательный двухмерный массив.</span><span class="sxs-lookup"><span data-stu-id="57968-283">Optional 2D array.</span></span> <span data-ttu-id="57968-284">Ячейки заполняются, если в массиве указаны соответствующие строки.</span><span class="sxs-lookup"><span data-stu-id="57968-284">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Range#insertText:member(1)'
    summary: |-
      <span data-ttu-id="57968-285">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-285">Inserts text at the specified location.</span></span>

      <span data-ttu-id="57968-286">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-286">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-287">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-287">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="57968-288">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-288">Required.</span></span> <span data-ttu-id="57968-289">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-289">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="57968-290">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-290">Required.</span></span> <span data-ttu-id="57968-291">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-291">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertText:member(2)'
    summary: |-
      <span data-ttu-id="57968-292">Вставляет текст в заданном расположении.</span><span class="sxs-lookup"><span data-stu-id="57968-292">Inserts text at the specified location.</span></span>

      <span data-ttu-id="57968-293">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-293">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: '<span data-ttu-id="57968-294">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-294">Required.</span></span> <span data-ttu-id="57968-295">Текст, который необходимо вставить.</span><span class="sxs-lookup"><span data-stu-id="57968-295">Text to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="57968-296">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-296">Required.</span></span> <span data-ttu-id="57968-297">Возможные значения: "замена", "начало", "конец", "до" или "после".</span><span class="sxs-lookup"><span data-stu-id="57968-297">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#intersectWith:member(1)'
    summary: |-
      <span data-ttu-id="57968-298">Возвращает новый диапазон, представляющий собой пересечение данного диапазона с другим.</span><span class="sxs-lookup"><span data-stu-id="57968-298">Returns a new range as the intersection of this range with another range.</span></span> <span data-ttu-id="57968-299">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="57968-299">This range is not changed.</span></span> <span data-ttu-id="57968-300">Выдает ошибку, если два диапазона не перекрываются или не являются смежными.</span><span class="sxs-lookup"><span data-stu-id="57968-300">Throws an error if the two ranges are not overlapped or adjacent.</span></span>

      <span data-ttu-id="57968-301">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-301">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: intersectWith(range)
    fullName: intersectWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWith(range: Word.Range): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="57968-302">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-302">Required.</span></span> <span data-ttu-id="57968-303">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-303">Another range.</span></span>
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#intersectWithOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="57968-304">Возвращает новый диапазон, представляющий собой пересечение данного диапазона с другим.</span><span class="sxs-lookup"><span data-stu-id="57968-304">Returns a new range as the intersection of this range with another range.</span></span> <span data-ttu-id="57968-305">Данный диапазон не меняется.</span><span class="sxs-lookup"><span data-stu-id="57968-305">This range is not changed.</span></span> <span data-ttu-id="57968-306">Возвращает нулевой объект, если два диапазона не перекрываются или не являются смежными.</span><span class="sxs-lookup"><span data-stu-id="57968-306">Returns a null object if the two ranges are not overlapped or adjacent.</span></span>

      <span data-ttu-id="57968-307">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: intersectWithOrNullObject(range)
    fullName: intersectWithOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWithOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: range
          description: <span data-ttu-id="57968-308">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-308">Required.</span></span> <span data-ttu-id="57968-309">Другой диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-309">Another range.</span></span>
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#isEmpty:member'
    summary: |-
      <span data-ttu-id="57968-310">Проверяет, является ли длина диапазона нулевой.</span><span class="sxs-lookup"><span data-stu-id="57968-310">Checks whether the range length is zero.</span></span> <span data-ttu-id="57968-311">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-311">Read-only.</span></span>

      <span data-ttu-id="57968-312">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-312">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isEmpty
    fullName: isEmpty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEmpty: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Range#lists:member'
    summary: |-
      <span data-ttu-id="57968-313">Возвращает коллекцию объектов списков в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-313">Gets the collection of list objects in the range.</span></span> <span data-ttu-id="57968-314">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-314">Read-only.</span></span>

      <span data-ttu-id="57968-315">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-315">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - 'word!Word.ListCollection:class'
  - uid: 'word!Word.Range#load:member(1)'
    summary: <span data-ttu-id="57968-316">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-316">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57968-317">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="57968-317">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="57968-318">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="57968-318">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="57968-319">`load(option?: string | string[]): Word.Range`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57968-319">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="57968-320">`load(option?: { select?: string; expand?: string; }): Word.Range`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57968-320">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="57968-321">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="57968-321">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="57968-322">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="57968-322">It is similar to the preceding signature.</span></span> <span data-ttu-id="57968-323">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="57968-323">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="57968-324">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="57968-324">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="57968-325">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="57968-325">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.RangeLoadOptions:interface'
  - uid: 'word!Word.Range#load:member(2)'
    summary: <span data-ttu-id="57968-326">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-326">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57968-327">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="57968-327">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="57968-328">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57968-328">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'word!Word.Range#load:member(3)'
    summary: <span data-ttu-id="57968-329">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-329">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="57968-330">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="57968-330">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="57968-331">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="57968-331">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Range#paragraphs:member'
    summary: |-
      <span data-ttu-id="57968-332">Возвращает коллекцию объектов абзаца в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-332">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="57968-333">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-333">Read-only.</span></span>

      <span data-ttu-id="57968-334">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-334">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.Range#parentBody:member'
    summary: |-
      <span data-ttu-id="57968-335">Возвращает родительский текст диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-335">Gets the parent body of the range.</span></span> <span data-ttu-id="57968-336">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-336">Read-only.</span></span>

      <span data-ttu-id="57968-337">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-337">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Range#parentContentControl:member'
    summary: |-
      <span data-ttu-id="57968-338">Возвращает элемент управления содержимым, содержащий диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-338">Gets the content control that contains the range.</span></span> <span data-ttu-id="57968-339">Выдает ошибку, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="57968-339">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="57968-340">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-340">Read-only.</span></span>

      <span data-ttu-id="57968-341">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-341">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#parentContentControlOrNullObject:member'
    summary: |-
      <span data-ttu-id="57968-342">Возвращает элемент управления содержимым, содержащий диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-342">Gets the content control that contains the range.</span></span> <span data-ttu-id="57968-343">Возвращает нулевой объект, если родительский элемент управления содержимым отсутствует.</span><span class="sxs-lookup"><span data-stu-id="57968-343">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="57968-344">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-344">Read-only.</span></span>

      <span data-ttu-id="57968-345">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-345">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#parentTable:member'
    summary: |-
      <span data-ttu-id="57968-346">Возвращает таблицу, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-346">Gets the table that contains the range.</span></span> <span data-ttu-id="57968-347">Выдает ошибку, если она не находится в таблице.</span><span class="sxs-lookup"><span data-stu-id="57968-347">Throws an error if it is not contained in a table.</span></span> <span data-ttu-id="57968-348">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-348">Read-only.</span></span>

      <span data-ttu-id="57968-349">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-349">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Range#parentTableCell:member'
    summary: |-
      <span data-ttu-id="57968-350">Возвращает ячейку таблицы, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-350">Gets the table cell that contains the range.</span></span> <span data-ttu-id="57968-351">Выдает ошибку, если она не находится в ячейке таблицы.</span><span class="sxs-lookup"><span data-stu-id="57968-351">Throws an error if it is not contained in a table cell.</span></span> <span data-ttu-id="57968-352">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-352">Read-only.</span></span>

      <span data-ttu-id="57968-353">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-353">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Range#parentTableCellOrNullObject:member'
    summary: |-
      <span data-ttu-id="57968-354">Возвращает ячейку таблицы, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-354">Gets the table cell that contains the range.</span></span> <span data-ttu-id="57968-355">Если он находится не в ячейке таблицы, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="57968-355">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="57968-356">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-356">Read-only.</span></span>

      <span data-ttu-id="57968-357">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-357">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Range#parentTableOrNullObject:member'
    summary: |-
      <span data-ttu-id="57968-358">Возвращает таблицу, содержащую диапазон.</span><span class="sxs-lookup"><span data-stu-id="57968-358">Gets the table that contains the range.</span></span> <span data-ttu-id="57968-359">Если она находится не в таблице, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="57968-359">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="57968-360">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-360">Read-only.</span></span>

      <span data-ttu-id="57968-361">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-361">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Range#search:member(1)'
    summary: |-
      <span data-ttu-id="57968-362">Выполняет поиск с указанным SearchOptions в области объекта Range.</span><span class="sxs-lookup"><span data-stu-id="57968-362">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="57968-363">Результат поиска — это коллекция объектов диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-363">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="57968-364">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-364">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="57968-365">Обязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-365">Required.</span></span> <span data-ttu-id="57968-366">Текст для поиска.</span><span class="sxs-lookup"><span data-stu-id="57968-366">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="57968-367">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-367">Optional.</span></span> <span data-ttu-id="57968-368">Параметры поиска.</span><span class="sxs-lookup"><span data-stu-id="57968-368">Options for the search.</span></span>
          type:
            - 'word!Word.Range#search~0:complex'
  - uid: 'word!Word.Range#select:member(1)'
    summary: |-
      <span data-ttu-id="57968-369">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="57968-369">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="57968-370">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-370">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="57968-371">Примеры</span><span class="sxs-lookup"><span data-stu-id="57968-371">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="57968-372">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-372">Optional.</span></span> <span data-ttu-id="57968-373">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="57968-373">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="57968-374">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="57968-374">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Range#select:member(2)'
    summary: |-
      <span data-ttu-id="57968-375">Выбор диапазона и переход к нему в пользовательском интерфейсе Word.</span><span class="sxs-lookup"><span data-stu-id="57968-375">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="57968-376">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-376">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="57968-377">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="57968-377">Optional.</span></span> <span data-ttu-id="57968-378">Возможные режимы выбора: Select, Start и End.</span><span class="sxs-lookup"><span data-stu-id="57968-378">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="57968-379">Значение по умолчанию — Select.</span><span class="sxs-lookup"><span data-stu-id="57968-379">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Range#set:member(1)'
    summary: '<span data-ttu-id="57968-380">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-380">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="57968-381">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="57968-381">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="57968-382">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="57968-382">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="57968-383">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="57968-383">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'word!Word.Interfaces.RangeUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="57968-384">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-384">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Range#set:member(2)'
    summary: '<span data-ttu-id="57968-385">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-385">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#split:member(1)'
    summary: |-
      <span data-ttu-id="57968-386">Разделяет диапазон на дочерние диапазоны с помощью разделителей.</span><span class="sxs-lookup"><span data-stu-id="57968-386">Splits the range into child ranges by using delimiters.</span></span>

      <span data-ttu-id="57968-387">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-387">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: delimiters
          description: <span data-ttu-id="57968-388">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-388">Required.</span></span> <span data-ttu-id="57968-389">Разделители в виде массива строк.</span><span class="sxs-lookup"><span data-stu-id="57968-389">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: multiParagraphs
          description: '<span data-ttu-id="57968-390">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-390">Optional.</span></span> <span data-ttu-id="57968-391">Указывает, может ли возвращенный дочерний диапазон охватывать несколько абзацев.</span><span class="sxs-lookup"><span data-stu-id="57968-391">Indicates whether a returned child range can cover multiple paragraphs.</span></span> <span data-ttu-id="57968-392">Значение по умолчанию — false, которое указывает, что границы абзацев также используются в качестве разделителей.</span><span class="sxs-lookup"><span data-stu-id="57968-392">Default is false which indicates that the paragraph boundaries are also used as delimiters.</span></span>'
          type:
            - boolean
        - id: trimDelimiters
          description: '<span data-ttu-id="57968-393">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-393">Optional.</span></span> <span data-ttu-id="57968-394">Указывает, следует ли отрезать разделители от диапазонов в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="57968-394">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="57968-395">Значение по умолчанию — false, которое указывает, что разделители включены в диапазоны, возвращаемые в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="57968-395">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="57968-396">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="57968-396">Optional.</span></span> <span data-ttu-id="57968-397">Указывает, следует ли обрезать символы интервалов (пробелы, знаки табуляции, разрывы столбцов и конечные знаки абзаца) от начала и конца диапазонов, возвращаемых в коллекции Range.</span><span class="sxs-lookup"><span data-stu-id="57968-397">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="57968-398">Значение по умолчанию — false, которое указывает, что пробелы в начале и конце диапазонов включаются в коллекцию Range.</span><span class="sxs-lookup"><span data-stu-id="57968-398">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Range#style:member'
    summary: |-
      <span data-ttu-id="57968-399">Получает или задает имя стиля для диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-399">Gets or sets the style name for the range.</span></span> <span data-ttu-id="57968-400">Используйте это свойство для пользовательских стилей и локализованных имен стилей.</span><span class="sxs-lookup"><span data-stu-id="57968-400">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="57968-401">Чтобы использовать встроенные стили, поддерживающие несколько языковых стандартов, применяйте свойство styleBuiltIn.</span><span class="sxs-lookup"><span data-stu-id="57968-401">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="57968-402">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-402">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#styleBuiltIn:member'
    summary: |-
      <span data-ttu-id="57968-p188">Возвращает или задает имя встроенного стиля диапазона. Используйте это свойство для встроенных стилей, поддерживающих несколько языковых стандартов. Чтобы использовать пользовательские стили или локализованные имена стилей, применяйте свойство style.</span><span class="sxs-lookup"><span data-stu-id="57968-p188">Gets or sets the built-in style name for the range. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="57968-406">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-406">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - 'word!Word.Range#styleBuiltIn~0:complex'
  - uid: 'word!Word.Range#tables:member'
    summary: |-
      <span data-ttu-id="57968-407">Возвращает коллекцию объектов таблиц в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="57968-407">Gets the collection of table objects in the range.</span></span> <span data-ttu-id="57968-408">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-408">Read-only.</span></span>

      <span data-ttu-id="57968-409">\[[Набор API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-409">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - 'word!Word.TableCollection:class'
  - uid: 'word!Word.Range#text:member'
    summary: |-
      <span data-ttu-id="57968-410">Возвращает текст диапазона.</span><span class="sxs-lookup"><span data-stu-id="57968-410">Gets the text of the range.</span></span> <span data-ttu-id="57968-411">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="57968-411">Read-only.</span></span>

      <span data-ttu-id="57968-412">\[[Набор API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="57968-412">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#toJSON:member(1)'
    summary: '<span data-ttu-id="57968-413">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="57968-413">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="57968-414">.</span><span class="sxs-lookup"><span data-stu-id="57968-414"></span></span> <span data-ttu-id="57968-415">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="57968-415"></span></span><!-- --><span data-ttu-id="57968-416">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Word. Range — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="57968-416">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="57968-417">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-417">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - 'word!Word.Interfaces.RangeData:interface'
        description: ''
  - uid: 'word!Word.Range#track:member(1)'
    summary: '<span data-ttu-id="57968-418">Отслеживает объект для автоматической корректировки с учетом окружающих изменений в документе.</span><span class="sxs-lookup"><span data-stu-id="57968-418">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="57968-419">Этот вызов является сокращением для context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="57968-419">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="57968-420">Если этот объект используется в вызовах .sync и вне последовательного выполнения пакета .run с возникновением ошибки InvalidObjectPath при установке свойства или вызове метода для объекта, необходимо было добавить объект в коллекцию отслеживаемых объектов при первоначальном создании объекта.</span><span class="sxs-lookup"><span data-stu-id="57968-420">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
  - uid: 'word!Word.Range#untrack:member(1)'
    summary: '<span data-ttu-id="57968-421">Освобождает память, связанную с этим объектом, если он ранее отслеживался.</span><span class="sxs-lookup"><span data-stu-id="57968-421">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="57968-422">Этот вызов является сокращением для context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="57968-422">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="57968-423">Наличие большого количества отслеживаемых объектов замедляет ведущее приложение, поэтому не забывайте освобождать любые добавленные объекты после завершения их использования.</span><span class="sxs-lookup"><span data-stu-id="57968-423">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="57968-424">Перед фактическим освобождением памяти потребуется вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="57968-424">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Range#compareLocationWith~0:complex'
    name: OfficeExtension.ClientResult<Word.LocationRelation>
    fullName: OfficeExtension.ClientResult<Word.LocationRelation>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'word!Word.LocationRelation:enum'
        name: Word.LocationRelation
        fullName: Word.LocationRelation
      - name: '>'
        fullName: '>'
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Range#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Range#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.ListCollection:class'
    name: Word.ListCollection
  - uid: 'word!Word.Interfaces.RangeLoadOptions:interface'
    name: Word.Interfaces.RangeLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.TableCell:class'
    name: Word.TableCell
  - uid: 'word!Word.Range#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.RangeUpdateData:interface'
    name: Interfaces.RangeUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Range#styleBuiltIn~0:complex'
    name: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.TableCollection:class'
    name: Word.TableCollection
  - uid: 'word!Word.Interfaces.RangeData:interface'
    name: Word.Interfaces.RangeData