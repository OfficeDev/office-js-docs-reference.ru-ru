### YamlMime:UniversalReference
ms.openlocfilehash: ae1ad113b3077e9c2f1f07b7853629caf71c92cf
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/15/2019
ms.locfileid: "30056195"
items:
- uid: Outlook_1_1.Office.AppointmentCompose
  summary: >-
    Режим организатора встреч для [Office. Context. Mailbox. Item](xref:Outlook_1_1.Office.Item)<!-- -->.


    **Важно!** это внутренний объект Outlook, который не предоставляется напрямую через существующие интерфейсы. Этот режим следует рассматривать как режим Office. Context. Mailbox. Item. Для получения дополнительных сведений обратитесь к странице [объектНой модели](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.1/office.context.mailbox.item) .
  name: Office.AppointmentCompose
  fullName: Office.AppointmentCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  - 'ItemCompose '
  package: Outlook_1_1
  children:
  - Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync
  - Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_1
  - Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_2
  - Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_3
  - Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync
  - Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_1
  - Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_2
  - Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_3
  - Outlook_1_1.Office.AppointmentCompose.loadCustomPropertiesAsync
  - Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync
  - Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_1
  - Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_2
  - Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_3
  - Outlook_1_1.Office.AppointmentCompose.body
  - Outlook_1_1.Office.AppointmentCompose.end
  - Outlook_1_1.Office.AppointmentCompose.itemType
  - Outlook_1_1.Office.AppointmentCompose.location
  - Outlook_1_1.Office.AppointmentCompose.optionalAttendees
  - Outlook_1_1.Office.AppointmentCompose.requiredAttendees
  - Outlook_1_1.Office.AppointmentCompose.start
  - Outlook_1_1.Office.AppointmentCompose.subject
- uid: Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync
  summary: >-
    Добавляет файл в сообщение или встречу в качестве вложения.


    Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Аттачментсизиксцеедед — вложение превышает разрешенное.</td></tr><tr><td></td><td>Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>


    Кроме этой подписи, метод также имеет следующие подписи:


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.
      type:
      - string
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: options
      description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова. isInline: при значении true указывает, что вложение будет отображаться встроенным в тексте сообщения и не должно отображаться в списке вложений.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value. Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_1
  summary: >-
    Добавляет файл в сообщение или встречу в качестве вложения.


    Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Аттачментсизиксцеедед — вложение превышает разрешенное.</td></tr><tr><td></td><td>Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName)
  fullName: addFileAttachmentAsync(uri, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.
      type:
      - string
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
- uid: Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_2
  summary: >-
    Добавляет файл в сообщение или встречу в качестве вложения.


    Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Аттачментсизиксцеедед — вложение превышает разрешенное.</td></tr><tr><td></td><td>Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, options)
  fullName: addFileAttachmentAsync(uri, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.
      type:
      - string
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: options
      description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова. isInline: при значении true указывает, что вложение будет отображаться встроенным в тексте сообщения и не должно отображаться в списке вложений.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.AppointmentCompose.addFileAttachmentAsync_3
  summary: >-
    Добавляет файл в сообщение или встречу в качестве вложения.


    Метод addFileAttachmentAsync передает файл по указанному универсальному коду ресурса (URI) и вкладывает его в элемент в форме создания.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Аттачментсизиксцеедед — вложение превышает разрешенное.</td></tr><tr><td></td><td>Филетипенотсуппортед — вложение имеет недопустимый добавочный номер.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: Универсальный код ресурса (URI), представляющий расположение файла, который нужно вложить в сообщение или встречу. Максимальная длина — 2048 символов.
      type:
      - string
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value. Если передать вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync
  summary: >-
    Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.


    Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>


    Кроме этой подписи, этот метод также имеет следующие подписи:


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.
      type:
      - any
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value. Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_1
  summary: >-
    Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.


    Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName)
  fullName: addItemAttachmentAsync(itemId, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.
      type:
      - any
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
- uid: Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_2
  summary: >-
    Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.


    Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, options)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.
      type:
      - any
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.AppointmentCompose.addItemAttachmentAsync_3
  summary: >-
    Добавляет к сообщению элемент Exchange, например сообщение, в виде вложения.


    Метод addItemAttachmentAsync вкладывает элемент с указанным идентификатором Exchange в элемент в форме создания. Если указан метод обратного вызова, этот метод вызывается с помощью параметра asyncResult, который содержит идентификатор вложения или код, указывающий на ошибки, которые произошли при вложении элемента. При необходимости можно использовать параметр options для передачи сведений о состоянии в метод обратного вызова.


    Идентификатор можно последовательно использовать с методом removeAttachmentAsync, чтобы удалить вложение, добавленное во время текущего сеанса.


    Если ваша надстройка Office выполняется в Outlook Web App, метод addItemAttachmentAsync обеспечивает вложение элементов в элементы, отличные от редактируемого. Однако это действие не рекомендуется выполнять, поскольку оно не поддерживается.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>NumberOfAttachmentsExceeded — сообщение или встреча содержит слишком много вложений.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Идентификатор Exchange для вкладываемого элемента. Максимальная длина — 100 символов.
      type:
      - any
    - id: attachmentName
      description: Имя вложения, которое отображается при передаче вложения. Максимальная длина — 255 символов.
      type:
      - string
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. В случае успешного выполнения идентификатор вложения будет указываться в свойстве asyncResult. Value. Если добавить вложение не удается, объект asyncResult будет содержать объект Error с описанием ошибки.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.loadCustomPropertiesAsync
  summary: >-
    Асинхронно загружает настраиваемые свойства для надстройки для выбранного элемента.


    Настраиваемые свойства сохраняются в виде пар "ключ-значение" для каждого приложения и каждого элемента. Этот метод возвращает объект CustomProperties при обратном вызове, который предоставляет методы для доступа к настраиваемым свойствам, характерным для текущего элемента и текущей надстройки. Настраиваемые свойства не шифруются для элемента, поэтому этот способ хранения не является безопасным.


    Настраиваемые свойства предоставляются в виде объекта CustomProperties в свойстве asyncResult.value. Этот объект позволяет получить, задать и удалить настраиваемые свойства из элемента, а также сохранить изменения, внесенные в настраиваемое свойство, на сервере.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Необязательное свойство. Разработчики могут указать любой объект, к которому необходимо получить доступ, в функции обратного вызова. Доступ к этому объекту можно получить с помощью свойства asyncResult. asyncContext в функции обратного вызова.
      type:
      - any
- uid: Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync
  summary: >-
    Удаляет вложение из сообщения или встречи.


    Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента. Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса. В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса. Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Инвалидаттачментид — идентификатор вложения не существует.</td></tr></table>


    Кроме этой подписи, метод также имеет следующие подписи:


    `removeAttachmentAsync(attachmentId: string): void;`


    `removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Примеры


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: Идентификатор удаляемого вложения.
      type:
      - string
    - id: options
      description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Необязательное свойство. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_1
  summary: >-
    Удаляет вложение из сообщения или встречи.


    Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента. Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса. В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса. Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Инвалидаттачментид — идентификатор вложения не существует.</td></tr></table>
  name: removeAttachmentAsync(attachmentId)
  fullName: removeAttachmentAsync(attachmentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: Идентификатор удаляемого вложения.
      type:
      - string
- uid: Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_2
  summary: >-
    Удаляет вложение из сообщения или встречи.


    Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента. Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса. В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса. Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Инвалидаттачментид — идентификатор вложения не существует.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, options)
  fullName: removeAttachmentAsync(attachmentId, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: Идентификатор удаляемого вложения.
      type:
      - string
    - id: options
      description: 'Необязательное свойство. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставить любой объект, к которому необходимо получить доступ, в методе обратного вызова.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.AppointmentCompose.removeAttachmentAsync_3
  summary: >-
    Удаляет вложение из сообщения или встречи.


    Метод removeAttachmentAsync удаляет вложение с указанным идентификатором из элемента. Идентификатор вложения рекомендуется использовать для удаления вложения, только если оно добавлено тем же почтовым приложением в ходе текущего сеанса. В Outlook Web App и Outlook Web App для устройств идентификатор вложения действителен только в рамках одного сеанса. Сеанс завершается, когда пользователь закрывает приложение или начинает создавать элемент во встроенной форме, а затем переходит из формы в отдельное окно.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr>


    <tr><td>Ошибки</td><td>Инвалидаттачментид — идентификатор вложения не существует.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: Идентификатор удаляемого вложения.
      type:
      - string
    - id: callback
      description: Необязательное свойство. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра типа Office. AsyncResult. Если не удается удалить вложение, свойство asyncResult. Error будет содержать код ошибки с причиной сбоя.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_1.Office.AppointmentCompose.body
  summary: >-
    Получает объект, предоставляющий методы для работы с основным текстом элемента.


    \[[Набор API: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    // This example gets the body of the message as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of an object that is passed as the result parameter to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_1.Office.AppointmentCompose.end
  summary: >-
    Получает или задает дату и время окончания встречи.


    Свойство End — это объект [Office. Time](xref:Outlook_1_1.Office.Time) , выраженный как значение даты и времени в формате UTC. С помощью метода convertToLocalClientTime можно преобразовать значение свойства End в локальную дату и время клиента.


    Если для задания времени окончания используется метод Time.setAsync, вам следует с помощью метода convertToUtcClientTime преобразовать местное время в клиенте на время в формате UTC для сервера.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    // The following example sets the end time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var endTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("End Time " + result.asyncContext.verb);
        }
    });

    ```
  name: end
  fullName: end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_1.Office.AppointmentCompose.itemType
  summary: >-
    Получает тип элемента, который представляет экземпляр.


    Свойство itemType возвращает одно из значений перечисления ItemType, которое указывает, является ли экземпляр объекта item сообщением или собранием.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_1.Office.AppointmentCompose.location
  summary: >-
    Получает или задает [Office. место](xref:Outlook_1_1.Office.Location) встречи. Свойство location возвращает объект Location, предоставляющий методы, которые используются для получения и задания места встречи.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: Location;'
    return:
      type:
      - Location
- uid: Outlook_1_1.Office.AppointmentCompose.optionalAttendees
  summary: >-
    Предоставляет доступ к необязательным участникам события. Тип объекта и уровень доступа зависят от режима текущего элемента. Свойство optionalAttendees возвращает объект [Office. Recipients](xref:Outlook_1_1.Office.Recipients) , который предоставляет методы для получения или обновления необязательных участников собрания.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_1.Office.AppointmentCompose.requiredAttendees
  summary: >-
    Предоставляет доступ к обязательным участникам события. Тип объекта и уровень доступа зависят от режима текущего элемента. Свойство requiredAttendees возвращает объект [Office. Recipients](xref:Outlook_1_1.Office.Recipients) , который предоставляет методы для получения или обновления обязательных участников собрания.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
        console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
    }

    ```
  name: requiredAttendees
  fullName: requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_1.Office.AppointmentCompose.start
  summary: >-
    Получает или задает дату и время начала встречи.


    Свойство Start — это объект [Office. Time](xref:Outlook_1_1.Office.Time) , выраженный как значение даты и времени в формате UTC. Можно использовать метод convertToLocalClientTime для преобразования значения в локальную дату и время клиента.


    Если для задания времени начала используется метод Time.setAsync, вам следует с помощью метода convertToUtcClientTime преобразовать местное время в клиенте на время в формате UTC для сервера.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_1.Office.AppointmentCompose.subject
  summary: >-
    Получает или задает описание, которое отображается в поле темы элемента.


    Свойство subject получает или задает всю тему элемента для отправки с почтового сервера.


    Свойство subject возвращает объект Subject, который предоставляет методы для получения и задания темы.


    \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Организатор встречи</td></tr></table>

    ####Примеры


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
