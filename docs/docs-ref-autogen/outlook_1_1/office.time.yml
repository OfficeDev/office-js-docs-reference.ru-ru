### YamlMime:UniversalReference
ms.openlocfilehash: 7ad156e3054c7ca3fdbcd5adf6adf108bcf220bf
ms.sourcegitcommit: a68606173477c7fb4069880eea941766c7d8c50d
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/01/2019
ms.locfileid: "29704328"
items:
- uid: Outlook_1_1.Office.Time
  summary: >-
    Объект Time возвращается как свойство встречи start или end в режиме создания.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>
  name: Office.Time
  fullName: Office.Time
  langs:
  - typeScript
  type: interface
  package: Outlook_1_1
  children:
  - Outlook_1_1.Office.Time.getAsync
  - Outlook_1_1.Office.Time.setAsync
- uid: Outlook_1_1.Office.Time.getAsync
  summary: >-
    Получает время начала или окончания встречи.


    Дата и время указываются в виде объекта Date в свойстве asyncResult.value. Значение приводится в формате UTC. Время в формате UTC можно преобразовать в локальное время клиента с помощью метода convertToLocalClientTime.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr></table>


    В дополнение к подписи этот метод также имеет следующую подпись:


    `getAsync(callback: (result: Office.AsyncResult<Date>) => void): void;`
  name: getAsync(options, callback)
  fullName: getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. `value` Свойства результата — это объект Date.
      type:
      - '(result: Office.AsyncResult<Date>) => void'
- uid: Outlook_1_1.Office.Time.setAsync
  summary: >-
    Задает время начала или окончания встречи.


    Если для свойства start вызывается метод setAsync, свойство end будет настроено для поддержки предварительно заданной продолжительности встречи. Если для свойства end вызывается метод setAsync, продолжительность встречи будет расширена до нового времени окончания.


    Время необходимо указать в формате UTC. Правильное время в формате UTC можно получить с помощью метода convertToUtcClientTime.


    \[[Набор API-Интерфейсов: почтовый ящик 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Минимальный уровень разрешений](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Применимый режим Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Создание</td></tr>


    <tr><td>Ошибки</td><td>InvalidEndTime - время окончания встречи предшествует времени начала встречи.</td></tr></table>


    В дополнение к подписи этот метод также имеет следующие цифровые подписи.


    `setAsync(dateTime: Date): void;`


    `setAsync(dateTime: Date, options: Office.AsyncContextOptions): void;`


    `setAsync(dateTime: Date, callback: (result: Office.AsyncResult<void>) => void): void;`
  name: setAsync(dateTime, options, callback)
  fullName: setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Объект даты и времени в формате UTC.
      type:
      - Date
    - id: options
      description: 'Объектный литерал, содержащий одно или несколько из указанных ниже свойств. asyncContext: разработчики могут предоставлять любого объекта, их необходимо получить доступ в метод обратного вызова.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: После завершения работы метода, функции, переданной в параметре обратного вызова вызывается с один параметр типа Office.AsyncResult. Если параметру возникает ошибка даты и времени, свойство asyncResult.error будет содержать код ошибки.
      type:
      - '(result: Office.AsyncResult<void>) => void'
