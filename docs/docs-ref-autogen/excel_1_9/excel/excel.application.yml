### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Application:class'
    summary: |-
      <span data-ttu-id="e3706-101">Представляет приложение Excel, которое управляет книгой.</span><span class="sxs-lookup"><span data-stu-id="e3706-101">Represents the Excel application that manages the workbook.</span></span>

      <span data-ttu-id="e3706-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Application
    fullName: Excel.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Application#calculate:member(1)'
      - 'excel!Excel.Application#calculate:member(2)'
      - 'excel!Excel.Application#calculationEngineVersion:member'
      - 'excel!Excel.Application#calculationMode:member'
      - 'excel!Excel.Application#calculationState:member'
      - 'excel!Excel.Application#context:member'
      - 'excel!Excel.Application#iterativeCalculation:member'
      - 'excel!Excel.Application#load:member(1)'
      - 'excel!Excel.Application#load:member(2)'
      - 'excel!Excel.Application#load:member(3)'
      - 'excel!Excel.Application#set:member(1)'
      - 'excel!Excel.Application#set:member(2)'
      - 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
      - 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
      - 'excel!Excel.Application#toJSON:member(1)'
  - uid: 'excel!Excel.Application#calculate:member(1)'
    summary: |-
      <span data-ttu-id="e3706-103">Пересчитывает данные во всех открытых в текущий момент книгах Excel.</span><span class="sxs-lookup"><span data-stu-id="e3706-103">Recalculate all currently opened workbooks in Excel.</span></span>

      <span data-ttu-id="e3706-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(calculationType)
    fullName: calculate(calculationType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: Excel.CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: '<span data-ttu-id="e3706-105">Определяет тип расчета, который нужно использовать.</span><span class="sxs-lookup"><span data-stu-id="e3706-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="e3706-106">Дополнительные сведения см. в статье Excel. Калкулатионтипе.</span><span class="sxs-lookup"><span data-stu-id="e3706-106">See Excel.CalculationType for details.</span></span>'
          type:
            - 'excel!Excel.CalculationType:enum'
  - uid: 'excel!Excel.Application#calculate:member(2)'
    summary: |-
      <span data-ttu-id="e3706-107">Пересчитывает данные во всех открытых в текущий момент книгах Excel.</span><span class="sxs-lookup"><span data-stu-id="e3706-107">Recalculate all currently opened workbooks in Excel.</span></span>

      <span data-ttu-id="e3706-108">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(calculationTypeString)
    fullName: calculate(calculationTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e3706-109">Примеры</span><span class="sxs-lookup"><span data-stu-id="e3706-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              ctx.workbook.application.calculate('Full');
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: calculationTypeString
          description: '<span data-ttu-id="e3706-110">Определяет тип расчета, который нужно использовать.</span><span class="sxs-lookup"><span data-stu-id="e3706-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="e3706-111">Дополнительные сведения см. в статье Excel. Калкулатионтипе.</span><span class="sxs-lookup"><span data-stu-id="e3706-111">See Excel.CalculationType for details.</span></span>'
          type:
            - '"Recalculate" | "Full" | "FullRebuild"'
  - uid: 'excel!Excel.Application#calculationEngineVersion:member'
    summary: |-
      <span data-ttu-id="e3706-112">Возвращает версию модуля вычислений Excel, использованного для последнего полного пересчета.</span><span class="sxs-lookup"><span data-stu-id="e3706-112">Returns the Excel calculation engine version used for the last full recalculation.</span></span> <span data-ttu-id="e3706-113">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e3706-113">Read-only.</span></span>

      <span data-ttu-id="e3706-114">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-114">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Application#calculationMode:member'
    summary: |-
      <span data-ttu-id="e3706-115">Возвращает режим вычислений, используемый в книге в соответствии с константами в Excel. Калкулатионмоде.</span><span class="sxs-lookup"><span data-stu-id="e3706-115">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="e3706-116">Возможные значения:`Automatic`</span><span class="sxs-lookup"><span data-stu-id="e3706-116">Possible values are: `Automatic`</span></span><!-- --><span data-ttu-id="e3706-117">, где Excel управляет пересчетом;`AutomaticExceptTables`</span><span class="sxs-lookup"><span data-stu-id="e3706-117">, where Excel controls recalculation; `AutomaticExceptTables`</span></span><!-- --><span data-ttu-id="e3706-118">, где Excel контролирует пересчет, но игнорирует изменения в таблицах;`Manual`</span><span class="sxs-lookup"><span data-stu-id="e3706-118">, where Excel controls recalculation but ignores changes in tables; `Manual`</span></span><!-- --><span data-ttu-id="e3706-119">, где выполняется расчет, когда пользователь запрашивает его.</span><span class="sxs-lookup"><span data-stu-id="e3706-119">, where calculation is done when the user requests it.</span></span>

      <span data-ttu-id="e3706-120">\[[Набор API: ExcelApi 1,1 для Get, 1,8 для Set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-120">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationMode
    fullName: calculationMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
      return:
        type:
          - 'excel!Excel.Application#calculationMode~0:complex'
  - uid: 'excel!Excel.Application#calculationState:member'
    summary: |-
      <span data-ttu-id="e3706-121">Возвращает состояние вычисления приложения.</span><span class="sxs-lookup"><span data-stu-id="e3706-121">Returns the calculation state of the application.</span></span> <span data-ttu-id="e3706-122">Дополнительные сведения см. в статье Excel.CalculationState.</span><span class="sxs-lookup"><span data-stu-id="e3706-122">See Excel.CalculationState for details.</span></span> <span data-ttu-id="e3706-123">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e3706-123">Read-only.</span></span>

      <span data-ttu-id="e3706-124">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-124">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationState
    fullName: calculationState
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationState: Excel.CalculationState | "Done" | "Calculating" | "Pending";'
      return:
        type:
          - 'excel!Excel.Application#calculationState~0:complex'
  - uid: 'excel!Excel.Application#context:member'
    summary: '<span data-ttu-id="e3706-125">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="e3706-125">The request context associated with the object.</span></span> <span data-ttu-id="e3706-126">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e3706-126">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Application#iterativeCalculation:member'
    summary: |-
      <span data-ttu-id="e3706-127">Возвращает параметры итеративных вычислений.</span><span class="sxs-lookup"><span data-stu-id="e3706-127">Returns the Iterative Calculation settings.</span></span> <span data-ttu-id="e3706-128">В Excel для Windows и Mac параметры будут применены к приложению Excel.</span><span class="sxs-lookup"><span data-stu-id="e3706-128">In Excel on Windows and Mac, the settings will apply to the Excel Application.</span></span> <span data-ttu-id="e3706-129">В Excel на веб-сайте и других платформах параметры будут применены к активной книге.</span><span class="sxs-lookup"><span data-stu-id="e3706-129">In Excel on the web and other platforms, the settings will apply to the active workbook.</span></span>

      <span data-ttu-id="e3706-130">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-130">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iterativeCalculation
    fullName: iterativeCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iterativeCalculation: Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
  - uid: 'excel!Excel.Application#load:member(1)'
    summary: <span data-ttu-id="e3706-131">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e3706-132">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="e3706-132">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e3706-133">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="e3706-133">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e3706-134">`load(option?: string | string[]): Excel.Application`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e3706-134">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e3706-135">`load(option?: { select?: string; expand?: string; }): Excel.Application`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e3706-135">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e3706-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="e3706-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="e3706-137">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="e3706-137">It is similar to the preceding signature.</span></span> <span data-ttu-id="e3706-138">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e3706-138">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e3706-139">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="e3706-139">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e3706-140">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="e3706-140">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ApplicationLoadOptions:interface'
  - uid: 'excel!Excel.Application#load:member(2)'
    summary: <span data-ttu-id="e3706-141">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e3706-142">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e3706-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e3706-143">Примеры</span><span class="sxs-lookup"><span data-stu-id="e3706-143">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var application = ctx.workbook.application;
              application.load('calculationMode');
              return ctx.sync().then(function() {
                  console.log(application.calculationMode);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e3706-144">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e3706-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Application#load:member(3)'
    summary: <span data-ttu-id="e3706-145">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-145">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e3706-146">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="e3706-146">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e3706-147">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e3706-147">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Application#set:member(1)'
    summary: '<span data-ttu-id="e3706-148">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-148">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e3706-149">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="e3706-149">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e3706-150">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="e3706-150">This method has the following additional signature:</span></span>

      `set(properties: Excel.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e3706-151">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e3706-151">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.ApplicationUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="e3706-152">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e3706-152">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Application#set:member(2)'
    summary: '<span data-ttu-id="e3706-153">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-153">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
    summary: |-
      <span data-ttu-id="e3706-p113">Приостанавливает вычисление до вызова следующего "context.sync()". После этого за пересчет книги и распространение всех зависимостей несет ответственность разработчик.</span><span class="sxs-lookup"><span data-stu-id="e3706-p113">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>

      <span data-ttu-id="e3706-156">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-156">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: suspendApiCalculationUntilNextSync()
    fullName: suspendApiCalculationUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
    summary: |-
      <span data-ttu-id="e3706-157">Приостанавливает обновление экрана до вызова следующего метода context.sync().</span><span class="sxs-lookup"><span data-stu-id="e3706-157">Suspends sceen updating until the next "context.sync()" is called.</span></span>

      <span data-ttu-id="e3706-158">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e3706-158">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: suspendScreenUpdatingUntilNextSync()
    fullName: suspendScreenUpdatingUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendScreenUpdatingUntilNextSync(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e3706-159">Примеры</span><span class="sxs-lookup"><span data-stu-id="e3706-159">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const rowCount = 500;
              const columnCount = 20;

              const startTime = Date.now();
              console.log("Starting...");

              if (pauseScreenPainting) {
                  context.application.suspendScreenUpdatingUntilNextSync();
              }

              for (let i = 0; i < rowCount; i++) {
                  for (let j = 0; j < columnCount; j++) {
                      let cell = sheet.getCell(i, j);
                      cell.values = [[i * j * Math.random()]];
                      if (untrack) {
                          cell.untrack();
                      }
                  }
              }

              await context.sync();

              console.log(`Ending. Adding ${rowCount * columnCount} cells took ${Date.now() - startTime} milliseconds`);
          });
          ```
  - uid: 'excel!Excel.Application#toJSON:member(1)'
    summary: '<span data-ttu-id="e3706-160">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e3706-160">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e3706-161">.</span><span class="sxs-lookup"><span data-stu-id="e3706-161"></span></span> <span data-ttu-id="e3706-162">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e3706-162"></span></span><!-- --><span data-ttu-id="e3706-163">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Application — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="e3706-163">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="e3706-164">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e3706-164">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ApplicationData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ApplicationData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.CalculationType:enum'
    name: Excel.CalculationType
  - uid: 'excel!Excel.Application#calculationMode~0:complex'
    name: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    fullName: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationMode:enum'
        name: Excel.CalculationMode
        fullName: Excel.CalculationMode
      - name: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
        fullName: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
  - uid: 'excel!Excel.Application#calculationState~0:complex'
    name: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    fullName: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationState:enum'
        name: Excel.CalculationState
        fullName: Excel.CalculationState
      - name: ' | "Done" | "Calculating" | "Pending"'
        fullName: ' | "Done" | "Calculating" | "Pending"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.IterativeCalculation:class'
    name: Excel.IterativeCalculation
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.Interfaces.ApplicationLoadOptions:interface'
    name: Excel.Interfaces.ApplicationLoadOptions
  - uid: 'excel!Excel.Interfaces.ApplicationUpdateData:interface'
    name: Interfaces.ApplicationUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ApplicationData:interface'
    name: Excel.Interfaces.ApplicationData