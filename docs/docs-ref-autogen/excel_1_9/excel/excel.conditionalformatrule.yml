### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    summary: |-
      <span data-ttu-id="b6ce7-101">Представляет правило для всех традиционных комбинаций правил и форматов.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-101">Represents a rule, for all traditional rule/format pairings.</span></span>

      <span data-ttu-id="b6ce7-102">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6ce7-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalFormatRule
    fullName: Excel.ConditionalFormatRule
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormatRule#context:member'
      - 'excel!Excel.ConditionalFormatRule#formula:member'
      - 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
      - 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
      - 'excel!Excel.ConditionalFormatRule#load:member(1)'
      - 'excel!Excel.ConditionalFormatRule#load:member(2)'
      - 'excel!Excel.ConditionalFormatRule#load:member(3)'
      - 'excel!Excel.ConditionalFormatRule#set:member(1)'
      - 'excel!Excel.ConditionalFormatRule#set:member(2)'
      - 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalFormatRule#context:member'
    summary: '<span data-ttu-id="b6ce7-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-103">The request context associated with the object.</span></span> <span data-ttu-id="b6ce7-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalFormatRule#formula:member'
    summary: |-
      <span data-ttu-id="b6ce7-105">Формула, с помощью которой при необходимости оценивается правило условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-105">The formula, if required, to evaluate the conditional format rule on.</span></span>

      <span data-ttu-id="b6ce7-106">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6ce7-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b6ce7-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="b6ce7-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
    summary: |-
      <span data-ttu-id="b6ce7-108">Формула, с помощью которой при необходимости оценивается правило условного форматирования на языке пользователя.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-108">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>

      <span data-ttu-id="b6ce7-109">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6ce7-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulaLocal
    fullName: formulaLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
    summary: |-
      <span data-ttu-id="b6ce7-110">Формула, с помощью которой при необходимости оценивается правило условного форматирования в формате R1C1.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-110">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>

      <span data-ttu-id="b6ce7-111">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6ce7-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulaR1C1
    fullName: formulaR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaR1C1: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(1)'
    summary: <span data-ttu-id="b6ce7-112">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6ce7-113">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="b6ce7-113">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b6ce7-114">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="b6ce7-114">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b6ce7-115">`load(option?: string | string[]): Excel.ConditionalFormatRule`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-115">`load(option?: string | string[]): Excel.ConditionalFormatRule` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b6ce7-116">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-116">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b6ce7-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule` - Only available on collection types.</span></span> <span data-ttu-id="b6ce7-118">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="b6ce7-119">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b6ce7-120">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b6ce7-121">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(2)'
    summary: <span data-ttu-id="b6ce7-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6ce7-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="b6ce7-124">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(3)'
    summary: <span data-ttu-id="b6ce7-125">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6ce7-126">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b6ce7-127">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(1)'
    summary: '<span data-ttu-id="b6ce7-128">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b6ce7-129">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="b6ce7-130">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="b6ce7-130">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalFormatRule): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="b6ce7-131">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="b6ce7-132">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(2)'
    summary: '<span data-ttu-id="b6ce7-133">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormatRule): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalFormatRule:class'
  - uid: 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
    summary: '<span data-ttu-id="b6ce7-134">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b6ce7-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b6ce7-135">.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-135"></span></span> <span data-ttu-id="b6ce7-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b6ce7-136"></span></span><!-- --><span data-ttu-id="b6ce7-137">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. ConditionalFormatRule — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ConditionalFormatRuleData`</span><span class="sxs-lookup"><span data-stu-id="b6ce7-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormatRule object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatRuleData`</span></span><!-- --><span data-ttu-id="b6ce7-138">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="b6ce7-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    name: Excel.ConditionalFormatRule
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
    name: Excel.Interfaces.ConditionalFormatRuleLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
    name: Interfaces.ConditionalFormatRuleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
    name: Excel.Interfaces.ConditionalFormatRuleData