### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTable:class'
    summary: |-
      <span data-ttu-id="fc8d6-101">Представляет сводную таблицу Excel.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-101">Represents an Excel PivotTable.</span></span> <span data-ttu-id="fc8d6-102">Чтобы узнать больше об объектной модели сводной таблицы, читайте [работу со сводными таблицами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span><span class="sxs-lookup"><span data-stu-id="fc8d6-102">To learn more about the PivotTable object model, read [Work with PivotTables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span></span><!-- --><span data-ttu-id="fc8d6-103">.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-103"></span></span>

      <span data-ttu-id="fc8d6-104">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTable#columnHierarchies:member'
      - 'excel!Excel.PivotTable#context:member'
      - 'excel!Excel.PivotTable#dataHierarchies:member'
      - 'excel!Excel.PivotTable#delete:member(1)'
      - 'excel!Excel.PivotTable#enableDataValueEditing:member'
      - 'excel!Excel.PivotTable#filterHierarchies:member'
      - 'excel!Excel.PivotTable#hierarchies:member'
      - 'excel!Excel.PivotTable#id:member'
      - 'excel!Excel.PivotTable#layout:member'
      - 'excel!Excel.PivotTable#load:member(1)'
      - 'excel!Excel.PivotTable#load:member(2)'
      - 'excel!Excel.PivotTable#load:member(3)'
      - 'excel!Excel.PivotTable#name:member'
      - 'excel!Excel.PivotTable#refresh:member(1)'
      - 'excel!Excel.PivotTable#rowHierarchies:member'
      - 'excel!Excel.PivotTable#set:member(1)'
      - 'excel!Excel.PivotTable#set:member(2)'
      - 'excel!Excel.PivotTable#toJSON:member(1)'
      - 'excel!Excel.PivotTable#useCustomSortLists:member'
      - 'excel!Excel.PivotTable#worksheet:member'
  - uid: 'excel!Excel.PivotTable#columnHierarchies:member'
    summary: |-
      <span data-ttu-id="fc8d6-105">Иерархии сводных столбцов сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-105">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-106">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fc8d6-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="fc8d6-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#context:member'
    summary: '<span data-ttu-id="fc8d6-108">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-108">The request context associated with the object.</span></span> <span data-ttu-id="fc8d6-109">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-109">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTable#dataHierarchies:member'
    summary: |-
      <span data-ttu-id="fc8d6-110">Иерархии сводных данных сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-110">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-111">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fc8d6-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="fc8d6-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#delete:member(1)'
    summary: |-
      <span data-ttu-id="fc8d6-113">Удаляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-113">Deletes the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-114">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fc8d6-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="fc8d6-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#enableDataValueEditing:member'
    summary: |-
      <span data-ttu-id="fc8d6-116">Указывает, разрешается ли пользователю изменять значения данных сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-116">Specifies whether the PivotTable allows values in the data body to be edited by the user.</span></span>

      <span data-ttu-id="fc8d6-117">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-117">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enableDataValueEditing
    fullName: enableDataValueEditing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableDataValueEditing: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotTable#filterHierarchies:member'
    summary: |-
      <span data-ttu-id="fc8d6-118">Иерархии сводных фильтров сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-118">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-119">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-119">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.FilterPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fc8d6-120">Примеры</span><span class="sxs-lookup"><span data-stu-id="fc8d6-120">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: 'excel!Excel.PivotTable#hierarchies:member'
    summary: |-
      <span data-ttu-id="fc8d6-121">Иерархии сводного документа сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-121">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-122">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-122">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.PivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#id:member'
    summary: |-
      <span data-ttu-id="fc8d6-123">Идентификатор сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-123">Id of the PivotTable.</span></span> <span data-ttu-id="fc8d6-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-124">Read-only.</span></span>

      <span data-ttu-id="fc8d6-125">\[[Набор API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-125">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#layout:member'
    summary: |-
      <span data-ttu-id="fc8d6-126">PivotLayout, описывающий макет и визуальную структуру сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-126">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-127">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fc8d6-128">Примеры</span><span class="sxs-lookup"><span data-stu-id="fc8d6-128">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: 'excel!Excel.PivotTable#load:member(1)'
    summary: <span data-ttu-id="fc8d6-129">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fc8d6-130">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="fc8d6-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fc8d6-131">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="fc8d6-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fc8d6-132">`load(option?: string | string[]): Excel.PivotTable`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-132">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fc8d6-133">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-133">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fc8d6-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="fc8d6-135">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="fc8d6-136">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fc8d6-137">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fc8d6-138">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
  - uid: 'excel!Excel.PivotTable#load:member(2)'
    summary: <span data-ttu-id="fc8d6-139">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fc8d6-140">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fc8d6-141">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTable#load:member(3)'
    summary: <span data-ttu-id="fc8d6-142">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fc8d6-143">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fc8d6-144">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-144">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.PivotTable#name:member'
    summary: |-
      <span data-ttu-id="fc8d6-145">Имя сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-145">Name of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-146">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-146">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#refresh:member(1)'
    summary: |-
      <span data-ttu-id="fc8d6-147">Обновляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-147">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-148">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-148">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTable#rowHierarchies:member'
    summary: |-
      <span data-ttu-id="fc8d6-149">Иерархии сводных строк сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-149">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="fc8d6-150">\[[Набор API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-150">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#set:member(1)'
    summary: '<span data-ttu-id="fc8d6-151">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-151">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fc8d6-152">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-152">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="fc8d6-153">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="fc8d6-153">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="fc8d6-154">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-154">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="fc8d6-155">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-155">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotTable#set:member(2)'
    summary: '<span data-ttu-id="fc8d6-156">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-156">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotTable:class'
  - uid: 'excel!Excel.PivotTable#toJSON:member(1)'
    summary: '<span data-ttu-id="fc8d6-157">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fc8d6-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fc8d6-158">.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-158"></span></span> <span data-ttu-id="fc8d6-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fc8d6-159"></span></span><!-- --><span data-ttu-id="fc8d6-160">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. PivotTable является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="fc8d6-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="fc8d6-161">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-161">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableData:interface'
        description: ''
  - uid: 'excel!Excel.PivotTable#useCustomSortLists:member'
    summary: |-
      <span data-ttu-id="fc8d6-162">Указывает, используются ли при сортировке в сводной таблице настраиваемые списки.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-162">Specifies whether the PivotTable uses custom lists when sorting.</span></span>

      <span data-ttu-id="fc8d6-163">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-163">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: useCustomSortLists
    fullName: useCustomSortLists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useCustomSortLists: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotTable#worksheet:member'
    summary: |-
      <span data-ttu-id="fc8d6-164">Лист, содержащий текущую сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="fc8d6-164">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="fc8d6-165">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fc8d6-165">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RowColumnPivotHierarchyCollection:class'
    name: Excel.RowColumnPivotHierarchyCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DataPivotHierarchyCollection:class'
    name: Excel.DataPivotHierarchyCollection
  - uid: 'excel!Excel.FilterPivotHierarchyCollection:class'
    name: Excel.FilterPivotHierarchyCollection
  - uid: 'excel!Excel.PivotHierarchyCollection:class'
    name: Excel.PivotHierarchyCollection
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
    name: Excel.Interfaces.PivotTableLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
    name: Interfaces.PivotTableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.PivotTableData:interface'
    name: Excel.Interfaces.PivotTableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet