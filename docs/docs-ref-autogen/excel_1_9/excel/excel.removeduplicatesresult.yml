### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    summary: |-
      <span data-ttu-id="2cc99-101">Представляет результаты метода removeDuplicates в диапазоне</span><span class="sxs-lookup"><span data-stu-id="2cc99-101">Represents the results from the removeDuplicates method on range</span></span>

      <span data-ttu-id="2cc99-102">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2cc99-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RemoveDuplicatesResult
    fullName: Excel.RemoveDuplicatesResult
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RemoveDuplicatesResult#context:member'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
      - 'excel!Excel.RemoveDuplicatesResult#removed:member'
      - 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
  - uid: 'excel!Excel.RemoveDuplicatesResult#context:member'
    summary: '<span data-ttu-id="2cc99-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="2cc99-103">The request context associated with the object.</span></span> <span data-ttu-id="2cc99-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="2cc99-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
    summary: <span data-ttu-id="2cc99-105">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2cc99-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2cc99-106">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2cc99-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RemoveDuplicatesResultLoadOptions): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="2cc99-107">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="2cc99-107">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
    summary: <span data-ttu-id="2cc99-108">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2cc99-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2cc99-109">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2cc99-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="2cc99-110">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2cc99-110">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
    summary: <span data-ttu-id="2cc99-111">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="2cc99-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2cc99-112">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="2cc99-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RemoveDuplicatesResult;
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2cc99-113">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="2cc99-113">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.RemoveDuplicatesResult#removed:member'
    summary: |-
      <span data-ttu-id="2cc99-114">Количество повторяющихся строк, удаленных операцией.</span><span class="sxs-lookup"><span data-stu-id="2cc99-114">Number of duplicated rows removed by the operation.</span></span>

      <span data-ttu-id="2cc99-115">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2cc99-115">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: removed
    fullName: removed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly removed: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
    summary: '<span data-ttu-id="2cc99-116">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2cc99-116">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2cc99-117">.</span><span class="sxs-lookup"><span data-stu-id="2cc99-117"></span></span> <span data-ttu-id="2cc99-118">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2cc99-118"></span></span><!-- --><span data-ttu-id="2cc99-119">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Ремоведупликатесресулт — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.RemoveDuplicatesResultData`</span><span class="sxs-lookup"><span data-stu-id="2cc99-119">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RemoveDuplicatesResult object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RemoveDuplicatesResultData`</span></span><!-- --><span data-ttu-id="2cc99-120">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="2cc99-120">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RemoveDuplicatesResultData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
        description: ''
  - uid: 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
    summary: |-
      <span data-ttu-id="2cc99-121">Количество оставшихся уникальных строк, присутствующих в получившемся диапазоне.</span><span class="sxs-lookup"><span data-stu-id="2cc99-121">Number of remaining unique rows present in the resulting range.</span></span>

      <span data-ttu-id="2cc99-122">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2cc99-122">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: uniqueRemaining
    fullName: uniqueRemaining
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly uniqueRemaining: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2cc99-123">Примеры</span><span class="sxs-lookup"><span data-stu-id="2cc99-123">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:D11");

              const deleteResult = range.removeDuplicates([0],true);    
              deleteResult.load();    
              await context.sync();

              console.log(deleteResult.removed + " entries with duplicate names removed.");
              console.log(deleteResult.uniqueRemaining + " entries with unique names remain in the range.");
          });
          ```
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    name: Excel.RemoveDuplicatesResult
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultLoadOptions
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultData