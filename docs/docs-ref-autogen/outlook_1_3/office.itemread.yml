### YamlMime:UniversalReference
items:
  - uid: Outlook_1_3.Office.ItemRead
    summary: |-
      Режим чтения элемента [Office. Context. Mailbox. Item](xref:Outlook_1_3.Office.Item)<!-- -->.

      **Важно!** это внутренний объект Outlook, который не предоставляется напрямую через существующие интерфейсы. Этот режим следует рассматривать как режим Office. Context. Mailbox. Item. Для получения дополнительных сведений обратитесь к странице [объектНой модели](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.3/office.context.mailbox.item) .
    name: Office.ItemRead
    fullName: Office.ItemRead
    langs:
      - typeScript
    type: interface
    extends:
      - 'Item '
    package: Outlook_1_3
    children:
      - Outlook_1_3.Office.ItemRead.displayReplyAllForm
      - Outlook_1_3.Office.ItemRead.displayReplyForm
      - Outlook_1_3.Office.ItemRead.getEntities
      - Outlook_1_3.Office.ItemRead.getEntitiesByType
      - Outlook_1_3.Office.ItemRead.getFilteredEntitiesByName
      - Outlook_1_3.Office.ItemRead.getRegExMatches
      - Outlook_1_3.Office.ItemRead.getRegExMatchesByName
      - Outlook_1_3.Office.ItemRead.attachments
      - Outlook_1_3.Office.ItemRead.itemClass
      - Outlook_1_3.Office.ItemRead.itemId
      - Outlook_1_3.Office.ItemRead.normalizedSubject
      - Outlook_1_3.Office.ItemRead.subject
  - uid: Outlook_1_3.Office.ItemRead.displayReplyAllForm
    summary: |-
      Отображает форму ответа, включающую отправителя и всех получателей выбранного сообщения или организатора и всех участников выбранной встречи.

      В Outlook Web App форма ответа отображается в виде всплывающей формы в представлении с 3 либо 1 или 2 колонками.

      Если любой строковый параметр превышает их пределы, displayReplyAllForm создает исключение.

      Если вложения указаны в параметре Формдата. вложения, Outlook и Outlook Web App пытаются скачать все вложения и вложить их в форму ответа. Если какие-либо вложения добавить не удается, в форме отображается сообщение об ошибке. Если сообщения об ошибках не предусмотрены, то они не отображаются.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: 'displayReplyAllForm(formData, callback)'
    fullName: 'displayReplyAllForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyAllForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: 'Строка, содержащая текст и HTML-код, представляющие собой основной текст формы ответа. Строка ограничена 32 КБ или объектом [Office. реплиформдата](xref:Outlook_1_3.Office.ReplyFormData) , который содержит данные текста или вложений, а также функцию обратного вызова.'
          type:
            - string | ReplyFormData
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_3.Office.ItemRead.displayReplyForm
    summary: |-
      Отображает форму ответа, включающую только отправителя выбранного сообщения или организатора выбранной встречи.

      В Outlook Web App форма ответа отображается в виде всплывающей формы в представлении с 3 либо 1 или 2 колонками.

      Если любой строковый параметр превышает их пределы, displayReplyForm создает исключение.

      Если вложения указаны в параметре Формдата. вложения, Outlook и Outlook Web App пытаются скачать все вложения и вложить их в форму ответа. Если какие-либо вложения добавить не удается, в форме отображается сообщение об ошибке. Если сообщения об ошибках не предусмотрены, то они не отображаются.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: 'displayReplyForm(formData, callback)'
    fullName: 'displayReplyForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: 'Строка, содержащая текст и HTML-код, представляющие собой основной текст формы ответа. Строка ограничена 32 КБ или объектом [Office. реплиформдата](xref:Outlook_1_3.Office.ReplyFormData) , который содержит данные текста или вложений, а также функцию обратного вызова.'
          type:
            - string | ReplyFormData
        - id: callback
          description: 'Необязательно. После выполнения метода функция, переданная в параметре callback, вызывается с помощью одного параметра asyncResult, который является объектом Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_3.Office.ItemRead.getEntities
    summary: |-
      Получает сущности, обнаруженные в теле выбранного элемента.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: getEntities()
    fullName: getEntities()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntities(): Entities;'
      return:
        type:
          - Entities
        description: ''
  - uid: Outlook_1_3.Office.ItemRead.getEntitiesByType
    summary: |-
      Получает массив всех сущностей указанного типа, обнаруженных в теле выбранного элемента.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: "** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ограниченный\n\n** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение\n\nХотя минимальный уровень разрешений для использования этого метода\_— Restricted, для некоторых типов сущностей требуется доступ на уровне ReadItem, как указано в приведенной ниже таблице.\n\n<table> <tr> <th>Значение entityType</th> <th>Тип объектов в возвращаемом массиве</th> <th>Необходимый уровень разрешений</th> </tr> <tr> <td>Address</td> <td>String</td> <td>С ограничениями</td> </tr> <tr> <td>Контакт</td> <td>Контакт</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>С ограничениями</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String</td> <td>С ограничениями</td> </tr> </table>"
    name: getEntitiesByType(entityType)
    fullName: getEntitiesByType(entityType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntitiesByType(entityType: MailboxEnums.EntityType): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: 'Если значение, переданное в entityType, не является допустимым членом перечисления EntityType, метод возвращает значение null. Если в теле элемента отсутствуют сущности указанного типа, метод возвращает пустой массив. В противном случае тип объектов в возвращаемом массиве зависит от типа сущности, запрошенной в параметре entityType.'
      parameters:
        - id: entityType
          description: Одно из значений перечисления EntityType.
          type:
            - MailboxEnums.EntityType
  - uid: Outlook_1_3.Office.ItemRead.getFilteredEntitiesByName
    summary: |-
      Возвращает известные сущности в выбранном элементе, которые проходят через именованный фильтр, определяемый в XML-файле манифеста.

      Метод getFilteredEntitiesByName возвращает сущности, соответствующие регулярному выражению, которое определяется в элементе правила ItemHasKnownEntity в XML-файле манифеста, с использованием указанного значения элемента FilterName.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: getFilteredEntitiesByName(name)
    fullName: getFilteredEntitiesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: 'Если в манифесте отсутствует элемент ItemHasKnownEntity со значением элемента FilterName, которое соответствует параметру Name, метод возвращает значение null. Если параметр name имеет значение, соответствующее элементу ItemHasKnownEntity в манифесте, но в текущем элементе нет сущностей, которые совпадают, метод возвращает пустой массив.'
      parameters:
        - id: name
          description: 'Имя элемента правила ItemHasKnownEntity, определяющее фильтр для сравнения.'
          type:
            - string
  - uid: Outlook_1_3.Office.ItemRead.getRegExMatches
    summary: |-
      Возвращает строковые значения в выбранном элементе, которые соответствуют регулярным выражениям, определенным в XML-файле манифеста.

      Метод getRegExMatches возвращает строки, которые соответствуют регулярным выражениям, определенным в каждом элементе правила ItemHasRegularExpressionMatch или ItemHasKnownEntity в XML-файле манифеста. Для правила ItemHasRegularExpressionMatch соответствующая строка должна содержаться в свойстве элемента, указанного этим правилом. Простой тип PropertyName определяет поддерживаемые свойства.

      Если вы указываете правило ItemHasRegularExpressionMatch для свойства текста элемента, регулярное выражение должно дальше фильтровать текст, вместо того чтобы пытаться вернуть весь текст элемента. Использование регулярного выражения типа .* для получения всего текста элемента не всегда приносит ожидаемые результаты. Вместо этого используйте метод Body. Async для получения всего текста.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: getRegExMatches()
    fullName: getRegExMatches()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatches(): any;'
      return:
        type:
          - any
        description: 'Объект, содержащий массив строк, которые соответствуют регулярным выражениям, определяемым в XML-файле манифеста. Имя каждого массива равно соответствующему значению атрибута RegExName соответствующего правила ItemHasRegularExpressionMatch или атрибута FilterName соответствующего правила ItemHasKnownEntity.'
  - uid: Outlook_1_3.Office.ItemRead.getRegExMatchesByName
    summary: |-
      Возвращает строковые значения в выбранном элементе, которые соответствуют именованному регулярному выражению, определенному в XML-файле манифеста.

      Метод getRegExMatchesByName возвращает строки, соответствующие регулярному выражению, определяемому в элементе правила ItemHasRegularExpressionMatch в XML-файле манифеста, с заданным значением элемента RegExName.

      Если вы указываете правило ItemHasRegularExpressionMatch для свойства текста элемента, регулярное выражение должно дальше фильтровать текст, вместо того чтобы пытаться вернуть весь текст элемента. Использование регулярного выражения типа .* для получения всего текста элемента не всегда приносит ожидаемые результаты.

      **Примечание**: Этот метод не поддерживается в Outlook для iOS или Outlook для Android.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: getRegExMatchesByName(name)
    fullName: getRegExMatchesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatchesByName(name: string): string[];'
      return:
        type:
          - 'string[]'
        description: 'Массив строк, соответствующих регулярному выражению, определяемому в XML-файле манифеста.'
      parameters:
        - id: name
          description: 'Имя элемента правила ItemHasRegularExpressionMatch, определяющее фильтр для сравнения.'
          type:
            - string
  - uid: Outlook_1_3.Office.ItemRead.attachments
    summary: |-
      Получает вложения элемента в виде массива.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение

      **Замечание**: некоторые типы файлов блокируЮтся в Outlook из-за возможных проблем с безопасностью, поэтому они не возвращаются. Дополнительные сведения см в разделе [заблокированные вложения в Outlook](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)<!-- -->.
    name: attachments
    fullName: attachments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'attachments: AttachmentDetails[];'
      return:
        type:
          - 'AttachmentDetails[]'
  - uid: Outlook_1_3.Office.ItemRead.itemClass
    summary: |-
      Получает класс элемента веб-служб Exchange для выбранного элемента.

      Можно создавать настраиваемые классы сообщения, расширяющие класс сообщения по умолчанию, например, настраиваемый класс сообщения о встрече IPM.Appointment.Contoso.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение

      Свойство itemClass указывает класс сообщения выбранного элемента. Ниже приводятся классы сообщения по умолчанию для элемента сообщения или встречи.

      <table> <tr> <th>Тип</th> <th>Описание</th> <th>Класс элемента</th> </tr> <tr> <td>Элементы встречи</td> <td>Это элементы календаря для класса элемента IPM. Встреча или IPM. Встреча. вхождение.</td> <td>Класс. Встреча, IPM. Встреча. вхождение</td> </tr> <tr> <td>Элементы сообщения</td> <td>Сюда входят сообщения электронной почты с классом сообщения по умолчанию IPM.Note, а также приглашения на собрания, ответы на приглашения и отмены собраний, использующие IPM.Schedule.Meeting в качестве базового класса сообщения.</td> <td>Класс. Обратите внимание, что IPM. Schedule. Meeting. Request, IPM. Schedule. Meeting. unof, IPM. Schedule. Meeting. POS, IPM. Schedule. Meeting. домик, IPM. ЗаПланировать собрание. отменено</td> </tr> </table>
    name: itemClass
    fullName: itemClass
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemClass: string;'
      return:
        type:
          - string
  - uid: Outlook_1_3.Office.ItemRead.itemId
    summary: |-
      Получает идентификатор элемента веб-служб Exchange для текущего элемента.

      Свойство itemId недоступно в режиме создания. Если требуется идентификатор элемента, метод saveAsync можно использовать для сохранения элемента в хранилище, которое будет возвращать идентификатор элемента в параметре asyncResult. Value в функции обратного вызова.

      **Note**: идентификатор, возвращаемый свойством ItemId, совпадает с идентификатором элемента веб-служб Exchange. Свойство itemId не совпадает с ИДЕНТИФИКАТОРом записи Outlook или ИДЕНТИФИКАТОРом, используемым REST API Outlook. Прежде чем совершать вызовы REST API, используя это значение, его необходимо преобразовать с помощью Office.context.mailbox.convertToRestId. Дополнительные сведения см. в статье [Использование REST API Outlook из надстройки Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)<!-- -->.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: itemId
    fullName: itemId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemId: string;'
      return:
        type:
          - string
  - uid: Outlook_1_3.Office.ItemRead.normalizedSubject
    summary: |-
      Получает тему элемента со всеми удаленными префиксами (включая RE: и FWD:).

      Свойство normalizedSubject получает тему элемента со всеми стандартными префиксами (например, RE: и FW:). , добавленные программами электронной почты. Чтобы получить тему элемента с неизменными префиксами, используйте свойство Subject.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: normalizedSubject
    fullName: normalizedSubject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'normalizedSubject: string;'
      return:
        type:
          - string
  - uid: Outlook_1_3.Office.ItemRead.subject
    summary: |-
      Получает описание, которое отображается в поле subject элемента.

      Свойство Subject Возвращает или задает всю тему элемента, как это было отправлено сервером электронной почты.

      Свойство Subject возвращает строку. Используйте свойство normalizedSubject, чтобы получить тему за вычетом всех начальных префиксов, таких как RE: и FW:.

      \[[Набор API: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->разрешений**: ReadItem

      ** [Соответствующий режим](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->Outlook**: чтение
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: string;'
      return:
        type:
          - string