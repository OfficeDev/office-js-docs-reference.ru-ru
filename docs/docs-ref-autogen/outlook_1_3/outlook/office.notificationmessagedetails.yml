### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.NotificationMessageDetails:interface'
    summary: |-
      Массив объектов `NotificationMessageDetails`, возвращаемых методом `NotificationMessages.getAllAsync`.

      \[[Набор API: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Минимальный уровень](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> разрешений**:`ReadItem`

      ** [Соответствующий режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook**: "создание" или "чтение"
    name: Office.NotificationMessageDetails
    fullName: Office.NotificationMessageDetails
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.NotificationMessageDetails#icon:member'
      - 'outlook!Office.NotificationMessageDetails#key:member'
      - 'outlook!Office.NotificationMessageDetails#message:member'
      - 'outlook!Office.NotificationMessageDetails#persistent:member'
      - 'outlook!Office.NotificationMessageDetails#type:member'
  - uid: 'outlook!Office.NotificationMessageDetails#icon:member'
    summary: |-
      Ссылка на значок, определенный в манифесте в разделе `Resources`. Он появляется на информационной панели. Применяется только в том случае, если тип`InformationalMessage`<!-- -->. Если указать для этого параметра неподдерживаемый тип, будет возвращено исключение.

      **Примечание**. в настоящее время пользовательский значок отображается только в Outlook в Windows, а не на других клиентах (например, Mac, веб-браузере).
    name: icon
    fullName: icon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'icon?: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.NotificationMessageDetails#key:member'
    summary: Идентификатор для сообщения уведомления.
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key?: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.NotificationMessageDetails#message:member'
    summary: 'Текст сообщения уведомления. Максимальная длина составляет 150 символов. Если разработчик передает строку большей длины, возвращается исключение `ArgumentOutOfRange`.'
    name: message
    fullName: message
    langs:
      - typeScript
    type: property
    syntax:
      content: 'message: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.NotificationMessageDetails#persistent:member'
    summary: 'Указывает, должно ли сообщение быть постоянным. Применяется только в том случае, если тип —`InformationalMessage`<!-- -->. Если задано значение true, сообщение остается до тех пор, пока эта надстройка не будет удалена или закрыта пользователем. Если false, оно удаляется при переходе к другому элементу. Что касается уведомлений об ошибках, сообщение сохраняется, пока пользователь не увидит его. Если указать для этого параметра неподдерживаемый тип, будет возвращено исключение.'
    name: persistent
    fullName: persistent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'persistent?: Boolean;'
      return:
        type:
          - '!Boolean:interface'
  - uid: 'outlook!Office.NotificationMessageDetails#type:member'
    summary: |-
      Задает `ItemNotificationMessageType` сообщение.

      Если тип — `ProgressIndicator` или`ErrorMessage`<!-- -->автоматически предоставляется значок, а сообщение не является постоянным. Поэтому значок и сохраняемые свойства недопустимы для этих типов сообщений. В результате чего будет вычислено значение`ArgumentException`<!-- -->.

      Если тип —`ProgressIndicator`<!-- -->разработчик должен удалять или заменять индикатор хода выполнения по завершении действия.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: MailboxEnums.ItemNotificationMessageType | string;'
      return:
        type:
          - 'outlook!Office.NotificationMessageDetails#type~0:complex'
references:
  - uid: '!Boolean:interface'
    name: Boolean
  - uid: 'outlook!Office.NotificationMessageDetails#type~0:complex'
    name: MailboxEnums.ItemNotificationMessageType | string
    fullName: Office.MailboxEnums.ItemNotificationMessageType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.ItemNotificationMessageType:enum'
        name: MailboxEnums.ItemNotificationMessageType
        fullName: Office.MailboxEnums.ItemNotificationMessageType
      - name: ' | string'
        fullName: ' | string'