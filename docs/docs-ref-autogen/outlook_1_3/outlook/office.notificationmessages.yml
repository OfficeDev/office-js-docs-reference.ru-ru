### YamlMime:TSType
name: Office.NotificationMessages
uid: outlook!Office.NotificationMessages:interface
package: outlook!
fullName: Office.NotificationMessages
summary: >-
  Объект `NotificationMessages` возвращается в качестве свойства `notificationMessages` элемента.


  \[[Набор API: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Применимый режим Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** составить или прочитать
isPreview: false
isDeprecated: false
type: interface
methods:
- name: addAsync(key, JSONmessage, options, callback)
  uid: outlook!Office.NotificationMessages#addAsync:member(1)
  package: outlook!
  fullName: addAsync(key, JSONmessage, options, callback)
  summary: >-
    Добавляет уведомление к элементу.


    Для каждого сообщения можно задать не более 5 уведомлений. Если задать больше, будет возвращена ошибка `NumberOfNotificationMessagesExceeded`.


    \[[Набор API: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "progressIndicator",
        message: "Progress indicator with id = " + id
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "informationalMessage",
        message: "Non-persistent informational notification message with id = " + id,
        icon: "icon1",
        persistent: false
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "informationalMessage",
        message: "Persistent informational notification message with id = " + id,
        icon: "icon1",
        persistent: true
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "errorMessage",
        message: "Error notification message with id = " + id
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: Указанный разработчиком ключ, используемый для ссылки на это сообщение уведомления. Разработчики могут использовать его для изменения этого сообщения в дальнейшем. Его длина не должна превышать 32 символа.
      type: string
    - id: JSONmessage
      description: Объект JSON, содержащий сообщение уведомления, которое необходимо добавить к элементу. Содержит `NotificationMessageDetails` объект.
      type: <xref uid="outlook!Office.NotificationMessageDetails:interface" />
    - id: options
      description: 'Необязательный. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ, в методе callback.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный. После завершения работы метода функция, переданная в параметре, будет вызвана с `callback` одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAllAsync(options, callback)
  uid: outlook!Office.NotificationMessages#getAllAsync:member(1)
  package: outlook!
  fullName: getAllAsync(options, callback)
  summary: >-
    Возвращает все ключи и сообщения для элемента.


    \[[Набор API: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: "**[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`\n\n**[Применимый режим Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** составить или прочитать\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Get all notifications.\nOffice.context.mailbox.item.notificationMessages.getAllAsync(function (asyncResult) {\n    if (asyncResult.status != \"failed\") {\n        Office.context.mailbox.item.notificationMessages.replaceAsync( \"notifications\", {\n            type: \"informationalMessage\",\n            message : \"Found \" + asyncResult.value.length + \" notifications.\",\n            icon : \"iconid\",\n            persistent: false\n        });\n    }\n});\n```\n```javascript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml\nOffice.context.mailbox.item.notificationMessages.getAllAsync(handleResult);          \n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void): void;'
    parameters:
    - id: options
      description: 'Необязательный. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ, в методе callback.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный. После завершения работы метода функция, переданная в параметре, будет вызвана с `callback` одним параметром типа `Office.AsyncResult`<!-- -->. Свойством `value` результата является массив `NotificationMessageDetails` объектов.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.NotificationMessageDetails:interface" />[]&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(key, options, callback)
  uid: outlook!Office.NotificationMessages#removeAsync:member(1)
  package: outlook!
  fullName: removeAsync(key, options, callback)
  summary: >-
    Удаляет сообщение уведомления для элемента.


    \[[Набор API: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    Office.context.mailbox.item.notificationMessages.removeAsync(id, handleResult);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeAsync(key: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: Ключ для удаления сообщения уведомления.
      type: string
    - id: options
      description: 'Необязательный. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ, в методе callback.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный. После завершения работы метода функция, переданная в параметре, будет вызвана с `callback` одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: replaceAsync(key, JSONmessage, options, callback)
  uid: outlook!Office.NotificationMessages#replaceAsync:member(1)
  package: outlook!
  fullName: replaceAsync(key, JSONmessage, options, callback)
  summary: >-
    Заменяет сообщение уведомления с заданным ключом на другое сообщение.


    Если сообщение уведомления с указанным ключом не существует, `replaceAsync` добавит уведомление.


    \[[Набор API: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим Outlook:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // Replace a notification with an informational notification.

    Office.context.mailbox.item.notificationMessages.replaceAsync("progress", {
        type: "informationalMessage",
        message : "The message was processed successfully.",
        icon : "iconid",
        persistent: false
    });

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    Office.context.mailbox.item.notificationMessages.replaceAsync(
      id,
      {
        type: "informationalMessage",
        message: "Notification message with id = " + id + " has been replaced with an informational message.",
        icon: "icon2",
        persistent: false
      },
      handleResult);
    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: Ключ для заменяемого сообщения уведомления. Максимальная длина — 32 символа.
      type: string
    - id: JSONmessage
      description: Объект JSON, содержащий новое сообщение уведомления, которое заменяет существующее сообщение. Содержит `NotificationMessageDetails` объект.
      type: <xref uid="outlook!Office.NotificationMessageDetails:interface" />
    - id: options
      description: 'Необязательный. Объектный литерал, содержащий одно или несколько из указанных ниже свойств. `asyncContext`<!-- -->: Разработчики могут предоставить любой объект, к который они хотят получить доступ, в методе callback.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Необязательный. После завершения работы метода функция, переданная в параметре, будет вызвана с `callback` одним параметром типа `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4e2c39b27f8fe89f7c027c1ea78e6ff9490d81a8
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49858972"
