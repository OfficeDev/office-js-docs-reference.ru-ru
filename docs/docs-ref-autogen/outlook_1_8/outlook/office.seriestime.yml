### YamlMime:TSType
name: Office.SeriesTime
uid: outlook!Office.SeriesTime:interface
package: outlook!
fullName: Office.SeriesTime
summary: >-
  Объект предоставляет методы получения и набора дат и времени встреч в повторяющейся серии и получения дат и времени запросов на собрания в `SeriesTime` повторяющейся серии.


  \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getDuration()
  uid: outlook!Office.SeriesTime#getDuration:member(1)
  package: outlook!
  fullName: getDuration()
  summary: >-
    Получает длительность в минутах обычного экземпляра в повторяющейся серии встреч.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example gets the duration of a usual instance in a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var duration = recurrence.seriesTime.getDuration();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDuration(): number;'
    return:
      type: number
      description: ''
- name: getEndDate()
  uid: outlook!Office.SeriesTime#getEndDate:member(1)
  package: outlook!
  fullName: getEndDate()
  summary: >-
    Получает даты окончания шаблона повторения в следующем [формате даты ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "YYYY-MM-DD".


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example gets the end date of a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getEndDate();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEndDate(): string;'
    return:
      type: string
      description: ''
- name: getEndTime()
  uid: outlook!Office.SeriesTime#getEndTime:member(1)
  package: outlook!
  fullName: getEndTime()
  summary: >-
    Получает конечное время обычной встречи или запроса на собрание экземпляра шаблона повторения в том или ином часовом поясе, в котором пользователь или надстройка устанавливают шаблон повторения с помощью следующего формата [ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "THH:mm:ss:mmm".


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example gets the end time of a usual instance in a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getEndTime();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEndTime(): string;'
    return:
      type: string
      description: ''
- name: getStartDate()
  uid: outlook!Office.SeriesTime#getStartDate:member(1)
  package: outlook!
  fullName: getStartDate()
  summary: >-
    Получает дату начала шаблона повторения в следующем формате [даты ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "YYYY-MM-DD".


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example gets the start date of a recurring appointment series.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getStartDate();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getStartDate(): string;'
    return:
      type: string
      description: ''
- name: getStartTime()
  uid: outlook!Office.SeriesTime#getStartTime:member(1)
  package: outlook!
  fullName: getStartTime()
  summary: >-
    Получает время начала обычного экземпляра встречи шаблона повторения в том или ином часовом поясе, в котором пользователь/надстройка задает шаблон повторения с помощью следующего формата [ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "THH:mm:ss:mmm".


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** составить или прочитать


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example gets the start time of a usual

    // instance in a recurring appointment series.

    var seriesTimeObject = new SeriesTime();

    seriesTimeObject.setDuration(120);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getStartTime(): string;'
    return:
      type: string
      description: ''
- name: setDuration(minutes)
  uid: outlook!Office.SeriesTime#setDuration:member(1)
  package: outlook!
  fullName: setDuration(minutes)
  summary: >-
    Задает продолжительность всех встреч в шаблоне повторения. Это также изменит время окончания шаблона повторения.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the duration of each appointment

    // in a recurring series to 2 hours.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        var endDate = recurrence.seriesTime.getStartTime();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDuration(minutes: number): void;'
    parameters:
    - id: minutes
      description: Продолжительность встречи в минутах.
      type: number
    return:
      type: void
      description: ''
- name: setEndDate(year, month, day)
  uid: outlook!Office.SeriesTime#setEndDate:member(1)
  package: outlook!
  fullName: setEndDate(year, month, day)
  summary: >-
    Задает даты окончания повторяющейся серии встреч.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the end date of a recurring

    // appointment series to November 2, 2017.

    var seriesTimeObject = new SeriesTime();

    seriesTimeObject.setEndDate(2017, 10, 2);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setEndDate(year: number, month: number, day: number): void;'
    parameters:
    - id: year
      description: Значение года конечной даты.
      type: number
    - id: month
      description: Значение месяца конечной даты. Допустимый диапазон 0-11, где 0 представляет 1-й месяц, а 11 — 12-й месяц.
      type: number
    - id: day
      description: Значение дня конечной даты.
      type: number
    return:
      type: void
      description: ''
- name: setEndDate(date)
  uid: outlook!Office.SeriesTime#setEndDate:member(2)
  package: outlook!
  fullName: setEndDate(date)
  summary: >-
    Задает даты окончания повторяющейся серии встреч.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the end date of a

    // recurring appointment series to November 2, 2017

    // using ISO 8601 date standard.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setEndDate("2017-11-02");

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setEndDate(date: string): void;'
    parameters:
    - id: date
      description: Дата окончания серии повторяющихся встреч, представленных в [формате даты ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "YYYY-MM-DD".
      type: string
    return:
      type: void
      description: ''
- name: setStartDate(year, month, day)
  uid: outlook!Office.SeriesTime#setStartDate:member(1)
  package: outlook!
  fullName: setStartDate(year, month, day)
  summary: >-
    Задает дату начала повторяющейся серии встреч.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start date of a recurring

    // appointment series to November 2, 2017.

    var seriesTimeObject = new SeriesTime();

    seriesTimeObject.setStartDate(2017, 10, 2);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStartDate(year:number, month:number, day:number): void;'
    parameters:
    - id: year
      description: Значение года даты начала.
      type: number
    - id: month
      description: Значение месяца даты начала. Допустимый диапазон 0-11, где 0 представляет 1-й месяц, а 11 — 12-й месяц.
      type: number
    - id: day
      description: Значение дня даты начала.
      type: number
    return:
      type: void
      description: ''
- name: setStartDate(date)
  uid: outlook!Office.SeriesTime#setStartDate:member(2)
  package: outlook!
  fullName: setStartDate(date)
  summary: >-
    Задает дату начала повторяющейся серии встреч.


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start date of a recurring

    // appointment series to November 2, 2017

    // using ISO 8601 date standard.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setStartDate("2017-11-02");

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStartDate(date:string): void;'
    parameters:
    - id: date
      description: Дата начала серии повторяющихся встреч, представленных в формате [даты ISO 8601:](https://www.iso.org/iso-8601-date-and-time-format.html) "YYYY-MM-DD".
      type: string
    return:
      type: void
      description: ''
- name: setStartTime(hours, minutes)
  uid: outlook!Office.SeriesTime#setStartTime:member(1)
  package: outlook!
  fullName: setStartTime(hours, minutes)
  summary: >-
    Задает время начала всех экземпляров повторяющейся серии встреч в зависимости от часового пояса, за который установлен шаблон повторения (часовой пояс элемента используется по умолчанию).


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start time of each instance

    // of a recurring appointment series to 1:30 PM.

    var seriesTimeObject = new SeriesTime();

    seriesTimeObject.setStartTime(13, 30);


    // This example sets the start time of each instance

    // of a recurring appointment series to 11:30 AM.

    seriesTimeObject.setStartTime(11, 30);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStartTime(hours: number, minutes: number): void;'
    parameters:
    - id: hours
      description: 'Часовой значения времени начала. Допустимый диапазон: 0-24.'
      type: number
    - id: minutes
      description: 'Минутное значение времени начала. Допустимый диапазон: 0-59.'
      type: number
    return:
      type: void
      description: ''
- name: setStartTime(time)
  uid: outlook!Office.SeriesTime#setStartTime:member(2)
  package: outlook!
  fullName: setStartTime(time)
  summary: >-
    Задает время начала всех экземпляров повторяющейся серии встреч в зависимости от часового пояса, за который установлен шаблон повторения (часовой пояс элемента используется по умолчанию).


    \[[Набор API: почтовый ящик 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Минимальный уровень разрешений:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Применимый режим](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> Outlook:** Compose


    #### <a name="examples"></a>Примеры


    ```javascript

    // This example sets the start time of each instance

    // of a recurring appointment series to 11:30 PM.

    var seriesTimeObject = new SeriesTime()

    seriesTimeObject.setStartTime("T23:30:00");

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStartTime(time: string): void;'
    parameters:
    - id: time
      description: 'Время начала всех экземпляров, представленных стандартным форматом строки даты: "THH:mm:ss:mmm".'
      type: string
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: c9029f2093f697baeb6b6237f5114da66a6a7a27
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51358181"
