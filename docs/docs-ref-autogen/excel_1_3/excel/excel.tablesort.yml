### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableSort
    summary: |-
      <span data-ttu-id="70e13-101">Управляет операциями сортировки для объектов Table.</span><span class="sxs-lookup"><span data-stu-id="70e13-101">Manages sorting operations on Table objects.</span></span>

      <span data-ttu-id="70e13-102">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableSort.apply
      - excel.Excel.TableSort.apply_1
      - excel.Excel.TableSort.clear
      - excel.Excel.TableSort.context
      - excel.Excel.TableSort.fields
      - excel.Excel.TableSort.load
      - excel.Excel.TableSort.load_1
      - excel.Excel.TableSort.load_2
      - excel.Excel.TableSort.matchCase
      - excel.Excel.TableSort.method
      - excel.Excel.TableSort.reapply
      - excel.Excel.TableSort.toJSON
  - uid: excel.Excel.TableSort.apply
    summary: |-
      <span data-ttu-id="70e13-103">Выполняет сортировку.</span><span class="sxs-lookup"><span data-stu-id="70e13-103">Perform a sort operation.</span></span>

      <span data-ttu-id="70e13-104">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70e13-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="70e13-105">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.sort.apply([ 
                      {
                          key: 2,
                          ascending: true
                      },
                  ], true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: fields
          description: <span data-ttu-id="70e13-106">Список условий для сортировки.</span><span class="sxs-lookup"><span data-stu-id="70e13-106">The list of conditions to sort on.</span></span>
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: '<span data-ttu-id="70e13-107">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="70e13-107">Optional.</span></span> <span data-ttu-id="70e13-108">Указывает, необходимо ли учитывать регистр при сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="70e13-108">Whether to have the casing impact string ordering.</span></span>'
          type:
            - boolean
        - id: method
          description: '<span data-ttu-id="70e13-109">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="70e13-109">Optional.</span></span> <span data-ttu-id="70e13-110">Метод сортировки, используемый для китайских символов.</span><span class="sxs-lookup"><span data-stu-id="70e13-110">The ordering method used for Chinese characters.</span></span>'
          type:
            - excel.Excel.SortMethod
  - uid: excel.Excel.TableSort.apply_1
    summary: |-
      <span data-ttu-id="70e13-111">Выполняет сортировку.</span><span class="sxs-lookup"><span data-stu-id="70e13-111">Perform a sort operation.</span></span>

      <span data-ttu-id="70e13-112">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-112">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'apply(fields, matchCase, methodString)'
    fullName: 'apply(fields, matchCase, methodString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: <span data-ttu-id="70e13-113">Список условий для сортировки.</span><span class="sxs-lookup"><span data-stu-id="70e13-113">The list of conditions to sort on.</span></span>
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: '<span data-ttu-id="70e13-114">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="70e13-114">Optional.</span></span> <span data-ttu-id="70e13-115">Указывает, необходимо ли учитывать регистр при сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="70e13-115">Whether to have the casing impact string ordering.</span></span>'
          type:
            - boolean
        - id: methodString
          description: '<span data-ttu-id="70e13-116">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="70e13-116">Optional.</span></span> <span data-ttu-id="70e13-117">Метод сортировки, используемый для китайских символов.</span><span class="sxs-lookup"><span data-stu-id="70e13-117">The ordering method used for Chinese characters.</span></span>'
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: excel.Excel.TableSort.clear
    summary: |-
      <span data-ttu-id="70e13-p105">Удаляет текущие параметры сортировки таблицы. При этом сбрасывается состояние кнопок в заголовках, но порядок сортировки таблицы остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="70e13-p105">Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.</span></span>

      <span data-ttu-id="70e13-120">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-120">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.TableSort.context
    summary: '<span data-ttu-id="70e13-121">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="70e13-121">The request context associated with the object.</span></span> <span data-ttu-id="70e13-122">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="70e13-122">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableSort.fields
    summary: |-
      <span data-ttu-id="70e13-123">Указывает текущие условия, которые использовались при последней сортировке таблицы.</span><span class="sxs-lookup"><span data-stu-id="70e13-123">Represents the current conditions used to last sort the table.</span></span> <span data-ttu-id="70e13-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="70e13-124">Read-only.</span></span>

      <span data-ttu-id="70e13-125">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-125">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'Excel.SortField[]'
  - uid: excel.Excel.TableSort.load
    summary: <span data-ttu-id="70e13-126">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="70e13-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70e13-127">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="70e13-127">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="70e13-128">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="70e13-128">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="70e13-129">`load(option?: string | string[]): Excel.TableSort`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="70e13-129">`load(option?: string | string[]): Excel.TableSort` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="70e13-130">`load(option?: { select?: string; expand?: string; }): Excel.TableSort`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="70e13-130">`load(option?: { select?: string; expand?: string; }): Excel.TableSort` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="70e13-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="70e13-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort` - Only available on collection types.</span></span> <span data-ttu-id="70e13-132">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="70e13-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="70e13-133">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="70e13-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="70e13-134">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="70e13-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="70e13-135">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="70e13-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableSortLoadOptions
  - uid: excel.Excel.TableSort.load_1
    summary: <span data-ttu-id="70e13-136">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="70e13-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70e13-137">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="70e13-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="70e13-138">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="70e13-138">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableSort.load_2
    summary: <span data-ttu-id="70e13-139">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="70e13-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70e13-140">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="70e13-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="70e13-141">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="70e13-141">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableSort.matchCase
    summary: |-
      <span data-ttu-id="70e13-142">Указывает, учитывался ли регистр при последней сортировке таблице.</span><span class="sxs-lookup"><span data-stu-id="70e13-142">Represents whether the casing impacted the last sort of the table.</span></span> <span data-ttu-id="70e13-143">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="70e13-143">Read-only.</span></span>

      <span data-ttu-id="70e13-144">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-144">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.TableSort.method
    summary: |-
      <span data-ttu-id="70e13-145">Указывает метод сортировки китайских символов, который использовался при последней сортировке таблицы.</span><span class="sxs-lookup"><span data-stu-id="70e13-145">Represents Chinese character ordering method last used to sort the table.</span></span> <span data-ttu-id="70e13-146">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="70e13-146">Read-only.</span></span>

      <span data-ttu-id="70e13-147">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-147">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - Excel.SortMethod | "PinYin" | "StrokeCount"
  - uid: excel.Excel.TableSort.reapply
    summary: |-
      <span data-ttu-id="70e13-148">Повторно применяет текущие параметры сортировки к таблице.</span><span class="sxs-lookup"><span data-stu-id="70e13-148">Reapplies the current sorting parameters to the table.</span></span>

      <span data-ttu-id="70e13-149">\[[Набор API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70e13-149">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.TableSort.toJSON
    summary: '<span data-ttu-id="70e13-150">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="70e13-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="70e13-151">.</span><span class="sxs-lookup"><span data-stu-id="70e13-151"></span></span> <span data-ttu-id="70e13-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="70e13-152"></span></span><!-- --><span data-ttu-id="70e13-153">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. TableSort — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.TableSortData`</span><span class="sxs-lookup"><span data-stu-id="70e13-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableSortData`</span></span><!-- --><span data-ttu-id="70e13-154">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="70e13-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - excel.Excel.Interfaces.TableSortData
        description: ''