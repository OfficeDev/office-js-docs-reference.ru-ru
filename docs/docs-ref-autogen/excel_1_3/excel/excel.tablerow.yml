### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRow:class'
    summary: |-
      <span data-ttu-id="860af-101">Представляет строку в таблице.</span><span class="sxs-lookup"><span data-stu-id="860af-101">Represents a row in a table.</span></span>

      <span data-ttu-id="860af-102">Обратите внимание, что в отличие от диапазонов или столбцов, которые будут подстраиваться при добавлении новых строк и столбцов перед ними, объект TableRow представляет физическое расположение строки таблицы, но не данные.</span><span class="sxs-lookup"><span data-stu-id="860af-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="860af-103">То есть, если данные сортируются или добавляются новые строки, строка таблицы по-прежнему будет направляться на индекс, для которого она была создана.</span><span class="sxs-lookup"><span data-stu-id="860af-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="860af-104">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="860af-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRow
    fullName: Excel.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableRow#context:member'
      - 'excel!Excel.TableRow#delete:member(1)'
      - 'excel!Excel.TableRow#getRange:member(1)'
      - 'excel!Excel.TableRow#index:member'
      - 'excel!Excel.TableRow#load:member(1)'
      - 'excel!Excel.TableRow#load:member(2)'
      - 'excel!Excel.TableRow#load:member(3)'
      - 'excel!Excel.TableRow#set:member(1)'
      - 'excel!Excel.TableRow#set:member(2)'
      - 'excel!Excel.TableRow#toJSON:member(1)'
      - 'excel!Excel.TableRow#values:member'
  - uid: 'excel!Excel.TableRow#context:member'
    summary: '<span data-ttu-id="860af-105">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="860af-105">The request context associated with the object.</span></span> <span data-ttu-id="860af-106">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="860af-106">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableRow#delete:member(1)'
    summary: |-
      <span data-ttu-id="860af-107">Удаляет строку из таблицы.</span><span class="sxs-lookup"><span data-stu-id="860af-107">Deletes the row from the table.</span></span>

      <span data-ttu-id="860af-108">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="860af-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="860af-109">Примеры</span><span class="sxs-lookup"><span data-stu-id="860af-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableRow#getRange:member(1)'
    summary: |-
      <span data-ttu-id="860af-110">Получает объект диапазона, связанный со всей строкой.</span><span class="sxs-lookup"><span data-stu-id="860af-110">Returns the range object associated with the entire row.</span></span>

      <span data-ttu-id="860af-111">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="860af-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="860af-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="860af-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);
              var rowRange = row.getRange();
              rowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(rowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableRow#index:member'
    summary: |-
      <span data-ttu-id="860af-113">Возвращает номер индекса строки в коллекции строк таблицы.</span><span class="sxs-lookup"><span data-stu-id="860af-113">Returns the index number of the row within the rows collection of the table.</span></span> <span data-ttu-id="860af-114">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="860af-114">Zero-indexed.</span></span> <span data-ttu-id="860af-115">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="860af-115">Read-only.</span></span>

      <span data-ttu-id="860af-116">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="860af-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRow#load:member(1)'
    summary: <span data-ttu-id="860af-117">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="860af-118">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="860af-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="860af-119">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-119">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableRowLoadOptions:interface'
  - uid: 'excel!Excel.TableRow#load:member(2)'
    summary: <span data-ttu-id="860af-120">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="860af-121">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="860af-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="860af-122">Примеры</span><span class="sxs-lookup"><span data-stu-id="860af-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var newValues = [["New", "Values", "For", "New", "Row"]];
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.values = newValues;
              row.load('values');
              return ctx.sync().then(function() {
                  console.log(row.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="860af-123">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="860af-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableRow#load:member(3)'
    summary: <span data-ttu-id="860af-124">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="860af-125">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="860af-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableRow;
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="860af-126">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="860af-126">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.TableRow#set:member(1)'
    summary: '<span data-ttu-id="860af-127">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="860af-128">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="860af-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="860af-129">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="860af-129">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableRow): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="860af-130">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="860af-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableRowUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="860af-131">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="860af-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.TableRow#set:member(2)'
    summary: '<span data-ttu-id="860af-132">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.TableRow:class'
  - uid: 'excel!Excel.TableRow#toJSON:member(1)'
    summary: '<span data-ttu-id="860af-133">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="860af-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="860af-134">.</span><span class="sxs-lookup"><span data-stu-id="860af-134"></span></span> <span data-ttu-id="860af-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="860af-135"></span></span><!-- --><span data-ttu-id="860af-136">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. TableRow — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="860af-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="860af-137">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="860af-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableRowData:interface'
        description: ''
  - uid: 'excel!Excel.TableRow#values:member'
    summary: |-
      <span data-ttu-id="860af-138">Представляет необработанные значения указанного диапазона.</span><span class="sxs-lookup"><span data-stu-id="860af-138">Represents the raw values of the specified range.</span></span> <span data-ttu-id="860af-139">Могут возвращаться строковые и числовые данные, а также логические значения.</span><span class="sxs-lookup"><span data-stu-id="860af-139">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="860af-140">Ячейки, содержащие ошибку, вернут строку ошибки.</span><span class="sxs-lookup"><span data-stu-id="860af-140">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="860af-141">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="860af-141">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel!Excel.Interfaces.TableRowLoadOptions:interface'
    name: Excel.Interfaces.TableRowLoadOptions
  - uid: 'excel!Excel.Interfaces.TableRowUpdateData:interface'
    name: Interfaces.TableRowUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.TableRowData:interface'
    name: Excel.Interfaces.TableRowData