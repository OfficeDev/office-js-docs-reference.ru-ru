### YamlMime:TSType
name: Excel.TableRow
uid: excel!Excel.TableRow:class
package: excel!
fullName: Excel.TableRow
summary: >-
  Представляет строку в таблице.


  Обратите внимание, что в отличие от диапазонов или столбцов, которые будут подстраиваться при добавлении новых строк и столбцов перед ними, объект TableRow представляет физическое расположение строки таблицы, но не данные. То есть, если данные сортируются или добавляются новые строки, строка таблицы по-прежнему будет направляться на индекс, для которого она была создана.


  \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.TableRow#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: index
  uid: excel!Excel.TableRow#index:member
  package: excel!
  fullName: index
  summary: >-
    Возвращает номер индекса строки в коллекции строк таблицы. Используется нулевой индекс.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly index: number;'
    return:
      type: number
- name: values
  uid: excel!Excel.TableRow#values:member
  package: excel!
  fullName: values
  summary: >-
    Представляет необработанные значения указанного диапазона. Могут возвращаться строковые и числовые данные, а также логические значения. Ячейки, содержащие ошибку, вернут строку ошибки.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'values: any[][];'
    return:
      type: any[][]
methods:
- name: delete()
  uid: excel!Excel.TableRow#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Удаляет строку из таблицы.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);\n    row.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange()
  uid: excel!Excel.TableRow#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: >-
    Получает объект диапазона, связанный со всей строкой.


    \[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);\n    var rowRange = row.getRange();\n    rowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(rowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.TableRow#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружается свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.TableRowLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.TableRow:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.TableRow#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.TableRow:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.TableRow#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.TableRow;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.TableRow:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.TableRow#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Задает одновременно несколько свойств объекта. Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.
  remarks: >-
    Этот метод имеет следующую дополнительную подпись:


    `set(properties: Excel.TableRow): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.
      type: <xref uid="excel!Excel.Interfaces.TableRowUpdateData:interface" />
    - id: options
      description: Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.TableRow#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.TableRow): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.TableRow:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.TableRow#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. TableRow — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.TableRowData`<!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.TableRowData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4ed84844dbe9ef169e79ad395b6f1b9963ca4a7c
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49277234"
