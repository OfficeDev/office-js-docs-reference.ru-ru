### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    summary: |-
      Представляет набор сводных таблиц с ограниченной областью действия. Сводные таблицы сортируются в соответствии с расположением верхнего левого угла сводной таблицы. Они упорядочиваются сверху вниз, а затем слева направо.

      \[[Набор API: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableScopedCollection
    fullName: Excel.PivotTableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableScopedCollection#context:member'
      - 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#items:member'
      - 'excel!Excel.PivotTableScopedCollection#load:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(2)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(3)'
      - 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableScopedCollection#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
    summary: |-
      Получает количество сводных таблиц в коллекции.

      \[[Набор API: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
    summary: |-
      Получает первую сводную таблицу в коллекции. Сводные таблицы в коллекции сортируются сверху вниз и слева направо, так как первая сводная таблица в коллекции является верхней левой.

      \[[Набор API: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
    summary: |-
      Получает сводную таблицу по имени.

      \[[Набор API: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: key
          description: Имя получаемой сводной таблицы.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
    summary: |-
      Получает сводную таблицу по имени. Если сводная таблица не существует, возвращает пустой объект.

      \[[Набор API: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Имя получаемой сводной таблицы.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#items:member'
    summary: Получает загруженные дочерние элементы в этой коллекции.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: options
          description: 'Предоставляет параметры, для которых загружается свойства объекта.'
          type:
            - 'excel!Excel.PivotTableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(3)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` — Это строка с разделителями-запятыми, задающая свойства для загрузки и которая `propertyNamesAndPaths.expand` представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
    summary: 'Переопределяет `toJSON()` метод JavaScript для предоставления более удобного вывода при передаче объекта API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный `Excel.PivotTableScopedCollection` объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.PivotTableScopedCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableScopedCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    name: Excel.PivotTableScopedCollection
  - uid: 'excel!Excel.PivotTableScopedCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
    name: Excel.Interfaces.PivotTableScopedCollectionData