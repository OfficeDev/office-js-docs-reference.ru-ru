### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.Storage
    summary: 'Асинхронное, глобальное и постоянное хранение ключей и значений.'
    remarks: 'Размер хранилища составляет 10 МБ для каждого домена, который может совместно использоваться несколькими надстройками.'
    name: OfficeRuntime.Storage
    fullName: OfficeRuntime.Storage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.Storage.getItem
      - office-runtime.OfficeRuntime.Storage.getItems
      - office-runtime.OfficeRuntime.Storage.getKeys
      - office-runtime.OfficeRuntime.Storage.removeItem
      - office-runtime.OfficeRuntime.Storage.removeItems
      - office-runtime.OfficeRuntime.Storage.setItem
      - office-runtime.OfficeRuntime.Storage.setItems
  - uid: office-runtime.OfficeRuntime.Storage.getItem
    summary: 'Извлекает элемент из хранилища на основе его ключа. Возвращает обещание. В случае события, которое не удается устранить с помощью обещания, возвращается значение null.'
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Promise<string | null>;'
      return:
        type:
          - Promise<string | null>
        description: ''
      parameters:
        - id: key
          description: 'Ключ элемента, который требуется получить. Должен быть строкой.'
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.getItems
    summary: 'Получает несколько элементов из хранилища на основе их ключей. Возвращает обещание. В случае события, которое не удается устранить с помощью обещания, возвращается значение null.'
    name: getItems(keys)
    fullName: getItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(keys: string[]): Promise<{ [key: string]: string | null }>;'
      return:
        type:
          - 'Promise<{ [key: string]: string | null }>'
        description: ''
      parameters:
        - id: keys
          description: 'Ключи элементов, которые требуется удалить. Должен быть массивом строк.'
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.getKeys
    summary: Извлекает массив всех ключей из хранилища. Возвращает обещание.
    name: getKeys()
    fullName: getKeys()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getKeys(): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
  - uid: office-runtime.OfficeRuntime.Storage.removeItem
    summary: Удаляет элемент из хранилища на основе его ключа. Возвращает обещание.
    name: removeItem(key)
    fullName: removeItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: 'Ключ элемента, который требуется удалить. Должен быть строкой.'
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.removeItems
    summary: Удаляет несколько элементов из хранилища. Возвращает обещание.
    name: removeItems(keys)
    fullName: removeItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItems(keys: string[]): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: 'Ключи элементов, которые требуется удалить. Должен быть массивом строк.'
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.setItem
    summary: Задает в хранилище или обновляет существующую запись "ключ — значение". Возвращает обещание.
    name: 'setItem(key, value)'
    fullName: 'setItem(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: 'Ключ элемента, который необходимо задать. Должен быть строкой.'
          type:
            - string
        - id: value
          description: Должен быть строкой.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.setItems
    summary: Задает несколько элементов в хранилище или обновляет несколько элементов в хранилище. Возвращает обещание.
    name: setItems(keyValues)
    fullName: setItems(keyValues)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItems(keyValues: { [key: string]: string }): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValues
          description: Устанавливаемые пары "ключ — значение". Должны быть строками.
          type:
            - '{ [key: string]: string }'