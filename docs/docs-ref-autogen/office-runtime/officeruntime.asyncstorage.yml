### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: 'Асинхронное, глобальное и постоянное хранение ключей и значений. Размер хранилища составляет 10 МБ для каждого домена, который может совместно использоваться несколькими надстройками.'
    remarks: 'Будет устаревшим в будущем, вместо этого используйте Office. Storage.'
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: Возвращает все ключи и вызывает обратный вызов по завершении. Возвращает обещание.
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: 'Извлекает элемент по ключу, а затем отправляет обратный вызов. Возвращает обещание.'
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: Имя извлекаемого ключа. Должен быть строкой.
          type:
            - string
        - id: callback
          description: Возвращаемый результат является строкой.
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: Получает несколько элементов из хранилища и вызывает обратный вызов по завершении. Возвращает обещание.
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: Ключи извлекаемых элементов. Должен быть массивом строк.
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: Удаляет несколько элементов из хранилища и вызывает обратный вызов по завершении. Возвращает обещание.
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: Ключи удаляемых элементов. Должен быть массивом строк.
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: Задает несколько пар "ключ — значение" и вызывает обратный вызов по завершении. Возвращает обещание.
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: Должны быть массивами строк.
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: 'Удаляет элементы по ключу и вызывает обратный вызов по завершении. Он возвращает обещание, которое разрешается в объект, содержащий необходимые ключи и значения.'
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: 'Ключ элемента, который требуется удалить. Должен быть строкой.'
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: Создает новую запись "ключ — значение" в хранилище или обновляет существующий ключ с новым значением. Возвращает обещание.
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: Имя ключа для параметра "ключ — значение". Должен быть строкой.
          type:
            - string
        - id: value
          description: Имя значения. Должен быть строкой.
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'