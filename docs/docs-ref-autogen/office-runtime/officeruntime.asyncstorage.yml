### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="128be-101">Асинхронное, глобальное и постоянное хранение ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="128be-101">Asynchronous, global, and persistent key-value storage.</span></span> <span data-ttu-id="128be-102">Размер хранилища составляет 10 МБ для каждого домена, который может совместно использоваться несколькими надстройками.</span><span class="sxs-lookup"><span data-stu-id="128be-102">Storage limit is 10 MB per domain, which may be shared by multiple add-ins.</span></span>'
    remarks: '<span data-ttu-id="128be-103">Будет устаревшим в будущем, вместо этого используйте Office. Storage.</span><span class="sxs-lookup"><span data-stu-id="128be-103">Will be deprecated in the future, please use Office.Storage instead.</span></span>'
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="128be-104">Возвращает все ключи и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="128be-104">Retrieves all keys and invokes a callback when finished.</span></span> <span data-ttu-id="128be-105">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-105">Returns a Promise.</span></span>
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: '<span data-ttu-id="128be-106">Извлекает элемент по ключу, а затем отправляет обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="128be-106">Retrieves an item by key, then issues a callback.</span></span> <span data-ttu-id="128be-107">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-107">Returns a Promise.</span></span>'
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="128be-108">Имя извлекаемого ключа.</span><span class="sxs-lookup"><span data-stu-id="128be-108">The name of the key to retrieve.</span></span> <span data-ttu-id="128be-109">Должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="128be-109">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: <span data-ttu-id="128be-110">Возвращаемый результат является строкой.</span><span class="sxs-lookup"><span data-stu-id="128be-110">Returned result is a string.</span></span>
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: <span data-ttu-id="128be-111">Получает несколько элементов из хранилища и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="128be-111">Retrieves multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="128be-112">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-112">Returns a Promise.</span></span>
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="128be-113">Ключи извлекаемых элементов.</span><span class="sxs-lookup"><span data-stu-id="128be-113">Keys of the items to be retrieved.</span></span> <span data-ttu-id="128be-114">Должен быть массивом строк.</span><span class="sxs-lookup"><span data-stu-id="128be-114">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: <span data-ttu-id="128be-115">Удаляет несколько элементов из хранилища и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="128be-115">Removes multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="128be-116">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-116">Returns a Promise.</span></span>
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="128be-117">Ключи удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="128be-117">Keys of the items to be removed.</span></span> <span data-ttu-id="128be-118">Должен быть массивом строк.</span><span class="sxs-lookup"><span data-stu-id="128be-118">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: <span data-ttu-id="128be-119">Задает несколько пар "ключ — значение" и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="128be-119">Sets multiple key-value pairs and invokes a callback when finished.</span></span> <span data-ttu-id="128be-120">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-120">Returns a Promise.</span></span>
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: <span data-ttu-id="128be-121">Должны быть массивами строк.</span><span class="sxs-lookup"><span data-stu-id="128be-121">Must be arrays of strings.</span></span>
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: '<span data-ttu-id="128be-122">Удаляет элементы по ключу и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="128be-122">Removes items by key and invokes a callback when finished.</span></span> <span data-ttu-id="128be-123">Он возвращает обещание, которое разрешается в объект, содержащий необходимые ключи и значения.</span><span class="sxs-lookup"><span data-stu-id="128be-123">It returns a Promise that resolves to an object containing the keys and values requested.</span></span>'
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="128be-124">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="128be-124">The key of the item to be removed.</span></span> <span data-ttu-id="128be-125">Должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="128be-125">Must be a string.</span></span>'
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="128be-126">Создает новую запись "ключ — значение" в хранилище или обновляет существующий ключ с новым значением.</span><span class="sxs-lookup"><span data-stu-id="128be-126">Creates a new key-value pair in storage or updates an existing key with a new value.</span></span> <span data-ttu-id="128be-127">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="128be-127">Returns a Promise.</span></span>
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="128be-128">Имя ключа для параметра "ключ — значение".</span><span class="sxs-lookup"><span data-stu-id="128be-128">The name of the key for the key-value pair.</span></span> <span data-ttu-id="128be-129">Должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="128be-129">Must be a string.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="128be-130">Имя значения.</span><span class="sxs-lookup"><span data-stu-id="128be-130">The name of the value.</span></span> <span data-ttu-id="128be-131">Должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="128be-131">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'