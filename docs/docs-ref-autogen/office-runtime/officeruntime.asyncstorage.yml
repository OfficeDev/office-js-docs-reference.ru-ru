### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="b1c62-101">Асинхронное, глобальное и постоянное хранилище с ключом, которое может использоваться пользовательскими функциями Excel.</span><span class="sxs-lookup"><span data-stu-id="b1c62-101">Asynchronous, global, and persistent key-value storage that can be used by Excel Custom Functions.</span></span>'
    remarks: |-
      <span data-ttu-id="b1c62-102">Каждый экземпляр надстройки имеет собственный раздел хранилища, уникальный для пользователя и устройства.</span><span class="sxs-lookup"><span data-stu-id="b1c62-102">Each add-in instance has its own storage partition, unique to a user and their device.</span></span>

      <span data-ttu-id="b1c62-103">Объем хранилища по умолчанию, разрешенный для каждой надстройки, составляет 5 МБ.</span><span class="sxs-lookup"><span data-stu-id="b1c62-103">The default amount of total storage allowed per add-in is 5MB.</span></span>

      <span data-ttu-id="b1c62-104">Каждый метод, приведенный ниже, возвращает объект Promise.</span><span class="sxs-lookup"><span data-stu-id="b1c62-104">Each method listed below returns a Promise object.</span></span>
    isPreview: true
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="b1c62-105">Возвращает обещание со всеми ключами.</span><span class="sxs-lookup"><span data-stu-id="b1c62-105">Returns a Promise with all keys.</span></span>
    isPreview: true
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: '<span data-ttu-id="b1c62-106">Получает объект, основанный на ключе, и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="b1c62-106">Retrieves an object based on a key and invokes a callback when finished.</span></span> <span data-ttu-id="b1c62-107">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="b1c62-107">Returns a Promise.</span></span>'
    isPreview: true
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: '<span data-ttu-id="b1c62-108">Извлекает пакет ключей, указанный в `keys` массиве.</span><span class="sxs-lookup"><span data-stu-id="b1c62-108">Fetches a batch of keys, specified in the `keys` array.</span></span> <span data-ttu-id="b1c62-109">Если ключ не существует, возвращается значение null.</span><span class="sxs-lookup"><span data-stu-id="b1c62-109">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: '<span data-ttu-id="b1c62-110">Удаляет пакет ключей, указанный в `keys` массиве.</span><span class="sxs-lookup"><span data-stu-id="b1c62-110">Deletes a batch of keys, specified in the `keys` array.</span></span>'
    isPreview: true
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: '<span data-ttu-id="b1c62-111">Содержит несколько пар "ключ — значение" в одном пакете.</span><span class="sxs-lookup"><span data-stu-id="b1c62-111">Stores multiple key-value pairs in one batch.</span></span> <span data-ttu-id="b1c62-112">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="b1c62-112">Returns a Promise.</span></span> <span data-ttu-id="b1c62-113">Если ключ не существует, возвращается значение null.</span><span class="sxs-lookup"><span data-stu-id="b1c62-113">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: ''
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="b1c62-114">Удаляет элемент для указанного ключа и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="b1c62-114">Removes an item for specified key and invokes a callback when finished.</span></span> <span data-ttu-id="b1c62-115">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="b1c62-115">Returns a Promise.</span></span>
    isPreview: true
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="b1c62-116">Назначает значение для функции "ключ — значение" и вызывает обратный вызов по завершении.</span><span class="sxs-lookup"><span data-stu-id="b1c62-116">Assigns the value for a key-value pair and invokes a callback when finished.</span></span> <span data-ttu-id="b1c62-117">Возвращает обещание.</span><span class="sxs-lookup"><span data-stu-id="b1c62-117">Returns a Promise.</span></span>
    isPreview: true
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: value
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'