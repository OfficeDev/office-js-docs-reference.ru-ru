### YamlMime:UniversalReference
ms.openlocfilehash: 06089998c0651822c09846f272329248f543a23e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977477"
items:
- uid: excel.Excel.RangeViewCollection
  summary: >-
    <span data-ttu-id="f9de6-101">Представляет коллекцию объектов RangeView.</span><span class="sxs-lookup"><span data-stu-id="f9de6-101">Represents a collection of RangeView objects.</span></span>


    <span data-ttu-id="f9de6-102">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9de6-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeViewCollection
  fullName: Excel.RangeViewCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeViewCollection.context
  - excel.Excel.RangeViewCollection.getCount
  - excel.Excel.RangeViewCollection.getItemAt
  - excel.Excel.RangeViewCollection.items
  - excel.Excel.RangeViewCollection.load
  - excel.Excel.RangeViewCollection.load_1
  - excel.Excel.RangeViewCollection.load_2
  - excel.Excel.RangeViewCollection.toJSON
- uid: excel.Excel.RangeViewCollection.context
  summary: <span data-ttu-id="f9de6-103">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="f9de6-103">The request context associated with the object.</span></span> <span data-ttu-id="f9de6-104">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="f9de6-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeViewCollection.getCount
  summary: >-
    <span data-ttu-id="f9de6-105">Получает количество объектов RangeView в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f9de6-105">Gets the number of RangeView objects in the collection.</span></span>


    <span data-ttu-id="f9de6-106">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9de6-106">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.RangeViewCollection.getItemAt
  summary: >-
    <span data-ttu-id="f9de6-107">Получает строку RangeView по его индексу.</span><span class="sxs-lookup"><span data-stu-id="f9de6-107">Gets a RangeView Row via its index.</span></span> <span data-ttu-id="f9de6-108">Нулевой индексированы.</span><span class="sxs-lookup"><span data-stu-id="f9de6-108">Zero-Indexed.</span></span>


    <span data-ttu-id="f9de6-109">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9de6-109">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeView;'
    return:
      type:
      - excel.Excel.RangeView
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="f9de6-110">Индекс видимой строки.</span><span class="sxs-lookup"><span data-stu-id="f9de6-110">Index of the visible row.</span></span>
      type:
      - number
- uid: excel.Excel.RangeViewCollection.items
  summary: <span data-ttu-id="f9de6-111">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="f9de6-111">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeView[];'
    return:
      type:
      - Excel.RangeView[]
- uid: excel.Excel.RangeViewCollection.load
  summary: <span data-ttu-id="f9de6-112">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="f9de6-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f9de6-113">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="f9de6-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="f9de6-114">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="f9de6-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="f9de6-115">`load(option?: string | string[]): Excel.RangeViewCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f9de6-115">`load(option?: string | string[]): Excel.RangeViewCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="f9de6-116">`load(option?: { select?: string; expand?: string; }): Excel.RangeViewCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f9de6-116">`load(option?: { select?: string; expand?: string; }): Excel.RangeViewCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="f9de6-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeViewCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="f9de6-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeViewCollection` - Only available on collection types.</span></span> <span data-ttu-id="f9de6-118">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="f9de6-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="f9de6-119">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="f9de6-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f9de6-120">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="f9de6-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f9de6-121">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="f9de6-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeViewCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeViewCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeViewCollection.load_1
  summary: <span data-ttu-id="f9de6-122">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="f9de6-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f9de6-123">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="f9de6-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="f9de6-124">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="f9de6-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeViewCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeViewCollection;'
    return:
      type:
      - excel.Excel.RangeViewCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeViewCollection.toJSON
  summary: <span data-ttu-id="f9de6-125">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="f9de6-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="f9de6-126">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `Excel.RangeViewCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.RangeViewCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="f9de6-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeViewCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeViewCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeViewCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeViewCollectionData
      description: ''
