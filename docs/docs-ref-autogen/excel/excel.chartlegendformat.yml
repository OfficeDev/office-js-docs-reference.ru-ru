### YamlMime:UniversalReference
ms.openlocfilehash: 5c9b9808184197919ef66c8612778bd3efb4b0bc
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977204"
items:
- uid: excel.Excel.ChartLegendFormat
  summary: >-
    <span data-ttu-id="7cbba-101">Инкапсулирует свойства формата легенды диаграммы.</span><span class="sxs-lookup"><span data-stu-id="7cbba-101">Encapsulates the format properties of a chart legend.</span></span>


    <span data-ttu-id="7cbba-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7cbba-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartLegendFormat
  fullName: Excel.ChartLegendFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartLegendFormat.border
  - excel.Excel.ChartLegendFormat.context
  - excel.Excel.ChartLegendFormat.fill
  - excel.Excel.ChartLegendFormat.font
  - excel.Excel.ChartLegendFormat.load
  - excel.Excel.ChartLegendFormat.load_1
  - excel.Excel.ChartLegendFormat.load_2
  - excel.Excel.ChartLegendFormat.set
  - excel.Excel.ChartLegendFormat.set_1
  - excel.Excel.ChartLegendFormat.toJSON
- uid: excel.Excel.ChartLegendFormat.border
  summary: >-
    <span data-ttu-id="7cbba-103">Представляет формат границы, включающий цвет, тип линии и толщину.</span><span class="sxs-lookup"><span data-stu-id="7cbba-103">Represents the border format, which includes color, linestyle, and weight.</span></span> <span data-ttu-id="7cbba-104">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7cbba-104">Read-only.</span></span>


    <span data-ttu-id="7cbba-105">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7cbba-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: border
  fullName: border
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly border: Excel.ChartBorder;'
    return:
      type:
      - excel.Excel.ChartBorder
- uid: excel.Excel.ChartLegendFormat.context
  summary: <span data-ttu-id="7cbba-106">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="7cbba-106">The request context associated with the object.</span></span> <span data-ttu-id="7cbba-107">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7cbba-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartLegendFormat.fill
  summary: >-
    <span data-ttu-id="7cbba-p103">Представляет формат заливки объекта, включая сведения о форматировании фона. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7cbba-p103">Represents the fill format of an object, which includes background formatting information. Read-only.</span></span>


    <span data-ttu-id="7cbba-110">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7cbba-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.ChartFill;'
    return:
      type:
      - excel.Excel.ChartFill
- uid: excel.Excel.ChartLegendFormat.font
  summary: >-
    <span data-ttu-id="7cbba-p104">Представляет атрибуты шрифта (название, размер, цвет и т. д.) легенды диаграммы. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7cbba-p104">Represents the font attributes such as font name, font size, color, etc. of a chart legend. Read-only.</span></span>


    <span data-ttu-id="7cbba-113">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7cbba-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.ChartFont;'
    return:
      type:
      - excel.Excel.ChartFont
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7cbba-114\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7cbba-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let chart = sheet.charts.getItemAt(0);\n    chart.legend.visible = true;\n\n    // Format the legend font.\n    let font = chart.legend.format.font;\n    font.bold = true;\n    font.color = \"red\";\n    font.italic = true;\n    font.size = 15;\n    font.name = \"Calibri\";\n    font.underline = \"Single\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartLegendFormat.load
  summary: <span data-ttu-id="7cbba-115">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7cbba-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7cbba-116">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="7cbba-116">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7cbba-117">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="7cbba-117">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7cbba-118">`load(option?: string | string[]): Excel.ChartLegendFormat`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7cbba-118">`load(option?: string | string[]): Excel.ChartLegendFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7cbba-119">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendFormat`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7cbba-119">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7cbba-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendFormat`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="7cbba-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendFormat` - Only available on collection types.</span></span> <span data-ttu-id="7cbba-121">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="7cbba-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="7cbba-122">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7cbba-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7cbba-123">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="7cbba-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7cbba-124">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="7cbba-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartLegendFormatLoadOptions): Excel.ChartLegendFormat;'
    return:
      type:
      - excel.Excel.ChartLegendFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartLegendFormatLoadOptions
- uid: excel.Excel.ChartLegendFormat.load_1
  summary: <span data-ttu-id="7cbba-125">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7cbba-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7cbba-126">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="7cbba-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartLegendFormat;'
    return:
      type:
      - excel.Excel.ChartLegendFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7cbba-127">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7cbba-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartLegendFormat.load_2
  summary: <span data-ttu-id="7cbba-128">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7cbba-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7cbba-129">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="7cbba-129">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartLegendFormat;'
    return:
      type:
      - excel.Excel.ChartLegendFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="7cbba-130">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7cbba-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ChartLegendFormat.set
  summary: <span data-ttu-id="7cbba-131">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="7cbba-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7cbba-132">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="7cbba-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="7cbba-133">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="7cbba-133">This method has the following additional signature:</span></span>


    `set(properties: Excel.ChartLegendFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartLegendFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="7cbba-134">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="7cbba-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ChartLegendFormatUpdateData
    - id: options
      description: <span data-ttu-id="7cbba-135">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7cbba-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ChartLegendFormat.set_1
  summary: <span data-ttu-id="7cbba-136">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="7cbba-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ChartLegendFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ChartLegendFormat
- uid: excel.Excel.ChartLegendFormat.toJSON
  summary: <span data-ttu-id="7cbba-137">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7cbba-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7cbba-138">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ChartLegendFormat является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ChartLegendFormatData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="7cbba-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartLegendFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLegendFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartLegendFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartLegendFormatData
      description: ''
