### YamlMime:UniversalReference
ms.openlocfilehash: 88ba140ea759e59decd510483063a02f88a3ebb9
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30094010"
items:
- uid: excel.Excel.TableCollection
  summary: >-
    <span data-ttu-id="14ca6-101">Представляет коллекцию всех таблиц, входящих в состав книги или листа, в зависимости от способа доступа.</span><span class="sxs-lookup"><span data-stu-id="14ca6-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="14ca6-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableCollection
  fullName: Excel.TableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableCollection.add
  - excel.Excel.TableCollection.context
  - excel.Excel.TableCollection.count
  - excel.Excel.TableCollection.getCount
  - excel.Excel.TableCollection.getItem
  - excel.Excel.TableCollection.getItemAt
  - excel.Excel.TableCollection.getItemOrNullObject
  - excel.Excel.TableCollection.items
  - excel.Excel.TableCollection.load
  - excel.Excel.TableCollection.load_1
  - excel.Excel.TableCollection.load_2
  - excel.Excel.TableCollection.onAdded
  - excel.Excel.TableCollection.onChanged
  - excel.Excel.TableCollection.onDeleted
  - excel.Excel.TableCollection.onFiltered
  - excel.Excel.TableCollection.toJSON
- uid: excel.Excel.TableCollection.add
  summary: >-
    <span data-ttu-id="14ca6-p101">Создание таблицы. Объект или исходный адрес диапазона определяет лист, на который будет добавлена таблица. Если добавить таблицу не удается (например, если адрес недействителен или одна таблица будет перекрываться другой), выводится сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="14ca6-p101">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>


    <span data-ttu-id="14ca6-106">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(address, hasHeaders)
  fullName: add(address, hasHeaders)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"14ca6-107\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"14ca6-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);\n    table.load('name');\n    return ctx.sync().then(function() {\n        console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: address
      description: '<span data-ttu-id="14ca6-108">Объект Range или строковый адрес или имя диапазона, представляющего источник данных.</span><span class="sxs-lookup"><span data-stu-id="14ca6-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="14ca6-109">Если адрес не содержит имени листа, используется активный лист.</span><span class="sxs-lookup"><span data-stu-id="14ca6-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="14ca6-110">\[Набор API: ExcelApi 1,1/1,3.</span><span class="sxs-lookup"><span data-stu-id="14ca6-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="14ca6-111">До ExcelApi 1,3 этот параметр должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="14ca6-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="14ca6-112">Начиная с Excel API 1,3, этот параметр может быть объектом Range или String.\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
      type:
      - Range | string
    - id: hasHeaders
      description: <span data-ttu-id="14ca6-p103">Логическое значение, указывающее, имеют ли импортируемые данные метки столбцов. Если источник не содержит заголовков (например, если этому свойству присвоено значение false), Excel автоматически создаст заголовок и сдвинет данные на одну строку вниз.</span><span class="sxs-lookup"><span data-stu-id="14ca6-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>
      type:
      - boolean
- uid: excel.Excel.TableCollection.context
  summary: <span data-ttu-id="14ca6-116">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="14ca6-116">The request context associated with the object.</span></span> <span data-ttu-id="14ca6-117">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="14ca6-117">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableCollection.count
  summary: >-
    <span data-ttu-id="14ca6-p105">Возвращает количество таблиц в книге. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="14ca6-p105">Returns the number of tables in the workbook. Read-only.</span></span>


    <span data-ttu-id="14ca6-120">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableCollection.getCount
  summary: >-
    <span data-ttu-id="14ca6-121">Получает количество таблиц в коллекции.</span><span class="sxs-lookup"><span data-stu-id="14ca6-121">Gets the number of tables in the collection.</span></span>


    <span data-ttu-id="14ca6-122">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableCollection.getItem
  summary: >-
    <span data-ttu-id="14ca6-123">Получает таблицу по имени или ИД.</span><span class="sxs-lookup"><span data-stu-id="14ca6-123">Gets a table by Name or ID.</span></span>


    <span data-ttu-id="14ca6-124">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"14ca6-125\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"14ca6-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="14ca6-126">Имя или ИД получаемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="14ca6-126">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableCollection.getItemAt
  summary: >-
    <span data-ttu-id="14ca6-127">Получает таблицу на основании ее позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="14ca6-127">Gets a table based on its position in the collection.</span></span>


    <span data-ttu-id="14ca6-128">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"14ca6-129\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"14ca6-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="14ca6-p106">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="14ca6-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="14ca6-p107">Получает таблицу по имени или идентификатору. Если таблица не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="14ca6-p107">Gets a table by Name or ID. If the table does not exist, will return a null object.</span></span>


    <span data-ttu-id="14ca6-134">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="14ca6-135">Имя или ИД получаемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="14ca6-135">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableCollection.items
  summary: <span data-ttu-id="14ca6-136">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="14ca6-136">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel.Excel.TableCollection.load
  summary: <span data-ttu-id="14ca6-137">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="14ca6-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="14ca6-138">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="14ca6-138">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="14ca6-139">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="14ca6-139">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="14ca6-140">`load(option?: string | string[]): Excel.TableCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="14ca6-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="14ca6-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="14ca6-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="14ca6-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="14ca6-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="14ca6-143">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="14ca6-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="14ca6-144">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="14ca6-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="14ca6-145">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="14ca6-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="14ca6-146">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="14ca6-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableCollection.load_1
  summary: <span data-ttu-id="14ca6-147">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="14ca6-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="14ca6-148">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="14ca6-148">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"14ca6-149\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"14ca6-149\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load();\n    return ctx.sync().then(function() {\n        console.log(\"tables Count: \" + tables.count);\n        for (var i = 0; i < tables.items.length; i++)\n        {\n            console.log(tables.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of tables\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load('count');\n    return ctx.sync().then(function() {\n        console.log(tables.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="14ca6-150">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="14ca6-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableCollection.onAdded
  summary: >-
    <span data-ttu-id="14ca6-151">Возникает при добавлении новой таблицы в книгу.</span><span class="sxs-lookup"><span data-stu-id="14ca6-151">Occurs when new table is added in a workbook.</span></span>


    <span data-ttu-id="14ca6-152">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-152">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: onAdded
  fullName: onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.TableAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableAddedEventArgs>
- uid: excel.Excel.TableCollection.onChanged
  summary: >-
    <span data-ttu-id="14ca6-153">Возникает при изменении данных в любой таблице книги или на листе.</span><span class="sxs-lookup"><span data-stu-id="14ca6-153">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>


    <span data-ttu-id="14ca6-154">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-154">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"14ca6-155\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"14ca6-155\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let tables = context.workbook.tables;\n    tables.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the table collection onChanged event\");\n});\n```"
- uid: excel.Excel.TableCollection.onDeleted
  summary: >-
    <span data-ttu-id="14ca6-156">Возникает при удалении указанной таблицы в книге.</span><span class="sxs-lookup"><span data-stu-id="14ca6-156">Occurs when the specified table is deleted in a workbook.</span></span>


    <span data-ttu-id="14ca6-157">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-157">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: onDeleted
  fullName: onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.TableDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableDeletedEventArgs>
- uid: excel.Excel.TableCollection.onFiltered
  summary: >-
    <span data-ttu-id="14ca6-158">Происходит, когда фильтр применяется к любой таблице в книге или на листе.</span><span class="sxs-lookup"><span data-stu-id="14ca6-158">Occurs when filter is applied on any table in a workbook, or a worksheet.</span></span>


    <span data-ttu-id="14ca6-159">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="14ca6-159">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: onFiltered
  fullName: onFiltered
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>
- uid: excel.Excel.TableCollection.toJSON
  summary: <span data-ttu-id="14ca6-160">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="14ca6-160">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="14ca6-161">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.TableCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.TableCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="14ca6-161">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableCollectionData
      description: ''
