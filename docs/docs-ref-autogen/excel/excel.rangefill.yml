### YamlMime:UniversalReference
ms.openlocfilehash: 195d397df9fb32dbc4063c5d67d251ba87a6889a
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724390"
items:
- uid: excel.Excel.RangeFill
  summary: >-
    <span data-ttu-id="68dc6-101">Представляет фон объекта диапазона.</span><span class="sxs-lookup"><span data-stu-id="68dc6-101">Represents the background of a range object.</span></span>


    <span data-ttu-id="68dc6-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68dc6-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFill
  fullName: Excel.RangeFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFill.clear
  - excel.Excel.RangeFill.color
  - excel.Excel.RangeFill.context
  - excel.Excel.RangeFill.load
  - excel.Excel.RangeFill.toJSON
- uid: excel.Excel.RangeFill.clear
  summary: >-
    <span data-ttu-id="68dc6-103">Сбрасывает фон диапазона.</span><span class="sxs-lookup"><span data-stu-id="68dc6-103">Resets the range background.</span></span>


    <span data-ttu-id="68dc6-104">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68dc6-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"68dc6-105\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.RangeFill.color
  summary: >-
    <span data-ttu-id="68dc6-106">HTML-код цвета, представляющее цвет фона формы \#вида RRGGBB (например, «FFA500») или как именованный цвета HTML (например «оранжевый»)</span><span class="sxs-lookup"><span data-stu-id="68dc6-106">HTML color code representing the color of the background, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange")</span></span>


    <span data-ttu-id="68dc6-107">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68dc6-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFill.context
  summary: <span data-ttu-id="68dc6-108">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="68dc6-108">The request context associated with the object.</span></span> <span data-ttu-id="68dc6-109">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="68dc6-109">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeFill.load
  summary: <span data-ttu-id="68dc6-110">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="68dc6-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="68dc6-111">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="68dc6-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"68dc6-112\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-112\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"68dc6-113\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-113\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"68dc6-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-114\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill` - Only available on collection types.</span></span> <span data-ttu-id=\"68dc6-115\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-115\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"68dc6-116\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-116\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"68dc6-117\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-117\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"68dc6-118\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-118\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"68dc6-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"68dc6-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="68dc6-120">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="68dc6-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFill.toJSON
  summary: <span data-ttu-id="68dc6-121">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="68dc6-121">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="68dc6-122">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.RangeFill является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.RangeFillData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="68dc6-122">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFillData
      description: ''
