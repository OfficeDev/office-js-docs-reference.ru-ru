### YamlMime:UniversalReference
ms.openlocfilehash: 3052666d71a1e67ac04125e4c3af1f5b43a57142
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/20/2018
ms.locfileid: "24051053"
items:
- uid: excel.Excel.Application
  summary: >-
    Представляет приложение Excel, которое управляет книгой.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Application
  fullName: excel.Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.load
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    Пересчитывает данные во всех открытых в текущий момент книгах Excel.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: calculate(calculationType)
  fullName: excel.Excel.Application.calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationType
      description: Указывает тип вычислений для использования. Для получения дополнительных сведений в разделе Excel.CalculationType.
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculationMode
  summary: >-
    Возвращает режим вычисления, используемый в книге, константы в Excel.CalculationMode. Возможные значения: `Automatic`, где Excel управляет пересчета; `AutomaticExceptTables`, в котором элементы управления Пересчет в Excel, но не обрабатывает изменения в таблицах; `Manual`, где выполняется расчет запросу пользователя.


    \[[Набор API-Интерфейсов: ExcelApi 1.1 для get, 1,8 для набора](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: calculationMode
  fullName: excel.Excel.Application.calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: { select?: string; expand?: string; }): Excel.Application`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.

    #### <a name="examples"></a>Примеры


    ```javascript

    Excel.run(function (ctx) {
        var application = ctx.workbook.application;
        application.load('calculationMode');
        return ctx.sync().then(function() {
            console.log(application.calculationMode);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: excel.Excel.Application.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    Приостанавливает вычисление до вызова следующего "context.sync()". После этого за пересчет книги и распространение всех зависимостей несет ответственность разработчик.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: suspendApiCalculationUntilNextSync()
  fullName: excel.Excel.Application.suspendApiCalculationUntilNextSync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  name: toJSON()
  fullName: excel.Excel.Application.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
