### YamlMime:UniversalReference
ms.openlocfilehash: a87b42583512df979f9ae15b74358f8d3085dec1
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980515"
items:
- uid: excel.Excel.PivotTableCollection
  summary: >-
    <span data-ttu-id="15b73-101">Представляет коллекцию всех объектов PivotTable, входящих в состав книги или листа.</span><span class="sxs-lookup"><span data-stu-id="15b73-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>


    <span data-ttu-id="15b73-102">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTableCollection.add
  - excel.Excel.PivotTableCollection.context
  - excel.Excel.PivotTableCollection.getCount
  - excel.Excel.PivotTableCollection.getItem
  - excel.Excel.PivotTableCollection.getItemOrNullObject
  - excel.Excel.PivotTableCollection.items
  - excel.Excel.PivotTableCollection.load
  - excel.Excel.PivotTableCollection.load_1
  - excel.Excel.PivotTableCollection.load_2
  - excel.Excel.PivotTableCollection.refreshAll
  - excel.Excel.PivotTableCollection.toJSON
- uid: excel.Excel.PivotTableCollection.add
  summary: >-
    <span data-ttu-id="15b73-103">Добавление сводной таблицы на основе указанных исходных данных и вставка ее в верхнюю левую ячейку конечного диапазона.</span><span class="sxs-lookup"><span data-stu-id="15b73-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>


    <span data-ttu-id="15b73-104">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        <span data-ttu-id="15b73-105">Возвращает вставленных новых сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="15b73-105">Returns the newly inserted PivotTable.</span></span>

        #### <a name="examples"></a><span data-ttu-id="15b73-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="15b73-106">Examples</span></span>


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: <span data-ttu-id="15b73-107">Имя новой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="15b73-107">The name of the new PivotTable.</span></span>
      type:
      - string
    - id: source
      description: <span data-ttu-id="15b73-108">Источник данных для новой сводной таблицы, это может быть диапазона (или строки адреса, включая имя листа) или таблицы.</span><span class="sxs-lookup"><span data-stu-id="15b73-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>
      type:
      - Range | string | Table
    - id: destination
      description: <span data-ttu-id="15b73-109">Ячейка в левом верхнем углу отчета сводной таблицы конечного диапазона (диапазона на листе, где размещается итоговый отчет).</span><span class="sxs-lookup"><span data-stu-id="15b73-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotTableCollection.context
  summary: <span data-ttu-id="15b73-110">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="15b73-110">The request context associated with the object.</span></span> <span data-ttu-id="15b73-111">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="15b73-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTableCollection.getCount
  summary: >-
    <span data-ttu-id="15b73-112">Получает количество сводных таблиц в коллекции.</span><span class="sxs-lookup"><span data-stu-id="15b73-112">Gets the number of pivot tables in the collection.</span></span>


    <span data-ttu-id="15b73-113">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PivotTableCollection.getItem
  summary: >-
    <span data-ttu-id="15b73-114">Получает сводную таблицу по имени.</span><span class="sxs-lookup"><span data-stu-id="15b73-114">Gets a PivotTable by name.</span></span>


    <span data-ttu-id="15b73-115">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="15b73-116">Имя получаемой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="15b73-116">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="15b73-p102">Получает сводную таблицу по имени. Если сводная таблица не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="15b73-p102">Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.</span></span>


    <span data-ttu-id="15b73-119">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="15b73-120">Имя получаемой сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="15b73-120">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.items
  summary: <span data-ttu-id="15b73-121">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="15b73-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel.Excel.PivotTableCollection.load
  summary: <span data-ttu-id="15b73-122">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="15b73-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="15b73-123">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="15b73-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="15b73-124">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="15b73-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="15b73-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="15b73-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="15b73-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="15b73-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="15b73-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="15b73-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="15b73-128">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="15b73-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="15b73-129">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="15b73-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="15b73-130">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="15b73-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="15b73-131">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="15b73-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.PivotTableCollection.load_1
  summary: <span data-ttu-id="15b73-132">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="15b73-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="15b73-133">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="15b73-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="15b73-134">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="15b73-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.PivotTableCollection.refreshAll
  summary: >-
    <span data-ttu-id="15b73-135">Обновляет все сводные таблицы в коллекции.</span><span class="sxs-lookup"><span data-stu-id="15b73-135">Refreshes all the pivot tables in the collection.</span></span>


    <span data-ttu-id="15b73-136">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15b73-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTableCollection.toJSON
  summary: <span data-ttu-id="15b73-137">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="15b73-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="15b73-138">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `Excel.PivotTableCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.PivotTableCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="15b73-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
