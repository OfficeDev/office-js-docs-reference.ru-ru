### YamlMime:UniversalReference
ms.openlocfilehash: 3f1eb34fd6274b5bcbf9e3a7700cbe5671c17331
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110993"
items:
- uid: excel.Excel.SlicerCollection
  summary: >-
    <span data-ttu-id="0239b-101">Представляет коллекцию всех объектов срезов в книге или листе.</span><span class="sxs-lookup"><span data-stu-id="0239b-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>


    <span data-ttu-id="0239b-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerCollection
  fullName: Excel.SlicerCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerCollection.add
  - excel.Excel.SlicerCollection.context
  - excel.Excel.SlicerCollection.getCount
  - excel.Excel.SlicerCollection.getItem
  - excel.Excel.SlicerCollection.getItemAt
  - excel.Excel.SlicerCollection.getItemOrNullObject
  - excel.Excel.SlicerCollection.items
  - excel.Excel.SlicerCollection.load
  - excel.Excel.SlicerCollection.load_1
  - excel.Excel.SlicerCollection.load_2
  - excel.Excel.SlicerCollection.toJSON
- uid: excel.Excel.SlicerCollection.add
  summary: >-
    <span data-ttu-id="0239b-103">Добавляет в книгу новый срез.</span><span class="sxs-lookup"><span data-stu-id="0239b-103">Adds a new slicer to the workbook.</span></span>


    <span data-ttu-id="0239b-104">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(slicerSource, sourceField, slicerDestination)
  fullName: add(slicerSource, sourceField, slicerDestination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: <span data-ttu-id="0239b-105">Новый срез.</span><span class="sxs-lookup"><span data-stu-id="0239b-105">The new slicer.</span></span>
    parameters:
    - id: slicerSource
      description: <span data-ttu-id="0239b-106">Источник данных, на котором будет основан новый срез.</span><span class="sxs-lookup"><span data-stu-id="0239b-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="0239b-107">Это может быть объект PivotTable, объект Table или строка.</span><span class="sxs-lookup"><span data-stu-id="0239b-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="0239b-108">Когда объект сводной таблицы передается, источником данных является источник объекта сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="0239b-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="0239b-109">Когда передается объект Table, источником данных является объект Table.</span><span class="sxs-lookup"><span data-stu-id="0239b-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="0239b-110">Когда строка передается, она интерпретируется как имя/идентификатор сводной таблицы или таблицы.</span><span class="sxs-lookup"><span data-stu-id="0239b-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>
      type:
      - string | PivotTable | Table
    - id: sourceField
      description: <span data-ttu-id="0239b-111">Поле в источнике данных, по которому выполняется фильтрация.</span><span class="sxs-lookup"><span data-stu-id="0239b-111">The field in the data source to filter by.</span></span> <span data-ttu-id="0239b-112">Это может быть объект PivotField, объект TableColumn, идентификатор PivotField или идентификатор и имя TableColumn.</span><span class="sxs-lookup"><span data-stu-id="0239b-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>
      type:
      - string | PivotField | number | TableColumn
    - id: slicerDestination
      description: <span data-ttu-id="0239b-113">Необязательное свойство.</span><span class="sxs-lookup"><span data-stu-id="0239b-113">Optional.</span></span> <span data-ttu-id="0239b-114">Лист, в котором будет создан новый срез.</span><span class="sxs-lookup"><span data-stu-id="0239b-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="0239b-115">Это может быть объект листа или имя или идентификатор листа.</span><span class="sxs-lookup"><span data-stu-id="0239b-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="0239b-116">Этот параметр можно опустить, если коллекция срезов извлекается из листа.</span><span class="sxs-lookup"><span data-stu-id="0239b-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
      type:
      - string | Worksheet
- uid: excel.Excel.SlicerCollection.context
  summary: <span data-ttu-id="0239b-117">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="0239b-117">The request context associated with the object.</span></span> <span data-ttu-id="0239b-118">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="0239b-118">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerCollection.getCount
  summary: >-
    <span data-ttu-id="0239b-119">Возвращает количество срезов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0239b-119">Returns the number of slicers in the collection.</span></span>


    <span data-ttu-id="0239b-120">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerCollection.getItem
  summary: >-
    <span data-ttu-id="0239b-121">Получает объект среза по его имени или идентификатору.</span><span class="sxs-lookup"><span data-stu-id="0239b-121">Gets a slicer object using its name or id.</span></span>


    <span data-ttu-id="0239b-122">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="0239b-123">Имя или идентификатор среза.</span><span class="sxs-lookup"><span data-stu-id="0239b-123">The name or id of the slicer.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.getItemAt
  summary: >-
    <span data-ttu-id="0239b-124">Получает срез на основе его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0239b-124">Gets a slicer based on its position in the collection.</span></span>


    <span data-ttu-id="0239b-125">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="0239b-p105">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="0239b-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="0239b-128">Получает срез, используя его имя или идентификатор. Если срез не существует, вернет пустой объект.</span><span class="sxs-lookup"><span data-stu-id="0239b-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>


    <span data-ttu-id="0239b-129">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0239b-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="0239b-130">Имя или идентификатор среза, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="0239b-130">Name or Id of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.items
  summary: <span data-ttu-id="0239b-131">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0239b-131">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Slicer[];'
    return:
      type:
      - Excel.Slicer[]
- uid: excel.Excel.SlicerCollection.load
  summary: <span data-ttu-id="0239b-132">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0239b-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0239b-133">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="0239b-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0239b-134">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="0239b-134">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0239b-135">`load(option?: string | string[]): Excel.SlicerCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0239b-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0239b-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0239b-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0239b-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="0239b-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="0239b-138">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="0239b-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="0239b-139">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="0239b-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0239b-140">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="0239b-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0239b-141">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="0239b-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerCollection.load_1
  summary: <span data-ttu-id="0239b-142">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0239b-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0239b-143">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="0239b-143">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0239b-144">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0239b-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerCollection.toJSON
  summary: <span data-ttu-id="0239b-145">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="0239b-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0239b-146">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SlicerCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.SlicerCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="0239b-146">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerCollectionData
      description: ''
