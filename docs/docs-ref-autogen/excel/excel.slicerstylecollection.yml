### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerStyleCollection
    summary: |-
      Представляет коллекцию объектов Слицерстиле.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerStyleCollection.add
      - excel.Excel.SlicerStyleCollection.context
      - excel.Excel.SlicerStyleCollection.getCount
      - excel.Excel.SlicerStyleCollection.getDefault
      - excel.Excel.SlicerStyleCollection.getItem
      - excel.Excel.SlicerStyleCollection.getItemOrNullObject
      - excel.Excel.SlicerStyleCollection.items
      - excel.Excel.SlicerStyleCollection.load
      - excel.Excel.SlicerStyleCollection.load_1
      - excel.Excel.SlicerStyleCollection.load_2
      - excel.Excel.SlicerStyleCollection.setDefault
      - excel.Excel.SlicerStyleCollection.toJSON
  - uid: excel.Excel.SlicerStyleCollection.add
    summary: |-
      Создает пустой объект SlicerStyle с указанным именем.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: Вновь созданный Слицерстиле.
      parameters:
        - id: name
          description: 'Уникальное имя нового Слицерстиле. Если имя уже используется, будет выдаваться исключение недопустимого аргумента.'
          type:
            - string
        - id: makeUniqueName
          description: 'НеОбязательный параметр, по умолчанию — false. Если этот параметр имеет значение true, то в случае необходимости можно присоединить номера к имени, чтобы сделать его уникальным.'
          type:
            - boolean
  - uid: excel.Excel.SlicerStyleCollection.context
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerStyleCollection.getCount
    summary: |-
      Получает количество стилей срезов в коллекции.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerStyleCollection.getDefault
    summary: |-
      Получает используемый по умолчанию объект SlicerStyle для области родительского объекта.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: 'Объект Слицерстиле, который является текущим Слицерстиле по умолчанию.'
  - uid: excel.Excel.SlicerStyleCollection.getItem
    summary: |-
      Получает объект SlicerStyle по имени.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: 'Объект Слицерстиле, имя которого соответствует входным данным.'
      parameters:
        - id: name
          description: Имя извлекаемого Слицерстиле.
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.getItemOrNullObject
    summary: |-
      Получает объект SlicerStyle по имени. Если объект SlicerStyle не существует, возвращает пустой объект.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: 'Объект Слицерстиле, имя которого соответствует входным данным.'
      parameters:
        - id: name
          description: Имя извлекаемого Слицерстиле.
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.items
    summary: Получает загруженные дочерние элементы в этой коллекции.
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'Excel.SlicerStyle[]'
  - uid: excel.Excel.SlicerStyleCollection.load
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): Excel.SlicerStyleCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerStyleCollection.load_1
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerStyleCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerStyleCollection.setDefault
    summary: |-
      Задает объект SlicerStyle, используемый по умолчанию в области родительского объекта.

      \[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: 'Объект Слицерстиле или имя объекта Слицерстиле, который должен быть новым значением по умолчанию.'
          type:
            - SlicerStyle | string
  - uid: excel.Excel.SlicerStyleCollection.toJSON
    summary: 'ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SlicerStyleCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.SlicerStyleCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerStyleCollectionData
        description: ''