### YamlMime:UniversalReference
ms.openlocfilehash: 916f91800e67140526000ccfb6a80c8b3f7e4cea
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725272"
items:
- uid: excel.Excel.ConditionalRangeFill
  summary: >-
    <span data-ttu-id="d92e0-101">Представляет фон объект условного диапазона.</span><span class="sxs-lookup"><span data-stu-id="d92e0-101">Represents the background of a conditional range object.</span></span>


    <span data-ttu-id="d92e0-102">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d92e0-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalRangeFill
  fullName: Excel.ConditionalRangeFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalRangeFill.clear
  - excel.Excel.ConditionalRangeFill.color
  - excel.Excel.ConditionalRangeFill.context
  - excel.Excel.ConditionalRangeFill.load
  - excel.Excel.ConditionalRangeFill.toJSON
- uid: excel.Excel.ConditionalRangeFill.clear
  summary: >-
    <span data-ttu-id="d92e0-103">Удаляет заливку.</span><span class="sxs-lookup"><span data-stu-id="d92e0-103">Resets the fill.</span></span>


    <span data-ttu-id="d92e0-104">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d92e0-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.ConditionalRangeFill.color
  summary: >-
    <span data-ttu-id="d92e0-105">HTML-код цвета, представляющее цвет заливки формы \#вида RRGGBB (например, «FFA500») или как именованный цвета HTML (например «оранжевый»).</span><span class="sxs-lookup"><span data-stu-id="d92e0-105">HTML color code representing the color of the fill, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>


    <span data-ttu-id="d92e0-106">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d92e0-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalRangeFill.context
  summary: <span data-ttu-id="d92e0-107">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="d92e0-107">The request context associated with the object.</span></span> <span data-ttu-id="d92e0-108">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="d92e0-108">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalRangeFill.load
  summary: <span data-ttu-id="d92e0-109">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="d92e0-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d92e0-110">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="d92e0-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d92e0-111">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="d92e0-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d92e0-112">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFill`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="d92e0-112">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFill` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d92e0-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFill`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="d92e0-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFill` - Only available on collection types.</span></span> <span data-ttu-id="d92e0-114">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="d92e0-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="d92e0-115">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="d92e0-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d92e0-116">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="d92e0-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d92e0-117">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="d92e0-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalRangeFill;'
    return:
      type:
      - excel.Excel.ConditionalRangeFill
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="d92e0-118">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="d92e0-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalRangeFill.toJSON
  summary: <span data-ttu-id="d92e0-119">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d92e0-119">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d92e0-120">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ConditionalRangeFill является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ConditionalRangeFillData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="d92e0-120">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalRangeFillData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeFillData
      description: ''
