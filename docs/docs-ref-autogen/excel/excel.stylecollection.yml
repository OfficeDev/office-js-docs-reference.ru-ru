### YamlMime:UniversalReference
items:
  - uid: excel.Excel.StyleCollection
    summary: |-
      <span data-ttu-id="bc408-101">Представляет коллекцию всех стилей.</span><span class="sxs-lookup"><span data-stu-id="bc408-101">Represents a collection of all the styles.</span></span>

      <span data-ttu-id="bc408-102">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc408-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.StyleCollection.add
      - excel.Excel.StyleCollection.context
      - excel.Excel.StyleCollection.getCount
      - excel.Excel.StyleCollection.getItem
      - excel.Excel.StyleCollection.getItemAt
      - excel.Excel.StyleCollection.items
      - excel.Excel.StyleCollection.load
      - excel.Excel.StyleCollection.load_1
      - excel.Excel.StyleCollection.load_2
      - excel.Excel.StyleCollection.toJSON
  - uid: excel.Excel.StyleCollection.add
    summary: |-
      <span data-ttu-id="bc408-103">Добавляет новый стиль в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="bc408-103">Adds a new style to the collection.</span></span>

      <span data-ttu-id="bc408-104">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc408-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc408-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="bc408-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="bc408-106">Имя добавляемого стиля.</span><span class="sxs-lookup"><span data-stu-id="bc408-106">Name of the style to be added.</span></span>
          type:
            - string
  - uid: excel.Excel.StyleCollection.context
    summary: '<span data-ttu-id="bc408-107">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="bc408-107">The request context associated with the object.</span></span> <span data-ttu-id="bc408-108">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="bc408-108">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.StyleCollection.getCount
    summary: |-
      <span data-ttu-id="bc408-109">Получает количество стилей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="bc408-109">Gets the number of styles in the collection.</span></span>

      <span data-ttu-id="bc408-110">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc408-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.StyleCollection.getItem
    summary: |-
      <span data-ttu-id="bc408-111">Получает стиль по имени.</span><span class="sxs-lookup"><span data-stu-id="bc408-111">Gets a style by name.</span></span>

      <span data-ttu-id="bc408-112">\[[Набор API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc408-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc408-113">Примеры</span><span class="sxs-lookup"><span data-stu-id="bc408-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="bc408-114">Имя извлекаемого стиля.</span><span class="sxs-lookup"><span data-stu-id="bc408-114">Name of the style to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.StyleCollection.getItemAt
    summary: |-
      <span data-ttu-id="bc408-115">Получает стиль на основе его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="bc408-115">Gets a style based on its position in the collection.</span></span>

      <span data-ttu-id="bc408-116">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc408-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: ''
      parameters:
        - id: index
          description: '<span data-ttu-id="bc408-117">Значение индекса объекта Style, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="bc408-117">Index value of the style object to be retrieved.</span></span> <span data-ttu-id="bc408-118">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="bc408-118">Zero-indexed.</span></span>'
          type:
            - number
  - uid: excel.Excel.StyleCollection.items
    summary: <span data-ttu-id="bc408-119">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="bc408-119">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'Excel.Style[]'
  - uid: excel.Excel.StyleCollection.load
    summary: <span data-ttu-id="bc408-120">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="bc408-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bc408-121">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="bc408-121">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bc408-122">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="bc408-122">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bc408-123">`load(option?: string | string[]): Excel.StyleCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bc408-123">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bc408-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bc408-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bc408-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="bc408-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="bc408-126">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="bc408-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="bc408-127">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="bc408-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bc408-128">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="bc408-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bc408-129">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="bc408-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
      return:
        type:
          - excel.Excel.StyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.StyleCollection.load_1
    summary: <span data-ttu-id="bc408-130">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="bc408-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bc408-131">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="bc408-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - excel.Excel.StyleCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="bc408-132">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bc408-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.StyleCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
      return:
        type:
          - excel.Excel.StyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.StyleCollection.toJSON
    summary: '<span data-ttu-id="bc408-133">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bc408-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bc408-134">.</span><span class="sxs-lookup"><span data-stu-id="bc408-134"></span></span> <span data-ttu-id="bc408-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bc408-135"></span></span><!-- --><span data-ttu-id="bc408-136">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.StyleCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.StyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="bc408-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`</span></span><!-- --><span data-ttu-id="bc408-137">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="bc408-137">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.StyleCollectionData
        description: ''