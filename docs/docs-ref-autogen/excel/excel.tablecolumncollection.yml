### YamlMime:UniversalReference
ms.openlocfilehash: 4077a04e0056ed4390389f9ff806c61e5f95d97d
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/28/2018
ms.locfileid: "24050596"
items:
- uid: excel.Excel.TableColumnCollection
  summary: >-
    <span data-ttu-id="ed30c-101">Представляет коллекцию всех столбцов, включенных в таблицу.</span><span class="sxs-lookup"><span data-stu-id="ed30c-101">Represents a collection of all the columns that are part of the table.</span></span>


    <span data-ttu-id="ed30c-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumnCollection
  fullName: excel.Excel.TableColumnCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumnCollection.add
  - excel.Excel.TableColumnCollection.count
  - excel.Excel.TableColumnCollection.getCount
  - excel.Excel.TableColumnCollection.getItem
  - excel.Excel.TableColumnCollection.getItemAt
  - excel.Excel.TableColumnCollection.getItemOrNullObject
  - excel.Excel.TableColumnCollection.items
  - excel.Excel.TableColumnCollection.load
  - excel.Excel.TableColumnCollection.toJSON
- uid: excel.Excel.TableColumnCollection.add
  summary: >-
    <span data-ttu-id="ed30c-103">Добавляет новый столбец в таблицу.</span><span class="sxs-lookup"><span data-stu-id="ed30c-103">Adds a new column to the table.</span></span>


    <span data-ttu-id="ed30c-104">\[[Набор API-Интерфейсов: ExcelApi 1.1 требует меньше, чем количество общее столбцов индекса; 1.4 для индекса по желанию (null или -1) и добавляет столбец в конце; для 1.4 имя параметра во время создания.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="ed30c-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="ed30c-105">\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-105"></span></span>
  name: add(index, values, name)
  fullName: excel.Excel.TableColumnCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ed30c-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-106\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="ed30c-p102">Необязательный. Определяет относительную позицию нового столбца. Если задано значение null или -1, столбец добавляется в конце. Столбцы с более высокими значениями индекса смещаются в сторону. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="ed30c-p103">Необязательный параметр. Двухмерный массив неформатированных значений столбца таблицы.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p103">Optional. A 2-dimensional array of unformatted values of the table column.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
    - id: name
      description: <span data-ttu-id="ed30c-p104">Необязательный параметр. Задает имя нового столбца. Если значение пустое, используется имя по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p104">Optional. Specifies the name of the new column. If null, the default name will be used.</span></span>
      type:
      - string
- uid: excel.Excel.TableColumnCollection.count
  summary: >-
    <span data-ttu-id="ed30c-p105">Возвращает количество столбцов в таблице. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p105">Returns the number of columns in the table. Read-only.</span></span>


    <span data-ttu-id="ed30c-119">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-119">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: excel.Excel.TableColumnCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getCount
  summary: >-
    <span data-ttu-id="ed30c-120">Получает количество столбцов в таблице.</span><span class="sxs-lookup"><span data-stu-id="ed30c-120">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="ed30c-121">\[[Набор API-Интерфейсов: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-121">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.TableColumnCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableColumnCollection.getItem
  summary: >-
    <span data-ttu-id="ed30c-122">Возвращает объект столбца по имени или идентификатору.</span><span class="sxs-lookup"><span data-stu-id="ed30c-122">Gets a column object by Name or ID.</span></span>


    <span data-ttu-id="ed30c-123">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-123">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: excel.Excel.TableColumnCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ed30c-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="ed30c-125">Имя или идентификатор столбца.</span><span class="sxs-lookup"><span data-stu-id="ed30c-125">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.getItemAt
  summary: >-
    <span data-ttu-id="ed30c-126">Возвращает столбец на основании его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ed30c-126">Gets a column based on its position in the collection.</span></span>


    <span data-ttu-id="ed30c-127">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-127">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: excel.Excel.TableColumnCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ed30c-128\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="ed30c-p106">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="ed30c-p107">Возвращает объект столбца по имени или ИД. Если столбец не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="ed30c-p107">Gets a column object by Name or ID. If the column does not exist, will return a null object.</span></span>


    <span data-ttu-id="ed30c-133">\[[Набор API-Интерфейсов: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed30c-133">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: excel.Excel.TableColumnCollection.getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="ed30c-134">Имя или идентификатор столбца.</span><span class="sxs-lookup"><span data-stu-id="ed30c-134">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.items
  summary: <span data-ttu-id="ed30c-135">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="ed30c-135">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.TableColumnCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type:
      - Excel.TableColumn[]
- uid: excel.Excel.TableColumnCollection.load
  summary: <span data-ttu-id="ed30c-136">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ed30c-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ed30c-137">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="ed30c-137">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"ed30c-138\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-138\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"ed30c-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"ed30c-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"ed30c-141\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-141\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"ed30c-142\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-142\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"ed30c-143\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-143\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"ed30c-144\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-144\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"ed30c-145\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ed30c-145\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;\n    tablecolumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablecolumns Count: \" + tablecolumns.count);\n        for (var i = 0; i < tablecolumns.items.length; i++)\n        {\n            console.log(tablecolumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.TableColumnCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="ed30c-146">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ed30c-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumnCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.TableColumnCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnCollectionData
      description: ''
