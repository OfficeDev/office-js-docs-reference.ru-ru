### YamlMime:UniversalReference
ms.openlocfilehash: e87c660e1b41ad1a0112dc93abc1df6a29de8925
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976133"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="e00bc-101">Представляет имя, определенное для диапазона ячеек или значения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="e00bc-102">Имена могут быть простые с именем объектов (как показано в поле введите ниже), диапазона — объект или ссылка на диапазон.</span><span class="sxs-lookup"><span data-stu-id="e00bc-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="e00bc-103">Этот объект можно использовать для получения объекта range, связанных с именами.</span><span class="sxs-lookup"><span data-stu-id="e00bc-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="e00bc-104">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.load_1
  - excel.Excel.NamedItem.load_2
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.set
  - excel.Excel.NamedItem.set_1
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="e00bc-105">Возвращает объект, содержащий значения и типы именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="e00bc-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="e00bc-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-106">Read-only.</span></span>


    <span data-ttu-id="e00bc-107">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="e00bc-108">Представляет примечание, связанное с этим именем.</span><span class="sxs-lookup"><span data-stu-id="e00bc-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="e00bc-109">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="e00bc-110">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="e00bc-110">The request context associated with the object.</span></span> <span data-ttu-id="e00bc-111">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e00bc-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="e00bc-112">Удаляет заданное имя.</span><span class="sxs-lookup"><span data-stu-id="e00bc-112">Deletes the given name.</span></span>


    <span data-ttu-id="e00bc-113">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e00bc-114\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e00bc-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="e00bc-115">Получает или задает формулу именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="e00bc-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="e00bc-116">Формула всегда начинается со знака "=".</span><span class="sxs-lookup"><span data-stu-id="e00bc-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="e00bc-117">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e00bc-118\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e00bc-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="e00bc-p105">Возвращает объект диапазона, связанный с именем. Выдает ошибку, если именованный элемент не является диапазоном.</span><span class="sxs-lookup"><span data-stu-id="e00bc-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="e00bc-121">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e00bc-122\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e00bc-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="e00bc-p106">Возвращает объект диапазона, связанный с именем. Возвращает пустой объект, если именованный элемент не является диапазоном.</span><span class="sxs-lookup"><span data-stu-id="e00bc-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="e00bc-125">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="e00bc-126">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="e00bc-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e00bc-127">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="e00bc-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e00bc-128">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="e00bc-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e00bc-129">`load(option?: string | string[]): Excel.NamedItem`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e00bc-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e00bc-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e00bc-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e00bc-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="e00bc-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="e00bc-132">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="e00bc-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="e00bc-133">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e00bc-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e00bc-134">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="e00bc-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e00bc-135">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="e00bc-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel.Excel.NamedItem.load_1
  summary: <span data-ttu-id="e00bc-136">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="e00bc-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e00bc-137">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="e00bc-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e00bc-138\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e00bc-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e00bc-139">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e00bc-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.load_2
  summary: <span data-ttu-id="e00bc-140">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="e00bc-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e00bc-141">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="e00bc-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="e00bc-142">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e00bc-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="e00bc-p111">Имя объекта. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="e00bc-145">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="e00bc-146">Указывает, является ли имя областью действия в книгу или для конкретного рабочего листа.</span><span class="sxs-lookup"><span data-stu-id="e00bc-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="e00bc-147">Возможные значения: листа, книги.</span><span class="sxs-lookup"><span data-stu-id="e00bc-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="e00bc-148">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-148">Read-only.</span></span>


    <span data-ttu-id="e00bc-149">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.set
  summary: <span data-ttu-id="e00bc-150">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="e00bc-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e00bc-151">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="e00bc-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="e00bc-152">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="e00bc-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="e00bc-153">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e00bc-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="e00bc-154">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.NamedItem.set_1
  summary: <span data-ttu-id="e00bc-155">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="e00bc-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="e00bc-156">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e00bc-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e00bc-157">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.NamedItem является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.NamedItemData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="e00bc-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="e00bc-158">Указывает тип значение, возвращенное имя формулы.</span><span class="sxs-lookup"><span data-stu-id="e00bc-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="e00bc-159">Для получения дополнительных сведений в разделе Excel.NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="e00bc-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="e00bc-160">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-160">Read-only.</span></span>


    <span data-ttu-id="e00bc-161">\[[Набор API-Интерфейсов: ExcelApi 1.1 для строки, Integer, Double, Boolean, диапазон, ошибка; 1.7 для массива](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="e00bc-p116">Представляет значение, вычисленное по формуле имени. Если задан именованный диапазон, возвращается адрес диапазона. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e00bc-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="e00bc-165">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="e00bc-166">Определяет, является ли объект видимым.</span><span class="sxs-lookup"><span data-stu-id="e00bc-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="e00bc-167">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="e00bc-168">Возвращает листа, на котором пределах именованный элемент.</span><span class="sxs-lookup"><span data-stu-id="e00bc-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="e00bc-169">Создает ошибку, если элемент вместо ограничено рабочей книги.</span><span class="sxs-lookup"><span data-stu-id="e00bc-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="e00bc-170">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="e00bc-171">Возвращает листа, на котором пределах именованный элемент.</span><span class="sxs-lookup"><span data-stu-id="e00bc-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="e00bc-172">Возвращает объект значение null, если элемент вместо ограничено рабочей книги.</span><span class="sxs-lookup"><span data-stu-id="e00bc-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="e00bc-173">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e00bc-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
