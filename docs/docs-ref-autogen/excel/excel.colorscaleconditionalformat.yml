### YamlMime:UniversalReference
ms.openlocfilehash: 5bf30c5d69f492364c12b51aa42b9b196b7725e0
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724572"
items:
- uid: excel.Excel.ColorScaleConditionalFormat
  summary: >-
    <span data-ttu-id="13a02-101">Представляет условия условного форматирования IconSet.</span><span class="sxs-lookup"><span data-stu-id="13a02-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="13a02-102">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13a02-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ColorScaleConditionalFormat
  fullName: Excel.ColorScaleConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ColorScaleConditionalFormat.context
  - excel.Excel.ColorScaleConditionalFormat.criteria
  - excel.Excel.ColorScaleConditionalFormat.load
  - excel.Excel.ColorScaleConditionalFormat.threeColorScale
  - excel.Excel.ColorScaleConditionalFormat.toJSON
- uid: excel.Excel.ColorScaleConditionalFormat.context
  summary: <span data-ttu-id="13a02-103">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="13a02-103">The request context associated with the object.</span></span> <span data-ttu-id="13a02-104">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="13a02-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ColorScaleConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="13a02-p102">Условия цветовой шкалы. Средняя точка является необязательной при использовании цветовой шкалы с двумя точками.</span><span class="sxs-lookup"><span data-stu-id="13a02-p102">The criteria of the color scale. Midpoint is optional when using a two point color scale.</span></span>


    <span data-ttu-id="13a02-107">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13a02-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalColorScaleCriteria;'
    return:
      type:
      - excel.Excel.ConditionalColorScaleCriteria
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"13a02-108\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"13a02-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ColorScaleConditionalFormat.load
  summary: <span data-ttu-id="13a02-109">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="13a02-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13a02-110">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="13a02-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="13a02-111">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="13a02-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="13a02-112">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="13a02-112">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="13a02-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="13a02-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="13a02-114">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="13a02-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="13a02-115">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="13a02-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="13a02-116">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="13a02-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="13a02-117">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="13a02-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="13a02-118">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="13a02-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ColorScaleConditionalFormat.threeColorScale
  summary: >-
    <span data-ttu-id="13a02-119">Если значение true цветовой шкалы будут иметь три точки (минимальное, среднее, максимальное), в противном случае он будет иметь два (минимальное, максимальное).</span><span class="sxs-lookup"><span data-stu-id="13a02-119">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>


    <span data-ttu-id="13a02-120">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13a02-120">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: threeColorScale
  fullName: threeColorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ColorScaleConditionalFormat.toJSON
  summary: <span data-ttu-id="13a02-121">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="13a02-121">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="13a02-122">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ColorScaleConditionalFormat является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ColorScaleConditionalFormatData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="13a02-122">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
      description: ''
