### YamlMime:UniversalReference
ms.openlocfilehash: 26e861af6584c0ca945d38fe26967e0c9719a543
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/09/2018
ms.locfileid: "26225541"
items:
- uid: excel.Excel.ColorScaleConditionalFormat
  summary: >-
    Представляет условия условного форматирования IconSet.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ColorScaleConditionalFormat
  fullName: Excel.ColorScaleConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ColorScaleConditionalFormat.criteria
  - excel.Excel.ColorScaleConditionalFormat.load
  - excel.Excel.ColorScaleConditionalFormat.threeColorScale
  - excel.Excel.ColorScaleConditionalFormat.toJSON
- uid: excel.Excel.ColorScaleConditionalFormat.criteria
  summary: >-
    Условия цветовой шкалы. Средняя точка является необязательной при использовании цветовой шкалы с двумя точками.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalColorScaleCriteria;'
    return:
      type:
      - excel.Excel.ConditionalColorScaleCriteria
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ColorScaleConditionalFormat.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.ColorScaleConditionalFormat.threeColorScale
  summary: >-
    Если значение true цветовой шкалы будут иметь три точки (минимальное, среднее, максимальное), в противном случае он будет иметь два (минимальное, максимальное).


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: threeColorScale
  fullName: threeColorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ColorScaleConditionalFormat.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
      description: ''
