### YamlMime:UniversalReference
ms.openlocfilehash: 6334a8faa8272bdce78a343404e36d9ded5dd3bd
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/28/2018
ms.locfileid: "24052027"
items:
- uid: excel.Excel.TableRow
  summary: >-
    <span data-ttu-id="72f30-101">Представляет строку в таблице.</span><span class="sxs-lookup"><span data-stu-id="72f30-101">Represents a row in a table.</span></span>


    <span data-ttu-id="72f30-102">Обратите внимание, что в отличие от диапазонов или столбцы, которые будут настроить перед их при добавлении новых строк и столбцов, объект TableRow представляет физическое расположение строка таблицы, но не данные.</span><span class="sxs-lookup"><span data-stu-id="72f30-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="72f30-103">То есть если сортируется данные или добавляются новые строки, строка таблицы будет предоставляться для указания по индексу, для которого он был создан.</span><span class="sxs-lookup"><span data-stu-id="72f30-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="72f30-104">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="72f30-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRow
  fullName: excel.Excel.TableRow
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableRow.delete
  - excel.Excel.TableRow.getRange
  - excel.Excel.TableRow.index
  - excel.Excel.TableRow.load
  - excel.Excel.TableRow.toJSON
  - excel.Excel.TableRow.values
- uid: excel.Excel.TableRow.delete
  summary: >-
    <span data-ttu-id="72f30-105">Удаляет строку из таблицы.</span><span class="sxs-lookup"><span data-stu-id="72f30-105">Deletes the row from the table.</span></span>


    <span data-ttu-id="72f30-106">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="72f30-106">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.TableRow.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"72f30-107\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);\n    row.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableRow.getRange
  summary: >-
    <span data-ttu-id="72f30-108">Возвращает объект диапазона, связанный со всей строкой.</span><span class="sxs-lookup"><span data-stu-id="72f30-108">Returns the range object associated with the entire row.</span></span>


    <span data-ttu-id="72f30-109">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="72f30-109">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: excel.Excel.TableRow.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"72f30-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);\n    var rowRange = row.getRange();\n    rowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(rowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableRow.index
  summary: >-
    <span data-ttu-id="72f30-p102">Возвращает номер индекса строки в коллекции строк таблицы. Используется нулевой индекс. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="72f30-p102">Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="72f30-114">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="72f30-114">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: excel.Excel.TableRow.index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableRow.load
  summary: <span data-ttu-id="72f30-115">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="72f30-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="72f30-116">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="72f30-116">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"72f30-117\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-117\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"72f30-118\">`load(option?: { select?: string; expand?: string; }): Excel.TableRow`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-118\">`load(option?: { select?: string; expand?: string; }): Excel.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"72f30-119\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-119\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow` - Only available on collection types.</span></span> <span data-ttu-id=\"72f30-120\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-120\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"72f30-121\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-121\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"72f30-122\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-122\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"72f30-123\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-123\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"72f30-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"72f30-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);\n    row.values = newValues;\n    row.load('values');\n    return ctx.sync().then(function() {\n        console.log(row.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.TableRow.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="72f30-125">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="72f30-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableRow.toJSON
  name: toJSON()
  fullName: excel.Excel.TableRow.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowData
      description: ''
- uid: excel.Excel.TableRow.values
  summary: >-
    <span data-ttu-id="72f30-126">Представляет необработанные значения указанного диапазона.</span><span class="sxs-lookup"><span data-stu-id="72f30-126">Represents the raw values of the specified range.</span></span> <span data-ttu-id="72f30-127">Данные, возвращаемые может быть типа string, число или логическое значение.</span><span class="sxs-lookup"><span data-stu-id="72f30-127">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="72f30-128">Ячейки, содержащие ошибку возвращает строку ошибки.</span><span class="sxs-lookup"><span data-stu-id="72f30-128">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="72f30-129">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="72f30-129">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: excel.Excel.TableRow.values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
