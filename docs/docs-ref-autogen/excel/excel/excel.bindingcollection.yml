### YamlMime:TSType
name: Excel.BindingCollection
uid: excel!Excel.BindingCollection:class
package: excel!
fullName: Excel.BindingCollection
summary: >-
  Представляет коллекцию всех объектов привязки, включенных в книгу.


  \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.BindingCollection#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом ведущего приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: count
  uid: excel!Excel.BindingCollection#count:member
  package: excel!
  fullName: count
  summary: >-
    Возвращает число привязок в коллекции.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly count: number;'
    return:
      type: number
- name: items
  uid: excel!Excel.BindingCollection#items:member
  package: excel!
  fullName: items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type: <xref uid="excel!Excel.Binding:class" />[]
methods:
- name: add(range, bindingType, id)
  uid: excel!Excel.BindingCollection#add:member(1)
  package: excel!
  fullName: add(range, bindingType, id)
  summary: >-
    Добавляет привязку к определенному объекту Range.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    parameters:
    - id: range
      description: Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.
      type: <xref uid="excel!Excel.Range:class" /> | string
    - id: bindingType
      description: Тип привязки. См. excel.BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" />
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: add(range, bindingTypeString, id)
  uid: excel!Excel.BindingCollection#add:member(2)
  package: excel!
  fullName: add(range, bindingTypeString, id)
  summary: >-
    Добавляет привязку к определенному объекту Range.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    parameters:
    - id: range
      description: Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.
      type: <xref uid="excel!Excel.Range:class" /> | string
    - id: bindingTypeString
      description: Тип привязки. См. excel.BindingType.
      type: "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: addFromNamedItem(name, bindingType, id)
  uid: excel!Excel.BindingCollection#addFromNamedItem:member(1)
  package: excel!
  fullName: addFromNamedItem(name, bindingType, id)
  summary: >-
    Добавляет новую привязку с учетом именованного элемента в книге. Если именовательный элемент ссылается на несколько областей, возвращается ошибка InvalidReference.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    parameters:
    - id: name
      description: Имя элемента, на основе которого создается привязка.
      type: string
    - id: bindingType
      description: Тип привязки. См. excel.BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" />
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: addFromNamedItem(name, bindingTypeString, id)
  uid: excel!Excel.BindingCollection#addFromNamedItem:member(2)
  package: excel!
  fullName: addFromNamedItem(name, bindingTypeString, id)
  summary: >-
    Добавляет новую привязку с учетом именованного элемента в книге. Если именовательный элемент ссылается на несколько областей, возвращается ошибка InvalidReference.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    parameters:
    - id: name
      description: Имя элемента, на основе которого создается привязка.
      type: string
    - id: bindingTypeString
      description: Тип привязки. См. excel.BindingType.
      type: "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: addFromSelection(bindingType, id)
  uid: excel!Excel.BindingCollection#addFromSelection:member(1)
  package: excel!
  fullName: addFromSelection(bindingType, id)
  summary: >-
    Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента. Если выделение имеет несколько областей, возвращается ошибка InvalidReference.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    parameters:
    - id: bindingType
      description: Тип привязки. См. excel.BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" />
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: addFromSelection(bindingTypeString, id)
  uid: excel!Excel.BindingCollection#addFromSelection:member(2)
  package: excel!
  fullName: addFromSelection(bindingTypeString, id)
  summary: >-
    Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента. Если выделение имеет несколько областей, возвращается ошибка InvalidReference.


    \[[Набор API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    parameters:
    - id: bindingTypeString
      description: Тип привязки. См. excel.BindingType.
      type: "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: Имя привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: getCount()
  uid: excel!Excel.BindingCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Получает количество привязок в коллекции.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(id)
  uid: excel!Excel.BindingCollection#getItem:member(1)
  package: excel!
  fullName: getItem(id)
  summary: >-
    Возвращает объект привязки по идентификатору.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    parameters:
    - id: id
      description: Идентификатор получаемого объекта привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    // Create Table1\n    Excel.run(function (ctx) { \n        ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n        return ctx.sync().then(function() {\n                console.log(\"My Diet Data Inserted!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n    //Create a new table binding for Table1\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n        else {\n            // If succeeded, then add event handler to the table binding.\n            Office.select(\"bindings#myBinding\").addHandlerAsync(\n                Office.EventType.BindingDataChanged, onBindingDataChanged);\n        }\n    });\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\n    Excel.run(function (ctx) { \n        // highlight the table in orange to indicate data has been changed.\n        ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n        return ctx.sync().then(function() {\n                console.log(\"The value in this table got changed!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n}\n```"
- name: getItemAt(index)
  uid: excel!Excel.BindingCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: >-
    Возвращает объект привязки с учетом его положения в массиве элементов.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItemOrNullObject(id)
  uid: excel!Excel.BindingCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(id)
  summary: >-
    Возвращает объект привязки по идентификатору. Если объект привязки не существует, эта функция возвращает объект с `isNullObject` его свойством `true`<!-- -->. Дополнительные сведения см. в сведениях о методах и свойствах [*OrNullObject](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    parameters:
    - id: id
      description: Идентификатор получаемого объекта привязки.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.BindingCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых загружаются свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.BindingCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.BindingCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
    parameters:
    - id: propertyNames
      description: Строка с делегировкой запятой или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.BindingCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.BindingCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` — это строка с делегировкой запятой, которая указывает свойства для загрузки и является строкой с делегировкой запятой, которая определяет свойства навигации для `propertyNamesAndPaths.expand` загрузки.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.BindingCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезные выходные данные при передании объекта `toJSON()` API `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, `toJSON` который передается ему.) В то время `Excel.BindingCollection` как исходный объект является объектом API, метод возвращает обычный объект `toJSON` JavaScript (тип `Excel.Interfaces.BindingCollectionData`<!-- -->), содержащий массив "items" с неглубокими копиями всех загруженных свойств из элементов коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.BindingCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 5f2a2ee9958a5762dad8a157619d4ca217fbcfe5
  ms.sourcegitcommit: f229afdd4c2bc820ac799394a77b637fc66e87b4
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/27/2021
  ms.locfileid: "49991823"
