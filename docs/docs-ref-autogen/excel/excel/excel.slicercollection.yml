### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerCollection
    summary: |-
      <span data-ttu-id="09e44-101">Представляет коллекцию всех объектов срезов в книге или листе.</span><span class="sxs-lookup"><span data-stu-id="09e44-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>

      <span data-ttu-id="09e44-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerCollection
    fullName: Excel.SlicerCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.SlicerCollection.add
      - excel.Excel.SlicerCollection.context
      - excel.Excel.SlicerCollection.getCount
      - excel.Excel.SlicerCollection.getItem
      - excel.Excel.SlicerCollection.getItemAt
      - excel.Excel.SlicerCollection.getItemOrNullObject
      - excel.Excel.SlicerCollection.items
      - excel.Excel.SlicerCollection.load
      - excel.Excel.SlicerCollection.load_1
      - excel.Excel.SlicerCollection.load_2
      - excel.Excel.SlicerCollection.toJSON
  - uid: excel.Excel.SlicerCollection.add
    summary: |-
      <span data-ttu-id="09e44-103">Добавляет новый срез в книгу.</span><span class="sxs-lookup"><span data-stu-id="09e44-103">Adds a new slicer to the workbook.</span></span>

      <span data-ttu-id="09e44-104">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(slicerSource, sourceField, slicerDestination)'
    fullName: 'add(slicerSource, sourceField, slicerDestination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: |-
          <span data-ttu-id="09e44-105">Новый срез.</span><span class="sxs-lookup"><span data-stu-id="09e44-105">The new slicer.</span></span>

          #### <a name="examples"></a><span data-ttu-id="09e44-106">Примеры</span><span class="sxs-lookup"><span data-stu-id="09e44-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Pivot");
              const slicer = sheet.slicers.add(
                  "Farm Sales", /* The slicer data source. For PivotTables, this can be the PivotTable object reference or name. */
                  "Type" /* The field in the data source to filter by. For PivotTables, this can be a PivotField object reference or ID. */
              );
              slicer.name = "Fruit Slicer";
              await context.sync();
          });
          ```
      parameters:
        - id: slicerSource
          description: '<span data-ttu-id="09e44-107">Источник данных, на котором будет основан новый срез.</span><span class="sxs-lookup"><span data-stu-id="09e44-107">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="09e44-108">Это может быть объект PivotTable, объект Table или строка.</span><span class="sxs-lookup"><span data-stu-id="09e44-108">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="09e44-109">Когда объект сводной таблицы передается, источником данных является источник объекта сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="09e44-109">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="09e44-110">Когда передается объект Table, источником данных является объект Table.</span><span class="sxs-lookup"><span data-stu-id="09e44-110">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="09e44-111">Когда строка передается, она интерпретируется как имя/идентификатор сводной таблицы или таблицы.</span><span class="sxs-lookup"><span data-stu-id="09e44-111">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>'
          type:
            - string | PivotTable | Table
        - id: sourceField
          description: '<span data-ttu-id="09e44-112">Поле в источнике данных, по которому выполняется фильтрация.</span><span class="sxs-lookup"><span data-stu-id="09e44-112">The field in the data source to filter by.</span></span> <span data-ttu-id="09e44-113">Это может быть объект PivotField, объект TableColumn, идентификатор PivotField или идентификатор и имя TableColumn.</span><span class="sxs-lookup"><span data-stu-id="09e44-113">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>'
          type:
            - string | PivotField | number | TableColumn
        - id: slicerDestination
          description: '<span data-ttu-id="09e44-114">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="09e44-114">Optional.</span></span> <span data-ttu-id="09e44-115">Лист, в котором будет создан новый срез.</span><span class="sxs-lookup"><span data-stu-id="09e44-115">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="09e44-116">Это может быть объект листа или имя или идентификатор листа.</span><span class="sxs-lookup"><span data-stu-id="09e44-116">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="09e44-117">Этот параметр можно опустить, если коллекция срезов извлекается из листа.</span><span class="sxs-lookup"><span data-stu-id="09e44-117">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>'
          type:
            - string | Worksheet
  - uid: excel.Excel.SlicerCollection.context
    summary: '<span data-ttu-id="09e44-118">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="09e44-118">The request context associated with the object.</span></span> <span data-ttu-id="09e44-119">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="09e44-119">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.SlicerCollection.getCount
    summary: |-
      <span data-ttu-id="09e44-120">Возвращает количество срезов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="09e44-120">Returns the number of slicers in the collection.</span></span>

      <span data-ttu-id="09e44-121">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerCollection.getItem
    summary: |-
      <span data-ttu-id="09e44-122">Получает объект slicer по его имени или ИД.</span><span class="sxs-lookup"><span data-stu-id="09e44-122">Gets a slicer object using its name or id.</span></span>

      <span data-ttu-id="09e44-123">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e44-124">Примеры</span><span class="sxs-lookup"><span data-stu-id="09e44-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.caption = "Fruit Types";
              slicer.left = 395;
              slicer.top = 15;
              slicer.height = 135;
              slicer.width = 150;
              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="09e44-125">Имя или идентификатор среза.</span><span class="sxs-lookup"><span data-stu-id="09e44-125">The name or id of the slicer.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.getItemAt
    summary: |-
      <span data-ttu-id="09e44-126">Получает срез на основе его позиции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="09e44-126">Gets a slicer based on its position in the collection.</span></span>

      <span data-ttu-id="09e44-127">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="09e44-128">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="09e44-128">Index value of the object to be retrieved.</span></span> <span data-ttu-id="09e44-129">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="09e44-129">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.SlicerCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="09e44-130">Получает срез по его имени или ИД. Если срез не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="09e44-130">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>

      <span data-ttu-id="09e44-131">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e44-131">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="09e44-132">Имя или идентификатор среза, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="09e44-132">Name or Id of the slicer to be retrieved.</span></span>'
          type:
            - string
  - uid: excel.Excel.SlicerCollection.items
    summary: <span data-ttu-id="09e44-133">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="09e44-133">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Slicer[];'
      return:
        type:
          - 'Excel.Slicer[]'
  - uid: excel.Excel.SlicerCollection.load
    summary: <span data-ttu-id="09e44-134">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="09e44-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09e44-135">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="09e44-135">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="09e44-136">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="09e44-136">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="09e44-137">`load(option?: string | string[]): Excel.SlicerCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="09e44-137">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="09e44-138">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="09e44-138">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="09e44-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="09e44-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="09e44-140">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="09e44-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="09e44-141">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="09e44-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="09e44-142">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="09e44-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="09e44-143">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="09e44-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerCollection.load_1
    summary: <span data-ttu-id="09e44-144">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="09e44-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09e44-145">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="09e44-145">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="09e44-146">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="09e44-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerCollection.toJSON
    summary: '<span data-ttu-id="09e44-147">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="09e44-147">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="09e44-148">.</span><span class="sxs-lookup"><span data-stu-id="09e44-148"></span></span> <span data-ttu-id="09e44-149">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="09e44-149"></span></span><!-- --><span data-ttu-id="09e44-150">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SlicerCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.SlicerCollectionData`</span><span class="sxs-lookup"><span data-stu-id="09e44-150">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`</span></span><!-- --><span data-ttu-id="09e44-151">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="09e44-151">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerCollectionData
        description: ''