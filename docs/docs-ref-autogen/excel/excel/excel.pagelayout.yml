### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PageLayout:class'
    summary: |-
      <span data-ttu-id="83a4c-101">Представляет параметры макета и печати, которые не зависят от конкретной реализации принтера.</span><span class="sxs-lookup"><span data-stu-id="83a4c-101">Represents layout and print settings that are not dependent any printer-specific implementation.</span></span> <span data-ttu-id="83a4c-102">Эти параметры включают поля, ориентацию, нумерацию страницы, строки заголовков и область печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-102">These settings include margins, orientation, page numbering, title rows, and print area.</span></span>

      <span data-ttu-id="83a4c-103">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PageLayout
    fullName: Excel.PageLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PageLayout#blackAndWhite:member'
      - 'excel!Excel.PageLayout#bottomMargin:member'
      - 'excel!Excel.PageLayout#centerHorizontally:member'
      - 'excel!Excel.PageLayout#centerVertically:member'
      - 'excel!Excel.PageLayout#context:member'
      - 'excel!Excel.PageLayout#draftMode:member'
      - 'excel!Excel.PageLayout#firstPageNumber:member'
      - 'excel!Excel.PageLayout#footerMargin:member'
      - 'excel!Excel.PageLayout#getPrintArea:member(1)'
      - 'excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleColumns:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleRows:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#headerMargin:member'
      - 'excel!Excel.PageLayout#headersFooters:member'
      - 'excel!Excel.PageLayout#leftMargin:member'
      - 'excel!Excel.PageLayout#load:member(1)'
      - 'excel!Excel.PageLayout#load:member(2)'
      - 'excel!Excel.PageLayout#load:member(3)'
      - 'excel!Excel.PageLayout#orientation:member'
      - 'excel!Excel.PageLayout#paperSize:member'
      - 'excel!Excel.PageLayout#printComments:member'
      - 'excel!Excel.PageLayout#printErrors:member'
      - 'excel!Excel.PageLayout#printGridlines:member'
      - 'excel!Excel.PageLayout#printHeadings:member'
      - 'excel!Excel.PageLayout#printOrder:member'
      - 'excel!Excel.PageLayout#rightMargin:member'
      - 'excel!Excel.PageLayout#set:member(1)'
      - 'excel!Excel.PageLayout#set:member(2)'
      - 'excel!Excel.PageLayout#setPrintArea:member(1)'
      - 'excel!Excel.PageLayout#setPrintMargins:member(1)'
      - 'excel!Excel.PageLayout#setPrintMargins:member(2)'
      - 'excel!Excel.PageLayout#setPrintTitleColumns:member(1)'
      - 'excel!Excel.PageLayout#setPrintTitleRows:member(1)'
      - 'excel!Excel.PageLayout#toJSON:member(1)'
      - 'excel!Excel.PageLayout#topMargin:member'
      - 'excel!Excel.PageLayout#zoom:member'
  - uid: 'excel!Excel.PageLayout#blackAndWhite:member'
    summary: |-
      <span data-ttu-id="83a4c-104">Получает или задает параметр черно-белой печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-104">Gets or sets the worksheet's black and white print option.</span></span>

      <span data-ttu-id="83a4c-105">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: blackAndWhite
    fullName: blackAndWhite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'blackAndWhite: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#bottomMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-106">Получает или задает нижнее поле страницы листа, чтобы использовать для печати в пунктах.</span><span class="sxs-lookup"><span data-stu-id="83a4c-106">Gets or sets the worksheet's bottom page margin to use for printing in points.</span></span>

      <span data-ttu-id="83a4c-107">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bottomMargin
    fullName: bottomMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bottomMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#centerHorizontally:member'
    summary: |-
      <span data-ttu-id="83a4c-108">Получает или задает отметку выравнивания листа по горизонтали относительно центра.</span><span class="sxs-lookup"><span data-stu-id="83a4c-108">Gets or sets the worksheet's center horizontally flag.</span></span> <span data-ttu-id="83a4c-109">Эта отметка определяет, выравнивается ли лист по горизонтали относительно центра при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-109">This flag determines whether the worksheet will be centered horizontally when it's printed.</span></span>

      <span data-ttu-id="83a4c-110">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: centerHorizontally
    fullName: centerHorizontally
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerHorizontally: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-111">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#centerVertically:member'
    summary: |-
      <span data-ttu-id="83a4c-112">Получает или задает отметку выравнивания листа по вертикали относительно центра.</span><span class="sxs-lookup"><span data-stu-id="83a4c-112">Gets or sets the worksheet's center vertically flag.</span></span> <span data-ttu-id="83a4c-113">Эта отметка определяет, выравнивается ли лист по вертикали относительно центра при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-113">This flag determines whether the worksheet will be centered vertically when it's printed.</span></span>

      <span data-ttu-id="83a4c-114">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-114">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: centerVertically
    fullName: centerVertically
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerVertically: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-115">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#context:member'
    summary: '<span data-ttu-id="83a4c-116">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="83a4c-116">The request context associated with the object.</span></span> <span data-ttu-id="83a4c-117">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="83a4c-117">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PageLayout#draftMode:member'
    summary: |-
      <span data-ttu-id="83a4c-118">Получает или задает параметр режима черновика листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-118">Gets or sets the worksheet's draft mode option.</span></span> <span data-ttu-id="83a4c-119">Если присвоено значение true, лист будет печататься без рисунков.</span><span class="sxs-lookup"><span data-stu-id="83a4c-119">If true the sheet will be printed without graphics.</span></span>

      <span data-ttu-id="83a4c-120">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-120">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: draftMode
    fullName: draftMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'draftMode: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#firstPageNumber:member'
    summary: |-
      <span data-ttu-id="83a4c-121">Получает или задает номер первой страницы листа для печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-121">Gets or sets the worksheet's first page number to print.</span></span> <span data-ttu-id="83a4c-122">Значение null представляет автоматическую нумерацию страниц.</span><span class="sxs-lookup"><span data-stu-id="83a4c-122">Null value represents "auto" page numbering.</span></span>

      <span data-ttu-id="83a4c-123">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-123">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: firstPageNumber
    fullName: firstPageNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstPageNumber: number | "";'
      return:
        type:
          - number | ""
  - uid: 'excel!Excel.PageLayout#footerMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-124">Получает или задает поле нижнего колонтитула листа (в пунктах) для использования при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-124">Gets or sets the worksheet's footer margin, in points, for use when printing.</span></span>

      <span data-ttu-id="83a4c-125">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-125">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: footerMargin
    fullName: footerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'footerMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#getPrintArea:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-126">Получает объект RangeAreas, состоящий из одного или нескольких прямоугольных диапазонов, представляющих область печати для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-126">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet.</span></span> <span data-ttu-id="83a4c-127">Если область печати отсутствует, возникает ошибка ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="83a4c-127">If there is no print area, an ItemNotFound error will be thrown.</span></span>

      <span data-ttu-id="83a4c-128">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-128">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintArea()
    fullName: getPrintArea()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintArea(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-129">Получает объект RangeAreas, состоящий из одного или нескольких прямоугольных диапазонов, представляющих область печати для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-129">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet.</span></span> <span data-ttu-id="83a4c-130">Если область печати отсутствует, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="83a4c-130">If there is no print area, a null object will be returned.</span></span>

      <span data-ttu-id="83a4c-131">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintAreaOrNullObject()
    fullName: getPrintAreaOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleColumns:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-132">Получает объект range, представляющий столбцы заголовков.</span><span class="sxs-lookup"><span data-stu-id="83a4c-132">Gets the range object representing the title columns.</span></span>

      <span data-ttu-id="83a4c-133">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-133">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintTitleColumns()
    fullName: getPrintTitleColumns()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumns(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-134">Получает объект range, представляющий столбцы заголовков.</span><span class="sxs-lookup"><span data-stu-id="83a4c-134">Gets the range object representing the title columns.</span></span> <span data-ttu-id="83a4c-135">Если значение не установлено, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="83a4c-135">If not set, this will return a null object.</span></span>

      <span data-ttu-id="83a4c-136">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-136">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintTitleColumnsOrNullObject()
    fullName: getPrintTitleColumnsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleRows:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-137">Получает объект range, представляющий строки заголовков.</span><span class="sxs-lookup"><span data-stu-id="83a4c-137">Gets the range object representing the title rows.</span></span>

      <span data-ttu-id="83a4c-138">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-138">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintTitleRows()
    fullName: getPrintTitleRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRows(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-139">Получает объект range, представляющий строки заголовков.</span><span class="sxs-lookup"><span data-stu-id="83a4c-139">Gets the range object representing the title rows.</span></span> <span data-ttu-id="83a4c-140">Если значение не установлено, возвращается пустой объект.</span><span class="sxs-lookup"><span data-stu-id="83a4c-140">If not set, this will return a null object.</span></span>

      <span data-ttu-id="83a4c-141">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-141">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrintTitleRowsOrNullObject()
    fullName: getPrintTitleRowsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#headerMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-142">Получает или задает поле верхнего колонтитула листа (в пунктах) для использования при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-142">Gets or sets the worksheet's header margin, in points, for use when printing.</span></span>

      <span data-ttu-id="83a4c-143">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-143">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: headerMargin
    fullName: headerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#headersFooters:member'
    summary: |-
      <span data-ttu-id="83a4c-144">Настройка колонтитулов для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-144">Header and footer configuration for the worksheet.</span></span>

      <span data-ttu-id="83a4c-145">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-145">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: headersFooters
    fullName: headersFooters
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
      return:
        type:
          - 'excel!Excel.HeaderFooterGroup:class'
  - uid: 'excel!Excel.PageLayout#leftMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-146">Получает или задает левое поле листа (в пунктах) для использования при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-146">Gets or sets the worksheet's left margin, in points, for use when printing.</span></span>

      <span data-ttu-id="83a4c-147">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-147">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: leftMargin
    fullName: leftMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#load:member(1)'
    summary: <span data-ttu-id="83a4c-148">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-148">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83a4c-149">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="83a4c-149">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="83a4c-150">Предоставляет параметры, для которых загружается свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-150">Provides options for which properties of the object to load.</span></span>'
          type:
            - 'excel!Excel.Interfaces.PageLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PageLayout#load:member(2)'
    summary: <span data-ttu-id="83a4c-151">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-151">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83a4c-152">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="83a4c-152">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="83a4c-153">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83a4c-153">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PageLayout#load:member(3)'
    summary: <span data-ttu-id="83a4c-154">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83a4c-155">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="83a4c-155">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PageLayout;
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="83a4c-156">`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83a4c-156">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PageLayout#orientation:member'
    summary: |-
      <span data-ttu-id="83a4c-157">Получает или задает ориентацию страницы для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-157">Gets or sets the worksheet's orientation of the page.</span></span>

      <span data-ttu-id="83a4c-158">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-158">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: orientation
    fullName: orientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
      return:
        type:
          - 'excel!Excel.PageLayout#orientation~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-159">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-159">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#paperSize:member'
    summary: |-
      <span data-ttu-id="83a4c-160">Получает или задает размер бумаги для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-160">Gets or sets the worksheet's paper size of the page.</span></span>

      <span data-ttu-id="83a4c-161">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-161">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: paperSize
    fullName: paperSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";'
      return:
        type:
          - 'excel!Excel.PageLayout#paperSize~0:complex'
  - uid: 'excel!Excel.PageLayout#printComments:member'
    summary: |-
      <span data-ttu-id="83a4c-162">Получает или задает, должны ли отображаться примечания листа при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-162">Gets or sets whether the worksheet's comments should be displayed when printing.</span></span>

      <span data-ttu-id="83a4c-163">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-163">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: printComments
    fullName: printComments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
      return:
        type:
          - 'excel!Excel.PageLayout#printComments~0:complex'
  - uid: 'excel!Excel.PageLayout#printErrors:member'
    summary: |-
      <span data-ttu-id="83a4c-164">Получает или задает параметр ошибок печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-164">Gets or sets the worksheet's print errors option.</span></span>

      <span data-ttu-id="83a4c-165">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-165">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: printErrors
    fullName: printErrors
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
      return:
        type:
          - 'excel!Excel.PageLayout#printErrors~0:complex'
  - uid: 'excel!Excel.PageLayout#printGridlines:member'
    summary: |-
      <span data-ttu-id="83a4c-166">Получает или задает отметку печати линий сетки листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-166">Gets or sets the worksheet's print gridlines flag.</span></span> <span data-ttu-id="83a4c-167">Эта отметка определяет, печатаются ли линии сетки.</span><span class="sxs-lookup"><span data-stu-id="83a4c-167">This flag determines whether gridlines will be printed or not.</span></span>

      <span data-ttu-id="83a4c-168">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-168">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: printGridlines
    fullName: printGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printGridlines: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#printHeadings:member'
    summary: |-
      <span data-ttu-id="83a4c-169">Получает или задает отметку печати заголовков листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-169">Gets or sets the worksheet's print headings flag.</span></span> <span data-ttu-id="83a4c-170">Эта отметка определяет, печатаются ли заголовки.</span><span class="sxs-lookup"><span data-stu-id="83a4c-170">This flag determines whether headings will be printed or not.</span></span>

      <span data-ttu-id="83a4c-171">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-171">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: printHeadings
    fullName: printHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#printOrder:member'
    summary: |-
      <span data-ttu-id="83a4c-172">Получает или задает параметр порядка печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-172">Gets or sets the worksheet's page print order option.</span></span> <span data-ttu-id="83a4c-173">Определяет порядок, использующийся при обработке распечатываемых номеров страниц.</span><span class="sxs-lookup"><span data-stu-id="83a4c-173">This specifies the order to use for processing the page number printed.</span></span>

      <span data-ttu-id="83a4c-174">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-174">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: printOrder
    fullName: printOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
      return:
        type:
          - 'excel!Excel.PageLayout#printOrder~0:complex'
  - uid: 'excel!Excel.PageLayout#rightMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-175">Получает или задает правое поле листа (в пунктах) для использования при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-175">Gets or sets the worksheet's right margin, in points, for use when printing.</span></span>

      <span data-ttu-id="83a4c-176">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-176">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rightMargin
    fullName: rightMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#set:member(1)'
    summary: '<span data-ttu-id="83a4c-177">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-177">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="83a4c-178">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-178">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="83a4c-179">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="83a4c-179">This method has the following additional signature:</span></span>

      `set(properties: Excel.PageLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="83a4c-180">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="83a4c-180">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.PageLayoutUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="83a4c-181">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83a4c-181">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PageLayout#set:member(2)'
    summary: '<span data-ttu-id="83a4c-182">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-182">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PageLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PageLayout:class'
  - uid: 'excel!Excel.PageLayout#setPrintArea:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-183">Задает область печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-183">Sets the worksheet's print area.</span></span>

      <span data-ttu-id="83a4c-184">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-184">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setPrintArea(printArea)
    fullName: setPrintArea(printArea)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-185">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-185">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintArea("A1:D41");
              await context.sync();
          });
          ```
      parameters:
        - id: printArea
          description: '<span data-ttu-id="83a4c-186">Диапазон или RangeAreas контента для печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-186">The range, or RangeAreas of the content to print.</span></span>'
          type:
            - 'excel!Excel.PageLayout#setPrintArea~0:complex'
  - uid: 'excel!Excel.PageLayout#setPrintMargins:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-187">Задает поля страницы с единицами измерения для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-187">Sets the worksheet's page margins with units.</span></span>

      <span data-ttu-id="83a4c-188">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-188">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setPrintMargins(unit, marginOptions)'
    fullName: 'setPrintMargins(unit, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unit
          description: <span data-ttu-id="83a4c-189">Единица измерения для предоставленных полей.</span><span class="sxs-lookup"><span data-stu-id="83a4c-189">Measurement unit for the margins provided.</span></span>
          type:
            - 'excel!Excel.PrintMarginUnit:enum'
        - id: marginOptions
          description: '<span data-ttu-id="83a4c-190">Значения полей, которые необходимо задать, поля, не поддерживаемые, останутся без изменений.</span><span class="sxs-lookup"><span data-stu-id="83a4c-190">Margin values to set, margins not provided will remain unchanged.</span></span>'
          type:
            - 'excel!Excel.PageLayoutMarginOptions:interface'
  - uid: 'excel!Excel.PageLayout#setPrintMargins:member(2)'
    summary: |-
      <span data-ttu-id="83a4c-191">Задает поля страницы с единицами измерения для листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-191">Sets the worksheet's page margins with units.</span></span>

      <span data-ttu-id="83a4c-192">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-192">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setPrintMargins(unitString, marginOptions)'
    fullName: 'setPrintMargins(unitString, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unitString: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unitString
          description: <span data-ttu-id="83a4c-193">Единица измерения для предоставленных полей.</span><span class="sxs-lookup"><span data-stu-id="83a4c-193">Measurement unit for the margins provided.</span></span>
          type:
            - '"Points" | "Inches" | "Centimeters"'
        - id: marginOptions
          description: '<span data-ttu-id="83a4c-194">Значения полей, которые необходимо задать, поля, не поддерживаемые, останутся без изменений.</span><span class="sxs-lookup"><span data-stu-id="83a4c-194">Margin values to set, margins not provided will remain unchanged.</span></span>'
          type:
            - 'excel!Excel.PageLayoutMarginOptions:interface'
  - uid: 'excel!Excel.PageLayout#setPrintTitleColumns:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-195">Задает столбцы, содержащие ячейки, которые должны повторяться слева на каждой странице при печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-195">Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.</span></span>

      <span data-ttu-id="83a4c-196">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-196">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setPrintTitleColumns(printTitleColumns)
    fullName: setPrintTitleColumns(printTitleColumns)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: printTitleColumns
          description: '<span data-ttu-id="83a4c-197">Столбцы, которые должны повторяться слева от каждой страницы, должны охватывать весь столбец как допустимый.</span><span class="sxs-lookup"><span data-stu-id="83a4c-197">The columns to be repeated to the left of each page, range must span the entire column to be valid.</span></span>'
          type:
            - 'excel!Excel.PageLayout#setPrintTitleColumns~0:complex'
  - uid: 'excel!Excel.PageLayout#setPrintTitleRows:member(1)'
    summary: |-
      <span data-ttu-id="83a4c-198">Задает строки, содержащие ячейки, которые должны повторяться сверху каждой страницы при печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-198">Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.</span></span>

      <span data-ttu-id="83a4c-199">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-199">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setPrintTitleRows(printTitleRows)
    fullName: setPrintTitleRows(printTitleRows)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-200">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-200">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintTitleRows("$1:$1");
              await context.sync();
          });
          ```
      parameters:
        - id: printTitleRows
          description: '<span data-ttu-id="83a4c-201">Строки, которые будут повторяться в верхней части каждой страницы, диапазон должны охватывать всю строку как допустимую.</span><span class="sxs-lookup"><span data-stu-id="83a4c-201">The rows to be repeated at the top of each page, range must span the entire row to be valid.</span></span>'
          type:
            - 'excel!Excel.PageLayout#setPrintTitleRows~0:complex'
  - uid: 'excel!Excel.PageLayout#toJSON:member(1)'
    summary: '<span data-ttu-id="83a4c-202">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="83a4c-202">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="83a4c-203">.</span><span class="sxs-lookup"><span data-stu-id="83a4c-203"></span></span> <span data-ttu-id="83a4c-204">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="83a4c-204"></span></span><!-- --><span data-ttu-id="83a4c-205">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. PageLayout — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.PageLayoutData`</span><span class="sxs-lookup"><span data-stu-id="83a4c-205">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PageLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PageLayoutData`</span></span><!-- --><span data-ttu-id="83a4c-206">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="83a4c-206">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PageLayoutData:interface'
        description: ''
  - uid: 'excel!Excel.PageLayout#topMargin:member'
    summary: |-
      <span data-ttu-id="83a4c-207">Получает или задает верхнее поле листа (в пунктах) для использования при печати.</span><span class="sxs-lookup"><span data-stu-id="83a4c-207">Gets or sets the worksheet's top margin, in points, for use when printing.</span></span>

      <span data-ttu-id="83a4c-208">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-208">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topMargin
    fullName: topMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'topMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#zoom:member'
    summary: |-
      <span data-ttu-id="83a4c-209">Получает или задает параметры масштабирования при печати листа.</span><span class="sxs-lookup"><span data-stu-id="83a4c-209">Gets or sets the worksheet's print zoom options.</span></span> <span data-ttu-id="83a4c-210">`PageLayoutZoomOptions` Объект должен быть задан как объект JSON (используйте `x.zoom = {...}` вместо`x.zoom.scale = ...`</span><span class="sxs-lookup"><span data-stu-id="83a4c-210">The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`</span></span><!-- --><span data-ttu-id="83a4c-211">).</span><span class="sxs-lookup"><span data-stu-id="83a4c-211"></span></span>

      <span data-ttu-id="83a4c-212">\[[Набор API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83a4c-212">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: Excel.PageLayoutZoomOptions;'
      return:
        type:
          - 'excel!Excel.PageLayoutZoomOptions:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83a4c-213">Примеры</span><span class="sxs-lookup"><span data-stu-id="83a4c-213">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.zoom = { scale: 200 };
              await context.sync();
          });
          ```
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeAreas:class'
    name: Excel.RangeAreas
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.HeaderFooterGroup:class'
    name: Excel.HeaderFooterGroup
  - uid: 'excel!Excel.PageLayout:class'
    name: Excel.PageLayout
  - uid: 'excel!Excel.Interfaces.PageLayoutLoadOptions:interface'
    name: Excel.Interfaces.PageLayoutLoadOptions
  - uid: 'excel!Excel.PageLayout#orientation~0:complex'
    name: Excel.PageOrientation | "Portrait" | "Landscape"
    fullName: Excel.PageOrientation | "Portrait" | "Landscape"
    spec.typeScript:
      - uid: 'excel!Excel.PageOrientation:enum'
        name: Excel.PageOrientation
        fullName: Excel.PageOrientation
      - name: ' | "Portrait" | "Landscape"'
        fullName: ' | "Portrait" | "Landscape"'
  - uid: 'excel!Excel.PageLayout#paperSize~0:complex'
    name: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
    fullName: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
    spec.typeScript:
      - uid: 'excel!Excel.PaperType:enum'
        name: Excel.PaperType
        fullName: Excel.PaperType
      - name: ' | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"'
        fullName: ' | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"'
  - uid: 'excel!Excel.PageLayout#printComments~0:complex'
    name: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
    fullName: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
    spec.typeScript:
      - uid: 'excel!Excel.PrintComments:enum'
        name: Excel.PrintComments
        fullName: Excel.PrintComments
      - name: ' | "NoComments" | "EndSheet" | "InPlace"'
        fullName: ' | "NoComments" | "EndSheet" | "InPlace"'
  - uid: 'excel!Excel.PageLayout#printErrors~0:complex'
    name: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
    fullName: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
    spec.typeScript:
      - uid: 'excel!Excel.PrintErrorType:enum'
        name: Excel.PrintErrorType
        fullName: Excel.PrintErrorType
      - name: ' | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"'
        fullName: ' | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"'
  - uid: 'excel!Excel.PageLayout#printOrder~0:complex'
    name: Excel.PrintOrder | "DownThenOver" | "OverThenDown"
    fullName: Excel.PrintOrder | "DownThenOver" | "OverThenDown"
    spec.typeScript:
      - uid: 'excel!Excel.PrintOrder:enum'
        name: Excel.PrintOrder
        fullName: Excel.PrintOrder
      - name: ' | "DownThenOver" | "OverThenDown"'
        fullName: ' | "DownThenOver" | "OverThenDown"'
  - uid: 'excel!Excel.Interfaces.PageLayoutUpdateData:interface'
    name: Interfaces.PageLayoutUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PageLayout#setPrintArea~0:complex'
    name: Range | RangeAreas | string
    fullName: Excel.Range | Excel.RangeAreas | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.RangeAreas:class'
        name: RangeAreas
        fullName: Excel.RangeAreas
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PrintMarginUnit:enum'
    name: Excel.PrintMarginUnit
  - uid: 'excel!Excel.PageLayoutMarginOptions:interface'
    name: Excel.PageLayoutMarginOptions
  - uid: 'excel!Excel.PageLayout#setPrintTitleColumns~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PageLayout#setPrintTitleRows~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Interfaces.PageLayoutData:interface'
    name: Excel.Interfaces.PageLayoutData
  - uid: 'excel!Excel.PageLayoutZoomOptions:interface'
    name: Excel.PageLayoutZoomOptions