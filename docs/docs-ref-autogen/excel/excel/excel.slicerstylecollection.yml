### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerStyleCollection
    summary: |-
      <span data-ttu-id="a7a4a-101">Представляет коллекцию объектов Слицерстиле.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-101">Represents a collection of SlicerStyle objects.</span></span>

      <span data-ttu-id="a7a4a-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.SlicerStyleCollection.add
      - excel.Excel.SlicerStyleCollection.context
      - excel.Excel.SlicerStyleCollection.getCount
      - excel.Excel.SlicerStyleCollection.getDefault
      - excel.Excel.SlicerStyleCollection.getItem
      - excel.Excel.SlicerStyleCollection.getItemOrNullObject
      - excel.Excel.SlicerStyleCollection.items
      - excel.Excel.SlicerStyleCollection.load
      - excel.Excel.SlicerStyleCollection.load_1
      - excel.Excel.SlicerStyleCollection.load_2
      - excel.Excel.SlicerStyleCollection.setDefault
      - excel.Excel.SlicerStyleCollection.toJSON
  - uid: excel.Excel.SlicerStyleCollection.add
    summary: |-
      <span data-ttu-id="a7a4a-103">Создает пустой объект SlicerStyle с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-103">Creates a blank SlicerStyle with the specified name.</span></span>

      <span data-ttu-id="a7a4a-104">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="a7a4a-105">Вновь созданный Слицерстиле.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-105">The newly created SlicerStyle.</span></span>
      parameters:
        - id: name
          description: '<span data-ttu-id="a7a4a-106">Уникальное имя нового Слицерстиле.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-106">The unique name for the new SlicerStyle.</span></span> <span data-ttu-id="a7a4a-107">Если имя уже используется, будет выдаваться исключение недопустимого аргумента.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-107">Will throw an invalid argument exception if the name is already in use.</span></span>'
          type:
            - string
        - id: makeUniqueName
          description: '<span data-ttu-id="a7a4a-108">Необязательный параметр, по умолчанию — false.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-108">Optional, defaults to false.</span></span> <span data-ttu-id="a7a4a-109">Если этот параметр имеет значение true, то в случае необходимости можно присоединить номера к имени, чтобы сделать его уникальным.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-109">If true, will append numbers to the name in order to make it unique, if needed.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.SlicerStyleCollection.context
    summary: '<span data-ttu-id="a7a4a-110">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-110">The request context associated with the object.</span></span> <span data-ttu-id="a7a4a-111">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.SlicerStyleCollection.getCount
    summary: |-
      <span data-ttu-id="a7a4a-112">Получает количество стилей срезов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-112">Gets the number of slicer styles in the collection.</span></span>

      <span data-ttu-id="a7a4a-113">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerStyleCollection.getDefault
    summary: |-
      <span data-ttu-id="a7a4a-114">Получает используемый по умолчанию объект SlicerStyle для области родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-114">Gets the default SlicerStyle for the parent object's scope.</span></span>

      <span data-ttu-id="a7a4a-115">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: '<span data-ttu-id="a7a4a-116">Объект Слицерстиле, который является текущим Слицерстиле по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-116">The SlicerStyle object that is the current default SlicerStyle.</span></span>'
  - uid: excel.Excel.SlicerStyleCollection.getItem
    summary: |-
      <span data-ttu-id="a7a4a-117">Получает объект SlicerStyle по имени.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-117">Gets a SlicerStyle by name.</span></span>

      <span data-ttu-id="a7a4a-118">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: '<span data-ttu-id="a7a4a-119">Объект Слицерстиле, имя которого соответствует входным данным.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-119">The SlicerStyle object whose name matches the input.</span></span>'
      parameters:
        - id: name
          description: <span data-ttu-id="a7a4a-120">Имя извлекаемого Слицерстиле.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-120">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="a7a4a-121">Получает объект SlicerStyle по имени.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-121">Gets a SlicerStyle by name.</span></span> <span data-ttu-id="a7a4a-122">Если объект SlicerStyle не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-122">If the SlicerStyle does not exist, will return a null object.</span></span>

      <span data-ttu-id="a7a4a-123">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: '<span data-ttu-id="a7a4a-124">Объект Слицерстиле, имя которого соответствует входным данным.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-124">The SlicerStyle object whose name matches the input.</span></span>'
      parameters:
        - id: name
          description: <span data-ttu-id="a7a4a-125">Имя извлекаемого Слицерстиле.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-125">Name of the SlicerStyle to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerStyleCollection.items
    summary: <span data-ttu-id="a7a4a-126">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-126">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'Excel.SlicerStyle[]'
  - uid: excel.Excel.SlicerStyleCollection.load
    summary: <span data-ttu-id="a7a4a-127">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a7a4a-128">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="a7a4a-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a7a4a-129">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="a7a4a-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a7a4a-130">`load(option?: string | string[]): Excel.SlicerStyleCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-130">`load(option?: string | string[]): Excel.SlicerStyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a7a4a-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a7a4a-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="a7a4a-133">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="a7a4a-134">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a7a4a-135">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a7a4a-136">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerStyleCollection.load_1
    summary: <span data-ttu-id="a7a4a-137">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a7a4a-138">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="a7a4a-139">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerStyleCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerStyleCollection.setDefault
    summary: |-
      <span data-ttu-id="a7a4a-140">Задает объект SlicerStyle, используемый по умолчанию в области родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-140">Sets the default SlicerStyle for use in the parent object's scope.</span></span>

      <span data-ttu-id="a7a4a-141">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7a4a-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: '<span data-ttu-id="a7a4a-142">Объект Слицерстиле или имя объекта Слицерстиле, который должен быть новым значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-142">The SlicerStyle object or name of the SlicerStyle object that should be the new default.</span></span>'
          type:
            - SlicerStyle | string
  - uid: excel.Excel.SlicerStyleCollection.toJSON
    summary: '<span data-ttu-id="a7a4a-143">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a7a4a-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a7a4a-144">.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-144"></span></span> <span data-ttu-id="a7a4a-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a7a4a-145"></span></span><!-- --><span data-ttu-id="a7a4a-146">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SlicerStyleCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.SlicerStyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="a7a4a-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerStyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerStyleCollectionData`</span></span><!-- --><span data-ttu-id="a7a4a-147">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="a7a4a-147">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerStyleCollectionData
        description: ''