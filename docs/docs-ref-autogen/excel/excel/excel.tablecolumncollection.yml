### YamlMime:TSType
name: Excel.TableColumnCollection
uid: excel!Excel.TableColumnCollection:class
package: excel!
fullName: Excel.TableColumnCollection
summary: >-
  Представляет коллекцию всех столбцов, включенных в таблицу.


  \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.TableColumnCollection#context:member
  package: excel!
  fullName: context
  summary: Контекст запроса, связанный с объектом. Это связывает процесс надстройки с процессом хост-приложения Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: count
  uid: excel!Excel.TableColumnCollection#count:member
  package: excel!
  fullName: count
  summary: >-
    Возвращает количество столбцов в таблице.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly count: number;'
    return:
      type: number
- name: items
  uid: excel!Excel.TableColumnCollection#items:member
  package: excel!
  fullName: items
  summary: Получает загруженные дочерние элементы в этой коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type: <xref uid="excel!Excel.TableColumn:class" />[]
methods:
- name: add(index, values, name)
  uid: excel!Excel.TableColumnCollection#add:member(1)
  package: excel!
  fullName: add(index, values, name)
  summary: >-
    Добавляет новый столбец в таблицу.


    \[Набор [API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) требует индекса меньше общего количества столбцов; 1.4 позволяет индексу быть необязательным (null или -1) и будет примесить столбец в конце; 1.4 позволяет параметр имени во время создания. \]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    parameters:
    - id: index
      description: Необязательный. Определяет относительную позицию нового столбца. Если задано значение null или -1, столбец добавляется в конце. Столбцы с более высокими значениями индекса смещаются в сторону. Используется нулевой индекс.
      type: number
    - id: values
      description: Необязательный. 2D-массив неформатных значений столбца таблицы.
      type: Array&lt;Array&lt;boolean | string | number&gt;&gt; | boolean | string | number
    - id: name
      description: Необязательный параметр. Задает имя нового столбца. Если `null`<!-- -->по умолчанию будет использоваться имя.
      type: string
    return:
      type: <xref uid="excel!Excel.TableColumn:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getCount()
  uid: excel!Excel.TableColumnCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Получает количество столбцов в таблице.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.TableColumnCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: >-
    Возвращает объект столбца по имени или идентификатору.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    parameters:
    - id: key
      description: Имя столбца или ID.
      type: number | string
    return:
      type: <xref uid="excel!Excel.TableColumn:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableColumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tableColumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tableColumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItemAt(index)
  uid: excel!Excel.TableColumnCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: >-
    Возвращает столбец на основании его позиции в коллекции.


    \[[Набор API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.TableColumn:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableColumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tableColumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tableColumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItemOrNullObject(key)
  uid: excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(key)
  summary: >-
    Возвращает объект столбца по имени или идентификатору. Если столбец не существует, эта функция возвращает объект с его `isNullObject` свойством `true`<!-- -->. Дополнительные сведения см. [в методе и свойствах *OrNullObject](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Набор API: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    parameters:
    - id: key
      description: Имя столбца или ID.
      type: number | string
    return:
      type: <xref uid="excel!Excel.TableColumn:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.TableColumnCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableColumnCollection;'
    parameters:
    - id: options
      description: Предоставляет параметры, для которых необходимо загрузить свойства объекта.
      type: <xref uid="excel!Excel.Interfaces.TableColumnCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.TableColumnCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.TableColumnCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
    parameters:
    - id: propertyNames
      description: Запятая или массив строк, которые указывают свойства для загрузки.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.TableColumnCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableColumns = ctx.workbook.tables.getItem('Table1').columns;\n    tableColumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tableColumns Count: \" + tableColumns.count);\n        for (var i = 0; i < tableColumns.items.length; i++) {\n            console.log(tableColumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.TableColumnCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.TableColumnCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` является запятой, которая указывает свойства для загрузки, и является строкой, запятой, которая указывает свойства навигации для `propertyNamesAndPaths.expand` загрузки.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.TableColumnCollection:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.TableColumnCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Переопределяет метод JavaScript, чтобы обеспечить более полезный выход, когда объект `toJSON()` API передается `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает метод объекта, который `toJSON` передается ему.) Если исходный объект является объектом API, метод возвращает обычный `Excel.TableColumnCollection` `toJSON` объект JavaScript (введите как `Excel.Interfaces.TableColumnCollectionData`<!-- -->), содержащий массив "items" с мелкими копиями любых загруженных свойств из элементов коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.TableColumnCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 60dcc0f710c617cd2735df41284f74bf485e9822
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51271311"
