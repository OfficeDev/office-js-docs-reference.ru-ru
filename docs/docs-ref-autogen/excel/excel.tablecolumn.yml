### YamlMime:UniversalReference
ms.openlocfilehash: 349d30eecd68a1a82995ac63f8264884ef80c6ff
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973235"
items:
- uid: excel.Excel.TableColumn
  summary: >-
    <span data-ttu-id="5668a-101">Представляет столбец в таблице.</span><span class="sxs-lookup"><span data-stu-id="5668a-101">Represents a column in a table.</span></span>


    <span data-ttu-id="5668a-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumn.context
  - excel.Excel.TableColumn.delete
  - excel.Excel.TableColumn.filter
  - excel.Excel.TableColumn.getDataBodyRange
  - excel.Excel.TableColumn.getHeaderRowRange
  - excel.Excel.TableColumn.getRange
  - excel.Excel.TableColumn.getTotalRowRange
  - excel.Excel.TableColumn.id
  - excel.Excel.TableColumn.index
  - excel.Excel.TableColumn.load
  - excel.Excel.TableColumn.load_1
  - excel.Excel.TableColumn.load_2
  - excel.Excel.TableColumn.name
  - excel.Excel.TableColumn.set
  - excel.Excel.TableColumn.set_1
  - excel.Excel.TableColumn.toJSON
  - excel.Excel.TableColumn.values
- uid: excel.Excel.TableColumn.context
  summary: <span data-ttu-id="5668a-103">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="5668a-103">The request context associated with the object.</span></span> <span data-ttu-id="5668a-104">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="5668a-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableColumn.delete
  summary: >-
    <span data-ttu-id="5668a-105">Удаляет столбец из таблицы.</span><span class="sxs-lookup"><span data-stu-id="5668a-105">Deletes the column from the table.</span></span>


    <span data-ttu-id="5668a-106">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-107\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.filter
  summary: >-
    <span data-ttu-id="5668a-p102">Возвращает фильтр, применяемый к столбцу. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5668a-p102">Retrieve the filter applied to the column. Read-only.</span></span>


    <span data-ttu-id="5668a-110">\[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel.Excel.TableColumn.getDataBodyRange
  summary: >-
    <span data-ttu-id="5668a-111">Получает объект диапазона, связанный с основными данными столбца.</span><span class="sxs-lookup"><span data-stu-id="5668a-111">Gets the range object associated with the data body of the column.</span></span>


    <span data-ttu-id="5668a-112">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-113\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getHeaderRowRange
  summary: >-
    <span data-ttu-id="5668a-114">Получает объект диапазона, связанный со строкой заголовков столбца.</span><span class="sxs-lookup"><span data-stu-id="5668a-114">Gets the range object associated with the header row of the column.</span></span>


    <span data-ttu-id="5668a-115">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-116\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getRange
  summary: >-
    <span data-ttu-id="5668a-117">Получает объект диапазона, связанный со всем столбцом.</span><span class="sxs-lookup"><span data-stu-id="5668a-117">Gets the range object associated with the entire column.</span></span>


    <span data-ttu-id="5668a-118">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getTotalRowRange
  summary: >-
    <span data-ttu-id="5668a-120">Получает объект диапазона, связанный со строкой итогов столбца.</span><span class="sxs-lookup"><span data-stu-id="5668a-120">Gets the range object associated with the totals row of the column.</span></span>


    <span data-ttu-id="5668a-121">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-122\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.id
  summary: >-
    <span data-ttu-id="5668a-p103">Возвращает уникальный ключ, идентифицирующий столбец в таблице. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5668a-p103">Returns a unique key that identifies the column within the table. Read-only.</span></span>


    <span data-ttu-id="5668a-125">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.index
  summary: >-
    <span data-ttu-id="5668a-p104">Возвращает номер индекса столбца в коллекции столбцов таблицы. Используется нулевой индекс. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5668a-p104">Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="5668a-129">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.load
  summary: <span data-ttu-id="5668a-130">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5668a-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5668a-131">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="5668a-131">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5668a-132">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="5668a-132">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5668a-133">`load(option?: string | string[]): Excel.TableColumn`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5668a-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5668a-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5668a-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5668a-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="5668a-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="5668a-136">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="5668a-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="5668a-137">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="5668a-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5668a-138">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="5668a-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5668a-139">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="5668a-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableColumnLoadOptions
- uid: excel.Excel.TableColumn.load_1
  summary: <span data-ttu-id="5668a-140">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5668a-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5668a-141">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="5668a-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5668a-142\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5668a-142\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5668a-143">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5668a-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumn.load_2
  summary: <span data-ttu-id="5668a-144">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5668a-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5668a-145">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="5668a-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="5668a-146">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5668a-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.TableColumn.name
  summary: >-
    <span data-ttu-id="5668a-147">Представляет имя столбца таблицы.</span><span class="sxs-lookup"><span data-stu-id="5668a-147">Represents the name of the table column.</span></span>


    <span data-ttu-id="5668a-148">\[[Набор API-Интерфейсов: ExcelApi 1.1 для получения имени; 1.4 для задания его](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="5668a-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="5668a-149">\]</span><span class="sxs-lookup"><span data-stu-id="5668a-149"></span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.TableColumn.set
  summary: <span data-ttu-id="5668a-150">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="5668a-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5668a-151">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="5668a-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="5668a-152">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="5668a-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.TableColumn): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="5668a-153">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="5668a-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableColumnUpdateData
    - id: options
      description: <span data-ttu-id="5668a-154">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5668a-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.TableColumn.set_1
  summary: <span data-ttu-id="5668a-155">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="5668a-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableColumn): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableColumn
- uid: excel.Excel.TableColumn.toJSON
  summary: <span data-ttu-id="5668a-156">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5668a-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5668a-157">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.TableColumn является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.TableColumnData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="5668a-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel.Excel.TableColumn.values
  summary: >-
    <span data-ttu-id="5668a-158">Представляет необработанные значения указанного диапазона.</span><span class="sxs-lookup"><span data-stu-id="5668a-158">Represents the raw values of the specified range.</span></span> <span data-ttu-id="5668a-159">Данные, возвращаемые может быть типа string, число или логическое значение.</span><span class="sxs-lookup"><span data-stu-id="5668a-159">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="5668a-160">Ячейки, содержащие ошибку возвращает строку ошибки.</span><span class="sxs-lookup"><span data-stu-id="5668a-160">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="5668a-161">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5668a-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
