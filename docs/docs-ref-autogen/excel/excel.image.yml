### YamlMime:UniversalReference
ms.openlocfilehash: 03af886840e9b3df7d3796ba913e024ba07753f9
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303125"
items:
- uid: excel.Excel.Image
  summary: >-
    <span data-ttu-id="5504e-101">Представляет объект Image на листе.</span><span class="sxs-lookup"><span data-stu-id="5504e-101">Represents an image object in the worksheet.</span></span>


    <span data-ttu-id="5504e-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5504e-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Image
  fullName: Excel.Image
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Image.context
  - excel.Excel.Image.format
  - excel.Excel.Image.id
  - excel.Excel.Image.load
  - excel.Excel.Image.load_1
  - excel.Excel.Image.load_2
  - excel.Excel.Image.shape
  - excel.Excel.Image.toJSON
- uid: excel.Excel.Image.context
  summary: <span data-ttu-id="5504e-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="5504e-103">The request context associated with the object.</span></span> <span data-ttu-id="5504e-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="5504e-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Image.format
  summary: >-
    <span data-ttu-id="5504e-105">Возвращает формат изображения.</span><span class="sxs-lookup"><span data-stu-id="5504e-105">Returns the format for the image.</span></span> <span data-ttu-id="5504e-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5504e-106">Read-only.</span></span>


    <span data-ttu-id="5504e-107">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5504e-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
    return:
      type:
      - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5504e-108\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"5504e-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const image = sheet.shapes.getItem(\"Image\").image;\n    image.load(\"format\");\n    await context.sync();\n\n    console.log(\"The image's format is: \" + image.format);\n    await context.sync();\n});\n```"
- uid: excel.Excel.Image.id
  summary: >-
    <span data-ttu-id="5504e-109">Представляет идентификатор фигуры для объекта Image.</span><span class="sxs-lookup"><span data-stu-id="5504e-109">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="5504e-110">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5504e-110">Read-only.</span></span>


    <span data-ttu-id="5504e-111">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5504e-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Image.load
  summary: <span data-ttu-id="5504e-112">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5504e-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5504e-113">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="5504e-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5504e-114">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="5504e-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5504e-115">`load(option?: string | string[]): Excel.Image`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5504e-115">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5504e-116">`load(option?: { select?: string; expand?: string; }): Excel.Image`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5504e-116">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5504e-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="5504e-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="5504e-118">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="5504e-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="5504e-119">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="5504e-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5504e-120">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="5504e-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5504e-121">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="5504e-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ImageLoadOptions
- uid: excel.Excel.Image.load_1
  summary: <span data-ttu-id="5504e-122">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5504e-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5504e-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="5504e-123">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5504e-124">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5504e-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Image.load_2
  summary: <span data-ttu-id="5504e-125">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="5504e-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5504e-126">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="5504e-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="5504e-127">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5504e-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Image.shape
  summary: >-
    <span data-ttu-id="5504e-128">Возвращает объект Shape для изображения.</span><span class="sxs-lookup"><span data-stu-id="5504e-128">Returns the shape object for the image.</span></span> <span data-ttu-id="5504e-129">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5504e-129">Read-only.</span></span>


    <span data-ttu-id="5504e-130">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5504e-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Image.toJSON
  summary: <span data-ttu-id="5504e-131">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="5504e-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5504e-132">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Image является объектом API, `toJSON` метод возвращает простой объект JavaScript (типизированный тип `Excel.Interfaces.ImageData` <!-- -->), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="5504e-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ImageData;'
    return:
      type:
      - excel.Excel.Interfaces.ImageData
      description: ''
