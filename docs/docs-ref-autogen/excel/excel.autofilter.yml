### YamlMime:UniversalReference
items:
  - uid: excel.Excel.AutoFilter
    summary: |-
      <span data-ttu-id="21b05-101">Представляет объект автоФильтра.</span><span class="sxs-lookup"><span data-stu-id="21b05-101">Represents the AutoFilter object.</span></span>

      <span data-ttu-id="21b05-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.AutoFilter
    fullName: Excel.AutoFilter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.AutoFilter.apply
      - excel.Excel.AutoFilter.clearCriteria
      - excel.Excel.AutoFilter.context
      - excel.Excel.AutoFilter.criteria
      - excel.Excel.AutoFilter.enabled
      - excel.Excel.AutoFilter.getRange
      - excel.Excel.AutoFilter.getRangeOrNullObject
      - excel.Excel.AutoFilter.isDataFiltered
      - excel.Excel.AutoFilter.load
      - excel.Excel.AutoFilter.load_1
      - excel.Excel.AutoFilter.load_2
      - excel.Excel.AutoFilter.reapply
      - excel.Excel.AutoFilter.remove
      - excel.Excel.AutoFilter.toJSON
  - uid: excel.Excel.AutoFilter.apply
    summary: |-
      <span data-ttu-id="21b05-103">Применяет автофильтр к диапазону и фильтрует столбец, если указаны индекс столбца и условия фильтрации.</span><span class="sxs-lookup"><span data-stu-id="21b05-103">Applies AutoFilter on a range and filters the column if column index and filter criteria are specified.</span></span>

      <span data-ttu-id="21b05-104">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'apply(range, columnIndex, criteria)'
    fullName: 'apply(range, columnIndex, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: |-

          #### <a name="examples"></a><span data-ttu-id="21b05-105">Примеры</span><span class="sxs-lookup"><span data-stu-id="21b05-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
      parameters:
        - id: range
          description: '<span data-ttu-id="21b05-106">Диапазон, к которому будет применяться автоФильтр.</span><span class="sxs-lookup"><span data-stu-id="21b05-106">The range where the AutoFilter will apply on.</span></span>'
          type:
            - Range | string
        - id: columnIndex
          description: '<span data-ttu-id="21b05-107">Индекс столбца, к которому будет применяться автоФильтр, начните с 0.</span><span class="sxs-lookup"><span data-stu-id="21b05-107">The column index which the AutoFilter will apply on, start from 0.</span></span>'
          type:
            - number
        - id: criteria
          description: <span data-ttu-id="21b05-108">Условия фильтра.</span><span class="sxs-lookup"><span data-stu-id="21b05-108">The filter criteria.</span></span>
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.AutoFilter.clearCriteria
    summary: |-
      <span data-ttu-id="21b05-109">Очищает условия, если в автофильтре есть фильтры</span><span class="sxs-lookup"><span data-stu-id="21b05-109">Clears the criteria if AutoFilter has filters</span></span>

      <span data-ttu-id="21b05-110">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearCriteria()
    fullName: clearCriteria()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearCriteria(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.context
    summary: '<span data-ttu-id="21b05-111">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="21b05-111">The request context associated with the object.</span></span> <span data-ttu-id="21b05-112">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="21b05-112">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.AutoFilter.criteria
    summary: |-
      <span data-ttu-id="21b05-113">Массив, содержащий все условия фильтрации в диапазоне с примененным автофильтром.</span><span class="sxs-lookup"><span data-stu-id="21b05-113">Array that holds all filter criterias in an autofiltered range.</span></span> <span data-ttu-id="21b05-114">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="21b05-114">Read-Only.</span></span>

      <span data-ttu-id="21b05-115">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria[];'
      return:
        type:
          - 'Excel.FilterCriteria[]'
  - uid: excel.Excel.AutoFilter.enabled
    summary: |-
      <span data-ttu-id="21b05-116">Указывает, включен ли автофильтр.</span><span class="sxs-lookup"><span data-stu-id="21b05-116">Indicates if the AutoFilter is enabled or not.</span></span> <span data-ttu-id="21b05-117">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="21b05-117">Read-Only.</span></span>

      <span data-ttu-id="21b05-118">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.getRange
    summary: |-
      <span data-ttu-id="21b05-119">Возвращает объект Range, представляющий диапазон, к которому применяется автофильтр.</span><span class="sxs-lookup"><span data-stu-id="21b05-119">Returns the Range object that represents the range to which the AutoFilter applies.</span></span>

      <span data-ttu-id="21b05-120">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="21b05-121">Если существует объект Range, связанный с автофильтром, этот метод возвращает его.</span><span class="sxs-lookup"><span data-stu-id="21b05-121">If there is Range object associated with the AutoFilter, this method returns it.</span></span> <span data-ttu-id="21b05-122">В противном случае этот метод возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="21b05-122">Otherwise, this method returns a null object.</span></span>

      <span data-ttu-id="21b05-123">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.isDataFiltered
    summary: |-
      <span data-ttu-id="21b05-124">Указывает, есть ли в автофильтре условия фильтрации.</span><span class="sxs-lookup"><span data-stu-id="21b05-124">Indicates if the AutoFilter has filter criteria.</span></span> <span data-ttu-id="21b05-125">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="21b05-125">Read-Only.</span></span>

      <span data-ttu-id="21b05-126">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isDataFiltered
    fullName: isDataFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDataFiltered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.load
    summary: <span data-ttu-id="21b05-127">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="21b05-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="21b05-128">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="21b05-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="21b05-129">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="21b05-129">In addition to this signature, this method has the following signatures:</span></span>

      `load(option?: string | string[]): Excel.AutoFilter` <span data-ttu-id="21b05-130">-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="21b05-130">- Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      `load(option?: { select?: string; expand?: string; }): Excel.AutoFilter` <span data-ttu-id="21b05-131">-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="21b05-131">- Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter` <span data-ttu-id="21b05-132">— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="21b05-132">- Only available on collection types.</span></span> <span data-ttu-id="21b05-133">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="21b05-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="21b05-134">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="21b05-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="21b05-135">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="21b05-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="21b05-136">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="21b05-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.AutoFilterLoadOptions
  - uid: excel.Excel.AutoFilter.load_1
    summary: <span data-ttu-id="21b05-137">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="21b05-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="21b05-138">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="21b05-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="21b05-139">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="21b05-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.AutoFilter.load_2
    summary: <span data-ttu-id="21b05-140">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="21b05-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="21b05-141">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="21b05-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="21b05-142">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="21b05-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.AutoFilter.reapply
    summary: |-
      <span data-ttu-id="21b05-143">Применяет указанный объект Autofilter, находящийся в настоящее время в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="21b05-143">Applies the specified Autofilter object currently on the range.</span></span>

      <span data-ttu-id="21b05-144">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.remove
    summary: |-
      <span data-ttu-id="21b05-145">Удаляет автофильтр из диапазона.</span><span class="sxs-lookup"><span data-stu-id="21b05-145">Removes the AutoFilter for the range.</span></span>

      <span data-ttu-id="21b05-146">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="21b05-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: remove()
    fullName: remove()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.toJSON
    summary: '<span data-ttu-id="21b05-147">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API</span><span class="sxs-lookup"><span data-stu-id="21b05-147">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to</span></span> `JSON.stringify()`<!-- --><span data-ttu-id="21b05-148">.</span><span class="sxs-lookup"><span data-stu-id="21b05-148"></span></span> <span data-ttu-id="21b05-149">(</span><span class="sxs-lookup"><span data-stu-id="21b05-149"></span></span>`JSON.stringify`<!-- --><span data-ttu-id="21b05-150">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. автоФильтр является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип</span><span class="sxs-lookup"><span data-stu-id="21b05-150">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.AutoFilter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as</span></span> `Excel.Interfaces.AutoFilterData`<!-- --><span data-ttu-id="21b05-151">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="21b05-151">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
      return:
        type:
          - excel.Excel.Interfaces.AutoFilterData
        description: ''