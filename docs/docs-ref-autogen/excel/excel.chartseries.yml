### YamlMime:UniversalReference
ms.openlocfilehash: 489f6e21bc481eeabd8b1c8ce7e4628d9a1d5177
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975041"
items:
- uid: excel.Excel.ChartSeries
  summary: >-
    <span data-ttu-id="b209a-101">Представляет ряд в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="b209a-101">Represents a series in a chart.</span></span>


    <span data-ttu-id="b209a-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartSeries
  fullName: Excel.ChartSeries
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeries.axisGroup
  - excel.Excel.ChartSeries.chartType
  - excel.Excel.ChartSeries.context
  - excel.Excel.ChartSeries.dataLabels
  - excel.Excel.ChartSeries.delete
  - excel.Excel.ChartSeries.doughnutHoleSize
  - excel.Excel.ChartSeries.explosion
  - excel.Excel.ChartSeries.filtered
  - excel.Excel.ChartSeries.firstSliceAngle
  - excel.Excel.ChartSeries.format
  - excel.Excel.ChartSeries.gapWidth
  - excel.Excel.ChartSeries.hasDataLabels
  - excel.Excel.ChartSeries.invertIfNegative
  - excel.Excel.ChartSeries.load
  - excel.Excel.ChartSeries.load_1
  - excel.Excel.ChartSeries.load_2
  - excel.Excel.ChartSeries.markerBackgroundColor
  - excel.Excel.ChartSeries.markerForegroundColor
  - excel.Excel.ChartSeries.markerSize
  - excel.Excel.ChartSeries.markerStyle
  - excel.Excel.ChartSeries.name
  - excel.Excel.ChartSeries.overlap
  - excel.Excel.ChartSeries.plotOrder
  - excel.Excel.ChartSeries.points
  - excel.Excel.ChartSeries.secondPlotSize
  - excel.Excel.ChartSeries.set
  - excel.Excel.ChartSeries.set_1
  - excel.Excel.ChartSeries.setBubbleSizes
  - excel.Excel.ChartSeries.setValues
  - excel.Excel.ChartSeries.setXAxisValues
  - excel.Excel.ChartSeries.showShadow
  - excel.Excel.ChartSeries.smooth
  - excel.Excel.ChartSeries.splitType
  - excel.Excel.ChartSeries.toJSON
  - excel.Excel.ChartSeries.trendlines
  - excel.Excel.ChartSeries.varyByCategories
- uid: excel.Excel.ChartSeries.axisGroup
  summary: >-
    <span data-ttu-id="b209a-103">Возвращает или задает группу для указанного ряда.</span><span class="sxs-lookup"><span data-stu-id="b209a-103">Returns or sets the group for the specified series.</span></span> <span data-ttu-id="b209a-104">Чтение и запись</span><span class="sxs-lookup"><span data-stu-id="b209a-104">Read/Write</span></span>


    <span data-ttu-id="b209a-105">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axisGroup
  fullName: axisGroup
  langs:
  - typeScript
  type: property
  syntax:
    content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
    return:
      type:
      - Excel.ChartAxisGroup | "Primary" | "Secondary"
- uid: excel.Excel.ChartSeries.chartType
  summary: >-
    <span data-ttu-id="b209a-106">Представляет тип диаграммы для ряда.</span><span class="sxs-lookup"><span data-stu-id="b209a-106">Represents the chart type of a series.</span></span> <span data-ttu-id="b209a-107">Для получения дополнительных сведений в разделе Excel.ChartType.</span><span class="sxs-lookup"><span data-stu-id="b209a-107">See Excel.ChartType for details.</span></span>


    <span data-ttu-id="b209a-108">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: chartType
  fullName: chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.ChartSeries.context
  summary: <span data-ttu-id="b209a-109">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="b209a-109">The request context associated with the object.</span></span> <span data-ttu-id="b209a-110">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="b209a-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartSeries.dataLabels
  summary: >-
    <span data-ttu-id="b209a-111">Представляет коллекцию всех dataLabels в ряду.</span><span class="sxs-lookup"><span data-stu-id="b209a-111">Represents a collection of all dataLabels in the series.</span></span>


    <span data-ttu-id="b209a-112">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataLabels
  fullName: dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.ChartSeries.delete
  summary: >-
    <span data-ttu-id="b209a-113">Удаляет ряд диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-113">Deletes the chart series.</span></span>


    <span data-ttu-id="b209a-114">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-115\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n  const seriesCollection = sheet.charts.getItemAt(0).series;\n  seriesCollection.load(\"count\");\n  await context.sync();\n\n  if (seriesCollection.count > 0) {\n    const series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n  }\n\n  await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.doughnutHoleSize
  summary: >-
    <span data-ttu-id="b209a-116">Представляет размер отверстия ряда кольцевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-116">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="b209a-117">Допустимо только в doughnutExploded и кольцевых диаграммах.</span><span class="sxs-lookup"><span data-stu-id="b209a-117">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="b209a-118">Создает исключение недопустимый аргумент на недопустимое диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-118">Throws an invalid argument exception on invalid charts.</span></span>


    <span data-ttu-id="b209a-119">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: doughnutHoleSize
  fullName: doughnutHoleSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.explosion
  summary: >-
    <span data-ttu-id="b209a-120">Возвращает или задает значение развертывания для сектора круговой или кольцевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-120">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span></span> <span data-ttu-id="b209a-121">Возвращает нуль (0) при отсутствии развертывания (верхушка сектора — в центре круговой диаграммы).</span><span class="sxs-lookup"><span data-stu-id="b209a-121">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span></span> <span data-ttu-id="b209a-122">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-122">Read/Write.</span></span>


    <span data-ttu-id="b209a-123">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: explosion
  fullName: explosion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'explosion: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.filtered
  summary: >-
    <span data-ttu-id="b209a-124">Логическое значение, которое указывает, фильтруется ли ряд.</span><span class="sxs-lookup"><span data-stu-id="b209a-124">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="b209a-125">Неприменимо для поверхностных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-125">Not applicable for surface charts.</span></span>


    <span data-ttu-id="b209a-126">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filtered
  fullName: filtered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'filtered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.firstSliceAngle
  summary: >-
    <span data-ttu-id="b209a-127">Возвращает или задает угол первого сектора круговой или кольцевой диаграммы, в градусах (по часовой стрелке из вертикального положения).</span><span class="sxs-lookup"><span data-stu-id="b209a-127">Returns or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).</span></span> <span data-ttu-id="b209a-128">Применяется только к круговым, объемным круговым и кольцевым диаграммам.</span><span class="sxs-lookup"><span data-stu-id="b209a-128">Applies only to pie, 3-D pie, and doughnut charts.</span></span> <span data-ttu-id="b209a-129">Может находиться в диапазоне от 0 до 360.</span><span class="sxs-lookup"><span data-stu-id="b209a-129">Can be a value from 0 through 360.</span></span> <span data-ttu-id="b209a-130">Чтение и запись</span><span class="sxs-lookup"><span data-stu-id="b209a-130">Read/Write</span></span>


    <span data-ttu-id="b209a-131">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: firstSliceAngle
  fullName: firstSliceAngle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstSliceAngle: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.format
  summary: >-
    <span data-ttu-id="b209a-p108">Представляет форматирование ряда диаграммы, включая формат заливки и линий. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b209a-p108">Represents the formatting of a chart series, which includes fill and line formatting. Read-only.</span></span>


    <span data-ttu-id="b209a-134">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type:
      - excel.Excel.ChartSeriesFormat
- uid: excel.Excel.ChartSeries.gapWidth
  summary: >-
    <span data-ttu-id="b209a-135">Представляет ширину разрывов рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-135">Represents the gap width of a chart series.</span></span> <span data-ttu-id="b209a-136">Допустимо только на панели и гистограммы, а также особые классы строки и круговой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-136">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="b209a-137">Создает исключение недопустимый аргумент на недопустимое диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-137">Throws an invalid argument exception on invalid charts.</span></span>


    <span data-ttu-id="b209a-138">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-138">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: gapWidth
  fullName: gapWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gapWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.hasDataLabels
  summary: >-
    <span data-ttu-id="b209a-139">Логическое значение, которое указывает, имеют ли ряды метки данных.</span><span class="sxs-lookup"><span data-stu-id="b209a-139">Boolean value representing if the series has data labels or not.</span></span>


    <span data-ttu-id="b209a-140">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-140">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hasDataLabels
  fullName: hasDataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.invertIfNegative
  summary: >-
    <span data-ttu-id="b209a-141">Значение true, если Microsoft Excel инвертирует шаблон в элементе, когда он соответствует отрицательному числу.</span><span class="sxs-lookup"><span data-stu-id="b209a-141">True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span></span> <span data-ttu-id="b209a-142">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-142">Read/Write.</span></span>


    <span data-ttu-id="b209a-143">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: invertIfNegative
  fullName: invertIfNegative
  langs:
  - typeScript
  type: property
  syntax:
    content: 'invertIfNegative: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.load
  summary: <span data-ttu-id="b209a-144">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b209a-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b209a-145">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="b209a-145">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b209a-146">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="b209a-146">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b209a-147">`load(option?: string | string[]): Excel.ChartSeries`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b209a-147">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b209a-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b209a-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b209a-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="b209a-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="b209a-150">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="b209a-150">It is similar to the preceding signature.</span></span> <span data-ttu-id="b209a-151">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="b209a-151">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b209a-152">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="b209a-152">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b209a-153">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="b209a-153">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartSeriesLoadOptions
- uid: excel.Excel.ChartSeries.load_1
  summary: <span data-ttu-id="b209a-154">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b209a-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b209a-155">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="b209a-155">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-156\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-156\">Examples</span></span>\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b209a-157">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b209a-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartSeries.load_2
  summary: <span data-ttu-id="b209a-158">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b209a-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b209a-159">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="b209a-159">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b209a-160">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b209a-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ChartSeries.markerBackgroundColor
  summary: >-
    <span data-ttu-id="b209a-161">Представляет цвет фона маркеров для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-161">Represents markers background color of a chart series.</span></span>


    <span data-ttu-id="b209a-162">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-162">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerBackgroundColor
  fullName: markerBackgroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-163\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-163\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerForegroundColor
  summary: >-
    <span data-ttu-id="b209a-164">Представляет цвет переднего плана для рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-164">Represents markers foreground color of a chart series.</span></span>


    <span data-ttu-id="b209a-165">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-165">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerForegroundColor
  fullName: markerForegroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-166\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-166\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerSize
  summary: >-
    <span data-ttu-id="b209a-167">Представляет размер маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-167">Represents marker size of a chart series.</span></span>


    <span data-ttu-id="b209a-168">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-168">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerSize
  fullName: markerSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerSize: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-169\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-169\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerStyle
  summary: >-
    <span data-ttu-id="b209a-170">Представляет стиль маркера рядов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-170">Represents marker style of a chart series.</span></span> <span data-ttu-id="b209a-171">Для получения дополнительных сведений в разделе Excel.ChartMarkerStyle.</span><span class="sxs-lookup"><span data-stu-id="b209a-171">See Excel.ChartMarkerStyle for details.</span></span>


    <span data-ttu-id="b209a-172">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerStyle
  fullName: markerStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type:
      - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-173\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-173\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.name
  summary: >-
    <span data-ttu-id="b209a-174">Представляет имя ряда в диаграмме.</span><span class="sxs-lookup"><span data-stu-id="b209a-174">Represents the name of a series in a chart.</span></span>


    <span data-ttu-id="b209a-175">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-175">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.overlap
  summary: >-
    <span data-ttu-id="b209a-176">Указывает на расположение строк и столбцов.</span><span class="sxs-lookup"><span data-stu-id="b209a-176">Specifies how bars and columns are positioned.</span></span> <span data-ttu-id="b209a-177">Может быть в диапазоне от – 100 до 100.</span><span class="sxs-lookup"><span data-stu-id="b209a-177">Can be a value between –100 and 100.</span></span> <span data-ttu-id="b209a-178">Применяется только к двумерным диаграммам и гистограммам.</span><span class="sxs-lookup"><span data-stu-id="b209a-178">Applies only to 2-D bar and 2-D column charts.</span></span> <span data-ttu-id="b209a-179">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-179">Read/Write.</span></span>


    <span data-ttu-id="b209a-180">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: overlap
  fullName: overlap
  langs:
  - typeScript
  type: property
  syntax:
    content: 'overlap: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.plotOrder
  summary: >-
    <span data-ttu-id="b209a-181">Представляет порядок построения рядов диаграммы в группе диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-181">Represents the plot order of a chart series within the chart group.</span></span>


    <span data-ttu-id="b209a-182">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-182">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotOrder
  fullName: plotOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotOrder: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.points
  summary: >-
    <span data-ttu-id="b209a-p117">Представляет коллекцию всех точек в ряду. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b209a-p117">Represents a collection of all points in the series. Read-only.</span></span>


    <span data-ttu-id="b209a-185">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: points
  fullName: points
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
- uid: excel.Excel.ChartSeries.secondPlotSize
  summary: >-
    <span data-ttu-id="b209a-186">Возвращает или задает размер вторичного раздела круга круговой диаграммы либо линии круговой диаграммы в процентах от размера основной круговой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-186">Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie.</span></span> <span data-ttu-id="b209a-187">Может находиться в диапазоне от 5 до 200.</span><span class="sxs-lookup"><span data-stu-id="b209a-187">Can be a value from 5 to 200.</span></span> <span data-ttu-id="b209a-188">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-188">Read/Write.</span></span>


    <span data-ttu-id="b209a-189">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-189">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: secondPlotSize
  fullName: secondPlotSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'secondPlotSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.set
  summary: <span data-ttu-id="b209a-190">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="b209a-190">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b209a-191">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="b209a-191">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="b209a-192">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="b209a-192">This method has the following additional signature:</span></span>


    `set(properties: Excel.ChartSeries): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="b209a-193">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="b209a-193">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ChartSeriesUpdateData
    - id: options
      description: <span data-ttu-id="b209a-194">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b209a-194">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ChartSeries.set_1
  summary: <span data-ttu-id="b209a-195">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="b209a-195">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ChartSeries): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ChartSeries
- uid: excel.Excel.ChartSeries.setBubbleSizes
  summary: >-
    <span data-ttu-id="b209a-196">Задает размеры пузырьков для ряда диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-196">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="b209a-197">Применяется только для пузырьковых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-197">Only works for bubble charts.</span></span>


    <span data-ttu-id="b209a-198">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-198">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setBubbleSizes(sourceData)
  fullName: setBubbleSizes(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: <span data-ttu-id="b209a-199">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="b209a-199">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.setValues
  summary: >-
    <span data-ttu-id="b209a-200">Задает значения для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="b209a-200">Set values for a chart series.</span></span> <span data-ttu-id="b209a-201">Для точечной диаграммы это соответствует значениям оси Y.</span><span class="sxs-lookup"><span data-stu-id="b209a-201">For scatter chart, it means Y axis values.</span></span>


    <span data-ttu-id="b209a-202">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-202">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setValues(sourceData)
  fullName: setValues(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b209a-203\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"b209a-203\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n  let seriesCollection = sheet.charts.getItemAt(0);\n  let rangeSelection = sheet.getRange(\"C2:C7\");\n  let xRangeSelection = sheet.getRange(\"A1:A7\");\n\n  // Add a series.\n  let newSeries = seriesCollection.series.add(\"Qtr2\");\n  newSeries.setValues(rangeSelection);\n  newSeries.setXAxisValues(xRangeSelection);\n\n  await context.sync();\n});\n```"
    parameters:
    - id: sourceData
      description: <span data-ttu-id="b209a-204">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="b209a-204">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.setXAxisValues
  summary: >-
    <span data-ttu-id="b209a-205">Задает значения оси X для ряда диаграммы. </span><span class="sxs-lookup"><span data-stu-id="b209a-205">Set values of X axis for a chart series.</span></span> <span data-ttu-id="b209a-206">Применяется только для точечных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-206">Only works for scatter charts.</span></span>


    <span data-ttu-id="b209a-207">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-207">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setXAxisValues(sourceData)
  fullName: setXAxisValues(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: <span data-ttu-id="b209a-208">Объект Range, соответствующий исходным данным.</span><span class="sxs-lookup"><span data-stu-id="b209a-208">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.showShadow
  summary: >-
    <span data-ttu-id="b209a-209">Логическое значение, представляющее серия имеет тень или нет.</span><span class="sxs-lookup"><span data-stu-id="b209a-209">Boolean value representing if the series has a shadow or not.</span></span>


    <span data-ttu-id="b209a-210">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showShadow
  fullName: showShadow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showShadow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.smooth
  summary: >-
    <span data-ttu-id="b209a-211">Логическое значение, которое указывает, является ли ряд плавным. </span><span class="sxs-lookup"><span data-stu-id="b209a-211">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="b209a-212">Применимо только к графиков и точечных диаграмм.</span><span class="sxs-lookup"><span data-stu-id="b209a-212">Only applicable to line and scatter charts.</span></span>


    <span data-ttu-id="b209a-213">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-213">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: smooth
  fullName: smooth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'smooth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.splitType
  summary: >-
    <span data-ttu-id="b209a-214">Возвращает или задает способ разделения двух разделов круга круговой диаграммы либо линии круговой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="b209a-214">Returns or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.</span></span> <span data-ttu-id="b209a-215">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-215">Read/Write.</span></span>


    <span data-ttu-id="b209a-216">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-216">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: splitType
  fullName: splitType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
    return:
      type:
      - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
- uid: excel.Excel.ChartSeries.toJSON
  summary: <span data-ttu-id="b209a-217">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="b209a-217">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b209a-218">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ChartSeries является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ChartSeriesData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="b209a-218">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesData
      description: ''
- uid: excel.Excel.ChartSeries.trendlines
  summary: >-
    <span data-ttu-id="b209a-219">Представляет коллекцию линий тренда в ряду.</span><span class="sxs-lookup"><span data-stu-id="b209a-219">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="b209a-220">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b209a-220">Read-only.</span></span>


    <span data-ttu-id="b209a-221">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-221">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: trendlines
  fullName: trendlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type:
      - excel.Excel.ChartTrendlineCollection
- uid: excel.Excel.ChartSeries.varyByCategories
  summary: >-
    <span data-ttu-id="b209a-222">Значение true, если Microsoft Excel назначает разные цвета или шаблоны каждому маркеру данных.</span><span class="sxs-lookup"><span data-stu-id="b209a-222">True if Microsoft Excel assigns a different color or pattern to each data marker.</span></span> <span data-ttu-id="b209a-223">Диаграмма должна содержать только один ряд.</span><span class="sxs-lookup"><span data-stu-id="b209a-223">The chart must contain only one series.</span></span> <span data-ttu-id="b209a-224">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b209a-224">Read/Write.</span></span>


    <span data-ttu-id="b209a-225">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b209a-225">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: varyByCategories
  fullName: varyByCategories
  langs:
  - typeScript
  type: property
  syntax:
    content: 'varyByCategories: boolean;'
    return:
      type:
      - boolean
