### YamlMime:UniversalReference
ms.openlocfilehash: 1e6c65b0232661ef332c79441e1b808b899c3d83
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/20/2018
ms.locfileid: "24049825"
items:
- uid: excel.Excel.ChartSeriesCollection
  summary: >-
    Представляет коллекцию рядов диаграммы.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartSeriesCollection
  fullName: excel.Excel.ChartSeriesCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeriesCollection.add
  - excel.Excel.ChartSeriesCollection.count
  - excel.Excel.ChartSeriesCollection.getCount
  - excel.Excel.ChartSeriesCollection.getItemAt
  - excel.Excel.ChartSeriesCollection.items
  - excel.Excel.ChartSeriesCollection.load
  - excel.Excel.ChartSeriesCollection.toJSON
- uid: excel.Excel.ChartSeriesCollection.add
  summary: >-
    Добавление новой серии в коллекцию. Добавлена новая серия не отображается до установки значений / x оси значений/пузырьковой размеров для его (в зависимости от типа диаграммы).


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: add(name, index)
  fullName: excel.Excel.ChartSeriesCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name?: string, index?: number): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: name
      description: Необязательный параметр. Имя этой серии.
      type:
      - string
    - id: index
      description: Необязательный параметр. Значение индекса рядов для добавления. Нулевой индексированы.
      type:
      - number
- uid: excel.Excel.ChartSeriesCollection.count
  summary: >-
    Возвращает число рядов в коллекции. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: count
  fullName: excel.Excel.ChartSeriesCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeriesCollection.getCount
  summary: >-
    Возвращает количество рядов в коллекции.


    \[[Набор API-Интерфейсов: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: excel.Excel.ChartSeriesCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartSeriesCollection.getItemAt
  summary: >-
    Возвращает ряд в зависимости от его позиции в коллекции.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: excel.Excel.ChartSeriesCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Get the name of the first series in the series collection.\nExcel.run(function (ctx) { \n    var seriesCollection = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series;\n    seriesCollection.load('items');\n    return ctx.sync().then(function() {\n        console.log(seriesCollection.items[0].name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: Значение индекса получаемого объекта. Используется нулевой индекс.
      type:
      - number
- uid: excel.Excel.ChartSeriesCollection.items
  summary: Получает загруженных дочерних элементов в этом семействе.
  name: items
  fullName: excel.Excel.ChartSeriesCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartSeries[];'
    return:
      type:
      - Excel.ChartSeries[]
- uid: excel.Excel.ChartSeriesCollection.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: "В дополнение к подписи этот метод имеет следующие цифровые подписи.\n\n`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\n// Getting the names of series in the series collection.\nExcel.run(function (ctx) { \n    var seriesCollection = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series;\n    seriesCollection.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < seriesCollection.items.length; i++)\n        {\n            console.log(seriesCollection.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of chart series in collection.\nExcel.run(function (ctx) { \n    var seriesCollection = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series;\n    seriesCollection.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"series: Count= \" + seriesCollection.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.ChartSeriesCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.ChartSeriesCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartSeriesCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesCollectionData
      description: ''
