### YamlMime:UniversalReference
ms.openlocfilehash: 44b729b27e04e3692cc69002e9ea0877c8023a20
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097706"
items:
- uid: excel.Excel.RangeBorderCollection
  summary: >-
    <span data-ttu-id="bb5fc-101">Представляет объекты границ, из которых состоит граница диапазона.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-101">Represents the border objects that make up the range border.</span></span>


    <span data-ttu-id="bb5fc-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeBorderCollection
  fullName: Excel.RangeBorderCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeBorderCollection.context
  - excel.Excel.RangeBorderCollection.count
  - excel.Excel.RangeBorderCollection.getItem
  - excel.Excel.RangeBorderCollection.getItem_1
  - excel.Excel.RangeBorderCollection.getItemAt
  - excel.Excel.RangeBorderCollection.items
  - excel.Excel.RangeBorderCollection.load
  - excel.Excel.RangeBorderCollection.load_1
  - excel.Excel.RangeBorderCollection.load_2
  - excel.Excel.RangeBorderCollection.tintAndShade
  - excel.Excel.RangeBorderCollection.toJSON
- uid: excel.Excel.RangeBorderCollection.context
  summary: <span data-ttu-id="bb5fc-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-103">The request context associated with the object.</span></span> <span data-ttu-id="bb5fc-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeBorderCollection.count
  summary: >-
    <span data-ttu-id="bb5fc-p102">Количество объектов границы в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-p102">Number of border objects in the collection. Read-only.</span></span>


    <span data-ttu-id="bb5fc-107">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.getItem
  summary: >-
    <span data-ttu-id="bb5fc-108">Возвращает объект границы по его имени.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-108">Gets a border object using its name.</span></span>


    <span data-ttu-id="bb5fc-109">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bb5fc-110\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"bb5fc-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borderName = 'EdgeTop';\n    var border = range.format.borders.getItem(borderName);\n    border.load('style');\n    return ctx.sync().then(function() {\n            console.log(border.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="bb5fc-111">Значение индекса получаемого объекта Border.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="bb5fc-112">Дополнительные сведения см. в статье Excel. Бордериндекс.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-112">See Excel.BorderIndex for details.</span></span>
      type:
      - excel.Excel.BorderIndex
- uid: excel.Excel.RangeBorderCollection.getItem_1
  summary: >-
    <span data-ttu-id="bb5fc-113">Возвращает объект границы по его имени.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-113">Gets a border object using its name.</span></span>


    <span data-ttu-id="bb5fc-114">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(indexString)
  fullName: getItem(indexString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: ''
    parameters:
    - id: indexString
      description: <span data-ttu-id="bb5fc-115">Значение индекса получаемого объекта Border.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="bb5fc-116">Дополнительные сведения см. в статье Excel. Бордериндекс.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-116">See Excel.BorderIndex for details.</span></span>
      type:
      - "\"EdgeTop\" | \"EdgeBottom\" | \"EdgeLeft\" | \"EdgeRight\" | \"InsideVertical\" | \"InsideHorizontal\" | \"DiagonalDown\" | \"DiagonalUp\""
- uid: excel.Excel.RangeBorderCollection.getItemAt
  summary: >-
    <span data-ttu-id="bb5fc-117">Возвращает объект границы по его индексу.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-117">Gets a border object using its index.</span></span>


    <span data-ttu-id="bb5fc-118">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bb5fc-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"bb5fc-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n        console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="bb5fc-p105">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.items
  summary: <span data-ttu-id="bb5fc-122">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-122">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeBorder[];'
    return:
      type:
      - Excel.RangeBorder[]
- uid: excel.Excel.RangeBorderCollection.load
  summary: <span data-ttu-id="bb5fc-123">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bb5fc-124">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="bb5fc-124">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="bb5fc-125">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="bb5fc-125">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="bb5fc-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="bb5fc-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="bb5fc-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="bb5fc-129">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="bb5fc-130">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bb5fc-131">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bb5fc-132">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeBorderCollection.load_1
  summary: <span data-ttu-id="bb5fc-133">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bb5fc-134">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-134">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bb5fc-135\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"bb5fc-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borders = range.format.borders;\n    border.load('items');\n    return ctx.sync().then(function() {\n        console.log(borders.count);\n        for (var i = 0; i < borders.items.length; i++)\n        {\n            console.log(borders.items[i].sideIndex);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="bb5fc-136">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeBorderCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeBorderCollection.tintAndShade
  summary: >-
    <span data-ttu-id="bb5fc-137">Возвращает или задает значение Double, которое осветляет или затемняет цвет границ диапазона, значение находится в диапазоне от-1 (самая темная) и 1 (самое яркое) с 0 для исходного цвета.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-137">Returns or sets a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.</span></span> <span data-ttu-id="bb5fc-138">Значение NULL указывает на то, что в семействе границ для всех семейств границ не задан параметр Тинтандшаде.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-138">A null value indicates that the entire border collections don't have uniform tintAndShade setting.</span></span>


    <span data-ttu-id="bb5fc-139">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb5fc-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: tintAndShade
  fullName: tintAndShade
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tintAndShade: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.toJSON
  summary: <span data-ttu-id="bb5fc-140">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="bb5fc-141">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.RangeBorderCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.RangeBorderCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="bb5fc-141">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeBorderCollectionData
      description: ''
