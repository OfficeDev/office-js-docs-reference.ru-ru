### YamlMime:UniversalReference
ms.openlocfilehash: d27f2de597e0f2733ed8ee672f0ff02e8bcc97fd
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769402"
items:
- uid: excel.Excel.ConditionalFormatRule
  summary: >-
    Представляет правило для всех комбинаций традиционных правила/формат.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ConditionalFormatRule
  fullName: Excel.ConditionalFormatRule
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormatRule.context
  - excel.Excel.ConditionalFormatRule.formula
  - excel.Excel.ConditionalFormatRule.formulaLocal
  - excel.Excel.ConditionalFormatRule.formulaR1C1
  - excel.Excel.ConditionalFormatRule.load
  - excel.Excel.ConditionalFormatRule.set
  - excel.Excel.ConditionalFormatRule.toJSON
- uid: excel.Excel.ConditionalFormatRule.context
  summary: Контекста запроса, связанного с объектом. Это необходимо добавить в процесс для процесса ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalFormatRule.formula
  summary: >-
    Формула, с помощью которой при необходимости оценивается правило условного форматирования.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormatRule.formulaLocal
  summary: >-
    Формула, с помощью которой при необходимости оценивается правило условного форматирования на языке пользователя.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formulaLocal
  fullName: formulaLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.formulaR1C1
  summary: >-
    Формула, с помощью которой при необходимости оценивается правило условного форматирования в формате R1C1.


    \[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formulaR1C1
  fullName: formulaR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormatRule.set
  summary: Задание нескольких свойств объекта в то же время. Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.
  remarks: >-
    Этот метод имеет следующие дополнительные подписи.


    `set(properties: Excel.ConditionalFormatRule): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.
      type:
      - Interfaces.ConditionalFormatRuleUpdateData
    - id: options
      description: Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalFormatRule.toJSON
  summary: Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ConditionalFormatRule является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ConditionalFormatRuleData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleData
      description: ''
