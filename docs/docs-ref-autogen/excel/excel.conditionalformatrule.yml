### YamlMime:UniversalReference
ms.openlocfilehash: 8dc83379822870792109e3d9a0bd98fbb15f5ced
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 11/30/2018
ms.locfileid: "26995257"
items:
- uid: excel.Excel.ConditionalFormatRule
  summary: >-
    <span data-ttu-id="aa027-101">Представляет правило для всех комбинаций традиционных правила/формат.</span><span class="sxs-lookup"><span data-stu-id="aa027-101">Represents a rule, for all traditional rule/format pairings.</span></span>


    <span data-ttu-id="aa027-102">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aa027-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormatRule
  fullName: Excel.ConditionalFormatRule
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormatRule.formula
  - excel.Excel.ConditionalFormatRule.formulaLocal
  - excel.Excel.ConditionalFormatRule.formulaR1C1
  - excel.Excel.ConditionalFormatRule.load
  - excel.Excel.ConditionalFormatRule.toJSON
- uid: excel.Excel.ConditionalFormatRule.formula
  summary: >-
    <span data-ttu-id="aa027-103">Формула, с помощью которой при необходимости оценивается правило условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="aa027-103">The formula, if required, to evaluate the conditional format rule on.</span></span>


    <span data-ttu-id="aa027-104">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aa027-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"aa027-105\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"aa027-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormatRule.formulaLocal
  summary: >-
    <span data-ttu-id="aa027-106">Формула, с помощью которой при необходимости оценивается правило условного форматирования на языке пользователя.</span><span class="sxs-lookup"><span data-stu-id="aa027-106">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>


    <span data-ttu-id="aa027-107">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aa027-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaLocal
  fullName: formulaLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.formulaR1C1
  summary: >-
    <span data-ttu-id="aa027-108">Формула, с помощью которой при необходимости оценивается правило условного форматирования в формате R1C1.</span><span class="sxs-lookup"><span data-stu-id="aa027-108">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>


    <span data-ttu-id="aa027-109">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aa027-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaR1C1
  fullName: formulaR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.load
  summary: <span data-ttu-id="aa027-110">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="aa027-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="aa027-111">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="aa027-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="aa027-112">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="aa027-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="aa027-113">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="aa027-113">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="aa027-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="aa027-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule` - Only available on collection types.</span></span> <span data-ttu-id="aa027-115">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="aa027-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="aa027-116">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="aa027-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="aa027-117">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="aa027-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="aa027-118">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="aa027-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="aa027-119">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="aa027-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormatRule.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleData
      description: ''
