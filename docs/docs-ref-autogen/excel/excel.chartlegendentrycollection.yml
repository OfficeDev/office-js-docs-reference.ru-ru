### YamlMime:UniversalReference
ms.openlocfilehash: e92807018095723e0cd23d5612cfd484cb01cb6a
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977225"
items:
- uid: excel.Excel.ChartLegendEntryCollection
  summary: >-
    <span data-ttu-id="eb41b-101">Представляет коллекцию legendEntries.</span><span class="sxs-lookup"><span data-stu-id="eb41b-101">Represents a collection of legendEntries.</span></span>


    <span data-ttu-id="eb41b-102">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb41b-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartLegendEntryCollection
  fullName: Excel.ChartLegendEntryCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartLegendEntryCollection.context
  - excel.Excel.ChartLegendEntryCollection.getCount
  - excel.Excel.ChartLegendEntryCollection.getItemAt
  - excel.Excel.ChartLegendEntryCollection.items
  - excel.Excel.ChartLegendEntryCollection.load
  - excel.Excel.ChartLegendEntryCollection.load_1
  - excel.Excel.ChartLegendEntryCollection.load_2
  - excel.Excel.ChartLegendEntryCollection.toJSON
- uid: excel.Excel.ChartLegendEntryCollection.context
  summary: <span data-ttu-id="eb41b-103">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="eb41b-103">The request context associated with the object.</span></span> <span data-ttu-id="eb41b-104">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="eb41b-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartLegendEntryCollection.getCount
  summary: >-
    <span data-ttu-id="eb41b-105">Возвращает количество legendEntry в коллекции.</span><span class="sxs-lookup"><span data-stu-id="eb41b-105">Returns the number of legendEntry in the collection.</span></span>


    <span data-ttu-id="eb41b-106">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb41b-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartLegendEntryCollection.getItemAt
  summary: >-
    <span data-ttu-id="eb41b-107">Возвращает объект legendEntry по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="eb41b-107">Returns a legendEntry at the given index.</span></span>


    <span data-ttu-id="eb41b-108">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb41b-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartLegendEntry;'
    return:
      type:
      - excel.Excel.ChartLegendEntry
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="eb41b-109">Индекс legendEntry нужно вернуть.</span><span class="sxs-lookup"><span data-stu-id="eb41b-109">Index of the legendEntry to be retrieved.</span></span>
      type:
      - number
- uid: excel.Excel.ChartLegendEntryCollection.items
  summary: <span data-ttu-id="eb41b-110">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="eb41b-110">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartLegendEntry[];'
    return:
      type:
      - Excel.ChartLegendEntry[]
- uid: excel.Excel.ChartLegendEntryCollection.load
  summary: <span data-ttu-id="eb41b-111">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="eb41b-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eb41b-112">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="eb41b-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="eb41b-113">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="eb41b-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="eb41b-114">`load(option?: string | string[]): Excel.ChartLegendEntryCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="eb41b-114">`load(option?: string | string[]): Excel.ChartLegendEntryCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="eb41b-115">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendEntryCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="eb41b-115">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendEntryCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="eb41b-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendEntryCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="eb41b-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendEntryCollection` - Only available on collection types.</span></span> <span data-ttu-id="eb41b-117">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="eb41b-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="eb41b-118">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="eb41b-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="eb41b-119">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="eb41b-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="eb41b-120">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="eb41b-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartLegendEntryCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartLegendEntryCollection;'
    return:
      type:
      - excel.Excel.ChartLegendEntryCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ChartLegendEntryCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.ChartLegendEntryCollection.load_1
  summary: <span data-ttu-id="eb41b-121">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="eb41b-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eb41b-122">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="eb41b-122">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartLegendEntryCollection;'
    return:
      type:
      - excel.Excel.ChartLegendEntryCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="eb41b-123">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="eb41b-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartLegendEntryCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartLegendEntryCollection;'
    return:
      type:
      - excel.Excel.ChartLegendEntryCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.ChartLegendEntryCollection.toJSON
  summary: <span data-ttu-id="eb41b-124">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="eb41b-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="eb41b-125">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `Excel.ChartLegendEntryCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ChartLegendEntryCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="eb41b-125">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartLegendEntryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLegendEntryCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartLegendEntryCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartLegendEntryCollectionData
      description: ''
