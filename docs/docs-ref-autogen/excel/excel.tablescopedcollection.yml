### YamlMime:UniversalReference
ms.openlocfilehash: b6be0a1d89e91df438bb3f977f4ad2b2c85e4d80
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112239"
items:
- uid: excel.Excel.TableScopedCollection
  summary: >-
    <span data-ttu-id="b49ce-101">Представляет набор таблиц с ограниченной областью действия.</span><span class="sxs-lookup"><span data-stu-id="b49ce-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="b49ce-102">Для каждой таблицы, ее верхний левый угол считается его расположением привязки, а таблицы сортируются сверху вниз, а затем слева направо.</span><span class="sxs-lookup"><span data-stu-id="b49ce-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>


    <span data-ttu-id="b49ce-103">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b49ce-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.TableScopedCollection
  fullName: Excel.TableScopedCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableScopedCollection.context
  - excel.Excel.TableScopedCollection.getCount
  - excel.Excel.TableScopedCollection.getFirst
  - excel.Excel.TableScopedCollection.getItem
  - excel.Excel.TableScopedCollection.items
  - excel.Excel.TableScopedCollection.load
  - excel.Excel.TableScopedCollection.load_1
  - excel.Excel.TableScopedCollection.load_2
  - excel.Excel.TableScopedCollection.toJSON
- uid: excel.Excel.TableScopedCollection.context
  summary: <span data-ttu-id="b49ce-104">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="b49ce-104">The request context associated with the object.</span></span> <span data-ttu-id="b49ce-105">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="b49ce-105">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableScopedCollection.getCount
  summary: >-
    <span data-ttu-id="b49ce-106">Получает количество таблиц в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b49ce-106">Gets the number of tables in the collection.</span></span>


    <span data-ttu-id="b49ce-107">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b49ce-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableScopedCollection.getFirst
  summary: >-
    <span data-ttu-id="b49ce-108">Получает первую таблицу в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b49ce-108">Gets the first table in the collection.</span></span> <span data-ttu-id="b49ce-109">Таблицы в коллекции сортируются сверху вниз и слева направо, так как верхняя левая таблица является первой таблицей в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b49ce-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>


    <span data-ttu-id="b49ce-110">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b49ce-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getFirst()
  fullName: getFirst()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
- uid: excel.Excel.TableScopedCollection.getItem
  summary: >-
    <span data-ttu-id="b49ce-111">Получает таблицу по имени или ИД.</span><span class="sxs-lookup"><span data-stu-id="b49ce-111">Gets a table by Name or ID.</span></span>


    <span data-ttu-id="b49ce-112">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b49ce-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="b49ce-113">Имя или ИД получаемой таблицы.</span><span class="sxs-lookup"><span data-stu-id="b49ce-113">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableScopedCollection.items
  summary: <span data-ttu-id="b49ce-114">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="b49ce-114">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel.Excel.TableScopedCollection.load
  summary: <span data-ttu-id="b49ce-115">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b49ce-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b49ce-116">Перед чтением свойств необходимо вызвать метод Context. Sync ().</span><span class="sxs-lookup"><span data-stu-id="b49ce-116">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b49ce-117">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="b49ce-117">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b49ce-118">`load(option?: string | string[]): Excel.TableScopedCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b49ce-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b49ce-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b49ce-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b49ce-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="b49ce-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="b49ce-121">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="b49ce-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="b49ce-122">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="b49ce-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b49ce-123">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="b49ce-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b49ce-124">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="b49ce-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableScopedCollection.load_1
  summary: <span data-ttu-id="b49ce-125">Ставит в очередь команду, чтобы загрузить указанные свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="b49ce-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b49ce-126">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="b49ce-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b49ce-127">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="b49ce-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableScopedCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableScopedCollection.toJSON
  summary: <span data-ttu-id="b49ce-128">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче `JSON.stringify()` <!-- -->объекта API.</span><span class="sxs-lookup"><span data-stu-id="b49ce-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b49ce-129">(`JSON.stringify`<!-- -->в свою очередь вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.TableScopedCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип `Excel.Interfaces.TableScopedCollectionData` <!-- -->"Items"), содержащий массив "Items" с неполной копией всех загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="b49ce-129">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableScopedCollectionData
      description: ''
