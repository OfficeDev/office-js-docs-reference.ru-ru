### YamlMime:UniversalReference
ms.openlocfilehash: 507a5d2c3cc3c36a34bc30f414088a6146556a45
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458336"
items:
- uid: excel.Excel.Table
  summary: >-
    <span data-ttu-id="6ca1a-101">Представляет таблицу Excel.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-101">Represents an Excel table.</span></span>


    <span data-ttu-id="6ca1a-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="6ca1a-103">Наш [руководство по работе с таблицами](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables) подробные пошаговые руководства, изображений и примеры кода.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-103">Our [ how-to guide on working with tables](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables) has detailed walkthroughs, images, and code samples.</span></span>
  name: Excel.Table
  fullName: excel.Excel.Table
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Table.clearFilters
  - excel.Excel.Table.columns
  - excel.Excel.Table.convertToRange
  - excel.Excel.Table.delete
  - excel.Excel.Table.getDataBodyRange
  - excel.Excel.Table.getHeaderRowRange
  - excel.Excel.Table.getRange
  - excel.Excel.Table.getTotalRowRange
  - excel.Excel.Table.highlightFirstColumn
  - excel.Excel.Table.highlightLastColumn
  - excel.Excel.Table.id
  - excel.Excel.Table.legacyId
  - excel.Excel.Table.load
  - excel.Excel.Table.name
  - excel.Excel.Table.onChanged
  - excel.Excel.Table.onSelectionChanged
  - excel.Excel.Table.reapplyFilters
  - excel.Excel.Table.rows
  - excel.Excel.Table.showBandedColumns
  - excel.Excel.Table.showBandedRows
  - excel.Excel.Table.showFilterButton
  - excel.Excel.Table.showHeaders
  - excel.Excel.Table.showTotals
  - excel.Excel.Table.sort
  - excel.Excel.Table.style
  - excel.Excel.Table.toJSON
  - excel.Excel.Table.worksheet
- uid: excel.Excel.Table.clearFilters
  summary: >-
    <span data-ttu-id="6ca1a-104">Удаляет все фильтры, примененные к таблице.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-104">Clears all the filters currently applied on the table.</span></span>


    <span data-ttu-id="6ca1a-105">\[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-105">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clearFilters()
  fullName: excel.Excel.Table.clearFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.columns
  summary: >-
    <span data-ttu-id="6ca1a-p101">Представляет коллекцию всех столбцов в таблице. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p101">Represents a collection of all the columns in the table. Read-only.</span></span>


    <span data-ttu-id="6ca1a-108">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-108">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columns
  fullName: excel.Excel.Table.columns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columns: Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
- uid: excel.Excel.Table.convertToRange
  summary: >-
    <span data-ttu-id="6ca1a-p102">Преобразовывает таблицу в обычный диапазон ячеек. Все данные сохраняются.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p102">Converts the table into a normal range of cells. All data is preserved.</span></span>


    <span data-ttu-id="6ca1a-111">\[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-111">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: convertToRange()
  fullName: excel.Excel.Table.convertToRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-112\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-112\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.convertToRange();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.delete
  summary: >-
    <span data-ttu-id="6ca1a-113">Удаляет таблицу.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-113">Deletes the table.</span></span>


    <span data-ttu-id="6ca1a-114">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-114">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.Table.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-115\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-115\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getDataBodyRange
  summary: >-
    <span data-ttu-id="6ca1a-116">Получает объект диапазона, связанный с основными данными таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-116">Gets the range object associated with the data body of the table.</span></span>


    <span data-ttu-id="6ca1a-117">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-117">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: excel.Excel.Table.getDataBodyRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-118\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableDataRange = table.getDataBodyRange();\n    tableDataRange.load('address')\n    return ctx.sync().then(function() {\n            console.log(tableDataRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getHeaderRowRange
  summary: >-
    <span data-ttu-id="6ca1a-119">Получает объект диапазона, связанный со строкой заголовков таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-119">Gets the range object associated with header row of the table.</span></span>


    <span data-ttu-id="6ca1a-120">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-120">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: excel.Excel.Table.getHeaderRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-121\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-121\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableHeaderRange = table.getHeaderRowRange();\n    tableHeaderRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(tableHeaderRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getRange
  summary: >-
    <span data-ttu-id="6ca1a-122">Получает объект диапазона, связанный со всей таблицей.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-122">Gets the range object associated with the entire table.</span></span>


    <span data-ttu-id="6ca1a-123">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-123">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: excel.Excel.Table.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableRange = table.getRange();\n    tableRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getTotalRowRange
  summary: >-
    <span data-ttu-id="6ca1a-125">Получает объект диапазона, связанный со строкой итогов таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-125">Gets the range object associated with totals row of the table.</span></span>


    <span data-ttu-id="6ca1a-126">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-126">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: excel.Excel.Table.getTotalRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-127\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-127\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableTotalsRange = table.getTotalRowRange();\n    tableTotalsRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableTotalsRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.highlightFirstColumn
  summary: >-
    <span data-ttu-id="6ca1a-128">Указывает, содержит ли первый столбец специальное форматирование.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-128">Indicates whether the first column contains special formatting.</span></span>


    <span data-ttu-id="6ca1a-129">\[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-129">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightFirstColumn
  fullName: excel.Excel.Table.highlightFirstColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightFirstColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.highlightLastColumn
  summary: >-
    <span data-ttu-id="6ca1a-130">Указывает, содержит ли последний столбец специальное форматирование.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-130">Indicates whether the last column contains special formatting.</span></span>


    <span data-ttu-id="6ca1a-131">\[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-131">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightLastColumn
  fullName: excel.Excel.Table.highlightLastColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightLastColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.id
  summary: >-
    <span data-ttu-id="6ca1a-p103">Возвращает значение, однозначно идентифицирующее таблицу в данной книге. Значение идентификатора остается прежним, даже если переименовать таблицу. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p103">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>


    <span data-ttu-id="6ca1a-135">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-135">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: excel.Excel.Table.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.legacyId
  summary: >-
    <span data-ttu-id="6ca1a-136">Возвращает числовой идентификатор.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-136">Returns a numeric id.</span></span>


    <span data-ttu-id="6ca1a-137">\[[Набор API-Интерфейсов: ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-137">\[ [API set: ExcelApi 1.8](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legacyId
  fullName: excel.Excel.Table.legacyId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legacyId: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.load
  summary: <span data-ttu-id="6ca1a-138">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6ca1a-139">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="6ca1a-139">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"6ca1a-140\">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-140\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"6ca1a-141\">`load(option?: { select?: string; expand?: string; }): Excel.Table`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-141\">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"6ca1a-142\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-Доступно только на коллекцию типов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-142\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"6ca1a-143\">Это похоже на предыдущую.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-143\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"6ca1a-144\">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-144\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"6ca1a-145\">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-145\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"6ca1a-146\">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-146\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-147\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-147\">Examples</span></span>\n\n```javascript\n// Get a table by name. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('index')\n    return ctx.sync().then(function() {\n            console.log(table.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get a table by index.\nExcel.run(function (ctx) { \n    var index = 0;\n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('id')\n    return ctx.sync().then(function() {\n            console.log(table.id);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set table style. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.name = 'Table1-Renamed';\n    table.showTotals = false;\n    table.style = 'TableStyleMedium2';\n    table.load('tableStyle');\n    return ctx.sync().then(function() {\n            console.log(table.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.Table.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="6ca1a-148">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-148">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Table.name
  summary: >-
    <span data-ttu-id="6ca1a-149">Имя таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-149">Name of the table.</span></span>


    <span data-ttu-id="6ca1a-150">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-150">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: excel.Excel.Table.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.onChanged
  summary: >-
    <span data-ttu-id="6ca1a-151">Возникает при изменении данных в ячейках на отдельных таблиц.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-151">Occurs when data in cells changes on a specific table.</span></span>


    <span data-ttu-id="6ca1a-152">\[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-152">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: excel.Excel.Table.onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-153\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-153\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onChanged.add(onChange);\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"A handler has been registered for the onChanged event\",\n        \"Try changing a cell value in the table, and watch the console output.\");\n});\n```"
- uid: excel.Excel.Table.onSelectionChanged
  summary: >-
    <span data-ttu-id="6ca1a-154">Возникает при изменении выбора на отдельных таблиц.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-154">Occurs when the selection changes on a specific table.</span></span>


    <span data-ttu-id="6ca1a-155">\[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-155">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: excel.Excel.Table.onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6ca1a-156\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"6ca1a-156\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onSelectionChanged.add(onSelectionChange);\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"A handler has been registered for table onSelectionChanged event\",\n        \"Try changing a range selection in the table, and watch the console output.\");\n});\n```"
- uid: excel.Excel.Table.reapplyFilters
  summary: >-
    <span data-ttu-id="6ca1a-157">Повторно применяет все текущие фильтры к таблице.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-157">Reapplies all the filters currently on the table.</span></span>


    <span data-ttu-id="6ca1a-158">\[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-158">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reapplyFilters()
  fullName: excel.Excel.Table.reapplyFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapplyFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.rows
  summary: >-
    <span data-ttu-id="6ca1a-p106">Представляет коллекцию всех строк в таблице. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p106">Represents a collection of all the rows in the table. Read-only.</span></span>


    <span data-ttu-id="6ca1a-161">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-161">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rows
  fullName: excel.Excel.Table.rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
- uid: excel.Excel.Table.showBandedColumns
  summary: >-
    <span data-ttu-id="6ca1a-162">Указывает, чередуется ли форматирование четных и нечетных столбцов для более удобного просмотра таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-162">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="6ca1a-163">\[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-163">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedColumns
  fullName: excel.Excel.Table.showBandedColumns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedColumns: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showBandedRows
  summary: >-
    <span data-ttu-id="6ca1a-164">Указывает, чередуется ли форматирование четных и нечетных строк для более удобного просмотра таблицы.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-164">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="6ca1a-165">\[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-165">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedRows
  fullName: excel.Excel.Table.showBandedRows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedRows: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showFilterButton
  summary: >-
    <span data-ttu-id="6ca1a-p107">Указывает, видны ли кнопки фильтрации в верхней части заголовков столбцов. Это свойство можно использовать, только если таблица содержит строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p107">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>


    <span data-ttu-id="6ca1a-168">\[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-168">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showFilterButton
  fullName: excel.Excel.Table.showFilterButton
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showFilterButton: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showHeaders
  summary: >-
    <span data-ttu-id="6ca1a-p108">Указывает, отображается ли строка заголовков. Можно задать это значение, чтобы отобразить или скрыть строку заголовков.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p108">Indicates whether the header row is visible or not. This value can be set to show or remove the header row.</span></span>


    <span data-ttu-id="6ca1a-171">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-171">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showHeaders
  fullName: excel.Excel.Table.showHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showHeaders: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showTotals
  summary: >-
    <span data-ttu-id="6ca1a-p109">Указывает, отображается ли строка итогов. Можно задать это значение, чтобы отобразить или скрыть строку итогов.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p109">Indicates whether the total row is visible or not. This value can be set to show or remove the total row.</span></span>


    <span data-ttu-id="6ca1a-174">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-174">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showTotals
  fullName: excel.Excel.Table.showTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.sort
  summary: >-
    <span data-ttu-id="6ca1a-p110">Представляет сортировку для таблицы. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p110">Represents the sorting for the table. Read-only.</span></span>


    <span data-ttu-id="6ca1a-177">\[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-177">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sort
  fullName: excel.Excel.Table.sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
- uid: excel.Excel.Table.style
  summary: >-
    <span data-ttu-id="6ca1a-p111">Постоянное значение, представляющее стиль таблицы. Возможные значения: от TableStyleLight1 до TableStyleLight21, от TableStyleMedium1 до TableStyleMedium28, от TableStyleStyleDark1 до TableStyleStyleDark11. Также можно указать настраиваемый пользовательский стиль, имеющийся в книге.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p111">Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.</span></span>


    <span data-ttu-id="6ca1a-181">\[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-181">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: excel.Excel.Table.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.toJSON
  name: toJSON()
  fullName: excel.Excel.Table.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableData;'
    return:
      type:
      - excel.Excel.Interfaces.TableData
      description: ''
- uid: excel.Excel.Table.worksheet
  summary: >-
    <span data-ttu-id="6ca1a-p112">Лист, содержащий текущую таблицу. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6ca1a-p112">The worksheet containing the current table. Read-only.</span></span>


    <span data-ttu-id="6ca1a-184">\[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ca1a-184">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: excel.Excel.Table.worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
