### YamlMime:UniversalReference
ms.openlocfilehash: 938e3ab08f7abcb174d0402e82b8deaee9a69e3b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976231"
items:
- uid: excel.Excel.ConditionalRangeFormat
  summary: >-
    <span data-ttu-id="0dade-101">Объект формата, который содержит шрифт, заливку, границы и другие свойства диапазона условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="0dade-101">A format object encapsulating the conditional formats range's font, fill, borders, and other properties.</span></span>


    <span data-ttu-id="0dade-102">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0dade-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalRangeFormat
  fullName: Excel.ConditionalRangeFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalRangeFormat.borders
  - excel.Excel.ConditionalRangeFormat.context
  - excel.Excel.ConditionalRangeFormat.fill
  - excel.Excel.ConditionalRangeFormat.font
  - excel.Excel.ConditionalRangeFormat.load
  - excel.Excel.ConditionalRangeFormat.load_1
  - excel.Excel.ConditionalRangeFormat.load_2
  - excel.Excel.ConditionalRangeFormat.numberFormat
  - excel.Excel.ConditionalRangeFormat.set
  - excel.Excel.ConditionalRangeFormat.set_1
  - excel.Excel.ConditionalRangeFormat.toJSON
- uid: excel.Excel.ConditionalRangeFormat.borders
  summary: >-
    <span data-ttu-id="0dade-p101">Коллекция объектов границы, которые применяются ко всему диапазону условного форматирования. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0dade-p101">Collection of border objects that apply to the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="0dade-105">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0dade-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: borders
  fullName: borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorderCollection
- uid: excel.Excel.ConditionalRangeFormat.context
  summary: <span data-ttu-id="0dade-106">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="0dade-106">The request context associated with the object.</span></span> <span data-ttu-id="0dade-107">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="0dade-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalRangeFormat.fill
  summary: >-
    <span data-ttu-id="0dade-p103">Возвращает объект заливки, определенный для всего диапазона условного форматирования. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0dade-p103">Returns the fill object defined on the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="0dade-110">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0dade-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.ConditionalRangeFill;'
    return:
      type:
      - excel.Excel.ConditionalRangeFill
- uid: excel.Excel.ConditionalRangeFormat.font
  summary: >-
    <span data-ttu-id="0dade-p104">Возвращает объект шрифта, определенный для всего диапазона условного форматирования. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0dade-p104">Returns the font object defined on the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="0dade-113">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0dade-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.ConditionalRangeFont;'
    return:
      type:
      - excel.Excel.ConditionalRangeFont
- uid: excel.Excel.ConditionalRangeFormat.load
  summary: <span data-ttu-id="0dade-114">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0dade-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0dade-115">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="0dade-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0dade-116">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="0dade-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0dade-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0dade-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0dade-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0dade-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0dade-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="0dade-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="0dade-120">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="0dade-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="0dade-121">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="0dade-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0dade-122">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="0dade-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0dade-123">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="0dade-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalRangeFormatLoadOptions
- uid: excel.Excel.ConditionalRangeFormat.load_1
  summary: <span data-ttu-id="0dade-124">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0dade-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0dade-125">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="0dade-125">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0dade-126">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0dade-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalRangeFormat.load_2
  summary: <span data-ttu-id="0dade-127">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="0dade-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0dade-128">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="0dade-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="0dade-129">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="0dade-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalRangeFormat.numberFormat
  summary: >-
    <span data-ttu-id="0dade-p109">Представляет код в числовом формате Excel для данного диапазона. Удаляется, если передается значение NULL.</span><span class="sxs-lookup"><span data-stu-id="0dade-p109">Represents Excel's number format code for the given range. Cleared if null is passed in.</span></span>


    <span data-ttu-id="0dade-132">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0dade-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormat
  fullName: numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: any;'
    return:
      type:
      - any
- uid: excel.Excel.ConditionalRangeFormat.set
  summary: <span data-ttu-id="0dade-133">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="0dade-133">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0dade-134">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="0dade-134">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="0dade-135">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="0dade-135">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalRangeFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="0dade-136">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="0dade-136">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalRangeFormatUpdateData
    - id: options
      description: <span data-ttu-id="0dade-137">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0dade-137">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalRangeFormat.set_1
  summary: <span data-ttu-id="0dade-138">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="0dade-138">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalRangeFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalRangeFormat
- uid: excel.Excel.ConditionalRangeFormat.toJSON
  summary: <span data-ttu-id="0dade-139">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0dade-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0dade-140">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ConditionalRangeFormat является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ConditionalRangeFormatData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="0dade-140">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeFormatData
      description: ''
