### YamlMime:UniversalReference
ms.openlocfilehash: f774b8bb9a5ccdddae6de035b5eff44a8c9314bd
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725412"
items:
- uid: excel.Excel.PivotTable
  summary: >-
    <span data-ttu-id="acc86-101">Представляет сводную таблицу Excel.</span><span class="sxs-lookup"><span data-stu-id="acc86-101">Represents an Excel PivotTable.</span></span>


    <span data-ttu-id="acc86-102">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="acc86-103">Наш [руководство по работе со сводными таблицами](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables) подробные пошаговые руководства, изображений и примеры кода.</span><span class="sxs-lookup"><span data-stu-id="acc86-103">Our [how-to guide on working with PivotTables](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables) has detailed walkthroughs, images, and code samples.</span></span>
  name: Excel.PivotTable
  fullName: Excel.PivotTable
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTable.columnHierarchies
  - excel.Excel.PivotTable.context
  - excel.Excel.PivotTable.dataHierarchies
  - excel.Excel.PivotTable.delete
  - excel.Excel.PivotTable.filterHierarchies
  - excel.Excel.PivotTable.hierarchies
  - excel.Excel.PivotTable.id
  - excel.Excel.PivotTable.layout
  - excel.Excel.PivotTable.load
  - excel.Excel.PivotTable.name
  - excel.Excel.PivotTable.refresh
  - excel.Excel.PivotTable.rowHierarchies
  - excel.Excel.PivotTable.toJSON
  - excel.Excel.PivotTable.worksheet
- uid: excel.Excel.PivotTable.columnHierarchies
  summary: >-
    <span data-ttu-id="acc86-104">Иерархии сводных столбцов сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-104">The Column Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="acc86-105">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHierarchies
  fullName: columnHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"acc86-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"acc86-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");       \n\n    // check if the PivotTable already has a column\n    const column = pivotTable.columnHierarchies.getItemOrNullObject(\"Farm\");\n    column.load(\"id\");\n    await context.sync();\n\n    if (column.isNullObject) {\n        // ading the farm column to the column hierarchy automatically removes it from the row hierarchy\n        pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem(\"Farm\"));\n    } else {\n        pivotTable.columnHierarchies.remove(column);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.context
  summary: <span data-ttu-id="acc86-107">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="acc86-107">The request context associated with the object.</span></span> <span data-ttu-id="acc86-108">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="acc86-108">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTable.dataHierarchies
  summary: >-
    <span data-ttu-id="acc86-109">Иерархии сводных данных сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-109">The Data Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="acc86-110">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-110">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataHierarchies
  fullName: dataHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.DataPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"acc86-111\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"acc86-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold at Farm\"));\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold Wholesale\"));\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.delete
  summary: >-
    <span data-ttu-id="acc86-112">Удаляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="acc86-112">Deletes the PivotTable.</span></span>


    <span data-ttu-id="acc86-113">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-113">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"acc86-114\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"acc86-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.getItem(\"Farm Sales\").delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.filterHierarchies
  summary: >-
    <span data-ttu-id="acc86-115">Иерархии сводных фильтров сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-115">The Filter Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="acc86-116">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-116">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filterHierarchies
  fullName: filterHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.FilterPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"acc86-117\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"acc86-117\">Examples</span></span>\n\n```typescript\nasync function filter(functionType: Excel.AggregationFunction) {\n    await Excel.run(async (context) => {\n        const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n        const filters = pivotTable.filterHierarchies;\n        const filter = filters.getItemOrNullObject(\"Classification\");\n        filter.load();\n        await context.sync();\n\n        // add the Classification hierarchy to the filter, if it's not already there\n        if (filter.isNullObject) {\n            filters.add(pivotTable.hierarchies.getItem(\"Classification\"));\n            await context.sync();\n        }\n    });\n}\n```"
- uid: excel.Excel.PivotTable.hierarchies
  summary: >-
    <span data-ttu-id="acc86-118">Иерархии сводного документа сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-118">The Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="acc86-119">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-119">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hierarchies
  fullName: hierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.PivotHierarchyCollection
- uid: excel.Excel.PivotTable.id
  summary: >-
    <span data-ttu-id="acc86-p102">Идентификатор сводной таблицы. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="acc86-p102">Id of the PivotTable. Read-only.</span></span>


    <span data-ttu-id="acc86-122">\[[Набор API-Интерфейсов: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-122">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.layout
  summary: >-
    <span data-ttu-id="acc86-123">PivotLayout, описывающий макет и визуальную структуру сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-123">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>


    <span data-ttu-id="acc86-124">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-124">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layout
  fullName: layout
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly layout: Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"acc86-125\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"acc86-125\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.layout.load(\"layoutType\");\n    await context.sync();\n\n    // cycle between the three layout types\n    if (pivotTable.layout.layoutType === \"Compact\") {\n        pivotTable.layout.layoutType = \"Outline\";\n    } else if (pivotTable.layout.layoutType === \"Outline\") {\n        pivotTable.layout.layoutType = \"Tabular\";\n    } else {\n        pivotTable.layout.layoutType = \"Compact\";\n    }\n    await context.sync();\n    console.log(\"Pivot layout is now \" + pivotTable.layout.layoutType);\n});\n```"
- uid: excel.Excel.PivotTable.load
  summary: <span data-ttu-id="acc86-126">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="acc86-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="acc86-127">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="acc86-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="acc86-128">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="acc86-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="acc86-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="acc86-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="acc86-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="acc86-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="acc86-131">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="acc86-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="acc86-132">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="acc86-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="acc86-133">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="acc86-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="acc86-134">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="acc86-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="acc86-135">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="acc86-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTable.name
  summary: >-
    <span data-ttu-id="acc86-136">Имя сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-136">Name of the PivotTable.</span></span>


    <span data-ttu-id="acc86-137">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-137">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.refresh
  summary: >-
    <span data-ttu-id="acc86-138">Обновляет сводную таблицу.</span><span class="sxs-lookup"><span data-stu-id="acc86-138">Refreshes the PivotTable.</span></span>


    <span data-ttu-id="acc86-139">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-139">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refresh()
  fullName: refresh
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refresh(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTable.rowHierarchies
  summary: >-
    <span data-ttu-id="acc86-140">Иерархии сводных строк сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-140">The Row Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="acc86-141">\[[Набор API-Интерфейсов: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHierarchies
  fullName: rowHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
- uid: excel.Excel.PivotTable.toJSON
  summary: <span data-ttu-id="acc86-142">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="acc86-142">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="acc86-143">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.PivotTable является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.PivotTableData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="acc86-143">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableData
      description: ''
- uid: excel.Excel.PivotTable.worksheet
  summary: >-
    <span data-ttu-id="acc86-144">Лист, содержащий текущий сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="acc86-144">The worksheet containing the current PivotTable.</span></span>


    <span data-ttu-id="acc86-145">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="acc86-145">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
