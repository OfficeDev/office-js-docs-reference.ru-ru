### YamlMime:UniversalReference
ms.openlocfilehash: 9ce016e89c5ba5a2294973b99dd307d5ee444010
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980074"
items:
- uid: excel.Excel.WorksheetFreezePanes
  summary: '<span data-ttu-id="ecb33-101">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-101">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetFreezePanes.context
  - excel.Excel.WorksheetFreezePanes.freezeAt
  - excel.Excel.WorksheetFreezePanes.freezeColumns
  - excel.Excel.WorksheetFreezePanes.freezeRows
  - excel.Excel.WorksheetFreezePanes.getLocation
  - excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel.Excel.WorksheetFreezePanes.toJSON
  - excel.Excel.WorksheetFreezePanes.unfreeze
- uid: excel.Excel.WorksheetFreezePanes.context
  summary: <span data-ttu-id="ecb33-102">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="ecb33-102">The request context associated with the object.</span></span> <span data-ttu-id="ecb33-103">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="ecb33-103">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    <span data-ttu-id="ecb33-104">Задает закрепленные ячейки в представлении активного листа.</span><span class="sxs-lookup"><span data-stu-id="ecb33-104">Sets the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="ecb33-105">Соответствует указанный диапазон ячеек, которые будут зафиксированы в самой верхней и левой панели.</span><span class="sxs-lookup"><span data-stu-id="ecb33-105">The range provided corresponds to cells that will be frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="ecb33-106">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ecb33-107\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ecb33-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: <span data-ttu-id="ecb33-108">Диапазон, который представляет ячейки остановленных или значение null, чтобы удалить все закрепление областей.</span><span class="sxs-lookup"><span data-stu-id="ecb33-108">A range that represents the cells to be frozen, or null to remove all frozen panes.</span></span>
      type:
      - Range | string
- uid: excel.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    <span data-ttu-id="ecb33-109">Закрепляет первый столбец (или столбцы) листа на месте.</span><span class="sxs-lookup"><span data-stu-id="ecb33-109">Freeze the first column(s) of the worksheet in place.</span></span>


    <span data-ttu-id="ecb33-110">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ecb33-111\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ecb33-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="ecb33-112">Необязательный число столбцов, чтобы зафиксировать или ноль, чтобы освободить все столбцы</span><span class="sxs-lookup"><span data-stu-id="ecb33-112">Optional number of columns to freeze, or zero to unfreeze all columns</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    <span data-ttu-id="ecb33-113">Закрепляет верхнюю строку (или строки) листа на месте.</span><span class="sxs-lookup"><span data-stu-id="ecb33-113">Freeze the top row(s) of the worksheet in place.</span></span>


    <span data-ttu-id="ecb33-114">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ecb33-115\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ecb33-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="ecb33-116">Необязательный число строк, чтобы зафиксировать или ноль, чтобы освободить все строки</span><span class="sxs-lookup"><span data-stu-id="ecb33-116">Optional number of rows to freeze, or zero to unfreeze all rows</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    <span data-ttu-id="ecb33-117">Получает диапазон, описывающий закрепленные ячейки в представлении активного листа.</span><span class="sxs-lookup"><span data-stu-id="ecb33-117">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="ecb33-118">Frozen значения — от соответствует ячеек, которые фиксируются в самой верхней и левой панели.</span><span class="sxs-lookup"><span data-stu-id="ecb33-118">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="ecb33-119">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    <span data-ttu-id="ecb33-120">Получает диапазон, описывающий закрепленные ячейки в представлении активного листа.</span><span class="sxs-lookup"><span data-stu-id="ecb33-120">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="ecb33-121">Frozen значения — от соответствует ячеек, которые фиксируются в самой верхней и левой панели.</span><span class="sxs-lookup"><span data-stu-id="ecb33-121">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span> <span data-ttu-id="ecb33-122">Если нет закрепление областей, возвращает значение null, object.</span><span class="sxs-lookup"><span data-stu-id="ecb33-122">If there is no frozen pane, returns a null object.</span></span>


    <span data-ttu-id="ecb33-123">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ecb33-124\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ecb33-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        OfficeHelpers.UI.notify(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel.Excel.WorksheetFreezePanes.toJSON
  summary: <span data-ttu-id="ecb33-125">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ecb33-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ecb33-126">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.WorksheetFreezePanes является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="ecb33-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    <span data-ttu-id="ecb33-127">Удаляет все закрепленные области в листе.</span><span class="sxs-lookup"><span data-stu-id="ecb33-127">Removes all frozen panes in the worksheet.</span></span>


    <span data-ttu-id="ecb33-128">\[[Набор API-Интерфейсов: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ecb33-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ecb33-129\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"ecb33-129\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
