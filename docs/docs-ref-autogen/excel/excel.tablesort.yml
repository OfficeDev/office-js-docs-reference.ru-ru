### YamlMime:UniversalReference
ms.openlocfilehash: f1af835bd78cbbe54cec0d73ab8d053d834a1e63
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979213"
items:
- uid: excel.Excel.TableSort
  summary: >-
    Управляет операциями сортировки для объектов Table.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableSort
  fullName: Excel.TableSort
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableSort.apply
  - excel.Excel.TableSort.apply_1
  - excel.Excel.TableSort.clear
  - excel.Excel.TableSort.context
  - excel.Excel.TableSort.fields
  - excel.Excel.TableSort.load
  - excel.Excel.TableSort.load_1
  - excel.Excel.TableSort.load_2
  - excel.Excel.TableSort.matchCase
  - excel.Excel.TableSort.method
  - excel.Excel.TableSort.reapply
  - excel.Excel.TableSort.toJSON
- uid: excel.Excel.TableSort.apply
  summary: >-
    Выполняет сортировку.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, method)
  fullName: apply(fields, matchCase, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.sort.apply([ \n            {\n                key: 2,\n                ascending: true\n            },\n        ], true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: fields
      description: Список условий для сортировки.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Необязательный. Указывает, необходимо ли учитывать регистр при сортировке строк.
      type:
      - boolean
    - id: method
      description: Необязательное свойство. Метода упорядочения, используемый для китайских знаков.
      type:
      - excel.Excel.SortMethod
- uid: excel.Excel.TableSort.apply_1
  summary: >-
    Выполняет сортировку.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, methodString)
  fullName: apply(fields, matchCase, methodString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: Список условий для сортировки.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Необязательный. Указывает, необходимо ли учитывать регистр при сортировке строк.
      type:
      - boolean
    - id: methodString
      description: Необязательное свойство. Метода упорядочения, используемый для китайских знаков.
      type:
      - "\"PinYin\" | \"StrokeCount\""
- uid: excel.Excel.TableSort.clear
  summary: >-
    Удаляет текущие параметры сортировки таблицы. При этом сбрасывается состояние кнопок в заголовках, но порядок сортировки таблицы остается неизменным.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.context
  summary: Контекста запроса, связанного с объектом. Это необходимо добавить в процесс для процесса ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableSort.fields
  summary: >-
    Указывает текущие условия, которые использовались при последней сортировке таблицы. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fields
  fullName: fields
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fields: Excel.SortField[];'
    return:
      type:
      - Excel.SortField[]
- uid: excel.Excel.TableSort.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: string | string[]): Excel.TableSort`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Excel.TableSort`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableSortLoadOptions
- uid: excel.Excel.TableSort.load_1
  summary: Очереди команды для загрузки указанного свойства объекта. Необходимо вызвать `context.sync()` перед чтением свойства.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: propertyNames
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.TableSort.load_2
  summary: Очереди команды для загрузки указанного свойства объекта. Необходимо вызвать `context.sync()` перед чтением свойства.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.TableSort.matchCase
  summary: >-
    Указывает, учитывался ли регистр при последней сортировке таблице. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: matchCase
  fullName: matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly matchCase: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.TableSort.method
  summary: >-
    Представляет порядка способ, используемый для сортировки в таблице последнего китайских знаков. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: method
  fullName: method
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
    return:
      type:
      - Excel.SortMethod | "PinYin" | "StrokeCount"
- uid: excel.Excel.TableSort.reapply
  summary: >-
    Повторно применяет текущие параметры сортировки к таблице.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: reapply()
  fullName: reapply()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapply(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.toJSON
  summary: Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.TableSort является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.TableSortData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableSortData;'
    return:
      type:
      - excel.Excel.Interfaces.TableSortData
      description: ''
