### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Slicer
    summary: |-
      <span data-ttu-id="83358-101">Представляет объект среза в книге.</span><span class="sxs-lookup"><span data-stu-id="83358-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="83358-102">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Slicer.caption
      - excel.Excel.Slicer.clearFilters
      - excel.Excel.Slicer.context
      - excel.Excel.Slicer.delete
      - excel.Excel.Slicer.getSelectedItems
      - excel.Excel.Slicer.height
      - excel.Excel.Slicer.id
      - excel.Excel.Slicer.isFilterCleared
      - excel.Excel.Slicer.left
      - excel.Excel.Slicer.load
      - excel.Excel.Slicer.load_1
      - excel.Excel.Slicer.load_2
      - excel.Excel.Slicer.name
      - excel.Excel.Slicer.nameInFormula
      - excel.Excel.Slicer.selectItems
      - excel.Excel.Slicer.set
      - excel.Excel.Slicer.set_1
      - excel.Excel.Slicer.slicerItems
      - excel.Excel.Slicer.sortBy
      - excel.Excel.Slicer.style
      - excel.Excel.Slicer.toJSON
      - excel.Excel.Slicer.top
      - excel.Excel.Slicer.width
      - excel.Excel.Slicer.worksheet
  - uid: excel.Excel.Slicer.caption
    summary: |-
      <span data-ttu-id="83358-103">Представляет подпись среза.</span><span class="sxs-lookup"><span data-stu-id="83358-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="83358-104">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.clearFilters
    summary: |-
      <span data-ttu-id="83358-105">Удаляет все фильтры, примененные к срезу.</span><span class="sxs-lookup"><span data-stu-id="83358-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="83358-106">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83358-107">Примеры</span><span class="sxs-lookup"><span data-stu-id="83358-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.context
    summary: '<span data-ttu-id="83358-108">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="83358-108">The request context associated with the object.</span></span> <span data-ttu-id="83358-109">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="83358-109">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Slicer.delete
    summary: |-
      <span data-ttu-id="83358-110">Удаляет срез.</span><span class="sxs-lookup"><span data-stu-id="83358-110">Deletes the slicer.</span></span>

      <span data-ttu-id="83358-111">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83358-112">Примеры</span><span class="sxs-lookup"><span data-stu-id="83358-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.getSelectedItems
    summary: |-
      <span data-ttu-id="83358-113">Возвращает массив имен выбранных ключей элементов.</span><span class="sxs-lookup"><span data-stu-id="83358-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="83358-114">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83358-114">Read-only.</span></span>

      <span data-ttu-id="83358-115">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
  - uid: excel.Excel.Slicer.height
    summary: |-
      <span data-ttu-id="83358-116">Представляет высоту среза (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="83358-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="83358-117">При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.</span><span class="sxs-lookup"><span data-stu-id="83358-117">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="83358-118">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.id
    summary: |-
      <span data-ttu-id="83358-119">Представляет уникальный идентификатор среза.</span><span class="sxs-lookup"><span data-stu-id="83358-119">Represents the unique id of slicer.</span></span> <span data-ttu-id="83358-120">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83358-120">Read-only.</span></span>

      <span data-ttu-id="83358-121">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.isFilterCleared
    summary: |-
      <span data-ttu-id="83358-122">Значение true, если удалены все фильтры, примененные к срезу.</span><span class="sxs-lookup"><span data-stu-id="83358-122">True if all filters currently applied on the slicer is cleared.</span></span>

      <span data-ttu-id="83358-123">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Slicer.left
    summary: |-
      <span data-ttu-id="83358-124">Представляет расстояние в пунктах от левого края среза до левого края листа.</span><span class="sxs-lookup"><span data-stu-id="83358-124">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="83358-125">При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.</span><span class="sxs-lookup"><span data-stu-id="83358-125">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="83358-126">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.load
    summary: <span data-ttu-id="83358-127">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83358-128">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="83358-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="83358-129">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="83358-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="83358-130">`load(option?: string | string[]): Excel.Slicer`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83358-130">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="83358-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83358-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="83358-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="83358-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="83358-133">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="83358-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="83358-134">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="83358-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="83358-135">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="83358-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="83358-136">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="83358-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerLoadOptions
  - uid: excel.Excel.Slicer.load_1
    summary: <span data-ttu-id="83358-137">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83358-138">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="83358-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="83358-139">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83358-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Slicer.load_2
    summary: <span data-ttu-id="83358-140">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83358-141">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="83358-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="83358-142">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="83358-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Slicer.name
    summary: |-
      <span data-ttu-id="83358-143">Представляет имя среза.</span><span class="sxs-lookup"><span data-stu-id="83358-143">Represents the name of slicer.</span></span>

      <span data-ttu-id="83358-144">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.nameInFormula
    summary: |-
      <span data-ttu-id="83358-145">Представляет имя, используемое в формуле.</span><span class="sxs-lookup"><span data-stu-id="83358-145">Represents the name used in the formula.</span></span>

      <span data-ttu-id="83358-146">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.selectItems
    summary: |-
      <span data-ttu-id="83358-147">Выделяет элементы среза на основе их ключей.</span><span class="sxs-lookup"><span data-stu-id="83358-147">Select slicer items based on their keys.</span></span> <span data-ttu-id="83358-148">Предыдущее выделение очищается.</span><span class="sxs-lookup"><span data-stu-id="83358-148">Previous selection will be cleared.</span></span> <span data-ttu-id="83358-149">Все элементы будут выбраны по умолчанию, если массив пуст.</span><span class="sxs-lookup"><span data-stu-id="83358-149">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="83358-150">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-150">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83358-151">Примеры</span><span class="sxs-lookup"><span data-stu-id="83358-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="83358-152">Необязательно.</span><span class="sxs-lookup"><span data-stu-id="83358-152">Optional.</span></span> <span data-ttu-id="83358-153">Указанные имена выбранных элементов среза.</span><span class="sxs-lookup"><span data-stu-id="83358-153">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: excel.Excel.Slicer.set
    summary: '<span data-ttu-id="83358-154">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-154">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="83358-155">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="83358-155">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="83358-156">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="83358-156">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="83358-157">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="83358-157">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SlicerUpdateData
        - id: options
          description: '<span data-ttu-id="83358-158">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83358-158">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Slicer.set_1
    summary: '<span data-ttu-id="83358-159">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-159">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Slicer
  - uid: excel.Excel.Slicer.slicerItems
    summary: |-
      <span data-ttu-id="83358-160">Представляет коллекцию объектов SlicerItem, которые являются частью среза.</span><span class="sxs-lookup"><span data-stu-id="83358-160">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="83358-161">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83358-161">Read-only.</span></span>

      <span data-ttu-id="83358-162">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - excel.Excel.SlicerItemCollection
  - uid: excel.Excel.Slicer.sortBy
    summary: |-
      <span data-ttu-id="83358-163">Представляет порядок сортировки элементов в срезе.</span><span class="sxs-lookup"><span data-stu-id="83358-163">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="83358-164">Возможные значения: DataSourceOrder, Ascending, Descending.</span><span class="sxs-lookup"><span data-stu-id="83358-164">Possible values are: DataSourceOrder, Ascending, Descending.</span></span>

      <span data-ttu-id="83358-165">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
  - uid: excel.Excel.Slicer.style
    summary: |-
      <span data-ttu-id="83358-166">Постоянное значение, представляющее стиль среза.</span><span class="sxs-lookup"><span data-stu-id="83358-166">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="83358-167">Возможные значения: SlicerStyleLight1–SlicerStyleLight6, TableStyleOther1–TableStyleOther2, SlicerStyleDark1–SlicerStyleDark6.</span><span class="sxs-lookup"><span data-stu-id="83358-167">Possible values are: SlicerStyleLight1 thru SlicerStyleLight6, TableStyleOther1 thru TableStyleOther2, SlicerStyleDark1 thru SlicerStyleDark6.</span></span> <span data-ttu-id="83358-168">Также можно указать настраиваемый пользовательский стиль, имеющийся в книге.</span><span class="sxs-lookup"><span data-stu-id="83358-168">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="83358-169">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83358-170">Примеры</span><span class="sxs-lookup"><span data-stu-id="83358-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.toJSON
    summary: '<span data-ttu-id="83358-171">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="83358-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="83358-172">.</span><span class="sxs-lookup"><span data-stu-id="83358-172"></span></span> <span data-ttu-id="83358-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="83358-173"></span></span><!-- --><span data-ttu-id="83358-174">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В отличие от исходного объекта Excel. среза — это объект API, `toJSON` метод возвращает простой объект JavaScript (типизированный как`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="83358-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="83358-175">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="83358-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerData
        description: ''
  - uid: excel.Excel.Slicer.top
    summary: |-
      <span data-ttu-id="83358-176">Представляет расстояние в пунктах от верхнего края среза до верхнего края листа.</span><span class="sxs-lookup"><span data-stu-id="83358-176">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="83358-177">При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.</span><span class="sxs-lookup"><span data-stu-id="83358-177">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="83358-178">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.width
    summary: |-
      <span data-ttu-id="83358-179">Представляет ширину среза (в пунктах).</span><span class="sxs-lookup"><span data-stu-id="83358-179">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="83358-180">При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.</span><span class="sxs-lookup"><span data-stu-id="83358-180">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="83358-181">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.worksheet
    summary: |-
      <span data-ttu-id="83358-182">Представляет лист, содержащий срез.</span><span class="sxs-lookup"><span data-stu-id="83358-182">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="83358-183">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="83358-183">Read-only.</span></span>

      <span data-ttu-id="83358-184">\[[Набор API: EXCELAPI Beta (только ознакомительная версия)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83358-184">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet