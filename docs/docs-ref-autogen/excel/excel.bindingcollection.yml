### YamlMime:UniversalReference
ms.openlocfilehash: 642183b8a0e03d735d473601b8ed010faa8764dd
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977855"
items:
- uid: excel.Excel.BindingCollection
  summary: >-
    <span data-ttu-id="7d938-101">Представляет коллекцию всех объектов привязки, включенных в книгу.</span><span class="sxs-lookup"><span data-stu-id="7d938-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>


    <span data-ttu-id="7d938-102">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.BindingCollection
  fullName: Excel.BindingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.BindingCollection.add
  - excel.Excel.BindingCollection.add_1
  - excel.Excel.BindingCollection.addFromNamedItem
  - excel.Excel.BindingCollection.addFromNamedItem_1
  - excel.Excel.BindingCollection.addFromSelection
  - excel.Excel.BindingCollection.addFromSelection_1
  - excel.Excel.BindingCollection.context
  - excel.Excel.BindingCollection.count
  - excel.Excel.BindingCollection.getCount
  - excel.Excel.BindingCollection.getItem
  - excel.Excel.BindingCollection.getItemAt
  - excel.Excel.BindingCollection.getItemOrNullObject
  - excel.Excel.BindingCollection.items
  - excel.Excel.BindingCollection.load
  - excel.Excel.BindingCollection.load_1
  - excel.Excel.BindingCollection.load_2
  - excel.Excel.BindingCollection.toJSON
- uid: excel.Excel.BindingCollection.add
  summary: >-
    <span data-ttu-id="7d938-103">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="7d938-103">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="7d938-104">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingType, id)
  fullName: add(range, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="7d938-p101">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="7d938-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingType
      description: <span data-ttu-id="7d938-108">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-108">Type of binding.</span></span> <span data-ttu-id="7d938-109">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-109">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="7d938-110">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-110">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.add_1
  summary: >-
    <span data-ttu-id="7d938-111">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="7d938-111">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="7d938-112">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingTypeString, id)
  fullName: add(range, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="7d938-p103">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="7d938-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingTypeString
      description: <span data-ttu-id="7d938-116">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-116">Type of binding.</span></span> <span data-ttu-id="7d938-117">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-117">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="7d938-118">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-118">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromNamedItem
  summary: >-
    <span data-ttu-id="7d938-119">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="7d938-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="7d938-120">Если именованный элемент ссылки на несколько областей, будет возвращена ошибка «InvalidReference».</span><span class="sxs-lookup"><span data-stu-id="7d938-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="7d938-121">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingType, id)
  fullName: addFromNamedItem(name, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="7d938-122">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="7d938-122">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingType
      description: <span data-ttu-id="7d938-123">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-123">Type of binding.</span></span> <span data-ttu-id="7d938-124">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-124">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="7d938-125">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-125">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromNamedItem_1
  summary: >-
    <span data-ttu-id="7d938-126">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="7d938-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="7d938-127">Если именованный элемент ссылки на несколько областей, будет возвращена ошибка «InvalidReference».</span><span class="sxs-lookup"><span data-stu-id="7d938-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="7d938-128">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingTypeString, id)
  fullName: addFromNamedItem(name, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="7d938-129">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="7d938-129">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingTypeString
      description: <span data-ttu-id="7d938-130">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-130">Type of binding.</span></span> <span data-ttu-id="7d938-131">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-131">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="7d938-132">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-132">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromSelection
  summary: >-
    <span data-ttu-id="7d938-133">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="7d938-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="7d938-134">Если выделение имеет несколько областей, будет возвращена ошибка «InvalidReference».</span><span class="sxs-lookup"><span data-stu-id="7d938-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="7d938-135">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingType, id)
  fullName: addFromSelection(bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingType
      description: <span data-ttu-id="7d938-136">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-136">Type of binding.</span></span> <span data-ttu-id="7d938-137">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-137">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="7d938-138">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-138">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromSelection_1
  summary: >-
    <span data-ttu-id="7d938-139">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="7d938-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="7d938-140">Если выделение имеет несколько областей, будет возвращена ошибка «InvalidReference».</span><span class="sxs-lookup"><span data-stu-id="7d938-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="7d938-141">\[[Набор API-Интерфейсов: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingTypeString, id)
  fullName: addFromSelection(bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingTypeString
      description: <span data-ttu-id="7d938-142">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-142">Type of binding.</span></span> <span data-ttu-id="7d938-143">В разделе Excel.BindingType.</span><span class="sxs-lookup"><span data-stu-id="7d938-143">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="7d938-144">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-144">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.context
  summary: <span data-ttu-id="7d938-145">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="7d938-145">The request context associated with the object.</span></span> <span data-ttu-id="7d938-146">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="7d938-146">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.BindingCollection.count
  summary: >-
    <span data-ttu-id="7d938-p114">Возвращает число привязок в коллекции. Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7d938-p114">Returns the number of bindings in the collection. Read-only.</span></span>


    <span data-ttu-id="7d938-149">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.BindingCollection.getCount
  summary: >-
    <span data-ttu-id="7d938-150">Получает количество привязок в коллекции.</span><span class="sxs-lookup"><span data-stu-id="7d938-150">Gets the number of bindings in the collection.</span></span>


    <span data-ttu-id="7d938-151">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.BindingCollection.getItem
  summary: >-
    <span data-ttu-id="7d938-152">Возвращает объект привязки по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="7d938-152">Gets a binding object by ID.</span></span>


    <span data-ttu-id="7d938-153">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(id)
  fullName: getItem(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7d938-154\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d938-154\">Examples</span></span>\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    // Create Table1\n    Excel.run(function (ctx) { \n        ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n        return ctx.sync().then(function() {\n                console.log(\"My Diet Data Inserted!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n    //Create a new table binding for Table1\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n        else {\n            // If succeeded, then add event handler to the table binding.\n            Office.select(\"bindings#myBinding\").addHandlerAsync(\n                Office.EventType.BindingDataChanged, onBindingDataChanged);\n        }\n    });\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\n    Excel.run(function (ctx) { \n        // highlight the table in orange to indicate data has been changed.\n        ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n        return ctx.sync().then(function() {\n                console.log(\"The value in this table got changed!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n}\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="7d938-155">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-155">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.getItemAt
  summary: >-
    <span data-ttu-id="7d938-156">Возвращает объект привязки с учетом его положения в массиве элементов.</span><span class="sxs-lookup"><span data-stu-id="7d938-156">Gets a binding object based on its position in the items array.</span></span>


    <span data-ttu-id="7d938-157">\[[Набор API-Интерфейсов: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7d938-158\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d938-158\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="7d938-p115">Значение индекса получаемого объекта. Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="7d938-p115">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.BindingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="7d938-p116">Получает объект привязки по идентификатору. Если объект привязки не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="7d938-p116">Gets a binding object by ID. If the binding object does not exist, will return a null object.</span></span>


    <span data-ttu-id="7d938-163">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d938-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(id)
  fullName: getItemOrNullObject(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="7d938-164">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="7d938-164">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.items
  summary: <span data-ttu-id="7d938-165">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="7d938-165">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type:
      - Excel.Binding[]
- uid: excel.Excel.BindingCollection.load
  summary: <span data-ttu-id="7d938-166">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7d938-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d938-167">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="7d938-167">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7d938-168">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="7d938-168">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7d938-169">`load(option?: string | string[]): Excel.BindingCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7d938-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7d938-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7d938-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7d938-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="7d938-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="7d938-172">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="7d938-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="7d938-173">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="7d938-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7d938-174">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="7d938-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7d938-175">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="7d938-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.BindingCollection.load_1
  summary: <span data-ttu-id="7d938-176">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="7d938-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d938-177">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="7d938-177">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7d938-178\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"7d938-178\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7d938-179">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="7d938-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.BindingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.BindingCollection.toJSON
  summary: <span data-ttu-id="7d938-180">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7d938-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7d938-181">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `Excel.BindingCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.BindingCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="7d938-181">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingCollectionData
      description: ''
