### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BindingCollection
    summary: |-
      <span data-ttu-id="5332b-101">Представляет коллекцию всех объектов привязки, включенных в книгу.</span><span class="sxs-lookup"><span data-stu-id="5332b-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="5332b-102">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.BindingCollection.add
      - excel.Excel.BindingCollection.add_1
      - excel.Excel.BindingCollection.addFromNamedItem
      - excel.Excel.BindingCollection.addFromNamedItem_1
      - excel.Excel.BindingCollection.addFromSelection
      - excel.Excel.BindingCollection.addFromSelection_1
      - excel.Excel.BindingCollection.context
      - excel.Excel.BindingCollection.count
      - excel.Excel.BindingCollection.getCount
      - excel.Excel.BindingCollection.getItem
      - excel.Excel.BindingCollection.getItemAt
      - excel.Excel.BindingCollection.getItemOrNullObject
      - excel.Excel.BindingCollection.items
      - excel.Excel.BindingCollection.load
      - excel.Excel.BindingCollection.load_1
      - excel.Excel.BindingCollection.load_2
      - excel.Excel.BindingCollection.toJSON
  - uid: excel.Excel.BindingCollection.add
    summary: |-
      <span data-ttu-id="5332b-103">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="5332b-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="5332b-104">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="5332b-p101">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="5332b-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingType
          description: <span data-ttu-id="5332b-108">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-108">Type of binding.</span></span> <span data-ttu-id="5332b-109">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-109">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="5332b-110">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-110">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.add_1
    summary: |-
      <span data-ttu-id="5332b-111">Добавляет привязку к определенному объекту Range.</span><span class="sxs-lookup"><span data-stu-id="5332b-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="5332b-112">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="5332b-p103">Диапазон для привязки. Это может быть определенный в Excel объект Range или строка. Строка должна включать полный адрес, включающий имя листа.</span><span class="sxs-lookup"><span data-stu-id="5332b-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingTypeString
          description: <span data-ttu-id="5332b-116">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-116">Type of binding.</span></span> <span data-ttu-id="5332b-117">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="5332b-118">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-118">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem
    summary: |-
      <span data-ttu-id="5332b-119">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="5332b-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="5332b-120">Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="5332b-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="5332b-121">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: '<span data-ttu-id="5332b-122">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="5332b-122">Name from which to create binding.</span></span>'
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="5332b-123">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-123">Type of binding.</span></span> <span data-ttu-id="5332b-124">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-124">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="5332b-125">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-125">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem_1
    summary: |-
      <span data-ttu-id="5332b-126">Добавляет новую привязку с учетом именованного элемента в книге.</span><span class="sxs-lookup"><span data-stu-id="5332b-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="5332b-127">Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="5332b-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="5332b-128">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: '<span data-ttu-id="5332b-129">Имя элемента, на основе которого создается привязка.</span><span class="sxs-lookup"><span data-stu-id="5332b-129">Name from which to create binding.</span></span>'
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="5332b-130">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-130">Type of binding.</span></span> <span data-ttu-id="5332b-131">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="5332b-132">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-132">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection
    summary: |-
      <span data-ttu-id="5332b-133">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="5332b-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="5332b-134">Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="5332b-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="5332b-135">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="5332b-136">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-136">Type of binding.</span></span> <span data-ttu-id="5332b-137">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-137">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="5332b-138">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-138">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection_1
    summary: |-
      <span data-ttu-id="5332b-139">Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента.</span><span class="sxs-lookup"><span data-stu-id="5332b-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="5332b-140">Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".</span><span class="sxs-lookup"><span data-stu-id="5332b-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="5332b-141">\[[Набор API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="5332b-142">Тип привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-142">Type of binding.</span></span> <span data-ttu-id="5332b-143">Обратитесь к разделу Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="5332b-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="5332b-144">Имя привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-144">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.context
    summary: '<span data-ttu-id="5332b-145">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="5332b-145">The request context associated with the object.</span></span> <span data-ttu-id="5332b-146">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="5332b-146">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.BindingCollection.count
    summary: |-
      <span data-ttu-id="5332b-147">Возвращает число привязок в коллекции.</span><span class="sxs-lookup"><span data-stu-id="5332b-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="5332b-148">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="5332b-148">Read-only.</span></span>

      <span data-ttu-id="5332b-149">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.BindingCollection.getCount
    summary: |-
      <span data-ttu-id="5332b-150">Получает количество привязок в коллекции.</span><span class="sxs-lookup"><span data-stu-id="5332b-150">Gets the number of bindings in the collection.</span></span>

      <span data-ttu-id="5332b-151">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.BindingCollection.getItem
    summary: |-
      <span data-ttu-id="5332b-152">Возвращает объект привязки по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="5332b-152">Gets a binding object by ID.</span></span>

      <span data-ttu-id="5332b-153">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5332b-154">Примеры</span><span class="sxs-lookup"><span data-stu-id="5332b-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="5332b-155">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.getItemAt
    summary: |-
      <span data-ttu-id="5332b-156">Возвращает объект привязки с учетом его положения в массиве элементов.</span><span class="sxs-lookup"><span data-stu-id="5332b-156">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="5332b-157">\[[Набор API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5332b-158">Примеры</span><span class="sxs-lookup"><span data-stu-id="5332b-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="5332b-159">Значение индекса получаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="5332b-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="5332b-160">Используется нулевой индекс.</span><span class="sxs-lookup"><span data-stu-id="5332b-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.BindingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="5332b-161">Получает объект привязки по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="5332b-161">Gets a binding object by ID.</span></span> <span data-ttu-id="5332b-162">Если объект привязки не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="5332b-162">If the binding object does not exist, will return a null object.</span></span>

      <span data-ttu-id="5332b-163">\[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5332b-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="5332b-164">Идентификатор получаемого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="5332b-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.items
    summary: <span data-ttu-id="5332b-165">Получает загруженные дочерние элементы в этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="5332b-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'Excel.Binding[]'
  - uid: excel.Excel.BindingCollection.load
    summary: <span data-ttu-id="5332b-166">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5332b-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5332b-167">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="5332b-167">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5332b-168">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="5332b-168">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5332b-169">`load(option?: string | string[]): Excel.BindingCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5332b-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5332b-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5332b-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5332b-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="5332b-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="5332b-172">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="5332b-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="5332b-173">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="5332b-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5332b-174">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="5332b-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5332b-175">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="5332b-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.BindingCollection.load_1
    summary: <span data-ttu-id="5332b-176">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="5332b-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5332b-177">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="5332b-177">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5332b-178">Примеры</span><span class="sxs-lookup"><span data-stu-id="5332b-178">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="5332b-179">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="5332b-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.BindingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.BindingCollection.toJSON
    summary: '<span data-ttu-id="5332b-180">ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5332b-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5332b-181">.</span><span class="sxs-lookup"><span data-stu-id="5332b-181"></span></span> <span data-ttu-id="5332b-182">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5332b-182"></span></span><!-- --><span data-ttu-id="5332b-183">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.BindingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="5332b-183">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="5332b-184">), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="5332b-184">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingCollectionData
        description: ''