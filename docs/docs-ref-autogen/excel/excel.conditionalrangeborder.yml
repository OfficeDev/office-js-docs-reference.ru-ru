### YamlMime:UniversalReference
ms.openlocfilehash: 5f90f75be2ffbeaf9b264bd6e8ac7fdc24863753
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978828"
items:
- uid: excel.Excel.ConditionalRangeBorder
  summary: >-
    <span data-ttu-id="cfef9-101">Представляет границу объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-101">Represents the border of an object.</span></span>


    <span data-ttu-id="cfef9-102">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfef9-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalRangeBorder
  fullName: Excel.ConditionalRangeBorder
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalRangeBorder.color
  - excel.Excel.ConditionalRangeBorder.context
  - excel.Excel.ConditionalRangeBorder.load
  - excel.Excel.ConditionalRangeBorder.load_1
  - excel.Excel.ConditionalRangeBorder.load_2
  - excel.Excel.ConditionalRangeBorder.set
  - excel.Excel.ConditionalRangeBorder.set_1
  - excel.Excel.ConditionalRangeBorder.sideIndex
  - excel.Excel.ConditionalRangeBorder.style
  - excel.Excel.ConditionalRangeBorder.toJSON
- uid: excel.Excel.ConditionalRangeBorder.color
  summary: >-
    <span data-ttu-id="cfef9-103">HTML-код цвета, представляющее цвет границы строки формы \#вида RRGGBB (например, «FFA500») или как именованный цвета HTML (например «оранжевый»).</span><span class="sxs-lookup"><span data-stu-id="cfef9-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>


    <span data-ttu-id="cfef9-104">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfef9-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalRangeBorder.context
  summary: <span data-ttu-id="cfef9-105">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="cfef9-105">The request context associated with the object.</span></span> <span data-ttu-id="cfef9-106">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="cfef9-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalRangeBorder.load
  summary: <span data-ttu-id="cfef9-107">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfef9-108">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="cfef9-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="cfef9-109">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="cfef9-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="cfef9-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="cfef9-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="cfef9-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="cfef9-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="cfef9-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="cfef9-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder` - Only available on collection types.</span></span> <span data-ttu-id="cfef9-113">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="cfef9-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="cfef9-114">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="cfef9-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cfef9-115">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="cfef9-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cfef9-116">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="cfef9-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderLoadOptions
- uid: excel.Excel.ConditionalRangeBorder.load_1
  summary: <span data-ttu-id="cfef9-117">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfef9-118">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="cfef9-118">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="cfef9-119">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="cfef9-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalRangeBorder.load_2
  summary: <span data-ttu-id="cfef9-120">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfef9-121">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="cfef9-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorder
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="cfef9-122">Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="cfef9-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalRangeBorder.set
  summary: <span data-ttu-id="cfef9-123">Задание нескольких свойств объекта в то же время.</span><span class="sxs-lookup"><span data-stu-id="cfef9-123">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cfef9-124">Вы можете передать простой объект с соответствующих свойств или другой объект API одного типа.</span><span class="sxs-lookup"><span data-stu-id="cfef9-124">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="cfef9-125">Этот метод имеет следующие дополнительные подписи.</span><span class="sxs-lookup"><span data-stu-id="cfef9-125">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalRangeBorder): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="cfef9-126">Объект JavaScript со свойствами, которые isomorphically структурированы для свойства объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="cfef9-126">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalRangeBorderUpdateData
    - id: options
      description: <span data-ttu-id="cfef9-127">Предоставляет возможность отключать ошибки, если объект свойств пытается записать все свойства только для чтения.</span><span class="sxs-lookup"><span data-stu-id="cfef9-127">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalRangeBorder.set_1
  summary: <span data-ttu-id="cfef9-128">Задает несколько свойств объекта в то же время, на основе существующего загруженных объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-128">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalRangeBorder): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalRangeBorder
- uid: excel.Excel.ConditionalRangeBorder.sideIndex
  summary: >-
    <span data-ttu-id="cfef9-129">Постоянное значение, указывающее, конкретной стороны границы.</span><span class="sxs-lookup"><span data-stu-id="cfef9-129">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="cfef9-130">Для получения дополнительных сведений в разделе Excel.ConditionalRangeBorderIndex.</span><span class="sxs-lookup"><span data-stu-id="cfef9-130">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id="cfef9-131">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="cfef9-131">Read-only.</span></span>


    <span data-ttu-id="cfef9-132">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfef9-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sideIndex
  fullName: sideIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
    return:
      type:
      - Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
- uid: excel.Excel.ConditionalRangeBorder.style
  summary: >-
    <span data-ttu-id="cfef9-133">Одна из констант линии, определяющее тип линии границы.</span><span class="sxs-lookup"><span data-stu-id="cfef9-133">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="cfef9-134">Для получения дополнительных сведений в разделе Excel.BorderLineStyle.</span><span class="sxs-lookup"><span data-stu-id="cfef9-134">See Excel.BorderLineStyle for details.</span></span>


    <span data-ttu-id="cfef9-135">\[[Набор API-Интерфейсов: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfef9-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
    return:
      type:
      - Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
- uid: excel.Excel.ConditionalRangeBorder.toJSON
  summary: <span data-ttu-id="cfef9-136">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="cfef9-136">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="cfef9-137">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.ConditionalRangeBorder является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.ConditionalRangeBorderData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="cfef9-137">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderData
      description: ''
