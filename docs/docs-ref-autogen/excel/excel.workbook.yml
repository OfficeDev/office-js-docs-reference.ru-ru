### YamlMime:UniversalReference
ms.openlocfilehash: 8419dbef43992aa32ccb839aa209f6a0cc9aae40
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 09/28/2018
ms.locfileid: "24063075"
items:
- uid: excel.Excel.Workbook
  summary: >-
    Workbook — это объект верхнего уровня, содержащий связанные объекты книг, например листы, таблицы, диапазоны и т. д.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Workbook
  fullName: excel.Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Workbook.application
  - excel.Excel.Workbook.bindings
  - excel.Excel.Workbook.customXmlParts
  - excel.Excel.Workbook.dataConnections
  - excel.Excel.Workbook.functions
  - excel.Excel.Workbook.getActiveCell
  - excel.Excel.Workbook.getSelectedRange
  - excel.Excel.Workbook.load
  - excel.Excel.Workbook.name
  - excel.Excel.Workbook.names
  - excel.Excel.Workbook.onSelectionChanged
  - excel.Excel.Workbook.pivotTables
  - excel.Excel.Workbook.properties
  - excel.Excel.Workbook.protection
  - excel.Excel.Workbook.readOnly
  - excel.Excel.Workbook.settings
  - excel.Excel.Workbook.styles
  - excel.Excel.Workbook.tables
  - excel.Excel.Workbook.toJSON
  - excel.Excel.Workbook.worksheets
- uid: excel.Excel.Workbook.application
  summary: >-
    Представляет экземпляр приложения Excel, содержащий эту книгу. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: application
  fullName: excel.Excel.Workbook.application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel.Excel.Workbook.bindings
  summary: >-
    Представляет коллекцию привязок, включенных в книгу. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: bindings
  fullName: excel.Excel.Workbook.bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel.Excel.Workbook.customXmlParts
  summary: >-
    Представляет коллекцию пользовательских XML-частей, содержащихся в этой книге. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1,5](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: customXmlParts
  fullName: excel.Excel.Workbook.customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel.Excel.Workbook.dataConnections
  summary: >-
    Представляет все подключения к данным в книге. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataConnections
  fullName: excel.Excel.Workbook.dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel.Excel.Workbook.functions
  summary: >-
    Представляет коллекцию функций, которые могут использоваться для вычисления. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: functions
  fullName: excel.Excel.Workbook.functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel.Excel.Workbook.getActiveCell
  summary: >-
    Получает активную ячейку в книге.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getActiveCell()
  fullName: excel.Excel.Workbook.getActiveCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel.Excel.Workbook.getSelectedRange
  summary: >-
    Получает текущий выбранный диапазон из книги. Если выбрано несколько диапазонов, этот метод возникает ошибка.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getSelectedRange()
  fullName: excel.Excel.Workbook.getSelectedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Workbook.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: excel.Excel.Workbook.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.Workbook.name
  summary: >-
    Получает имя книги. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.Workbook.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Workbook.names
  summary: >-
    Представляет коллекцию именованных элементов в книге (именованные диапазоны и константы). Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: names
  fullName: excel.Excel.Workbook.names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel.Excel.Workbook.onSelectionChanged
  summary: >-
    Происходит при изменении выбора в документе.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: onSelectionChanged
  fullName: excel.Excel.Workbook.onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel.Excel.Workbook.pivotTables
  summary: >-
    Представляет коллекцию сводных таблиц, сопоставленных с книгой. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: pivotTables
  fullName: excel.Excel.Workbook.pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel.Excel.Workbook.properties
  summary: >-
    Получает свойства книги. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: properties
  fullName: excel.Excel.Workbook.properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel.Excel.Workbook.protection
  summary: >-
    Возвращает объект Защита книги для книги. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: protection
  fullName: excel.Excel.Workbook.protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel.Excel.Workbook.readOnly
  summary: >-
    Значение true, если книга открыта в режиме только для чтения. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: readOnly
  fullName: excel.Excel.Workbook.readOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.settings
  summary: >-
    Представляет коллекцию параметров, сопоставленных с книгой. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: settings
  fullName: excel.Excel.Workbook.settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel.Excel.Workbook.styles
  summary: >-
    Представляет коллекцию стилей, связанное с книгой. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: styles
  fullName: excel.Excel.Workbook.styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel.Excel.Workbook.tables
  summary: >-
    Представляет коллекцию таблиц, сопоставленных с книгой. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: tables
  fullName: excel.Excel.Workbook.tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel.Excel.Workbook.toJSON
  name: toJSON()
  fullName: excel.Excel.Workbook.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel.Excel.Workbook.worksheets
  summary: >-
    Представляет коллекцию листов, сопоставленных с книгой. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: worksheets
  fullName: excel.Excel.Workbook.worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
