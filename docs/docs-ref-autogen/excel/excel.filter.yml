### YamlMime:UniversalReference
ms.openlocfilehash: d530a6b01b25af5e26471cf86798ee7f0a43b571
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981432"
items:
- uid: excel.Excel.Filter
  summary: >-
    Управляет фильтрацией столбца таблицы.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Filter
  fullName: Excel.Filter
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Filter.apply
  - excel.Excel.Filter.applyBottomItemsFilter
  - excel.Excel.Filter.applyBottomPercentFilter
  - excel.Excel.Filter.applyCellColorFilter
  - excel.Excel.Filter.applyCustomFilter
  - excel.Excel.Filter.applyCustomFilter_1
  - excel.Excel.Filter.applyDynamicFilter
  - excel.Excel.Filter.applyDynamicFilter_1
  - excel.Excel.Filter.applyFontColorFilter
  - excel.Excel.Filter.applyIconFilter
  - excel.Excel.Filter.applyTopItemsFilter
  - excel.Excel.Filter.applyTopPercentFilter
  - excel.Excel.Filter.applyValuesFilter
  - excel.Excel.Filter.clear
  - excel.Excel.Filter.context
  - excel.Excel.Filter.criteria
  - excel.Excel.Filter.load
  - excel.Excel.Filter.load_1
  - excel.Excel.Filter.load_2
  - excel.Excel.Filter.toJSON
- uid: excel.Excel.Filter.apply
  summary: >-
    Применяет заданные условия фильтра для определенного столбца.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(criteria)
  fullName: apply(criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(criteria: Excel.FilterCriteria): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: criteria
      description: Применяемые условия.
      type:
      - excel.Excel.FilterCriteria
- uid: excel.Excel.Filter.applyBottomItemsFilter
  summary: >-
    Применяет к столбцу фильтр по количеству элементов снизу.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyBottomItemsFilter(count)
  fullName: applyBottomItemsFilter(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyBottomItemsFilter(count: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: count
      description: Количество элементов снизу, которые должны отображаться.
      type:
      - number
- uid: excel.Excel.Filter.applyBottomPercentFilter
  summary: >-
    Применяет к столбцу фильтр по проценту элементов снизу.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyBottomPercentFilter(percent)
  fullName: applyBottomPercentFilter(percent)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyBottomPercentFilter(percent: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: percent
      description: Процент элементов снизу, которые должны отображаться.
      type:
      - number
- uid: excel.Excel.Filter.applyCellColorFilter
  summary: >-
    Применяет к столбцу фильтр по цвету ячеек.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyCellColorFilter(color)
  fullName: applyCellColorFilter(color)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyCellColorFilter(color: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: color
      description: Цвет фона ячеек, которые должны отображаться.
      type:
      - string
- uid: excel.Excel.Filter.applyCustomFilter
  summary: >-
    Применение фильтра «Значок» в столбце для строк заданным условиям.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyCustomFilter(criteria1, criteria2, oper)
  fullName: applyCustomFilter(criteria1, criteria2, oper)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: criteria1
      description: Строка первого условия.
      type:
      - string
    - id: criteria2
      description: Необязательный. Строка второго условия.
      type:
      - string
    - id: oper
      description: Необязательный. Оператор, который описывает способ объединения двух условий.
      type:
      - excel.Excel.FilterOperator
- uid: excel.Excel.Filter.applyCustomFilter_1
  summary: >-
    Применение фильтра «Значок» в столбце для строк заданным условиям.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyCustomFilter(criteria1, criteria2, operString)
  fullName: applyCustomFilter(criteria1, criteria2, operString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: criteria1
      description: Строка первого условия.
      type:
      - string
    - id: criteria2
      description: Необязательный. Строка второго условия.
      type:
      - string
    - id: operString
      description: Необязательный. Оператор, который описывает способ объединения двух условий.
      type:
      - "\"And\" | \"Or\""
- uid: excel.Excel.Filter.applyDynamicFilter
  summary: >-
    Применяет к столбцу динамический фильтр.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyDynamicFilter(criteria)
  fullName: applyDynamicFilter(criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: criteria
      description: Динамические критерии для применения.
      type:
      - excel.Excel.DynamicFilterCriteria
- uid: excel.Excel.Filter.applyDynamicFilter_1
  summary: >-
    Применяет к столбцу динамический фильтр.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyDynamicFilter(criteriaString)
  fullName: applyDynamicFilter(criteriaString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: criteriaString
      description: Динамические критерии для применения.
      type:
      - "\"Unknown\" | \"AboveAverage\" | \"AllDatesInPeriodApril\" | \"AllDatesInPeriodAugust\" | \"AllDatesInPeriodDecember\" | \"AllDatesInPeriodFebruray\" | \"AllDatesInPeriodJanuary\" | \"AllDatesInPeriodJuly\" | \"AllDatesInPeriodJune\" | \"AllDatesInPeriodMarch\" | \"AllDatesInPeriodMay\" | \"AllDatesInPeriodNovember\" | \"AllDatesInPeriodOctober\" | \"AllDatesInPeriodQuarter1\" | \"AllDatesInPeriodQuarter2\" | \"AllDatesInPeriodQuarter3\" | \"AllDatesInPeriodQuarter4\" | \"AllDatesInPeriodSeptember\" | \"BelowAverage\" | \"LastMonth\" | \"LastQuarter\" | \"LastWeek\" | \"LastYear\" | \"NextMonth\" | \"NextQuarter\" | \"NextWeek\" | \"NextYear\" | \"ThisMonth\" | \"ThisQuarter\" | \"ThisWeek\" | \"ThisYear\" | \"Today\" | \"Tomorrow\" | \"YearToDate\" | \"Yesterday\""
- uid: excel.Excel.Filter.applyFontColorFilter
  summary: >-
    Применяет к столбцу фильтр по цвету шрифта.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyFontColorFilter(color)
  fullName: applyFontColorFilter(color)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyFontColorFilter(color: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: color
      description: Цвет шрифта ячеек, которые должны отображаться.
      type:
      - string
- uid: excel.Excel.Filter.applyIconFilter
  summary: >-
    Применение фильтра «Значок» в столбце для заданного значок.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyIconFilter(icon)
  fullName: applyIconFilter(icon)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyIconFilter(icon: Excel.Icon): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: icon
      description: Значки ячеек, которые должны отображаться.
      type:
      - excel.Excel.Icon
- uid: excel.Excel.Filter.applyTopItemsFilter
  summary: >-
    Применяет к столбцу фильтр по количеству элементов сверху.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyTopItemsFilter(count)
  fullName: applyTopItemsFilter(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyTopItemsFilter(count: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: count
      description: Количество элементов сверху, которые должны отображаться.
      type:
      - number
- uid: excel.Excel.Filter.applyTopPercentFilter
  summary: >-
    Применяет к столбцу фильтр по проценту элементов сверху.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyTopPercentFilter(percent)
  fullName: applyTopPercentFilter(percent)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyTopPercentFilter(percent: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: percent
      description: Процент элементов сверху, которые должны отображаться.
      type:
      - number
- uid: excel.Excel.Filter.applyValuesFilter
  summary: >-
    Применяет к столбцу фильтр по значениям.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: applyValuesFilter(values)
  fullName: applyValuesFilter(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: values
      description: Список значений, которые должны отображаться. Это должен быть массив строк или массив объектов Excel.FilterDateTime.
      type:
      - Array<string | FilterDatetime>
- uid: excel.Excel.Filter.clear
  summary: >-
    Сбрасывает фильтр для определенного столбца.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Filter.context
  summary: Контекста запроса, связанного с объектом. Это необходимо добавить в процесс для процесса ведущего приложения Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Filter.criteria
  summary: >-
    Текущий фильтр, заданный для определенного столбца. Только для чтения.


    \[[Набор API-Интерфейсов: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly criteria: Excel.FilterCriteria;'
    return:
      type:
      - excel.Excel.FilterCriteria
- uid: excel.Excel.Filter.load
  summary: Очереди команды для загрузки указанного свойства объекта. Перед чтением свойства необходимо вызвать «context.sync()».
  remarks: >-
    В дополнение к подписи этот метод имеет следующие цифровые подписи.


    `load(option?: string | string[]): Excel.Filter`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.


    `load(option?: { select?: string; expand?: string; }): Excel.Filter`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`-Доступно только на коллекцию типов. Это похоже на предыдущую. Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат. Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате. Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.FilterLoadOptions
- uid: excel.Excel.Filter.load_1
  summary: Очереди команды для загрузки указанного свойства объекта. Необходимо вызвать `context.sync()` перед чтением свойства.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
      description: ''
    parameters:
    - id: propertyNames
      description: Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.
      type:
      - string | string[]
- uid: excel.Excel.Filter.load_2
  summary: Очереди команды для загрузки указанного свойства объекта. Необходимо вызвать `context.sync()` перед чтением свойства.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Где propertyNamesAndPaths.select — это разделенный запятыми строка, указывающая свойства для загрузки, а propertyNamesAndPaths.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Filter.toJSON
  summary: Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходный объект Excel.Filter является объектом API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.FilterData` <!-- -->), который содержит неполные копии всех загруженных дочерних свойств из исходного объекта.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.FilterData;'
    return:
      type:
      - excel.Excel.Interfaces.FilterData
      description: ''
