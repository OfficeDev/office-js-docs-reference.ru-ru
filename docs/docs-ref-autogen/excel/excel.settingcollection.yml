### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SettingCollection
    summary: |-
      Представляет коллекцию объектов параметров, которые являются частью рабочей книги. Область ограничена для каждого файла и надстройки (область задач или контент).

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SettingCollection.add
      - excel.Excel.SettingCollection.context
      - excel.Excel.SettingCollection.getCount
      - excel.Excel.SettingCollection.getItem
      - excel.Excel.SettingCollection.getItemOrNullObject
      - excel.Excel.SettingCollection.items
      - excel.Excel.SettingCollection.load
      - excel.Excel.SettingCollection.load_1
      - excel.Excel.SettingCollection.load_2
      - excel.Excel.SettingCollection.onSettingsChanged
      - excel.Excel.SettingCollection.toJSON
  - uid: excel.Excel.SettingCollection.add
    summary: |-
      Задает или добавляет указанный параметр в книгу.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: Ключ нового параметра.
          type:
            - string
        - id: value
          description: Значение нового параметра.
          type:
            - string | number | boolean | Date | Array<any> | any
  - uid: excel.Excel.SettingCollection.context
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SettingCollection.getCount
    summary: |-
      Получает количество параметров в коллекции.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SettingCollection.getItem
    summary: |-
      Получает запись Setting по ключу.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: key
          description: Ключ параметра.
          type:
            - string
  - uid: excel.Excel.SettingCollection.getItemOrNullObject
    summary: |-
      Возвращает объект Setting по ключу. Если параметр не существует, возвращает пустой объект.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: Ключ параметра.
          type:
            - string
  - uid: excel.Excel.SettingCollection.items
    summary: Получает загруженные дочерние элементы в этой коллекции.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'Excel.Setting[]'
  - uid: excel.Excel.SettingCollection.load
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств необходимо вызвать метод context.sync().
    remarks: |-
      В дополнение к этой подписи этот метод имеет следующие подписи:

      `load(option?: string | string[]): Excel.SettingCollection`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.

      `load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`— Доступно только для типов коллекций. Он аналогичен предыдущей подписи. Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат. Option. skip указывает количество элементов, которые будут пропущены и не включены в результат. Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SettingCollection.load_1
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SettingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SettingCollection.onSettingsChanged
    summary: |-
      Возникает при изменении параметров в документе.

      \[[Набор API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: excel.Excel.SettingCollection.toJSON
    summary: 'ПереОпределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как `Excel.SettingCollection` исходный объект является объектом API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.SettingCollectionData`<!-- -->), содержащий массив "Items" с неполноми копиями загруженных свойств из элементов коллекции.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingCollectionData
        description: ''