### YamlMime:UniversalReference
ms.openlocfilehash: 1a8f80148f46248cd4fc130a989910cc008dac44
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981075"
items:
- uid: excel.Excel.SettingCollection
  summary: >-
    <span data-ttu-id="e8f2b-101">Представляет коллекцию пары "ключ значение" настройки объектов, которые являются частью рабочей книги.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="e8f2b-102">Область ограничена на файл и добавьте в комбинацию (области задач или содержимого).</span><span class="sxs-lookup"><span data-stu-id="e8f2b-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>


    <span data-ttu-id="e8f2b-103">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.SettingCollection
  fullName: Excel.SettingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SettingCollection.add
  - excel.Excel.SettingCollection.context
  - excel.Excel.SettingCollection.getCount
  - excel.Excel.SettingCollection.getItem
  - excel.Excel.SettingCollection.getItemOrNullObject
  - excel.Excel.SettingCollection.items
  - excel.Excel.SettingCollection.load
  - excel.Excel.SettingCollection.load_1
  - excel.Excel.SettingCollection.load_2
  - excel.Excel.SettingCollection.onSettingsChanged
  - excel.Excel.SettingCollection.toJSON
- uid: excel.Excel.SettingCollection.add
  summary: >-
    <span data-ttu-id="e8f2b-104">Задает или добавляет указанный параметр в книгу.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-104">Sets or adds the specified setting to the workbook.</span></span>


    <span data-ttu-id="e8f2b-105">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(key, value)
  fullName: add(key, value)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e8f2b-106\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8f2b-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="e8f2b-107">Ключ нового параметра.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-107">The Key of the new setting.</span></span>
      type:
      - string
    - id: value
      description: <span data-ttu-id="e8f2b-108">Значение нового параметра.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-108">The Value for the new setting.</span></span>
      type:
      - string | number | boolean | Date | Array<any> | any
- uid: excel.Excel.SettingCollection.context
  summary: <span data-ttu-id="e8f2b-109">Контекста запроса, связанного с объектом.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-109">The request context associated with the object.</span></span> <span data-ttu-id="e8f2b-110">Это необходимо добавить в процесс для процесса ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SettingCollection.getCount
  summary: >-
    <span data-ttu-id="e8f2b-111">Получает количество параметров в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-111">Gets the number of Settings in the collection.</span></span>


    <span data-ttu-id="e8f2b-112">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SettingCollection.getItem
  summary: >-
    <span data-ttu-id="e8f2b-113">Получает запись Setting по ключу.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-113">Gets a Setting entry via the key.</span></span>


    <span data-ttu-id="e8f2b-114">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="e8f2b-115">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-115">Key of the setting.</span></span>
      type:
      - string
- uid: excel.Excel.SettingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="e8f2b-p103">Получает запись Setting по ключу. Если параметр не существует, возвращает пустой объект.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-p103">Gets a Setting entry via the key. If the Setting does not exist, will return a null object.</span></span>


    <span data-ttu-id="e8f2b-118">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e8f2b-119\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8f2b-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="e8f2b-120">Ключ параметра.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-120">The key of the setting.</span></span>
      type:
      - string
- uid: excel.Excel.SettingCollection.items
  summary: <span data-ttu-id="e8f2b-121">Получает загруженных дочерних элементов в этом семействе.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Setting[];'
    return:
      type:
      - Excel.Setting[]
- uid: excel.Excel.SettingCollection.load
  summary: <span data-ttu-id="e8f2b-122">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e8f2b-123">Перед чтением свойства необходимо вызвать «context.sync()».</span><span class="sxs-lookup"><span data-stu-id="e8f2b-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e8f2b-124">В дополнение к подписи этот метод имеет следующие цифровые подписи.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e8f2b-125">`load(option?: string | string[]): Excel.SettingCollection`-Где параметр — запятыми строку или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e8f2b-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-Option.select — это разделенный запятыми строка, указывающая свойства для загрузки, куда options.expand — это разделенный запятыми строка, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e8f2b-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`-Доступно только на коллекцию типов.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="e8f2b-128">Это похоже на предыдущую.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="e8f2b-129">Option.Top указывает максимальное число элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e8f2b-130">Option.Skip указывает количество элементов, которые пропускаются и не включенный в результате.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e8f2b-131">Если option.top указан, результирующий набор будет запущен процесс после пропускает указанное число элементов.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SettingCollection.load_1
  summary: <span data-ttu-id="e8f2b-132">Очереди команды для загрузки указанного свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e8f2b-133">Необходимо вызвать `context.sync()` перед чтением свойства.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e8f2b-134">Строка, разделенных запятыми или массив строк, задающих свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SettingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SettingCollection.onSettingsChanged
  summary: >-
    <span data-ttu-id="e8f2b-135">Происходит при изменении объектов Setting в документе.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-135">Occurs when the Settings in the document are changed.</span></span>


    <span data-ttu-id="e8f2b-136">\[[Набор API-Интерфейсов: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8f2b-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSettingsChanged
  fullName: onSettingsChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e8f2b-137\">Примеры</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8f2b-137\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
- uid: excel.Excel.SettingCollection.toJSON
  summary: <span data-ttu-id="e8f2b-138">Переопределяет JavaScript `toJSON()` метод, чтобы обеспечить более необходимых результатов при передаче объекта API для `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e8f2b-139">(`JSON.stringify`<!-- -->, в свою очередь, вызывает `toJSON` метод объекта, который передается в нее.) В то время как исходные `Excel.SettingCollection` объект API `toJSON` метод возвращает обычный объектов JavaScript (тип `Excel.Interfaces.SettingCollectionData` <!-- -->), который содержит массив «элементы» неполные копии всех загруженных свойств из коллекции элементов.</span><span class="sxs-lookup"><span data-stu-id="e8f2b-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingCollectionData
      description: ''
