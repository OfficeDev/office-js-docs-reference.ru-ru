### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TextConditionalFormat
    summary: |-
      <span data-ttu-id="6852c-101">Представляет конкретное условное форматирование текста.</span><span class="sxs-lookup"><span data-stu-id="6852c-101">Represents a specific text conditional format.</span></span>

      <span data-ttu-id="6852c-102">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6852c-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TextConditionalFormat
    fullName: Excel.TextConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TextConditionalFormat.context
      - excel.Excel.TextConditionalFormat.format
      - excel.Excel.TextConditionalFormat.load
      - excel.Excel.TextConditionalFormat.load_1
      - excel.Excel.TextConditionalFormat.load_2
      - excel.Excel.TextConditionalFormat.rule
      - excel.Excel.TextConditionalFormat.set
      - excel.Excel.TextConditionalFormat.set_1
      - excel.Excel.TextConditionalFormat.toJSON
  - uid: excel.Excel.TextConditionalFormat.context
    summary: '<span data-ttu-id="6852c-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="6852c-103">The request context associated with the object.</span></span> <span data-ttu-id="6852c-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="6852c-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TextConditionalFormat.format
    summary: |-
      <span data-ttu-id="6852c-105">Возвращает объект Format, который инкапсулирует шрифты условного форматирования, заливки, границы и другие свойства.</span><span class="sxs-lookup"><span data-stu-id="6852c-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="6852c-106">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6852c-106">Read-only.</span></span>

      <span data-ttu-id="6852c-107">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6852c-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6852c-108">Примеры</span><span class="sxs-lookup"><span data-stu-id="6852c-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.TextConditionalFormat.load
    summary: <span data-ttu-id="6852c-109">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6852c-110">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="6852c-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6852c-111">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="6852c-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6852c-112">`load(option?: string | string[]): Excel.TextConditionalFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="6852c-112">`load(option?: string | string[]): Excel.TextConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6852c-113">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="6852c-113">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6852c-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="6852c-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="6852c-115">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="6852c-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="6852c-116">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="6852c-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6852c-117">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="6852c-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6852c-118">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="6852c-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TextConditionalFormatLoadOptions): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TextConditionalFormatLoadOptions
  - uid: excel.Excel.TextConditionalFormat.load_1
    summary: <span data-ttu-id="6852c-119">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6852c-120">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="6852c-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="6852c-121">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="6852c-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.TextConditionalFormat.load_2
    summary: <span data-ttu-id="6852c-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6852c-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="6852c-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6852c-124">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="6852c-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TextConditionalFormat.rule
    summary: |-
      <span data-ttu-id="6852c-125">Правило условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="6852c-125">The rule of the conditional format.</span></span>

      <span data-ttu-id="6852c-126">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6852c-126">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalTextComparisonRule;'
      return:
        type:
          - excel.Excel.ConditionalTextComparisonRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6852c-127">Примеры</span><span class="sxs-lookup"><span data-stu-id="6852c-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.TextConditionalFormat.set
    summary: '<span data-ttu-id="6852c-128">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6852c-129">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="6852c-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6852c-130">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="6852c-130">This method has the following additional signature:</span></span>

      `set(properties: Excel.TextConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TextConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="6852c-131">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="6852c-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.TextConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="6852c-132">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="6852c-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TextConditionalFormat.set_1
    summary: '<span data-ttu-id="6852c-133">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TextConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TextConditionalFormat
  - uid: excel.Excel.TextConditionalFormat.toJSON
    summary: '<span data-ttu-id="6852c-134">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6852c-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6852c-135">.</span><span class="sxs-lookup"><span data-stu-id="6852c-135"></span></span> <span data-ttu-id="6852c-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6852c-136"></span></span><!-- --><span data-ttu-id="6852c-137">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Тексткондитионалформат — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.TextConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="6852c-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TextConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TextConditionalFormatData`</span></span><!-- --><span data-ttu-id="6852c-138">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="6852c-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.TextConditionalFormatData
        description: ''