### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ColorScaleConditionalFormat:class'
    summary: |-
      <span data-ttu-id="dbffe-101">Представляет критерии набора значков для условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="dbffe-101">Represents an IconSet criteria for conditional formatting.</span></span>

      <span data-ttu-id="dbffe-102">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dbffe-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ColorScaleConditionalFormat#context:member'
      - 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(2)'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(3)'
      - 'excel!Excel.ColorScaleConditionalFormat#set:member(1)'
      - 'excel!Excel.ColorScaleConditionalFormat#set:member(2)'
      - 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
      - 'excel!Excel.ColorScaleConditionalFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#context:member'
    summary: '<span data-ttu-id="dbffe-103">Контекст запроса, связанный с объектом.</span><span class="sxs-lookup"><span data-stu-id="dbffe-103">The request context associated with the object.</span></span> <span data-ttu-id="dbffe-104">Это подсоединяет процесс надстройки к процессу ведущего приложения Office.</span><span class="sxs-lookup"><span data-stu-id="dbffe-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
    summary: |-
      <span data-ttu-id="dbffe-105">Критерии цветовой шкалы.</span><span class="sxs-lookup"><span data-stu-id="dbffe-105">The criteria of the color scale.</span></span> <span data-ttu-id="dbffe-106">При использовании цветовой шкалы с двумя координатами средняя точка является необязательной.</span><span class="sxs-lookup"><span data-stu-id="dbffe-106">Midpoint is optional when using a two point color scale.</span></span>

      <span data-ttu-id="dbffe-107">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dbffe-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalColorScaleCriteria;'
      return:
        type:
          - 'excel!Excel.ConditionalColorScaleCriteria:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="dbffe-108">Примеры</span><span class="sxs-lookup"><span data-stu-id="dbffe-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="dbffe-109">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dbffe-110">Перед чтением свойств необходимо вызвать метод context.sync().</span><span class="sxs-lookup"><span data-stu-id="dbffe-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="dbffe-111">В дополнение к этой подписи этот метод имеет следующие подписи:</span><span class="sxs-lookup"><span data-stu-id="dbffe-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="dbffe-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat`-WHERE — это строка с разделителями-запятыми или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="dbffe-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="dbffe-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-WHERE. Select — это строка с разделителями-запятыми, указывающая свойства для загрузки и параметры. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="dbffe-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="dbffe-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`— Доступно только для типов коллекций.</span><span class="sxs-lookup"><span data-stu-id="dbffe-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="dbffe-115">Он аналогичен предыдущей подписи.</span><span class="sxs-lookup"><span data-stu-id="dbffe-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="dbffe-116">Option. Top указывает максимальное количество элементов коллекции, которые можно включить в результат.</span><span class="sxs-lookup"><span data-stu-id="dbffe-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="dbffe-117">Option. skip указывает количество элементов, которые будут пропущены и не включены в результат.</span><span class="sxs-lookup"><span data-stu-id="dbffe-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="dbffe-118">Если указан параметр Option. Top, результирующий набор начнется после пропуска указанного числа элементов.</span><span class="sxs-lookup"><span data-stu-id="dbffe-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ColorScaleConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="dbffe-119">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dbffe-120">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="dbffe-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="dbffe-121">Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.</span><span class="sxs-lookup"><span data-stu-id="dbffe-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="dbffe-122">Добавляет в очередь команду для загрузки указанных свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dbffe-123">Перед чтением свойств `context.sync()` необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="dbffe-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="dbffe-124">Где Пропертинамесандпасс. Select — это строка с разделителями-запятыми, задающая свойства для загрузки, и Пропертинамесандпасс. Expand — это строка с разделителями-запятыми, указывающая свойства навигации для загрузки.</span><span class="sxs-lookup"><span data-stu-id="dbffe-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="dbffe-125">Задает одновременно несколько свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="dbffe-126">Можно передать либо простой объект с соответствующими свойствами, либо другой объект API того же типа.</span><span class="sxs-lookup"><span data-stu-id="dbffe-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="dbffe-127">Этот метод имеет следующую дополнительную подпись:</span><span class="sxs-lookup"><span data-stu-id="dbffe-127">This method has the following additional signature:</span></span>

      `set(properties: Excel.ColorScaleConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="dbffe-128">Объект JavaScript со свойствами, которые структурированы исоморфикалли к свойствам объекта, для которого вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="dbffe-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.ColorScaleConditionalFormatUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="dbffe-129">Предоставляет возможность подавлять ошибки, если объект Properties пытается задать любые свойства, предназначенные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="dbffe-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="dbffe-130">Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ColorScaleConditionalFormat:class'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
    summary: |-
      <span data-ttu-id="dbffe-131">Если задано значение true, цветовая шкала будет иметь три точки (минимальная, средняя, максимальная), в противном случае будет существовать два (минимум, максимум).</span><span class="sxs-lookup"><span data-stu-id="dbffe-131">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>

      <span data-ttu-id="dbffe-132">\[[Набор API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dbffe-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: threeColorScale
    fullName: threeColorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly threeColorScale: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ColorScaleConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="dbffe-133">Переопределяет метод `toJSON()` JavaScript для предоставления более удобного вывода при передаче объекта API`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="dbffe-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="dbffe-134">.</span><span class="sxs-lookup"><span data-stu-id="dbffe-134"></span></span> <span data-ttu-id="dbffe-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="dbffe-135"></span></span><!-- --><span data-ttu-id="dbffe-136">, в свою очередь, вызывает `toJSON` метод объекта, который передается ему.) В то время как исходный объект Excel. Колорскалекондитионалформат — это объект API, `toJSON` метод возвращает простой объект JavaScript (тип`Excel.Interfaces.ColorScaleConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="dbffe-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`</span></span><!-- --><span data-ttu-id="dbffe-137">), который содержит неполные копии загруженных дочерних свойств из исходного объекта.</span><span class="sxs-lookup"><span data-stu-id="dbffe-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ColorScaleConditionalFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalColorScaleCriteria:interface'
    name: Excel.ConditionalColorScaleCriteria
  - uid: 'excel!Excel.ColorScaleConditionalFormat:class'
    name: Excel.ColorScaleConditionalFormat
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatUpdateData:interface'
    name: Interfaces.ColorScaleConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ColorScaleConditionalFormatData:interface'
    name: Excel.Interfaces.ColorScaleConditionalFormatData